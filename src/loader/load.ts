//@ts-nocheck
/**
 * Initialization code.
 * frame3 - frame10 in jpexs
 */

import { random } from "@/flash/random";
import { _root } from "@/flash/root";
import { SharedObject } from "@/flash/sharedobject";
import { addAchievementR, addNewAchievement } from "@/lib/achievements";
import { withComma } from "@/lib/format";
import { dispNews } from "@/lib/news";

export function step2loadFunctions() {
    _root.getFullMonthName = function getFullMonthName(monthCount) {
        monthArr = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        return monthArr[monthCount];
    }
    _root.getShortMonthName = function getShortMonthName(monthCount) {
        monthArr = ["", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        return monthArr[monthCount];
    }
    _root.setInitDeck = function setInitDeck(deckCode) {
        tempDeckArray = deckCode.split(".");
        myDeckArray = new Array();
        i = 0;
        while (i <= tempDeckArray.length - 1) {
            if (tempDeckArray[i] > 100) {
                tempDeckArray[i] = 100;
            }
            j = 1;
            while (j <= tempDeckArray[i]) {
                myDeckArray.push(tempDeckArray[i + 1]);
                j++;
            }
            i += 2;
        }
        planDeck = new Array();
        i = 1;
        while (i <= 400) {
            planDeck[i] = 0;
            i++;
        }
        if (myDeckArray.length > 10 && myDeckArray.length <= 100) {
            i = 0;
            while (i <= myDeckArray.length - 1) {
                planDeck[myDeckArray[i]] += 1;
                i++;
            }
        }
        i = 1;
        while (i <= 400) {
            _root.save.fcgOwned[i] += planDeck[i];
            _root.save.fcgDeck[i] = planDeck[i];
            i++;
        }
        _root.save.fcgTotalCards = myDeckArray.length;
    }
    _root.checkAttReward = function checkAttReward(dayCount) {
        if (dayCount == _root.refresh_max_date) {
            return 8;
        }
        if (dayCount == _root.refresh_max_date - 1) {
            return 7;
        }
        if (dayCount == 14) {
            return 9;
        }
        if (dayCount == 24) {
            return 6;
        }
        if (dayCount == 8 || dayCount == 16) {
            return 5;
        }
        if (dayCount == 1 || dayCount == 9 || dayCount == 25 || dayCount == 28) {
            return 4;
        }
        if (dayCount == 2 || dayCount == 3 || dayCount == 4 || dayCount == 12 || dayCount == 17 || dayCount == 18 || dayCount == 19 || dayCount == 20) {
            return 3;
        }
        if (dayCount >= 21 || dayCount == 6 || dayCount == 14) {
            return 2;
        }
        return 1;
    }
    _root.getKpaValue = function getKpaValue(kpaName) {
        if (kpaName == undefined || kpaName == "" || kpaName.length < 1) {
            return 0;
        }
        kpaValue = 0;
        k = 1;
        while (k <= kpaName.length) {
            cDigit = kpaName.substr(k, 1);
            switch (cDigit) {
                case "A":
                    nD = 211;
                    break;
                case "B":
                    nD = 125;
                    break;
                case "C":
                    nD = 334;
                    break;
                case "D":
                    nD = 243;
                    break;
                case "E":
                    nD = 152;
                    break;
                case "F":
                    nD = 367;
                    break;
                case "G":
                    nD = 279;
                    break;
                case "H":
                    nD = 183;
                    break;
                case "I":
                    nD = 391;
                    break;
                case "J":
                    nD = 206;
                    break;
                case "K":
                    nD = 114;
                    break;
                case "L":
                    nD = 329;
                    break;
                case "M":
                    nD = 234;
                    break;
                case "N":
                    nD = 149;
                    break;
                case "O":
                    nD = 355;
                    break;
                case "P":
                    nD = 267;
                    break;
                case "Q":
                    nD = 174;
                    break;
                case "R":
                    nD = 386;
                    break;
                case "S":
                    nD = 293;
                    break;
                case "T":
                    nD = 108;
                    break;
                case "U":
                    nD = 317;
                    break;
                case "V":
                    nD = 227;
                    break;
                case "W":
                    nD = 138;
                    break;
                case "X":
                    nD = 346;
                    break;
                case "Y":
                    nD = 251;
                    break;
                case "Z":
                    nD = 164;
                    break;
                case "a":
                    nD = 473;
                    break;
                case "b":
                    nD = 383;
                    break;
                case "c":
                    nD = 292;
                    break;
                case "d":
                    nD = 405;
                    break;
                case "e":
                    nD = 314;
                    break;
                case "f":
                    nD = 227;
                    break;
                case "g":
                    nD = 433;
                    break;
                case "h":
                    nD = 349;
                    break;
                case "i":
                    nD = 255;
                    break;
                case "j":
                    nD = 468;
                    break;
                case "k":
                    nD = 377;
                    break;
                case "l":
                    nD = 285;
                    break;
                case "m":
                    nD = 496;
                    break;
                case "n":
                    nD = 305;
                    break;
                case "o":
                    nD = 215;
                    break;
                case "p":
                    nD = 429;
                    break;
                case "q":
                    nD = 337;
                    break;
                case "r":
                    nD = 247;
                    break;
                case "s":
                    nD = 456;
                    break;
                case "t":
                    nD = 362;
                    break;
                case "u":
                    nD = 278;
                    break;
                case "v":
                    nD = 485;
                    break;
                case "w":
                    nD = 391;
                    break;
                case "x":
                    nD = 204;
                    break;
                case "y":
                    nD = 413;
                    break;
                case "z":
                    nD = 323;
                    break;
                case "0":
                    nD = 232;
                    break;
                case "1":
                    nD = 542;
                    break;
                case "2":
                    nD = 454;
                    break;
                case "3":
                    nD = 364;
                    break;
                case "4":
                    nD = 473;
                    break;
                case "5":
                    nD = 386;
                    break;
                case "6":
                    nD = 595;
                    break;
                case "7":
                    nD = 405;
                    break;
                case "8":
                    nD = 514;
                    break;
                case "9":
                    nD = 327;
                    break;
                default:
                    nD = 13;
            }
            if (k == 1) {
                kpaValue += 3 * nD + 17;
            }
            else {
                kpaValue += (k + 1) * nD + 9;
            }
            kpaValue %= 10000;
            k++;
        }
        return kpaValue;
    }
    _root.getRefundCode = function getRefundCode() {
        refundTier = 0;
        if (_root.kongregate_username != undefined && _root.kongregate_username != "Guest") {
            if (_root.save.bestLevel >= 200 && _root.save.totalPlayTime >= 2700) {
                refundTier = 1;
            }
            if (_root.save.bestLevel >= 400 && _root.save.totalPlayTime >= 5400) {
                refundTier = 2;
            }
            if (_root.save.bestLevel >= 700 && _root.save.totalPlayTime >= 10800) {
                refundTier = 3;
            }
            if (_root.save.bestLevel >= 1000 && _root.save.totalPlayTime >= 21600) {
                refundTier = 4;
            }
            if (_root.save.bestLevel >= 1500 && _root.save.totalPlayTime >= 43200) {
                refundTier = 5;
            }
            if (_root.save.bestLevel >= 2000 && _root.save.totalPlayTime >= 86400) {
                refundTier = 6;
            }
            if (_root.save.bestLevel >= 3000 && _root.save.totalPlayTime >= 172800) {
                refundTier = 7;
            }
            if (_root.save.bestLevel >= 4000 && _root.save.totalPlayTime >= 345600) {
                refundTier = 8;
            }
            if (_root.save.bestLevel >= 5500 && _root.save.totalPlayTime >= 604800) {
                refundTier = 9;
            }
            if (_root.save.bestLevel >= 7000 && _root.save.totalPlayTime >= 864000) {
                refundTier = 10;
            }
            if (_root.save.bestLevel >= 9000 && _root.save.totalPlayTime >= 1296000) {
                refundTier = 11;
            }
            if (_root.save.bestLevel >= 9000 && _root.save.banned >= 2 && _root.save.totalPlayTime >= 1728000) {
                refundTier = 12;
            }
            if (_root.save.bestLevel >= 9000 && _root.save.banned >= 5 && _root.save.totalPlayTime >= 2160000) {
                refundTier = 13;
            }
            if (_root.save.bestLevel >= 9000 && _root.save.banned >= 10 && _root.save.totalPlayTime >= 2592000) {
                refundTier = 14;
            }
            if (_root.save.bestLevel >= 9000 && _root.save.banned >= 20 && _root.save.totalPlayTime >= 3024000) {
                refundTier = 15;
            }
            if (_root.save.bestLevel >= 9000 && _root.save.banned >= 30 && _root.save.totalPlayTime >= 3456000) {
                refundTier = 16;
            }
            if (_root.save.bestLevel >= 9000 && _root.save.banned >= 50 && _root.save.totalPlayTime >= 3888000) {
                refundTier = 17;
            }
        }
        refundCode = refundTier * (1013174 + refundTier * refundTier + Math.ceil(nameValue / 7)) + refundTier * (refundTier + 4) * Math.ceil(nameValue * refundTier / 1.7);
        if (refundCode % 10 == 7) {
            refundCode += 1;
        }
        refundCode = refundCode * 10 + 7;
        if (refundCode > 7) {
            _root.submitScore("Refund Code", refundCode);
        }
    }
    _root.checkRefundCode = function checkRefundCode(code) {
        _root.correctTier = 0;
        if (_root.kongregate_username != undefined && _root.kongregate_username != "Guest") {
            i = 1;
            while (i <= 30) {
                correctCode = i * (1013174 + i * i + Math.ceil(nameValue / 7)) + i * (i + 4) * Math.ceil(nameValue * i / 1.7);
                if (correctCode % 10 == 7) {
                    correctCode += 1;
                }
                correctCode = correctCode * 10 + 7;
                if (code == correctCode) {
                    _root.correctTier = i;
                }
                i++;
            }
        }
    }
    _root.ddec = function ddec(donCode) {
        decompilerNote1 = "THIS FUNCTION IS MEANT TO BE USED ONLY BY TUKKUN.";
        decompilerNote2 = "THIS FUNCTION IS NOT INTENDED FOR DECOMPILERS AND CODE-READERS.";
        decompilerNote3 = "THE CONTENTS OF THIS FUNCTION AS WELL AS HOW TO USE IT ARE NOT MEANT TO BE EXPOSED TO THE PUBLIC.";
        decompilerNote4 = "PLEASE DO NOT ATTEMPT TO ABUSE THIS FEATURE.";
        decompilerNote5 = "MISUSE OF THIS INFORMATION MAY LEAD TO BEING BANNED FROM THE GAME.";
        res = "";
        donArr = donCode.replace("a", "0").replace("d", "2").replace("e", "4").replace("b", "3").replace("f", "7").replace("h", "5").replace("m", "4").replace("7", "1").replace("i", "6").replace("c", "7").replace("j", "9").replace("g", "8").split("k");
        decCode = 131 + _root.kongregate_username.charCodeAt(2) % 69;
        i = 1;
        while (i < donArr.length) {
            res += String.fromCharCode(donArr[i] * 1 - 137 - (i - 1 + decCode) * 17 - 100);
            i++;
        }
        return res;
    }
    _root.submitScore = function submitScore(scoreName, amount, hardCap, submitZero) {
        if (_root.save.bestLevel >= 30 && scoreBanned == false && _root.saveid <= 3 && _root.save.cheatEnabled == false) {
            if ((_root.save.bestLevel < 9000 && _root.save.banned < 1 || _root.save.yoEpicFail == 25465) && _root.save.safeHacking == false && _root.save.submitScore == true && _root.save.noobMode != true && _root.save.houseVer <= 0) {
                if ((amount > 0 || submitZero == true) && (amount <= hardCap || isNaN(hardCap))) {
                    _root.kongregate.stats.submit(scoreName, amount);
                }
            }
        }
    }
    _root.submitKong = function submitKong(scoreName, amount, hardCap, submitZero) {
    }
    _root.submitGeneral = function submitGeneral() {
        _root.getRefundCode();
        _root.submitScore("Total Days Played", Math.floor(_root.save.totalPlayTime / 86400), 99999);
        _root.submitScore("Level", _root.save.level + _root.save.banned * 10000);
        _root.submitScore("Max Level", _root.save.bestLevel, 9002);
        _root.submitScore("EXP", _root.save.bestExp);
        _root.submitScore("Speedrun: Lv. 9001 [Minutes]", _root.save.speedRun9001, 99999999, true);
        _root.submitScore("Speedrun: Ascend [Minutes]", _root.save.speedRunAscend, 99999999, true);
        _root.submitScore("Speedrun: Ascend (Hard) [Minutes]", _root.save.speedRunAscendHard, 99999999, true);
        _root.submitScore("Speedrun: Ascend (Impossible) [Minutes]", _root.save.speedRunAscendImpossible, 99999999, true);
        _root.submitScore("Unspent Coins", _root.save.coinMax, 999999999999999);
        _root.submitScore("Unspent Green Coins", _root.save.greenCoinMax, 999999999999);
        _root.submitScore("Unspent Blue Coins", _root.save.blueCoinMax, 999999999);
        _root.submitScore("Unspent White Coins", _root.save.whiteCoinMax, 999999);
        _root.submitScore("REST Upgrades", _root.totalRestEfficiency, 100);
        _root.submitScore("Inventory Module Slots", _root.save.progModuleSlot, 100);
        _root.submitScore("Main Quests C-Rank", _root.save.mainQuestC);
        _root.submitScore("Main Quests B-Rank", _root.save.mainQuestB);
        _root.submitScore("Main Quests A-Rank", _root.save.mainQuestA);
        _root.submitScore("Main Quests S-Rank", _root.save.mainQuestS);
        _root.submitScore("Quests", _root.save.questTotal);
        _root.submitScore("Quests (1 day)", _root.save.questRecord);
        _root.submitScore("Achievements", _root.awards, _root.totalachievements);
        _root.submitScore("Secret Achievements", _root.sawards, _root.totalsachievements);
        _root.submitScore("Achievement Score", _root.achRedCoin, _root.maxredcoin);
        if (_root.save.level >= 1000 || _root.save.banned > 0) {
            _root.submitScore("% Anti-Idle Rewards", Math.floor(_root.save.rewardClaimManual / _root.save.rewardClaim * 100), _root.maxredcoin);
        }
        _root.submitScore("Rewards Claimed", _root.save.rewardClaim);
        _root.submitScore("Rewards Claimed (Anti-Idle)", _root.save.rewardClaimManual);
        _root.submitScore("Rewards Claimed (Idle)", _root.save.rewardClaimAuto);
        _root.submitScore("Times Ascended", _root.save.banned);
        _root.submitScore("Times Ascended (Hard)", _root.save.bannedHard);
        _root.submitScore("Times Ascended (Impossible)", _root.save.bannedImpossible);
        _root.submitScore("[Battle Arena] Rebirth", _root.save.bannedB);
        _root.submitScore("[Battle Arena] Battle Points", _root.save.battlePoint);
        _root.submitScore("[Battle Arena] Excessive EXP (x100M)", _root.save.arenaExpExcess);
        _root.submitScore("Pet EXP", _root.save.petStat[1] + _root.save.petStat[2] + _root.save.petStat[3] + _root.save.petStat[4] + _root.save.petStat[5] + _root.save.petStat[6] + _root.save.petStat[7] + _root.save.petStat[8], 1600);
        _root.submitScore("[Kong] Kongpanions", _root.actualKpaCount);
        _root.submitScore("[Kong] Shiny Kongpanions", _root.actualShinyKpaCount);
        _root.submitScore("Ascension Points", _root.save.totalStupidity);
        _root.submitScore("[Battle Arena] Collection Points", _root.save.collectionPointMax);
        z = 1;
        while (z <= 20) {
            _root.submitScore("[Event] Technical Battleground #" + z, _root.save.arenaEventPoint[z]);
            z++;
        }
    }
    _root.showPopup = function showPopup(popT, popD) {
        console.warn("UNIMPLEMENTED showPopup", popT, popD);
        // _root.popUp.gotoAndStop(2);
        // _root.popUp.popTitle.text = popT;
        // _root.popUp.popDesc.text = popD;
    }
    _root.convertSec = function convertSec(thatNumber) {
        if (thatNumber < 0) {
            thatNumber = 0;
        }
        min = Math.floor(thatNumber / 60);
        sec = Math.floor(thatNumber) - min * 60;
        if (min < 10) {
            min = "0" + min;
        }
        if (sec < 10) {
            sec = "0" + sec;
        }
        return min + ":" + sec;
    }
    _root.tukkunRandom = function tukkunRandom(noZero, maxChance, maxVal) {
        maxVal = Math.ceil(maxVal);
        if (Math.random() < noZero) {
            val = Math.ceil(Math.random() * maxVal);
            if (Math.random() < maxChance) {
                val = maxVal;
            }
        }
        else {
            val = 0;
        }
    }
    _root.toB = function toB(reg) {
        if (reg == Infinity || isNaN(reg)) {
            return 0;
        }
        tmpB = reg;
        tmpE = 0;
        while (tmpB > 999999999999) {
            tmpB = Math.floor(tmpB / 10);
            tmpE += 1;
        }
        tmpB = Math.floor(tmpB);
        return _root.bCreate(tmpB, tmpE);
    }
    _root.toR = function toR(bn) {
        if (isNaN(bn) || bn == Infinity) {
            return 0;
        }
        return Math.round(_root.bGetB(bn) * Math.pow(10, _root.bGetE(bn)));
    }
    _root.bReduc = function bReduc(bn) {
        while (bGetE(bn) > 0 && bGetB(bn) < 100000000000) {
            tmpE = _root.bGetE(bn) - 1;
            tmpB = _root.bGetB(bn) * 10;
            bn = Math.floor(tmpE * 1000000000000 + tmpB);
        }
        return bn;
    }
    _root.bGetB = function bGetB(bn) {
        return bn % 1000000000000;
    }
    _root.bGetE = function bGetE(bn) {
        return Math.floor(bn / 1000000000000);
    }
    _root.bAdd = function bAdd(bnA, bnB) {
        if (bnB > bnA) {
            tmp = bnB;
            bnB = bnA;
            bnA = tmp;
        }
        tmpEDiff = _root.bGetE(bnA) - _root.bGetE(bnB);
        if (tmpEDiff > 12) {
            return bnA;
        }
        tmpBA = _root.bGetB(bnA);
        tmpBB = Math.floor(_root.bGetB(bnB) / Math.pow(10, tmpEDiff));
        tmpB = tmpBA + tmpBB;
        tmpE = _root.bGetE(bnA);
        if (tmpB > 999999999999) {
            tmpB = Math.floor(tmpB / 10);
            tmpE += 1;
        }
        return _root.bCreate(tmpB, tmpE);
    }
    _root.bSub = function bSub(bnA, bnB) {
        if (bnB >= bnA) {
            return 0;
        }
        tmpEDiff = _root.bGetE(bnA) - _root.bGetE(bnB);
        if (tmpEDiff > 12) {
            return bnA;
        }
        tmpBA = _root.bGetB(bnA);
        tmpBB = Math.floor(_root.bGetB(bnB) / Math.pow(10, tmpEDiff));
        tmpB = tmpBA - tmpBB;
        tmpE = _root.bGetE(bnA);
        if (tmpB > 999999999999) {
            tmpB = Math.floor(tmpB / 10);
            tmpE += 1;
        }
        return _root.bCreate(tmpB, tmpE);
    }
    _root.bMul2 = function bMul2(bnA, regB) {
        tmpB = _root.bGetB(bnA);
        tmpE = _root.bGetE(bnA);
        while (regB >= 10) {
            tmpB *= 10;
            if (tmpB > 999999999999) {
                tmpB = Math.floor(tmpB / 10);
                tmpE += 1;
            }
            regB /= 10;
        }
        tmpB *= regB;
        if (tmpB > 999999999999) {
            tmpB = Math.floor(tmpB / 10);
            tmpE += 1;
        }
        return _root.bCreate(tmpB, tmpE);
    }
    _root.bMul = function bMul(bnA, bnB) {
        return _root.bMul2(_root.bCreate(_root.bGetB(bnA), _root.bGetE(bnA) + _root.bGetE(bnB)), _root.bGetB(bnB));
    }
    _root.bDiv2 = function bDiv2(bnA, regB) {
        return _root.bMul2(bnA, 1 / regB);
    }
    _root.bDiv = function bDiv(bnA, bnB) {
        if (bnA < bnB) {
            return 0;
        }
        return _root.bDiv2(_root.bCreate(_root.bGetB(bnA), _root.bGetE(bnA) - _root.bGetE(bnB)), _root.bGetB(bnB));
    }
    _root.bPct = function bPct(bnA, bnB) {
        if (bnA >= bnB) {
            return 100;
        }
        tmpBA = _root.bGetB(bnA);
        tmpEA = _root.bGetE(bnA);
        tmpBB = _root.bGetB(bnB);
        tmpEB = _root.bGetE(bnB);
        if (tmpEB - tmpEA > 4) {
            return 0;
        }
        while (tmpEA < tmpEB) {
            tmpEA += 1;
            tmpBA /= 10;
        }
        return tmpBA * 100 / tmpBB;
    }
    _root.bPctD = function bPctD(bnA, bnB) {
        tmp = Math.floor(bPct(bnA, bnB) * 100);
        tmpPA = Math.floor(tmp / 100);
        tmpPB = tmp % 100;
        if (tmpPA < 10) {
            tmpPA = "0" + tmpPA;
        }
        if (tmpPB < 10) {
            tmpPB = "0" + tmpPB;
        }
        return tmpPA + "." + tmpPB + "%";
    }
    _root.pctD = function pctD(pct) {
        pct = Math.floor(pct * 100);
        tmpPA = Math.floor(pct / 100);
        tmpPB = tmp % 100;
        if (tmpPB < 10) {
            tmpPB = "0" + tmpPB;
        }
        return tmpPA + "." + tmpPB + "%";
    }
    _root.bPow = function bPow(regA, regB) {
        maxB = Math.floor(Math.log(_root.maxNum) / Math.log(regA) - 1);
        if (regB < maxB) {
            res = Math.pow(regA, regB);
            return _root.toB(res);
        }
        return _root.bMul(_root.toB(Math.pow(regA, maxB)), _root.bPow(regA, regB - maxB));
    }
    _root.bSqrt = function bSqrt(bn) {
        tmpB = _root.bGetB(bn);
        tmpE = _root.bGetE(bn);
        if (tmpE % 2 != 0) {
            tmpE -= 1;
            tmpB *= 10;
        }
        tmpI = 1;
        while (tmpI <= 4) {
            if (tmpE >= 2) {
                tmpE -= 2;
                tmpB *= 100;
            }
            else {
                tmpI = 5;
            }
            tmpI++;
        }
        tmpE /= 2;
        tmpB = Math.floor(Math.sqrt(tmpB));
        return _root.bCreate(tmpB, tmpE);
    }
    _root.bCreate = function bCreate(regB, regE) {
        while (regE > 0 && regB < 100000000000) {
            regE -= 1;
            regB *= 10;
        }
        if (regE > 990) {
            return 990999999999999;
        }
        return Math.floor(regE * 1000000000000 + regB);
    }
    _root.bDisp = function bDisp(bn) {
        tmpB = _root.bGetB(bn);
        tmpB2 = 0;
        tmpE = _root.bGetE(bn);
        if (tmpE == 0) {
            return withComma(tmpB);
        }
        while (tmpB > 99999 || tmpE % 3 != 1) {
            tmpE += 1;
            tmpB = Math.floor(tmpB / 10);
        }
        tmpB2 = tmpB % 100;
        if (tmpB2 < 10) {
            tmpB2 = "0" + tmpB2;
        }
        tmpB = Math.floor(tmpB / 100);
        tmpE += 2;
        return tmpB + "." + tmpB2 + " x 10^" + tmpE;
    }
    _root.toFW = function toFW(str) {
        str += "";
        str = str.replace("0", "０");
        str = str.replace("1", "１");
        str = str.replace("2", "２");
        str = str.replace("3", "３");
        str = str.replace("4", "４");
        str = str.replace("5", "５");
        str = str.replace("6", "６");
        str = str.replace("7", "７");
        str = str.replace("8", "８");
        str = str.replace("9", "９");
        return str;
    }
    _root.bDispX = function bDispX(bn) {
        tmpB = _root.bGetB(bn);
        tmpB2 = 0;
        tmpE = _root.bGetE(bn);
        if (tmpE == 0) {
            return withComma(tmpB);
        }
        while (tmpB > 99999 || tmpE % 3 != 1) {
            tmpE += 1;
            tmpB = Math.floor(tmpB / 10);
        }
        tmpB2 = tmpB % 100;
        if (tmpB2 < 10) {
            tmpB2 = "0" + tmpB2;
        }
        tmpB = Math.floor(tmpB / 100);
        tmpE += 2;
        return tmpB + "." + tmpB2 + " x 10" + _root.toFW(tmpE);
    }
    function withCommaB(num) {
        if (num < 0) {
            return "-" + _root.bDisp(_root.toB(- num));
        }
        return _root.bDisp(_root.toB(num));
    }
    function withCommaC(num) {
        if (num < 0) {
            return "-" + _root.bDispX(_root.toB(- num));
        }
        return _root.bDispX(_root.toB(num));
    }
    _root.toHex = function toHex(dec) {
        return dec.toString(16);
    }
    _root.jewk = function jewk(str) {
        if (str.length == 1) {
            return "<font color=\'#FFFF00\'>" + str + " </font>";
        }
        var _loc6_ = "";
        var _loc4_ = undefined;
        var _loc5_ = str.length;
        var _loc2_ = 0;
        var _loc3_ = 0;
        _loc4_ = 0;
        while (_loc4_ < _loc5_) {
            if (_loc4_ > (_loc5_ - 1) / 2) {
                _loc2_ = Math.round((_loc5_ - 1 - _loc4_) / (_loc5_ - 1) * 300) + 100;
                _loc3_ = 250;
            }
            else {
                _loc2_ = 250;
                _loc3_ = Math.round(_loc4_ / (_loc5_ - 1) * 300) + 100;
            }
            if (_loc2_ > 250) {
                _loc2_ = 250;
            }
            if (_loc3_ > 250) {
                _loc3_ = 250;
            }
            if (_loc2_ < 0) {
                _loc2_ = 0;
            }
            if (_loc3_ < 0) {
                _loc3_ = 0;
            }
            _loc6_ += "<font color=\'#" + _root.toHex(_loc2_ * 65536 + _loc3_ * 256) + "\'>" + str.substr(_loc4_ + 1, 1) + "</font>";
            _loc4_ = _loc4_ + 1;
        }
        return _loc6_;
    }
    _root.jewkB = function jewkB(str) {
        if (str.length == 1) {
            return "<font color=\'#FFFF00\'>" + str + " </font>";
        }
        var _loc6_ = "";
        var _loc4_ = undefined;
        var _loc5_ = str.length;
        var _loc2_ = 0;
        var _loc3_ = 0;
        _loc4_ = 0;
        while (_loc4_ < _loc5_) {
            if (_loc4_ > (_loc5_ - 1) / 2) {
                _loc2_ = Math.round((_loc5_ - 1 - _loc4_) / (_loc5_ - 1) * 200) + 150;
                _loc3_ = 250;
            }
            else {
                _loc2_ = 250;
                _loc3_ = Math.round(_loc4_ / (_loc5_ - 1) * 200) + 150;
            }
            if (_loc2_ > 250) {
                _loc2_ = 250;
            }
            if (_loc3_ > 250) {
                _loc3_ = 250;
            }
            if (_loc2_ < 0) {
                _loc2_ = 0;
            }
            if (_loc3_ < 0) {
                _loc3_ = 0;
            }
            _loc6_ += "<font color=\'#" + _root.toHex(_loc2_ * 65536 + _loc3_ * 256) + "\'>" + str.substr(_loc4_ + 1, 1) + "</font>";
            _loc4_ = _loc4_ + 1;
        }
        return _loc6_;
    }
    _root.jewkC = function jewkC(str) {
        if (str.length == 1) {
            return "<font color=\'#FFFF00\'>" + str + " </font>";
        }
        var _loc6_ = "";
        var _loc4_ = undefined;
        var _loc5_ = str.length;
        var _loc2_ = 0;
        var _loc3_ = 0;
        _loc4_ = 0;
        while (_loc4_ < _loc5_) {
            if (_loc4_ > (_loc5_ - 1) / 2) {
                _loc2_ = Math.round((_loc5_ - 1 - _loc4_) / (_loc5_ - 1) * 200) + 150;
                _loc3_ = 250;
                blue = 0;
            }
            else {
                _loc2_ = 250;
                _loc3_ = 250;
                blue = Math.round(((_loc5_ - 1) / 2 - _loc4_) / (_loc5_ - 1) * 250);
            }
            if (_loc2_ > 250) {
                _loc2_ = 250;
            }
            if (_loc3_ > 250) {
                _loc3_ = 250;
            }
            if (blue > 250) {
                blue = 250;
            }
            if (_loc2_ < 0) {
                _loc2_ = 0;
            }
            if (_loc3_ < 0) {
                _loc3_ = 0;
            }
            if (blue < 0) {
                blue = 0;
            }
            _loc6_ += "<font color=\'#" + _root.toHex(_loc2_ * 65536 + _loc3_ * 256 + blue) + "\'>" + str.substr(_loc4_ + 1, 1) + "</font>";
            _loc4_ = _loc4_ + 1;
        }
        return _loc6_;
    }
    _root.clearChallenge = function clearChallenge() {
        if (_root.saveid >= 20) {
            _root.save.challengeToken = Math.floor(_root.saveid * (_root.saveid + 1) * (_root.saveid - 7) * 156.4);
        }
    }
    _root.equipModule = function equipModule(modLoc) {
        if (_root.save.progModuleTier[modLoc] > 0) {
            _root.organizeModule();
            if (_root.save.progModuleSize[modLoc] <= _root.moduleSlotLeft) {
                im = _root.save.progModuleSize[modLoc] - 1;
                i = 0;
                while (i <= im) {
                    _root.swapModulePiece(modLoc + i, _root.moduleSlotOccupied + i + 1);
                    i++;
                }
            }
            else {
                _root.showPopup("Error", "Insufficient space. This module is too large.");
            }
        }
        else {
            _root.showPopup("Error", "An unexpected error has occurred. The module you are trying to equip appears to be non-existent.");
        }
        _root.organizeModule();
    }
    _root.unequipModule = function unequipModule(modLoc) {
        if (_root.save.progModuleTier[modLoc] > 0) {
            _root.organizeModule();
            if (_root.save.progModuleSize[modLoc] <= _root.moduleInvSlotLeft) {
                im = _root.save.progModuleSize[modLoc] - 1;
                i = 0;
                while (i <= im) {
                    _root.swapModulePiece(modLoc + i, _root.moduleInvSlotOccupied + i + 11);
                    i++;
                }
            }
            else {
                _root.showPopup("Error", "Insufficient inventory space. This module is too large.");
            }
        }
        else {
            _root.showPopup("Error", "An unexpected error has occurred. The module you are trying to unequip appears to be non-existent.");
        }
        _root.organizeModule();
    }
    _root.organizeModule = function organizeModule() {
        let mustSwap;
        let j;
        i = 1;
        while (i <= 8) {
            if (_root.save.progModuleTier[i] == 0) {
                mustSwap = false;
                j = i + 1;
                while (j <= 9) {
                    if (_root.save.progModuleTier[j] != 0) {
                        mustSwap = true;
                        j = 10;
                    }
                    j++;
                }
                if (mustSwap == true) {
                    j = i + 1;
                    while (j <= 9) {
                        _root.swapModulePiece(j - 1, j);
                        j++;
                    }
                    i -= 1;
                }
                else {
                    i = 9;
                }
            }
            i++;
        }
        i = 11;
        while (i <= 110) {
            if (_root.save.progModuleTier[i] == 0) {
                mustSwap = false;
                j = i + 1;
                while (j <= 110) {
                    if (_root.save.progModuleTier[j] != 0) {
                        mustSwap = true;
                        j = 111;
                    }
                    j++;
                }
                if (mustSwap == true) {
                    j = i + 1;
                    while (j <= 110) {
                        _root.swapModulePiece(j - 1, j);
                        j++;
                    }
                    i -= 1;
                }
                else {
                    i = 111;
                }
            }
            i++;
        }
        _root.moduleSlotOccupied = 0;
        i = 1;
        while (i <= 9) {
            if (_root.save.progModuleTier[i] != 0) {
                _root.moduleSlotOccupied += 1;
            }
            else {
                i = 10;
            }
            i++;
        }
        _root.moduleInvSlotOccupied = 0;
        i = 11;
        while (i <= 110) {
            if (_root.save.progModuleTier[i] != 0) {
                _root.moduleInvSlotOccupied += 1;
            }
            else {
                i = 111;
            }
            i++;
        }
        _root.moduleSlotLeft = 9 - _root.moduleSlotOccupied;
        _root.moduleInvSlotLeft = _root.save.progModuleSlot - _root.moduleInvSlotOccupied;
    }
    _root.buyModule = function buyModule(modLoc) {
        _root.organizeModule();
        modName = _root.save.progModuleName[modLoc];
        modTier = _root.save.progModuleTier[modLoc];
        modSize = _root.save.progModuleSize[modLoc];
        modShiny = _root.save.progModuleShiny[modLoc];
        modType = _root.save.progModuleType[modLoc];
        modChance = _root.save.progModuleChance[modLoc];
        modEffect = _root.save.progModuleEffect[modLoc];
        modCost = _root.save.progModuleCost[modLoc];
        shinyCost = 0;
        if (modShiny == true) {
            shinyCost = Math.floor((30 + modTier * 2 + modTier * modTier / 2) * modSize);
            if (modTier == 9) {
                shinyCost = 100 * modSize;
            }
        }
        if (modTier > 0) {
            if (_root.save.shinyToken < shinyCost) {
                _root.showPopup("Error", "You don\'t have enough Shiny Tokens to buy this module. Buy more in the Mystery Shop!");
            }
            else if (_root.save.whiteCoin >= modCost && _root.moduleInvSlotLeft >= modSize) {
                _root.save.shinyToken -= shinyCost;
                _root.save.whiteCoin -= modCost;
                if (_root.save.progModuleSize[modLoc] <= _root.moduleInvSlotLeft) {
                    i = 0;
                    while (i <= modSize - 1) {
                        _root.swapModulePiece(_root.moduleInvSlotOccupied + i + 11, modLoc + i);
                        i++;
                    }
                }
            }
            else if (_root.save.whiteCoin < modCost) {
                _root.showPopup("Error", "You don\'t have enough White Coins to buy this module.");
            }
            else {
                _root.showPopup("Error", "You don\'t have sufficient inventory slots to buy this module.");
            }
        }
        else {
            _root.showPopup("Error", "An unexpected error has occurred. The module you are trying to buy appears to be non-existent.");
        }
        _root.organizeModule();
    }
    _root.getModule = function getModule(modName, modTier, modSize, modShiny, modType, modChance, modEffect, modCost) {
        if (modTier > 0) {
            _root.organizeModule();
            if (modSize <= _root.moduleInvSlotLeft) {
                _root.save.progModuleName[_root.moduleInvSlotOccupied + 11] = modName;
                _root.save.progModuleTier[_root.moduleInvSlotOccupied + 11] = modTier;
                _root.save.progModuleSize[_root.moduleInvSlotOccupied + 11] = modSize;
                _root.save.progModuleShiny[_root.moduleInvSlotOccupied + 11] = modShiny;
                _root.save.progModuleType[_root.moduleInvSlotOccupied + 11] = modType;
                _root.save.progModuleChance[_root.moduleInvSlotOccupied + 11] = modChance;
                _root.save.progModuleEffect[_root.moduleInvSlotOccupied + 11] = modEffect;
                _root.save.progModuleCost[_root.moduleInvSlotOccupied + 11] = modCost;
                i = 1;
                while (i <= modSize - 1) {
                    _root.deleteModulePiece(_root.moduleInvSlotOccupied + i + 11);
                    _root.save.progModuleTier[_root.moduleInvSlotOccupied + i + 11] = -1;
                    i++;
                }
            }
            else {
                _root.showPopup("Error", "Insufficient inventory space. This module is too large.");
            }
        }
        else {
            _root.showPopup("Error", "An unexpected error has occurred. The module you are trying to get appears to be non-existent.");
        }
        _root.organizeModule();
    }
    _root.sellModule = function sellModule(modLoc) {
        if (_root.save.progModuleTier[modLoc] > 0) {
            if (!isNaN(_root.save.progModuleCost[modLoc]) && _root.save.progModuleCost[modLoc] > 0) {
                _root.save.whiteCoin += Math.ceil(_root.save.progModuleCost[modLoc] / 2);
            }
            _root.organizeModule();
            mi = _root.save.progModuleSize[modLoc] - 1;
            i = 0;
            while (i <= mi) {
                _root.deleteModulePiece(modLoc + i);
                i++;
            }
        }
        else {
            _root.showPopup("Error", "An unexpected error has occurred. The module you are trying to sell appears to be non-existent.");
        }
        _root.organizeModule();
    }
    _root.swapModulePiece = function swapModulePiece(pieceA, pieceB) {
        _root.copyModulePiece(pieceA, 141);
        _root.copyModulePiece(pieceB, pieceA);
        _root.copyModulePiece(141, pieceB);
        _root.deleteModulePiece(141);
    }
    _root.copyModulePiece = function copyModulePiece(pieceOrig, pieceDest) {
        _root.save.progModuleName[pieceDest] = _root.save.progModuleName[pieceOrig];
        _root.save.progModuleTier[pieceDest] = _root.save.progModuleTier[pieceOrig];
        _root.save.progModuleSize[pieceDest] = _root.save.progModuleSize[pieceOrig];
        _root.save.progModuleShiny[pieceDest] = _root.save.progModuleShiny[pieceOrig];
        _root.save.progModuleType[pieceDest] = _root.save.progModuleType[pieceOrig];
        _root.save.progModuleChance[pieceDest] = _root.save.progModuleChance[pieceOrig];
        _root.save.progModuleEffect[pieceDest] = _root.save.progModuleEffect[pieceOrig];
        _root.save.progModuleCost[pieceDest] = _root.save.progModuleCost[pieceOrig];
    }
    _root.deleteModulePiece = function deleteModulePiece(pieceA) {
        _root.save.progModuleName[pieceA] = "";
        _root.save.progModuleTier[pieceA] = 0;
        _root.save.progModuleSize[pieceA] = 0;
        _root.save.progModuleShiny[pieceA] = 0;
        _root.save.progModuleType[pieceA] = 0;
        _root.save.progModuleChance[pieceA] = 0;
        _root.save.progModuleEffect[pieceA] = 0;
        _root.save.progModuleCost[pieceA] = 0;
    }
    _root.restockModule = function restockModule(typ) {
        curPos = 111;
        if (typ == 1) {
            tierUpChance = 0.5;
            minTier = 1;
            maxTier = 6;
            shinyChance = 0.02;
        }
        else if (typ == 2) {
            tierUpChance = 0.6;
            minTier = 3;
            maxTier = 7;
            shinyChance = 0.05;
        }
        else if (typ == 3) {
            tierUpChance = 0.7;
            minTier = 5;
            maxTier = 8;
            shinyChance = 0.15;
        }
        else if (typ == 4) {
            tierUpChance = 0.8;
            minTier = 7;
            maxTier = 9;
            shinyChance = 0.3;
        }
        else {
            tierUpChance = 0.42;
            minTier = 1;
            maxTier = 4 + _root.save.banned;
            shinyChance = 0.008;
            if (_root.save.bestLevel >= 9000) {
                shinyChance = 0.069;
            }
            tierUpChance += _root.save.whiteCoin / 2500000;
            if (_root.dow == 0 || _root.dow == 2 || _root.dow == 4 || _root.dow == 6) {
                tierUpChance += 0.1;
            }
            if (_root.dow == 5 || _root.dow == 6) {
                shinyChance += 0.1;
            }
            if (_root.clock_year == 2015 && _root.clock_month == 1 && _root.clock_date >= 25) {
                shinyChance += 0.2;
            }
        }
        i = 111;
        while (i <= 140) {
            _root.deleteModulePiece(i);
            _root.save.progModuleTier[i] = -1;
            i++;
        }
        while (curPos <= 140) {
            maxSize = 141 - curPos;
            tempModuleType = random(42) + 1;
            if (Math.random() < 0.2) {
                tempModuleType = random(4) + 1;
            }
            if (tempModuleType == 5 || tempModuleType == 13 || tempModuleType == 22 || tempModuleType == 24 || tempModuleType == 25 || tempModuleType == 27 || tempModuleType >= 33 && tempModuleType <= 39 || tempModuleType == 41) {
                tempModuleType = random(42) + 1;
            }
            tempShiny = 0;
            tempTier = 1;
            i = 1;
            while (i <= 8) {
                if (Math.random() < shinyChance && maxSize >= 2) {
                    tempShiny = 1;
                }
                if (Math.random() < tierUpChance && tempTier < maxTier || tempTier < minTier) {
                    tempTier += 1;
                }
                else if (Math.random() < 0.5) {
                    i = 9;
                }
                i++;
            }
            if (tempModuleType == 1) {
                tempNameA = "EXP Module";
                tempSize = 1;
                tempChance = 1000;
                tempEffect = 15;
                tempCost = 25;
            }
            else if (tempModuleType == 2) {
                tempNameA = "Coin Module";
                tempSize = 1;
                tempChance = 1000;
                tempEffect = 15;
                tempCost = 10;
            }
            else if (tempModuleType == 3) {
                tempNameA = "Green Coin Module";
                tempSize = 1;
                tempChance = 1000;
                tempEffect = 250;
                tempCost = 10;
            }
            else if (tempModuleType == 4) {
                tempNameA = "Blue Coin Module";
                tempSize = 2;
                tempChance = 500;
                tempEffect = 2;
                tempCost = 25;
            }
            else if (tempModuleType == 5) {
                tempNameA = "White Coin Module";
                tempSize = 4;
                tempChance = 10;
                tempEffect = 1;
                tempCost = 250;
            }
            else if (tempModuleType == 6) {
                tempNameA = "Boost Module";
                tempSize = 2;
                tempChance = 250;
                tempEffect = 2;
                tempCost = 50;
            }
            else if (tempModuleType == 7) {
                tempNameA = "Boost Freeze Module";
                tempSize = 2;
                tempChance = 50;
                tempEffect = 5;
                tempCost = 100;
            }
            else if (tempModuleType == 8) {
                tempNameA = "1.5x EXP Module";
                tempSize = 2;
                tempChance = 100;
                tempEffect = 10;
                tempCost = 25;
            }
            else if (tempModuleType == 9) {
                tempNameA = "1.5x Coin Module";
                tempSize = 2;
                tempChance = 100;
                tempEffect = 10;
                tempCost = 10;
            }
            else if (tempModuleType == 10) {
                tempNameA = "Harvest Value Module";
                tempSize = 2;
                tempChance = 500;
                tempEffect = 100;
                tempCost = 25;
            }
            else if (tempModuleType == 11) {
                tempNameA = "Pet Mana Module";
                tempSize = 2;
                tempChance = 50;
                tempEffect = 1;
                tempCost = 25;
            }
            else if (tempModuleType == 12) {
                tempNameA = "Garden Point Module";
                tempSize = 2;
                tempChance = 500;
                tempEffect = 5;
                tempCost = 25;
            }
            else if (tempModuleType == 13) {
                tempNameA = "Randomfruit Module";
                tempSize = 4;
                tempChance = 100;
                tempEffect = 1;
                tempCost = 50;
            }
            else if (tempModuleType == 14) {
                tempNameA = "HP Recovery Module";
                tempSize = 1;
                tempChance = 2000;
                tempEffect = 25;
                tempCost = 25;
            }
            else if (tempModuleType == 15) {
                tempNameA = "MP Recovery Module";
                tempSize = 1;
                tempChance = 2000;
                tempEffect = 25;
                tempCost = 50;
            }
            else if (tempModuleType == 16) {
                tempNameA = "Rage Module";
                tempSize = 2;
                tempChance = 250;
                tempEffect = 3;
                tempCost = 50;
            }
            else if (tempModuleType == 17) {
                tempNameA = "Pixel Module";
                tempSize = 2;
                tempChance = 500;
                tempEffect = 1000;
                tempCost = 25;
            }
            else if (tempModuleType == 18) {
                tempNameA = "CM Module";
                tempSize = 2;
                tempChance = 500;
                tempEffect = 100;
                tempCost = 25;
            }
            else if (tempModuleType == 19) {
                tempNameA = "SCM Module";
                tempSize = 2;
                tempChance = 500;
                tempEffect = 1;
                tempCost = 25;
            }
            else if (tempModuleType == 20) {
                tempNameA = "Unobtainium Module";
                tempSize = 3;
                tempChance = 200;
                tempEffect = 1;
                tempCost = 50;
            }
            else if (tempModuleType == 21) {
                tempNameA = "Enhancer Fragment Module";
                tempSize = 1;
                tempChance = 500;
                tempEffect = 10;
                tempCost = 10;
            }
            else if (tempModuleType == 22) {
                tempNameA = "Bacon Module";
                tempSize = 3;
                tempChance = 200;
                tempEffect = 1;
                tempCost = 25;
            }
            else if (tempModuleType == 23) {
                tempNameA = "Crystal Module";
                tempSize = 3;
                tempChance = 100;
                tempEffect = 1;
                tempCost = 25;
            }
            else if (tempModuleType == 24) {
                tempNameA = "Ultimate Crystal Module";
                tempSize = 4;
                tempChance = 25;
                tempEffect = 1;
                tempCost = 50;
            }
            else if (tempModuleType == 25) {
                tempNameA = "Purple Button Module";
                tempSize = 3;
                tempChance = 200;
                tempEffect = 1;
                tempCost = 25;
            }
            else if (tempModuleType == 26) {
                tempNameA = "Career EXP Module";
                tempSize = 1;
                tempChance = 500;
                tempEffect = 50;
                tempCost = 10;
            }
            else if (tempModuleType == 27) {
                tempNameA = "100k Medal Module";
                tempSize = 3;
                tempChance = 200;
                tempEffect = 1;
                tempCost = 25;
            }
            else if (tempModuleType == 28) {
                tempNameA = "Stadium Token Module";
                tempSize = 1;
                tempChance = 500;
                tempEffect = 20;
                tempCost = 10;
            }
            else if (tempModuleType == 29) {
                tempNameA = "FCG Cash Module";
                tempSize = 1;
                tempChance = 500;
                tempEffect = 20;
                tempCost = 10;
            }
            else if (tempModuleType >= 30 && tempModuleType <= 39) {
                tempNameA = "LolMarket Lv. " + (tempModuleType - 29) + " Module";
                if (tempModuleType == 30) {
                    tempSize = 1;
                    tempChance = 10;
                    tempEffect = 1;
                    tempCost = 10;
                }
                else if (tempModuleType == 31) {
                    tempSize = 2;
                    tempChance = 10;
                    tempEffect = 1;
                    tempCost = 10;
                }
                else if (tempModuleType == 32) {
                    tempSize = 2;
                    tempChance = 10;
                    tempEffect = 1;
                    tempCost = 20;
                }
                else if (tempModuleType == 33) {
                    tempSize = 3;
                    tempChance = 15;
                    tempEffect = 1;
                    tempCost = 20;
                }
                else if (tempModuleType == 34) {
                    tempSize = 3;
                    tempChance = 15;
                    tempEffect = 1;
                    tempCost = 30;
                }
                else if (tempModuleType == 35) {
                    tempSize = 3;
                    tempChance = 15;
                    tempEffect = 1;
                    tempCost = 50;
                }
                else if (tempModuleType == 36) {
                    tempSize = 4;
                    tempChance = 20;
                    tempEffect = 1;
                    tempCost = 50;
                }
                else if (tempModuleType == 37) {
                    tempSize = 4;
                    tempChance = 20;
                    tempEffect = 1;
                    tempCost = 60;
                }
                else if (tempModuleType == 38) {
                    tempSize = 4;
                    tempChance = 20;
                    tempEffect = 1;
                    tempCost = 75;
                }
                else if (tempModuleType == 39) {
                    tempSize = 4;
                    tempChance = 20;
                    tempEffect = 1;
                    tempCost = 100;
                }
            }
            else if (tempModuleType == 40) {
                tempNameA = "Adventure Time Module";
                tempSize = 2;
                tempChance = 200;
                tempEffect = 2;
                tempCost = 25;
            }
            else if (tempModuleType == 41) {
                tempNameA = "Special Food Module";
                tempSize = 4;
                tempChance = 400;
                tempEffect = 1;
                tempCost = 10;
            }
            else if (tempModuleType == 42) {
                tempNameA = "Fatigue Recovery Module";
                tempSize = 2;
                tempChance = 250;
                tempEffect = 3;
                tempCost = 50;
            }
            if (tempTier >= 9) {
                tempTier = 9;
                if (tempEffect == 1) {
                    tempChance = Math.round(tempChance * 4);
                }
                else {
                    tempChance = Math.round(tempChance * 2);
                    tempEffect = Math.floor(tempEffect * 2);
                }
                tempCost = Math.round(tempCost * 100);
            }
            else {
                if (tempEffect == 1) {
                    tempChance = Math.round(tempChance * (1 + (tempTier - 1) / 10) * (1 + (tempTier - 1) / 10));
                }
                else {
                    tempChance = Math.round(tempChance * (1 + (tempTier - 1) / 10));
                    tempEffect = Math.floor(tempEffect * (1 + (tempTier - 1) / 10));
                }
                tempCost = Math.round(tempCost * tempTier * tempTier);
            }
            if (tempShiny == 1) {
                tempSize += 1;
                if (tempEffect == 1) {
                    tempChance = Math.ceil(tempChance * 5);
                }
                else {
                    tempChance = Math.ceil(tempChance * 2.5);
                    tempEffect = Math.floor(tempEffect * 2);
                }
                tempCost = Math.round(tempCost * 10);
            }
            if (tempTier < 9) {
                tempCost = Math.ceil(tempCost * (tempTier + 11) / 20);
            }
            if (tempCost < 100) {
                tempCost = Math.ceil(tempCost / 10) * 10;
            }
            else if (tempCost < 1000) {
                tempCost = Math.ceil(tempCost / 100) * 100;
            }
            else {
                tempCost = Math.ceil(tempCost / 1000) * 1000;
            }
            tempValid = true;
            if (tempSize > maxSize) {
                tempValid = false;
            }
            if (tempModuleType >= 14 && tempModuleType <= 16) {
                tempValid = false;
            }
            if (tempValid == true) {
                _root.save.progModuleName[curPos] = tempNameA;
                _root.save.progModuleTier[curPos] = tempTier;
                _root.save.progModuleSize[curPos] = tempSize;
                _root.save.progModuleShiny[curPos] = tempShiny;
                _root.save.progModuleType[curPos] = tempModuleType;
                _root.save.progModuleChance[curPos] = tempChance;
                _root.save.progModuleEffect[curPos] = tempEffect;
                _root.save.progModuleCost[curPos] = tempCost;
                curPos += tempSize;
            }
        }
    }
    let bannedUsers = ["Guest", "Tukkun", "omfg13321", "milleraus10", "Valmont06", "DarkWazza", "idan2", "luungockhang", "danielm59", "Batux1995", "nc666", "hilariousguy878", "Dariush", "wazor", "Darnal", "Weredeer", "littleNekoDemon", "oblivion60", "Chendler", "tiopo", "supersonicguy", "blackwiz", "jamesty", "omonoiadam", "CECIII", "KidDeath", "Hedgehog101", "Eciplyse2", "Arutima", "Mnchngrnqs", "keith143", "kamitop", "p9a9u9l", "EsCaPeThEfAtE2", "MattiasM", "TecknozThaBezt", "thelolofdeath", "alsc", "Darvious", "AntonioS2740", "saltineface", "JaredOfSubway", "HARIB0L", "luka1795", "Vsegdaskray", "Mnchngrngs", "perez7631", "zeroskil1", "Salomanity", "Franklinperry2", "delshady", "Salomanity2", "Inhruby", "justfg", "Bunker", "vitinho90", "BNR32k", "fateofblade"];
    let scoreBanned = false;
    let i = 0;
    while (i <= bannedUsers.length) {
        if (_root.kongregate_username == bannedUsers[i]) {
            scoreBanned = true;
        }
        i++;
    }
    _root.careerName = ["", "Idler", "Gardener", "Fighter", "Item Maker", "Button Basher", "Arcade Player", "Racer", "Card Player", "Gem Trader", "Adventurer", "Pet Trainer", "Fisher"];
    _root.nameValue = 0;
    let str = _root.kongregate_username;
    if (str == undefined) {
        str = "Kongregate Username";
    }
    i = 1;
    let nameValue;
    while (i <= str.length) {
        let cDigit = str.substr(i, 1);
        let nD;
        switch (cDigit) {
            case "A":
                nD = 21;
                break;
            case "B":
                nD = 15;
                break;
            case "C":
                nD = 34;
                break;
            case "D":
                nD = 23;
                break;
            case "E":
                nD = 12;
                break;
            case "F":
                nD = 37;
                break;
            case "G":
                nD = 29;
                break;
            case "H":
                nD = 13;
                break;
            case "I":
                nD = 31;
                break;
            case "J":
                nD = 26;
                break;
            case "K":
                nD = 14;
                break;
            case "L":
                nD = 39;
                break;
            case "M":
                nD = 24;
                break;
            case "N":
                nD = 19;
                break;
            case "O":
                nD = 35;
                break;
            case "P":
                nD = 27;
                break;
            case "Q":
                nD = 14;
                break;
            case "R":
                nD = 36;
                break;
            case "S":
                nD = 23;
                break;
            case "T":
                nD = 18;
                break;
            case "U":
                nD = 37;
                break;
            case "V":
                nD = 27;
                break;
            case "W":
                nD = 18;
                break;
            case "X":
                nD = 36;
                break;
            case "Y":
                nD = 21;
                break;
            case "Z":
                nD = 14;
                break;
            case "a":
                nD = 43;
                break;
            case "b":
                nD = 33;
                break;
            case "c":
                nD = 22;
                break;
            case "d":
                nD = 45;
                break;
            case "e":
                nD = 34;
                break;
            case "f":
                nD = 27;
                break;
            case "g":
                nD = 43;
                break;
            case "h":
                nD = 39;
                break;
            case "i":
                nD = 25;
                break;
            case "j":
                nD = 48;
                break;
            case "k":
                nD = 37;
                break;
            case "l":
                nD = 25;
                break;
            case "m":
                nD = 46;
                break;
            case "n":
                nD = 35;
                break;
            case "o":
                nD = 25;
                break;
            case "p":
                nD = 49;
                break;
            case "q":
                nD = 37;
                break;
            case "r":
                nD = 27;
                break;
            case "s":
                nD = 46;
                break;
            case "t":
                nD = 32;
                break;
            case "u":
                nD = 28;
                break;
            case "v":
                nD = 45;
                break;
            case "w":
                nD = 31;
                break;
            case "x":
                nD = 24;
                break;
            case "y":
                nD = 43;
                break;
            case "z":
                nD = 33;
                break;
            case "0":
                nD = 22;
                break;
            case "1":
                nD = 52;
                break;
            case "2":
                nD = 44;
                break;
            case "3":
                nD = 34;
                break;
            case "4":
                nD = 43;
                break;
            case "5":
                nD = 36;
                break;
            case "6":
                nD = 55;
                break;
            case "7":
                nD = 45;
                break;
            case "8":
                nD = 54;
                break;
            case "9":
                nD = 37;
                break;
            default:
                nD = 1;
        }
        if (i == 1) {
            nameValue += 7 * nD + 133;
        }
        else {
            nameValue += (i + 1) * nD + 2;
        }
        if (nameValue > 10000) {
            nameValue -= 337;
        }
        i++;
    }
    if (str == "Guest") {
        nameValue = 0;
    }
    let b = 1;
    while (b <= 30) {
        _root["X0breakNews" + b] = "";
        _root["X0breakStamp" + b] = "";
        _root["X0breakColor" + b] = 0;
        _root["X1breakNews" + b] = "";
        _root["X1breakStamp" + b] = "";
        _root["X1breakColor" + b] = 0;
        _root["X2breakNews" + b] = "";
        _root["X2breakStamp" + b] = "";
        _root["X2breakColor" + b] = 0;
        _root["X3breakNews" + b] = "";
        _root["X3breakStamp" + b] = "";
        _root["X3breakColor" + b] = 0;
        _root["X4breakNews" + b] = "";
        _root["X4breakStamp" + b] = "";
        _root["X4breakColor" + b] = 0;
        let c = 1;
        while (c <= 30) {
            _root["F" + c + "breakNews" + b] = "";
            _root["F" + c + "breakStamp" + b] = "";
            _root["F" + c + "breakColor" + b] = 0;
            c++;
        }
        b++;
    }
    _root.cyborgActShortName = ["Recharge", "Pong", "Ult. Avoidance", "Math Master", "Whack-a-greg", "Triangle Count", "MindSweeper", "Balance 3", "Simple Race", "Item Fight", "Death Match", "MMR X", "FCG - Level 1", "FCG - Level 2", "FCG - Level 3", "FCG - Level 4", "FCG - Level 6", "FCG - Level 7", "FCG - Level 8", "FCG - Level 10", "Fishing"];
    _root.cyborgActLongName = ["Recharging...", "Arcade - Pong: Survival Battle", "Arcade - Ultimate Avoidance", "Arcade - Math Master", "Arcade - Whack-a-greg", "Arcade - Triangle Count", "Arcade - MindSweeper", "Arcade - Balance 3", "Stadium - Simple Race (Impossible)", "Stadium - Item Fight (Impossible)", "Stadium - Death Match", "Arcade - MMR X", "TukkunFCG - Level 1", "TukkunFCG - Level 2", "TukkunFCG - Level 3", "TukkunFCG - Level 4", "TukkunFCG - Level 6", "TukkunFCG - Level 7", "TukkunFCG - Level 8", "TukkunFCG - Level 10", "Fishing"];
    _root.cyborgActMinPerf = [40, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 5, 5, 50, 5, 4.5, 4, 3.5, 3, 2.5, 2, 1.5, 1, 1];
    _root.cyborgActMaxPerf = [240, 4200000, 1750000, 2400000, 3300000, 13500000, 10000000, 7200000, 90, 90, 1100, 7200000, 98, 97, 96, 95, 90, 85, 80, 70, 95];
    _root.cyborgActPerfText = ["Energy", "Maximum Score", "Maximum Score", "Maximum Score", "Maximum Score", "Maximum Score", "Maximum Score", "Maximum Score", "Win Rate", "Win Rate", "Maximum PWNts", "Maximum Score", "Win Rate", "Win Rate", "Win Rate", "Win Rate", "Win Rate", "Win Rate", "Win Rate", "Win Rate", "Perfect Rate"];
    _root.cyborgActPerfSign = [" sec", "", "", "", "", "", "", "", "%", "%", "", "", "%", "%", "%", "%", "%", "%", "%", "%", "%"];
    _root.cyborgActTime = [300, 420, 175, 80, 165, 675, 500, 360, 17, 19, 600, 360, 120, 150, 170, 190, 200, 300, 350, 450, 27];
    _root.cyborgActCost = [0, 84, 35, 16, 33, 135, 100, 72, 4, 5, 1000, 72, 30, 35, 40, 45, 60, 90, 120, 180, 11];
    _root.cyborgWorking = false;
}

export function step3loadBA() {
    function addArenaCraftWeapon(recipeType, recipeReq, recipeLimit, reqRank, subtype, range, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, costPixel, costCraft, costSpec, careerExp, name, desc) {
        var _loc1_ = new Object();
        _loc1_.recipeType = recipeType;
        _loc1_.recipeReq = recipeReq;
        _loc1_.recipeLimit = recipeLimit;
        _loc1_.name = name;
        _loc1_.reqRank = reqRank;
        _loc1_.subtype = subtype;
        _loc1_.frame = frame;
        _loc1_.range = range;
        _loc1_.attack = attack;
        _loc1_.speed = speed;
        _loc1_.defense = defense;
        _loc1_.bonus = bonus;
        _loc1_.ability = ability;
        _loc1_.moreBonus = moreBonus;
        _loc1_.maxLevel = maxLevel;
        _loc1_.expTNL = expTNL;
        _loc1_.enhance = enhance;
        _loc1_.bonusPow = bonusPow;
        _loc1_.sell = sell;
        _loc1_.expiry = expiry * 86400000;
        if (noLife == false) {
            _loc1_.expiry = Infinity;
        }
        _loc1_.noBonus = noBonus;
        _loc1_.noLife = noLife;
        _loc1_.noFuse = noFuse;
        _loc1_.noUnique = noUnique;
        _loc1_.spirit = spirit;
        _loc1_.unob = unob;
        _loc1_.costPixel = costPixel;
        _loc1_.costCraft = costCraft;
        _loc1_.costSpec = costSpec;
        _loc1_.careerExp = careerExp;
        _loc1_.crit = crit;
        _loc1_.dexterity = dexterity;
        _loc1_.health = health;
        _loc1_.desc = desc;
        _root.craftWeapon.push(_loc1_);
    }
    function addArenaCraftArmor(recipeType, recipeReq, recipeLimit, reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, costPixel, costCraft, costSpec, careerExp, name, desc) {
        var _loc1_ = new Object();
        _loc1_.recipeType = recipeType;
        _loc1_.recipeReq = recipeReq;
        _loc1_.recipeLimit = recipeLimit;
        _loc1_.name = name;
        _loc1_.reqRank = reqRank;
        _loc1_.subtype = subtype;
        _loc1_.frame = frame;
        _loc1_.attack = attack;
        _loc1_.speed = speed;
        _loc1_.defense = defense;
        _loc1_.bonus = bonus;
        _loc1_.ability = ability;
        _loc1_.moreBonus = moreBonus;
        _loc1_.maxLevel = maxLevel;
        _loc1_.expTNL = expTNL;
        _loc1_.enhance = enhance;
        _loc1_.bonusPow = bonusPow;
        _loc1_.sell = sell;
        _loc1_.expiry = expiry * 86400000;
        if (noLife == false) {
            _loc1_.expiry = Infinity;
        }
        _loc1_.noBonus = noBonus;
        _loc1_.noLife = noLife;
        _loc1_.noFuse = noFuse;
        _loc1_.noUnique = noUnique;
        _loc1_.spirit = spirit;
        _loc1_.unob = unob;
        _loc1_.costPixel = costPixel;
        _loc1_.costCraft = costCraft;
        _loc1_.costSpec = costSpec;
        _loc1_.careerExp = careerExp;
        _loc1_.crit = crit;
        _loc1_.dexterity = dexterity;
        _loc1_.health = health;
        _loc1_.desc = desc;
        _root.craftArmor.push(_loc1_);
    }
    function addArenaCraftAccessory(recipeType, recipeReq, recipeLimit, reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noUnique, spirit, unob, costPixel, costCraft, costSpec, careerExp, name, desc) {
        var _loc1_ = new Object();
        _loc1_.recipeType = recipeType;
        _loc1_.recipeReq = recipeReq;
        _loc1_.recipeLimit = recipeLimit;
        _loc1_.name = name;
        _loc1_.reqRank = reqRank;
        _loc1_.subtype = subtype;
        _loc1_.frame = frame;
        _loc1_.attack = attack;
        _loc1_.speed = speed;
        _loc1_.defense = defense;
        _loc1_.bonus = bonus;
        _loc1_.ability = ability;
        _loc1_.moreBonus = moreBonus;
        _loc1_.maxLevel = maxLevel;
        _loc1_.expTNL = expTNL;
        _loc1_.enhance = enhance;
        _loc1_.bonusPow = bonusPow;
        _loc1_.sell = sell;
        _loc1_.expiry = expiry * 86400000;
        if (noLife == false) {
            _loc1_.expiry = Infinity;
        }
        _loc1_.noBonus = noBonus;
        _loc1_.noLife = noLife;
        _loc1_.noFuse = false;
        _loc1_.noUnique = noUnique;
        _loc1_.spirit = spirit;
        _loc1_.unob = unob;
        _loc1_.costPixel = costPixel;
        _loc1_.costCraft = costCraft;
        _loc1_.costSpec = costSpec;
        _loc1_.careerExp = careerExp;
        _loc1_.crit = crit;
        _loc1_.dexterity = dexterity;
        _loc1_.health = health;
        _loc1_.desc = desc;
        _root.craftAccessory.push(_loc1_);
    }
    function addArenaCraftMedal(recipeType, recipeReq, recipeLimit, reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noUnique, spirit, unob, costPixel, costCraft, costSpec, careerExp, name, desc) {
        var _loc1_ = new Object();
        _loc1_.recipeType = recipeType;
        _loc1_.recipeReq = recipeReq;
        _loc1_.recipeLimit = recipeLimit;
        _loc1_.name = name;
        _loc1_.reqRank = reqRank;
        _loc1_.subtype = subtype;
        _loc1_.frame = frame;
        _loc1_.attack = attack;
        _loc1_.speed = speed;
        _loc1_.defense = defense;
        _loc1_.bonus = bonus;
        _loc1_.ability = ability;
        _loc1_.moreBonus = moreBonus;
        _loc1_.maxLevel = maxLevel;
        _loc1_.expTNL = expTNL;
        _loc1_.enhance = enhance;
        _loc1_.bonusPow = bonusPow;
        _loc1_.sell = sell;
        _loc1_.expiry = expiry * 86400000;
        if (noLife == false) {
            _loc1_.expiry = Infinity;
        }
        _loc1_.noBonus = noBonus;
        _loc1_.noLife = noLife;
        _loc1_.noFuse = false;
        _loc1_.noUnique = noUnique;
        _loc1_.spirit = spirit;
        _loc1_.unob = unob;
        _loc1_.costPixel = costPixel;
        _loc1_.costCraft = costCraft;
        _loc1_.costSpec = costSpec;
        _loc1_.careerExp = careerExp;
        _loc1_.crit = crit;
        _loc1_.dexterity = dexterity;
        _loc1_.health = health;
        _loc1_.desc = desc;
        _root.craftMedal.push(_loc1_);
    }
    function addArenaCraftEnhancer(recipeType, recipeReq, recipeLimit, subtype, frame, power, curse, success, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, costPixel, costCraft, costSpec, careerExp, name, desc) {
        var _loc1_ = new Object();
        _loc1_.recipeType = recipeType;
        _loc1_.recipeReq = recipeReq;
        _loc1_.recipeLimit = recipeLimit;
        _loc1_.name = name;
        _loc1_.subtype = subtype;
        _loc1_.frame = frame;
        _loc1_.power = power;
        _loc1_.curse = curse;
        _loc1_.success = success;
        _loc1_.bonus = bonus;
        _loc1_.ability = ability;
        _loc1_.moreBonus = moreBonus;
        _loc1_.enhance = enhance;
        _loc1_.bonusPow = bonusPow;
        _loc1_.sell = sell;
        _loc1_.expiry = expiry * 86400000;
        _loc1_.costPixel = costPixel;
        _loc1_.costCraft = costCraft;
        _loc1_.costSpec = costSpec;
        _loc1_.careerExp = careerExp;
        _loc1_.desc = desc;
        _root.craftEnhancer.push(_loc1_);
    }
    function addArenaCraftPotion(recipeType, recipeReq, recipeLimit, subtype, frame, attack, defense, enhance, bonusPow, sell, expiry, costPixel, costCraft, costSpec, careerExp, name, desc) {
        var _loc1_ = new Object();
        _loc1_.recipeType = recipeType;
        _loc1_.recipeReq = recipeReq;
        _loc1_.recipeLimit = recipeLimit;
        _loc1_.name = name;
        _loc1_.subtype = subtype;
        _loc1_.frame = frame;
        _loc1_.attack = attack;
        _loc1_.defense = defense;
        _loc1_.enhance = enhance;
        _loc1_.bonusPow = bonusPow;
        _loc1_.sell = sell;
        _loc1_.expiry = expiry * 86400000;
        _loc1_.costPixel = costPixel;
        _loc1_.costCraft = costCraft;
        _loc1_.costSpec = costSpec;
        _loc1_.careerExp = careerExp;
        _loc1_.desc = desc;
        _root.craftPotion.push(_loc1_);
    }
    function addArenaCraftChip(recipeType, recipeReq, recipeLimit, subtype, frame, attack, defense, enhance, bonusPow, sell, expiry, costPixel, costCraft, costSpec, careerExp, name, desc) {
        var _loc1_ = new Object();
        _loc1_.recipeType = recipeType;
        _loc1_.recipeReq = recipeReq;
        _loc1_.recipeLimit = recipeLimit;
        _loc1_.name = name;
        _loc1_.subtype = subtype;
        _loc1_.frame = frame;
        _loc1_.attack = attack;
        _loc1_.defense = defense;
        _loc1_.enhance = enhance;
        _loc1_.bonusPow = bonusPow;
        _loc1_.sell = sell;
        _loc1_.expiry = expiry * 86400000;
        _loc1_.costPixel = costPixel;
        _loc1_.costCraft = costCraft;
        _loc1_.costSpec = costSpec;
        _loc1_.careerExp = careerExp;
        _loc1_.desc = desc;
        _root.craftChip.push(_loc1_);
    }
    function addArenaSet(setNameD, bonusReq, bonusStat, bonusAmnt, setItems) {
        var _loc1_ = new Object();
        _loc1_.setNameD = setNameD;
        _loc1_.setItems = setItems;
        _loc1_.bonusReq = bonusReq;
        _loc1_.bonusStat = bonusStat;
        _loc1_.bonusAmnt = bonusAmnt;
        _root.setArray.push(_loc1_);
    }
    _root.checkArenaSet = function checkArenaSet(itemName) {
        let setArray = _root.setArray;
        let tempSetID = 0;
        let n = 1;
        while (n <= setArray.length - 1) {
            let p = 0;
            while (p <= setArray[n].setItems.length - 1) {
                let tempName = setArray[n].setItems[p];
                if (itemName == tempName) {
                    tempSetID = n;
                }
                if (tempName == "Any Weapon of DOOOOOOM") {
                    if (itemName.indexOf("DOOOOOOM") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName == "Any Meteoric Weapon") {
                    if (itemName.indexOf("Meteoric") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName == "Any Dragon Slayer Weapon") {
                    if (itemName.indexOf("Dragon Slayer") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName == "Any Demon Slayer Weapon") {
                    if (itemName.indexOf("Demon Slayer") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName == "Any Tukkonium Weapon") {
                    if (itemName.indexOf("Tukkonium") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName == "Any Pickaxe") {
                    if (itemName.indexOf("Pickaxe") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName.indexOf("Any Alien") != -1) {
                    if (itemName.indexOf("Alien") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName.indexOf("Dragon Slayer") != -1) {
                    if (itemName.indexOf("Dragon Slayer") != -1) {
                        tempSetID = n;
                    }
                }
                if (tempName.indexOf("Demon Slayer") != -1) {
                    if (itemName.indexOf("Demon Slayer") != -1) {
                        tempSetID = n;
                    }
                }
                p++;
            }
            n++;
        }
        return tempSetID;
    }
    function displaySetItems(setID) {
        let setArray = _root.setArray;
        tempDisp = "";
        equipCount = 0;
        i = 0;
        while (i <= setArray[setID].setItems.length - 1) {
            tempName = setArray[setID].setItems[i];
            equipped = false;
            if (_root.save.inventoryName[_root.save.arenaWeapon] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaSubWeapon] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaHat] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaShirt] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaGloves] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaPants] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaShoes] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaSkin] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaMedal] == tempName && _root.save.inventoryDesc[_root.save.arenaMedal] != "This medal\'s name depends on your Anti-Idle title when you craft it. Don\'t ask how that works." && _root.save.inventoryDesc[_root.save.arenaMedal] != "Thank you for your donation and your continued support!") {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaPendant] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaEarring] == tempName) {
                equipped = true;
            }
            if (_root.save.inventoryName[_root.save.arenaTrinket] == tempName) {
                equipped = true;
            }
            if (tempName == "Any Weapon of DOOOOOOM") {
                if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("DOOOOOOM") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Meteoric Weapon") {
                if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("Meteoric") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Dragon Slayer Weapon") {
                if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("Dragon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Demon Slayer Weapon") {
                if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("Demon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Tukkonium Weapon") {
                if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("Tukkonium") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Dragon Slayer Hat") {
                if (_root.save.inventoryName[_root.save.arenaHat].indexOf("Dragon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Dragon Slayer Shirt") {
                if (_root.save.inventoryName[_root.save.arenaShirt].indexOf("Dragon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Dragon Slayer Gloves") {
                if (_root.save.inventoryName[_root.save.arenaGloves].indexOf("Dragon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Dragon Slayer Pants") {
                if (_root.save.inventoryName[_root.save.arenaPants].indexOf("Dragon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Dragon Slayer Shoes") {
                if (_root.save.inventoryName[_root.save.arenaShoes].indexOf("Dragon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Demon Slayer Hat") {
                if (_root.save.inventoryName[_root.save.arenaHat].indexOf("Demon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Demon Slayer Shirt") {
                if (_root.save.inventoryName[_root.save.arenaShirt].indexOf("Demon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Demon Slayer Gloves") {
                if (_root.save.inventoryName[_root.save.arenaGloves].indexOf("Demon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Demon Slayer Pants") {
                if (_root.save.inventoryName[_root.save.arenaPants].indexOf("Demon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Demon Slayer Shoes") {
                if (_root.save.inventoryName[_root.save.arenaShoes].indexOf("Demon Slayer") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Pickaxe") {
                if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("Pickaxe") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Alien Weapon") {
                if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("Alien") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Alien Hat") {
                if (_root.save.inventoryName[_root.save.arenaHat].indexOf("Alien") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Alien Shirt") {
                if (_root.save.inventoryName[_root.save.arenaShirt].indexOf("Alien") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Alien Gloves") {
                if (_root.save.inventoryName[_root.save.arenaGloves].indexOf("Alien") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Alien Pants") {
                if (_root.save.inventoryName[_root.save.arenaPants].indexOf("Alien") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Alien Shoes") {
                if (_root.save.inventoryName[_root.save.arenaShoes].indexOf("Alien") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Crystal Hat") {
                if (_root.save.inventoryName[_root.save.arenaHat].indexOf("Crystal") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Crystal Shirt") {
                if (_root.save.inventoryName[_root.save.arenaShirt].indexOf("Crystal") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Crystal Gloves") {
                if (_root.save.inventoryName[_root.save.arenaGloves].indexOf("Crystal") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Crystal Pants") {
                if (_root.save.inventoryName[_root.save.arenaPants].indexOf("Crystal") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Crystal Shoes") {
                if (_root.save.inventoryName[_root.save.arenaShoes].indexOf("Crystal") != -1) {
                    equipped = true;
                }
            }
            if (tempName == "Any Rank 200+ Weapon") {
                if (_root.save.inventoryReqRank[_root.save.arenaWeapon] >= 200) {
                    equipped = true;
                }
            }
            if (tempName == "Any Rank 300+ Weapon") {
                if (_root.save.inventoryReqRank[_root.save.arenaWeapon] >= 300) {
                    equipped = true;
                }
            }
            if (tempName == "Any Rank 400+ Weapon") {
                if (_root.save.inventoryReqRank[_root.save.arenaWeapon] >= 400) {
                    equipped = true;
                }
            }
            if (tempName == "Any Finalized Weapon") {
                if (_root.save.inventoryLevel[_root.save.arenaWeapon] == 9999) {
                    equipped = true;
                }
            }
            if (tempName == "Any Finalized Hat") {
                if (_root.save.inventoryLevel[_root.save.arenaHat] == 9999) {
                    equipped = true;
                }
            }
            if (tempName == "Any Finalized Shirt") {
                if (_root.save.inventoryLevel[_root.save.arenaShirt] == 9999) {
                    equipped = true;
                }
            }
            if (tempName == "Any Finalized Gloves") {
                if (_root.save.inventoryLevel[_root.save.arenaGloves] == 9999) {
                    equipped = true;
                }
            }
            if (tempName == "Any Finalized Pants") {
                if (_root.save.inventoryLevel[_root.save.arenaPants] == 9999) {
                    equipped = true;
                }
            }
            if (tempName == "Any Finalized Shoes") {
                if (_root.save.inventoryLevel[_root.save.arenaShoes] == 9999) {
                    equipped = true;
                }
            }
            if (tempName == "Any Finalized Skin") {
                if (_root.save.inventoryLevel[_root.save.arenaSkin] == 9999) {
                    equipped = true;
                }
            }
            if (tempName == "Invisible X") {
                if (_root.save.arenaAlly == 1) {
                    equipped = true;
                }
            }
            if (tempName == "Apocalypse Mode") {
                if (_root.apocalypse == true) {
                    equipped = true;
                }
            }
            if (tempName == "Rune of Rage") {
                if (_root.save.arenaRuneDuration[3] > 0) {
                    equipped = true;
                }
            }
            if (equipped == true) {
                tempDisp += "\n<font color=\'#FFFF00\'>" + tempName + "</font>";
                equipCount += 1;
            }
            else {
                tempDisp += "\n<font color=\'#CCCCCC\'>" + tempName + "</font>";
            }
            i++;
        }
        tempDisp += "\n\n<font color=\'#CC9900\'><b>Set Bonus</b></font>";
        i = 0;
        while (i <= setArray[setID].bonusStat.length - 1) {
            if (setArray[setID].bonusAmnt[i] == -1) {
                if (setArray[setID].bonusReq[i] == 1) {
                    plu = " item";
                }
                else {
                    plu = " items";
                }
                if (equipCount >= setArray[setID].bonusReq[i]) {
                    tempDisp += "\n<font color=\'#FFFF00\'>[" + setArray[setID].bonusReq[i] + plu + "]" + "</font> <font color=\'#CCFF33\'>" + setArray[setID].bonusStat[i];
                }
                else {
                    tempDisp += "\n<font color=\'#CCCCCC\'>[" + setArray[setID].bonusReq[i] + plu + "]" + "</font> <font color=\'#BBBBBB\'>" + setArray[setID].bonusStat[i];
                }
            }
            else {
                if (setArray[setID].bonusReq[i] == 1) {
                    plu = " item";
                }
                else {
                    plu = " items";
                }
                if (equipCount >= setArray[setID].bonusReq[i]) {
                    tempDisp += "\n<font color=\'#FFFF00\'>[" + setArray[setID].bonusReq[i] + plu + "]" + "</font> <font color=\'#CCFF33\'>" + setArray[setID].bonusStat[i] + " <b>+" + setArray[setID].bonusAmnt[i] + "%</b>";
                }
                else {
                    tempDisp += "\n<font color=\'#CCCCCC\'>[" + setArray[setID].bonusReq[i] + plu + "]" + "</font> <font color=\'#BBBBBB\'>" + setArray[setID].bonusStat[i] + " <b>+" + setArray[setID].bonusAmnt[i] + "%</b>";
                }
            }
            i++;
        }
        return tempDisp;
    }
    function checkSetBonus() {
        let setArray = _root.setArray;
        i = 1;
        while (i <= setArray.length - 1) {
            _root.setCount[i] = 0;
            i++;
        }
        _root.setHighest = 0;
        _root.setCount[_root.save.inventorySet[_root.save.arenaWeapon]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaHat]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaShirt]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaGloves]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaPants]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaShoes]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaSkin]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaMedal]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaPendant]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaEarring]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaTrinket]] += 1;
        _root.setCount[_root.save.inventorySet[_root.save.arenaSubWeapon]] += 1;
        if (_root.save.inventoryName[_root.save.arenaTrinket] == "Gem of Constancy") {
            if (_root.save.inventoryLevel[_root.save.arenaWeapon] == 9999) {
                _root.setCount[1] += 1;
            }
            if (_root.save.inventoryLevel[_root.save.arenaHat] == 9999) {
                _root.setCount[1] += 1;
            }
            if (_root.save.inventoryLevel[_root.save.arenaShirt] == 9999) {
                _root.setCount[1] += 1;
            }
            if (_root.save.inventoryLevel[_root.save.arenaGloves] == 9999) {
                _root.setCount[1] += 1;
            }
            if (_root.save.inventoryLevel[_root.save.arenaPants] == 9999) {
                _root.setCount[1] += 1;
            }
            if (_root.save.inventoryLevel[_root.save.arenaShoes] == 9999) {
                _root.setCount[1] += 1;
            }
            if (_root.save.inventoryLevel[_root.save.arenaSkin] == 9999) {
                _root.setCount[1] += 1;
            }
        }
        if (_root.save.inventoryName[_root.save.arenaTrinket] == "Empowering Gem") {
            if (_root.save.inventoryReqRank[_root.save.arenaWeapon] >= 200) {
                _root.setCount[2] += 1;
            }
            if (_root.save.inventoryReqRank[_root.save.arenaWeapon] >= 300) {
                _root.setCount[2] += 1;
            }
            if (_root.save.inventoryReqRank[_root.save.arenaWeapon] >= 400) {
                _root.setCount[2] += 1;
            }
        }
        if (_root.save.inventoryName[_root.save.arenaWeapon].indexOf("Pickaxe") != -1) {
            if (_root.save.inventoryName[_root.save.arenaHat].indexOf("Crystal") != -1) {
                _root.setCount[3] += 1;
            }
            if (_root.save.inventoryName[_root.save.arenaShirt].indexOf("Crystal") != -1) {
                _root.setCount[3] += 1;
            }
            if (_root.save.inventoryName[_root.save.arenaGloves].indexOf("Crystal") != -1) {
                _root.setCount[3] += 1;
            }
            if (_root.save.inventoryName[_root.save.arenaPants].indexOf("Crystal") != -1) {
                _root.setCount[3] += 1;
            }
            if (_root.save.inventoryName[_root.save.arenaShoes].indexOf("Crystal") != -1) {
                _root.setCount[3] += 1;
            }
        }
        if (_root.setCount[48] > 0 && _root.apocalypse == true) {
            _root.setCount[48] += 1;
        }
        if (_root.setCount[64] > 0 && _root.apocalypse == true) {
            _root.setCount[64] += 1;
        }
        if (_root.setCount[70] > 0 && _root.save.arenaAlly == 1) {
            _root.setCount[70] += 1;
        }
        if (_root.setCount[75] > 0 && _root.save.arenaRuneDuration[3] > 0) {
            _root.setCount[75] += 1;
        }
        _root.setExpBonus = 0;
        _root.setCoinBonus = 0;
        _root.setPixelBonus = 0;
        _root.setDropBonus = 0;
        _root.setSpawnBonus = 0;
        _root.setDamageBonus = 0;
        _root.setDefenseBonus = 0;
        _root.setAccuracyBonus = 0;
        _root.setEvasionBonus = 0;
        _root.setHealthBonus = 0;
        _root.setManaBonus = 0;
        _root.setSpeedBonus = 0;
        _root.setRareBonus = 0;
        _root.setEpicBonus = 0;
        i = 1;
        while (i <= setArray.length - 1) {
            if (_root.setCount[i] > 0) {
                tmpItemCount = _root.setCount[i];
                if (i == 48 && _root.setCount[48] > 0 && _root.apocalypse == true) {
                    tmpItemCount -= 1;
                }
                if (i == 64 && _root.setCount[64] > 0 && _root.apocalypse == true) {
                    tmpItemCount -= 1;
                }
                if (i == 70 && _root.setCount[70] > 0 && _root.save.arenaAlly == 1) {
                    tmpItemCount -= 1;
                }
                if (_root.setHighest < tmpItemCount) {
                    _root.setHighest = tmpItemCount;
                }
                k = 0;
                while (k <= setArray[i].bonusStat.length - 1) {
                    if (_root.setCount[i] >= setArray[i].bonusReq[k]) {
                        if (setArray[i].bonusStat[k] == "EXP") {
                            _root.setExpBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Coin") {
                            _root.setCoinBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Pixel") {
                            _root.setPixelBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Drop Rate") {
                            _root.setDropBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Spawn Rate") {
                            _root.setSpawnBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Damage") {
                            _root.setDamageBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Defense") {
                            _root.setDefenseBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Accuracy") {
                            _root.setAccuracyBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Evasion") {
                            _root.setEvasionBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "MaxHP") {
                            _root.setHealthBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "MaxMP") {
                            _root.setManaBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Attack Speed") {
                            _root.setSpeedBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Rare Monster Rate") {
                            _root.setRareBonus += setArray[i].bonusAmnt[k];
                        }
                        else if (setArray[i].bonusStat[k] == "Epic Monster Rate") {
                            _root.setEpicBonus += setArray[i].bonusAmnt[k];
                        }
                    }
                    k++;
                }
            }
            i++;
        }
    }
    function previewFusedWeapon(reqRank, subtype, frame, range, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, name, desc, guard) {
        k = 1331;
        if (noBonus == undefined) {
            noBonus = false;
        }
        if (noLife == undefined) {
            noLife = true;
        }
        if (noFuse == undefined) {
            noFuse = false;
        }
        if (noUnique == undefined) {
            noUnique = false;
        }
        if (spirit == undefined) {
            spirit = false;
        }
        if (guard == undefined) {
            guard = false;
        }
        if (isNaN(level)) {
            level = 1;
            _root.breakNews("[Error]", "ERROR: " + name + " / [level] not defined.", 16711680, 9002);
        }
        if (isNaN(exp)) {
            exp = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [exp] not defined.", 16711680, 9002);
        }
        if (isNaN(crit)) {
            crit = 10;
            dexterity = 0;
            health = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [crit] not defined.", 16711680, 9002);
        }
        if (isNaN(unob)) {
            unob = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [unob] not defined.", 16711680, 9002);
        }
        let itemSet = _root.checkArenaSet(name);
        if (moreBonus == undefined) {
            moreBonus = "";
            _root.breakNews("[Error]", "ERROR: " + name + " / [moreBonus] not defined.", 16711680, 9002);
        }
        if (desc == undefined) {
            desc = "";
            _root.breakNews("[Error]", "ERROR: " + name + " / [desc] not defined.", 16711680, 9002);
        }
        _root.save.inventoryExist[k] = 1;
        _root.save.inventoryName[k] = name;
        _root.save.inventoryReqRank[k] = reqRank;
        _root.save.inventoryType[k] = "Weapon";
        _root.save.inventorySubtype[k] = subtype;
        _root.save.inventoryFrame[k] = frame;
        _root.save.inventoryRange[k] = range;
        _root.save.inventoryAttack[k] = attack;
        _root.save.inventorySpeed[k] = speed;
        _root.save.inventoryDefense[k] = defense;
        _root.save.inventoryBonus[k] = bonus;
        _root.save.inventoryAbility[k] = ability;
        _root.save.inventoryMoreBonus[k] = moreBonus;
        _root.save.inventoryLevel[k] = level;
        _root.save.inventoryMaxLevel[k] = maxLevel;
        _root.save.inventoryExp[k] = exp;
        _root.save.inventoryExpTNL[k] = expTNL;
        _root.save.inventoryEnhance[k] = enhance;
        _root.save.inventoryBonusPow[k] = bonusPow;
        _root.save.inventorySell[k] = sell;
        _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
        if (noLife == false) {
            _root.save.inventoryExpiry[k] = Infinity;
        }
        _root.save.inventoryObtainTime[k] = _root.systemtimenow;
        _root.save.inventoryDesc[k] = desc;
        _root.save.inventoryCrit[k] = crit;
        _root.save.inventoryDexterity[k] = dexterity;
        _root.save.inventoryHealth[k] = health;
        _root.save.inventoryNoBonus[k] = noBonus;
        _root.save.inventoryNoFuse[k] = noFuse;
        _root.save.inventoryNoUnique[k] = noUnique;
        _root.save.inventorySpirit[k] = spirit;
        _root.save.inventoryGuard[k] = guard;
        _root.save.inventoryUnob[k] = unob;
        _root.save.inventorySet[k] = itemSet;
        if (_root.save.inventoryBonus[k] == "Random") {
            bonusToGet = random(22) + 1;
            if (bonusToGet == 1 || bonusToGet == 2) {
                _root.save.inventoryBonus[k] = "Reward";
            }
            if (bonusToGet == 3 || bonusToGet == 4) {
                _root.save.inventoryBonus[k] = "EXP";
            }
            if (bonusToGet == 5 || bonusToGet == 6) {
                _root.save.inventoryBonus[k] = "Coin";
            }
            if (bonusToGet == 7 || bonusToGet == 8) {
                _root.save.inventoryBonus[k] = "Pixel";
            }
            if (bonusToGet == 9 || bonusToGet == 10) {
                _root.save.inventoryBonus[k] = "Drop Rate";
            }
            if (bonusToGet == 11 || bonusToGet == 12) {
                _root.save.inventoryBonus[k] = "Spawn Rate";
            }
            if (bonusToGet == 13) {
                _root.save.inventoryBonus[k] = "Fire Element";
            }
            if (bonusToGet == 14) {
                _root.save.inventoryBonus[k] = "Ice Element";
            }
            if (bonusToGet == 15) {
                _root.save.inventoryBonus[k] = "Wind Element";
            }
            if (bonusToGet == 16) {
                _root.save.inventoryBonus[k] = "Earth Element";
            }
            if (bonusToGet == 17) {
                _root.save.inventoryBonus[k] = "Thunder Element";
            }
            if (bonusToGet == 18) {
                _root.save.inventoryBonus[k] = "Water Element";
            }
            if (bonusToGet == 19) {
                _root.save.inventoryBonus[k] = "Light Element";
            }
            if (bonusToGet == 20) {
                _root.save.inventoryBonus[k] = "Dark Element";
            }
            if (bonusToGet == 21) {
                _root.save.inventoryBonus[k] = "Rare Monster Rate";
            }
            if (bonusToGet == 22) {
                _root.save.inventoryBonus[k] = "Epic Monster Rate";
            }
            if (_root.save.arenaBonusPreference1 != "None" && Math.random() < 0.2) {
                _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference1;
            }
            else if (_root.save.arenaBonusPreference2 != "None" && Math.random() < 0.07) {
                _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference2;
            }
        }
        if (_root.save.inventoryAbility[k] == "Random") {
            bonusToGet = random(47) + 1;
            if (bonusToGet == 1) {
                _root.save.inventoryAbility[k] = "Attack";
            }
            if (bonusToGet == 2) {
                _root.save.inventoryAbility[k] = "Attack Speed";
            }
            if (bonusToGet == 3) {
                _root.save.inventoryAbility[k] = "Ignore Defense";
            }
            if (bonusToGet == 4) {
                _root.save.inventoryAbility[k] = "Mastery";
            }
            if (bonusToGet == 5) {
                _root.save.inventoryAbility[k] = "Critical Chance";
            }
            if (bonusToGet == 6) {
                _root.save.inventoryAbility[k] = "Critical Damage";
            }
            if (bonusToGet == 7) {
                _root.save.inventoryAbility[k] = "Defense";
            }
            if (bonusToGet == 8) {
                _root.save.inventoryAbility[k] = "Damage Taken";
            }
            if (bonusToGet == 9) {
                _root.save.inventoryAbility[k] = "Reflect";
            }
            if (bonusToGet == 10) {
                _root.save.inventoryAbility[k] = "Accuracy";
            }
            if (bonusToGet == 11) {
                _root.save.inventoryAbility[k] = "Hit Chance";
            }
            if (bonusToGet == 12) {
                _root.save.inventoryAbility[k] = "Evasion";
            }
            if (bonusToGet == 13) {
                _root.save.inventoryAbility[k] = "Dodge Chance";
            }
            if (bonusToGet == 14) {
                _root.save.inventoryAbility[k] = "Poison Chance";
            }
            if (bonusToGet == 15) {
                _root.save.inventoryAbility[k] = "Weaken Chance";
            }
            if (bonusToGet == 16) {
                _root.save.inventoryAbility[k] = "Blind Chance";
            }
            if (bonusToGet == 17) {
                _root.save.inventoryAbility[k] = "Stun Chance";
            }
            if (bonusToGet == 18) {
                _root.save.inventoryAbility[k] = "HP";
            }
            if (bonusToGet == 19) {
                _root.save.inventoryAbility[k] = "MP";
            }
            if (bonusToGet == 20) {
                _root.save.inventoryAbility[k] = "HP Regen";
            }
            if (bonusToGet == 21) {
                _root.save.inventoryAbility[k] = "MP Regen";
            }
            if (bonusToGet == 22) {
                _root.save.inventoryAbility[k] = "Rage Depletion";
            }
            if (bonusToGet == 23) {
                _root.save.inventoryAbility[k] = "Drain";
            }
            if (bonusToGet == 24) {
                _root.save.inventoryAbility[k] = "Mana Eater";
            }
            if (bonusToGet == 25) {
                _root.save.inventoryAbility[k] = "Autosteal";
            }
            if (bonusToGet == 26) {
                _root.save.inventoryAbility[k] = "Double Hit Chance";
            }
            if (bonusToGet == 27) {
                _root.save.inventoryAbility[k] = "Rage Attack";
            }
            if (bonusToGet == 28) {
                _root.save.inventoryAbility[k] = "Rage Speed";
            }
            if (bonusToGet == 29) {
                _root.save.inventoryAbility[k] = "Poison Damage";
            }
            if (bonusToGet == 30) {
                _root.save.inventoryAbility[k] = "Poison Duration";
            }
            if (bonusToGet == 31) {
                _root.save.inventoryAbility[k] = "Weaken Effect";
            }
            if (bonusToGet == 32) {
                _root.save.inventoryAbility[k] = "Weaken Duration";
            }
            if (bonusToGet == 33) {
                _root.save.inventoryAbility[k] = "Blind Effect";
            }
            if (bonusToGet == 34) {
                _root.save.inventoryAbility[k] = "Blind Duration";
            }
            if (bonusToGet == 35) {
                _root.save.inventoryAbility[k] = "Potion Efficiency";
            }
            if (bonusToGet == 36) {
                _root.save.inventoryAbility[k] = "Boss Damage";
            }
            if (bonusToGet == 37) {
                _root.save.inventoryAbility[k] = "Magic Resist";
            }
            if (bonusToGet == 38) {
                _root.save.inventoryAbility[k] = "Instant Kill";
            }
            if (bonusToGet == 39) {
                _root.save.inventoryAbility[k] = "Negate Effect";
            }
            if (bonusToGet == 40) {
                _root.save.inventoryAbility[k] = "Non-Boss Damage";
            }
            if (bonusToGet == 41) {
                _root.save.inventoryAbility[k] = "Damage";
            }
            if (bonusToGet == 42) {
                _root.save.inventoryAbility[k] = "Extra Combo";
            }
            if (bonusToGet == 43) {
                _root.save.inventoryAbility[k] = "Magic Reflect";
            }
            if (bonusToGet == 44) {
                _root.save.inventoryAbility[k] = "Nullify Death Penalty";
            }
            if (bonusToGet == 45) {
                _root.save.inventoryAbility[k] = "Buff Effect";
            }
            if (bonusToGet == 46) {
                _root.save.inventoryAbility[k] = "All Elements";
            }
            if (bonusToGet == 47) {
                _root.save.inventoryAbility[k] = "Max Spirit";
            }
            if (_root.save.arenaAbilityPreference1 != "None" && Math.random() < 0.2) {
                _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference1;
            }
            else if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.1) {
                _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
            }
            else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.05) {
                _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
            }
        }
        if (_root.save.inventoryMoreBonus[k] == "Random") {
            bonusToGet = random(11) + 1;
            if (bonusToGet == 1) {
                _root.save.inventoryMoreBonus[k] = "Equipment Attack";
            }
            if (bonusToGet == 2) {
                _root.save.inventoryMoreBonus[k] = "Equipment Defense";
            }
            if (bonusToGet == 3) {
                _root.save.inventoryMoreBonus[k] = "Attack Power";
            }
            if (bonusToGet == 4) {
                _root.save.inventoryMoreBonus[k] = "Defense Power";
            }
            if (bonusToGet == 5) {
                _root.save.inventoryMoreBonus[k] = "MaxHP";
            }
            if (bonusToGet == 6) {
                _root.save.inventoryMoreBonus[k] = "MaxMP";
            }
            if (bonusToGet == 7) {
                _root.save.inventoryMoreBonus[k] = "Accuracy";
            }
            if (bonusToGet == 8) {
                _root.save.inventoryMoreBonus[k] = "Evasion";
            }
            if (bonusToGet == 9) {
                _root.save.inventoryMoreBonus[k] = "EXP / Boss Kill";
            }
            if (bonusToGet == 10) {
                _root.save.inventoryMoreBonus[k] = "EXP / Rare Kill";
            }
            if (bonusToGet == 11) {
                _root.save.inventoryMoreBonus[k] = "EXP / Epic Kill";
            }
            if (_root.save.arenaMoreBonusPreference1 != "None" && Math.random() < 0.2) {
                _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference1;
            }
            else if (_root.save.arenaMoreBonusPreference2 != "None" && Math.random() < 0.07) {
                _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference2;
            }
        }
    }
    function previewFusedArmor(reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, name, desc, guard) {
        k = 1331;
        if (noBonus == undefined) {
            noBonus = false;
        }
        if (noLife == undefined) {
            noLife = true;
        }
        if (noFuse == undefined) {
            noFuse = false;
        }
        if (noUnique == undefined) {
            noUnique = false;
        }
        if (spirit == undefined) {
            spirit = false;
        }
        if (guard == undefined) {
            guard = false;
        }
        if (isNaN(level)) {
            level = 1;
            _root.breakNews("[Error]", "ERROR: " + name + " / [level] not defined.", 16711680, 9002);
        }
        if (isNaN(exp)) {
            exp = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [exp] not defined.", 16711680, 9002);
        }
        if (isNaN(crit)) {
            crit = 10;
            dexterity = 0;
            health = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [crit] not defined.", 16711680, 9002);
        }
        if (isNaN(unob)) {
            unob = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [unob] not defined.", 16711680, 9002);
        }
        let itemSet = _root.checkArenaSet(name);
        if (moreBonus == undefined) {
            moreBonus = "";
            _root.breakNews("[Error]", "ERROR: " + name + " / [moreBonus] not defined.", 16711680, 9002);
        }
        if (desc == undefined) {
            desc = "";
            _root.breakNews("[Error]", "ERROR: " + name + " / [desc] not defined.", 16711680, 9002);
        }
        _root.save.inventoryExist[k] = 1;
        _root.save.inventoryName[k] = name;
        _root.save.inventoryReqRank[k] = reqRank;
        _root.save.inventoryType[k] = "Armor";
        _root.save.inventorySubtype[k] = subtype;
        _root.save.inventoryFrame[k] = frame;
        _root.save.inventoryRange[k] = false;
        _root.save.inventoryAttack[k] = attack;
        _root.save.inventorySpeed[k] = speed;
        _root.save.inventoryDefense[k] = defense;
        _root.save.inventoryBonus[k] = bonus;
        _root.save.inventoryAbility[k] = ability;
        _root.save.inventoryMoreBonus[k] = moreBonus;
        _root.save.inventoryLevel[k] = level;
        _root.save.inventoryMaxLevel[k] = maxLevel;
        _root.save.inventoryExp[k] = exp;
        _root.save.inventoryExpTNL[k] = expTNL;
        _root.save.inventoryEnhance[k] = enhance;
        _root.save.inventoryBonusPow[k] = bonusPow;
        _root.save.inventorySell[k] = sell;
        _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
        if (noLife == false) {
            _root.save.inventoryExpiry[k] = Infinity;
        }
        _root.save.inventoryObtainTime[k] = _root.systemtimenow;
        _root.save.inventoryDesc[k] = desc;
        _root.save.inventoryCrit[k] = crit;
        _root.save.inventoryDexterity[k] = dexterity;
        _root.save.inventoryHealth[k] = health;
        _root.save.inventoryNoBonus[k] = noBonus;
        _root.save.inventoryNoFuse[k] = noFuse;
        _root.save.inventoryNoUnique[k] = noUnique;
        _root.save.inventorySpirit[k] = spirit;
        _root.save.inventoryGuard[k] = guard;
        _root.save.inventoryUnob[k] = unob;
        _root.save.inventorySet[k] = itemSet;
        if (_root.save.inventoryBonus[k] == "Random") {
            bonusToGet = random(15) + 1;
            if (Math.random() < 0.2) {
                bonusToGet = random(22) + 1;
            }
            if (bonusToGet == 1 || bonusToGet == 2) {
                _root.save.inventoryBonus[k] = "Reward";
            }
            if (bonusToGet == 3 || bonusToGet == 4) {
                _root.save.inventoryBonus[k] = "EXP";
            }
            if (bonusToGet == 5 || bonusToGet == 6) {
                _root.save.inventoryBonus[k] = "Coin";
            }
            if (bonusToGet == 7 || bonusToGet == 8) {
                _root.save.inventoryBonus[k] = "Pixel";
            }
            if (bonusToGet == 9 || bonusToGet == 10) {
                _root.save.inventoryBonus[k] = "Drop Rate";
            }
            if (bonusToGet == 11 || bonusToGet == 12) {
                _root.save.inventoryBonus[k] = "Spawn Rate";
            }
            if (bonusToGet == 13) {
                _root.save.inventoryBonus[k] = "Fire Element";
            }
            if (bonusToGet == 14) {
                _root.save.inventoryBonus[k] = "Ice Element";
            }
            if (bonusToGet == 15) {
                _root.save.inventoryBonus[k] = "Wind Element";
            }
            if (bonusToGet == 16) {
                _root.save.inventoryBonus[k] = "Earth Element";
            }
            if (bonusToGet == 17) {
                _root.save.inventoryBonus[k] = "Thunder Element";
            }
            if (bonusToGet == 18) {
                _root.save.inventoryBonus[k] = "Water Element";
            }
            if (bonusToGet == 19) {
                _root.save.inventoryBonus[k] = "Light Element";
            }
            if (bonusToGet == 20) {
                _root.save.inventoryBonus[k] = "Dark Element";
            }
            if (bonusToGet == 21) {
                _root.save.inventoryBonus[k] = "Rare Monster Rate";
            }
            if (bonusToGet == 22) {
                _root.save.inventoryBonus[k] = "Epic Monster Rate";
            }
            if (_root.save.arenaBonusPreference1 != "None" && Math.random() < 0.2) {
                _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference1;
            }
            else if (_root.save.arenaBonusPreference2 != "None" && Math.random() < 0.07) {
                _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference2;
            }
        }
        if (_root.save.inventoryAbility[k] == "Random") {
            bonusToGet = random(25) + 1;
            if (bonusToGet == 1) {
                _root.save.inventoryAbility[k] = "Attack";
            }
            if (bonusToGet == 2) {
                _root.save.inventoryAbility[k] = "Attack Speed";
            }
            if (bonusToGet == 3) {
                _root.save.inventoryAbility[k] = "Ignore Defense";
            }
            if (bonusToGet == 4) {
                _root.save.inventoryAbility[k] = "Mastery";
            }
            if (bonusToGet == 5) {
                _root.save.inventoryAbility[k] = "Critical Chance";
            }
            if (bonusToGet == 6) {
                _root.save.inventoryAbility[k] = "Critical Damage";
            }
            if (bonusToGet == 7) {
                _root.save.inventoryAbility[k] = "Defense";
            }
            if (bonusToGet == 8) {
                _root.save.inventoryAbility[k] = "Damage Taken";
            }
            if (bonusToGet == 9) {
                _root.save.inventoryAbility[k] = "Reflect";
            }
            if (bonusToGet == 10) {
                _root.save.inventoryAbility[k] = "Accuracy";
            }
            if (bonusToGet == 11) {
                _root.save.inventoryAbility[k] = "Hit Chance";
            }
            if (bonusToGet == 12) {
                _root.save.inventoryAbility[k] = "Evasion";
            }
            if (bonusToGet == 13) {
                _root.save.inventoryAbility[k] = "Dodge Chance";
            }
            if (bonusToGet == 14) {
                _root.save.inventoryAbility[k] = "Poison Chance";
            }
            if (bonusToGet == 15) {
                _root.save.inventoryAbility[k] = "Weaken Chance";
            }
            if (bonusToGet == 16) {
                _root.save.inventoryAbility[k] = "Blind Chance";
            }
            if (bonusToGet == 17) {
                _root.save.inventoryAbility[k] = "Stun Chance";
            }
            if (bonusToGet == 18) {
                _root.save.inventoryAbility[k] = "HP";
            }
            if (bonusToGet == 19) {
                _root.save.inventoryAbility[k] = "MP";
            }
            if (bonusToGet == 20) {
                _root.save.inventoryAbility[k] = "HP Regen";
            }
            if (bonusToGet == 21) {
                _root.save.inventoryAbility[k] = "MP Regen";
            }
            if (bonusToGet == 22) {
                _root.save.inventoryAbility[k] = "Rage Depletion";
            }
            if (bonusToGet == 23) {
                _root.save.inventoryAbility[k] = "Drain";
            }
            if (bonusToGet == 24) {
                _root.save.inventoryAbility[k] = "Mana Eater";
            }
            if (bonusToGet == 25) {
                _root.save.inventoryAbility[k] = "Autosteal";
            }
            if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.2) {
                _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
            }
            else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.07) {
                _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
            }
        }
        if (_root.save.inventoryMoreBonus[k] == "Random") {
            bonusToGet = random(11) + 1;
            if (bonusToGet == 1) {
                _root.save.inventoryMoreBonus[k] = "Equipment Attack";
            }
            if (bonusToGet == 2) {
                _root.save.inventoryMoreBonus[k] = "Equipment Defense";
            }
            if (bonusToGet == 3) {
                _root.save.inventoryMoreBonus[k] = "Attack Power";
            }
            if (bonusToGet == 4) {
                _root.save.inventoryMoreBonus[k] = "Defense Power";
            }
            if (bonusToGet == 5) {
                _root.save.inventoryMoreBonus[k] = "MaxHP";
            }
            if (bonusToGet == 6) {
                _root.save.inventoryMoreBonus[k] = "MaxMP";
            }
            if (bonusToGet == 7) {
                _root.save.inventoryMoreBonus[k] = "Accuracy";
            }
            if (bonusToGet == 8) {
                _root.save.inventoryMoreBonus[k] = "Evasion";
            }
            if (bonusToGet == 9) {
                _root.save.inventoryMoreBonus[k] = "EXP / Boss Kill";
            }
            if (bonusToGet == 10) {
                _root.save.inventoryMoreBonus[k] = "EXP / Rare Kill";
            }
            if (bonusToGet == 11) {
                _root.save.inventoryMoreBonus[k] = "EXP / Epic Kill";
            }
            if (_root.save.arenaMoreBonusPreference1 != "None" && Math.random() < 0.2) {
                _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference1;
            }
            else if (_root.save.arenaMoreBonusPreference2 != "None" && Math.random() < 0.07) {
                _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference2;
            }
        }
    }
    function previewFusedAccessory(reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, name, desc, guard) {
        k = 1331;
        if (noBonus == undefined) {
            noBonus = false;
        }
        if (noLife == undefined) {
            noLife = true;
        }
        if (noFuse == undefined) {
            noFuse = false;
        }
        if (noUnique == undefined) {
            noUnique = false;
        }
        if (spirit == undefined) {
            spirit = false;
        }
        if (guard == undefined) {
            guard = false;
        }
        if (isNaN(level)) {
            level = 1;
            _root.breakNews("[Error]", "ERROR: " + name + " / [level] not defined.", 16711680, 9002);
        }
        if (isNaN(exp)) {
            exp = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [exp] not defined.", 16711680, 9002);
        }
        if (isNaN(crit)) {
            crit = 10;
            dexterity = 0;
            health = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [crit] not defined.", 16711680, 9002);
        }
        if (isNaN(unob)) {
            unob = 0;
            _root.breakNews("[Error]", "ERROR: " + name + " / [unob] not defined.", 16711680, 9002);
        }
        let itemSet = _root.checkArenaSet(name);
        if (moreBonus == undefined) {
            moreBonus = "";
            _root.breakNews("[Error]", "ERROR: " + name + " / [moreBonus] not defined.", 16711680, 9002);
        }
        if (desc == undefined) {
            desc = "";
            _root.breakNews("[Error]", "ERROR: " + name + " / [desc] not defined.", 16711680, 9002);
        }
        _root.save.inventoryExist[k] = 1;
        _root.save.inventoryName[k] = name;
        _root.save.inventoryReqRank[k] = reqRank;
        _root.save.inventoryType[k] = "Armor";
        _root.save.inventorySubtype[k] = subtype;
        _root.save.inventoryFrame[k] = frame;
        _root.save.inventoryRange[k] = false;
        _root.save.inventoryAttack[k] = attack;
        _root.save.inventorySpeed[k] = speed;
        _root.save.inventoryDefense[k] = defense;
        _root.save.inventoryBonus[k] = bonus;
        _root.save.inventoryAbility[k] = ability;
        _root.save.inventoryMoreBonus[k] = moreBonus;
        _root.save.inventoryLevel[k] = level;
        _root.save.inventoryMaxLevel[k] = maxLevel;
        _root.save.inventoryExp[k] = exp;
        _root.save.inventoryExpTNL[k] = expTNL;
        _root.save.inventoryEnhance[k] = enhance;
        _root.save.inventoryBonusPow[k] = bonusPow;
        _root.save.inventorySell[k] = sell;
        _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
        if (noLife == false) {
            _root.save.inventoryExpiry[k] = Infinity;
        }
        _root.save.inventoryObtainTime[k] = _root.systemtimenow;
        _root.save.inventoryDesc[k] = desc;
        _root.save.inventoryCrit[k] = crit;
        _root.save.inventoryDexterity[k] = dexterity;
        _root.save.inventoryHealth[k] = health;
        _root.save.inventoryNoBonus[k] = noBonus;
        _root.save.inventoryNoFuse[k] = noFuse;
        _root.save.inventoryNoUnique[k] = noUnique;
        _root.save.inventorySpirit[k] = spirit;
        _root.save.inventoryGuard[k] = guard;
        _root.save.inventoryUnob[k] = unob;
        _root.save.inventorySet[k] = itemSet;
        if (_root.save.inventoryBonus[k] == "Random") {
            bonusToGet = random(15) + 1;
            if (Math.random() < 0.2) {
                bonusToGet = random(22) + 1;
            }
            if (bonusToGet == 1 || bonusToGet == 2) {
                _root.save.inventoryBonus[k] = "Reward";
            }
            if (bonusToGet == 3 || bonusToGet == 4) {
                _root.save.inventoryBonus[k] = "EXP";
            }
            if (bonusToGet == 5 || bonusToGet == 6) {
                _root.save.inventoryBonus[k] = "Coin";
            }
            if (bonusToGet == 7 || bonusToGet == 8) {
                _root.save.inventoryBonus[k] = "Pixel";
            }
            if (bonusToGet == 9 || bonusToGet == 10) {
                _root.save.inventoryBonus[k] = "Drop Rate";
            }
            if (bonusToGet == 11 || bonusToGet == 12) {
                _root.save.inventoryBonus[k] = "Spawn Rate";
            }
            if (bonusToGet == 13) {
                _root.save.inventoryBonus[k] = "Fire Element";
            }
            if (bonusToGet == 14) {
                _root.save.inventoryBonus[k] = "Ice Element";
            }
            if (bonusToGet == 15) {
                _root.save.inventoryBonus[k] = "Wind Element";
            }
            if (bonusToGet == 16) {
                _root.save.inventoryBonus[k] = "Earth Element";
            }
            if (bonusToGet == 17) {
                _root.save.inventoryBonus[k] = "Thunder Element";
            }
            if (bonusToGet == 18) {
                _root.save.inventoryBonus[k] = "Water Element";
            }
            if (bonusToGet == 19) {
                _root.save.inventoryBonus[k] = "Light Element";
            }
            if (bonusToGet == 20) {
                _root.save.inventoryBonus[k] = "Dark Element";
            }
            if (bonusToGet == 21) {
                _root.save.inventoryBonus[k] = "Rare Monster Rate";
            }
            if (bonusToGet == 22) {
                _root.save.inventoryBonus[k] = "Epic Monster Rate";
            }
            if (_root.save.arenaBonusPreference1 != "None" && Math.random() < 0.2) {
                _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference1;
            }
            else if (_root.save.arenaBonusPreference2 != "None" && Math.random() < 0.07) {
                _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference2;
            }
        }
        if (_root.save.inventoryAbility[k] == "Random") {
            bonusToGet = random(25) + 1;
            if (bonusToGet == 1) {
                _root.save.inventoryAbility[k] = "Attack";
            }
            if (bonusToGet == 2) {
                _root.save.inventoryAbility[k] = "Attack Speed";
            }
            if (bonusToGet == 3) {
                _root.save.inventoryAbility[k] = "Ignore Defense";
            }
            if (bonusToGet == 4) {
                _root.save.inventoryAbility[k] = "Mastery";
            }
            if (bonusToGet == 5) {
                _root.save.inventoryAbility[k] = "Critical Chance";
            }
            if (bonusToGet == 6) {
                _root.save.inventoryAbility[k] = "Critical Damage";
            }
            if (bonusToGet == 7) {
                _root.save.inventoryAbility[k] = "Defense";
            }
            if (bonusToGet == 8) {
                _root.save.inventoryAbility[k] = "Damage Taken";
            }
            if (bonusToGet == 9) {
                _root.save.inventoryAbility[k] = "Reflect";
            }
            if (bonusToGet == 10) {
                _root.save.inventoryAbility[k] = "Accuracy";
            }
            if (bonusToGet == 11) {
                _root.save.inventoryAbility[k] = "Hit Chance";
            }
            if (bonusToGet == 12) {
                _root.save.inventoryAbility[k] = "Evasion";
            }
            if (bonusToGet == 13) {
                _root.save.inventoryAbility[k] = "Dodge Chance";
            }
            if (bonusToGet == 14) {
                _root.save.inventoryAbility[k] = "Poison Chance";
            }
            if (bonusToGet == 15) {
                _root.save.inventoryAbility[k] = "Weaken Chance";
            }
            if (bonusToGet == 16) {
                _root.save.inventoryAbility[k] = "Blind Chance";
            }
            if (bonusToGet == 17) {
                _root.save.inventoryAbility[k] = "Stun Chance";
            }
            if (bonusToGet == 18) {
                _root.save.inventoryAbility[k] = "HP";
            }
            if (bonusToGet == 19) {
                _root.save.inventoryAbility[k] = "MP";
            }
            if (bonusToGet == 20) {
                _root.save.inventoryAbility[k] = "HP Regen";
            }
            if (bonusToGet == 21) {
                _root.save.inventoryAbility[k] = "MP Regen";
            }
            if (bonusToGet == 22) {
                _root.save.inventoryAbility[k] = "Rage Depletion";
            }
            if (bonusToGet == 23) {
                _root.save.inventoryAbility[k] = "Drain";
            }
            if (bonusToGet == 24) {
                _root.save.inventoryAbility[k] = "Mana Eater";
            }
            if (bonusToGet == 25) {
                _root.save.inventoryAbility[k] = "Autosteal";
            }
            if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.2) {
                _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
            }
            else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.07) {
                _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
            }
        }
        if (_root.save.inventoryMoreBonus[k] == "Random") {
            bonusToGet = random(11) + 1;
            if (bonusToGet == 1) {
                _root.save.inventoryMoreBonus[k] = "Equipment Attack";
            }
            if (bonusToGet == 2) {
                _root.save.inventoryMoreBonus[k] = "Equipment Defense";
            }
            if (bonusToGet == 3) {
                _root.save.inventoryMoreBonus[k] = "Attack Power";
            }
            if (bonusToGet == 4) {
                _root.save.inventoryMoreBonus[k] = "Defense Power";
            }
            if (bonusToGet == 5) {
                _root.save.inventoryMoreBonus[k] = "MaxHP";
            }
            if (bonusToGet == 6) {
                _root.save.inventoryMoreBonus[k] = "MaxMP";
            }
            if (bonusToGet == 7) {
                _root.save.inventoryMoreBonus[k] = "Accuracy";
            }
            if (bonusToGet == 8) {
                _root.save.inventoryMoreBonus[k] = "Evasion";
            }
            if (bonusToGet == 9) {
                _root.save.inventoryMoreBonus[k] = "EXP / Boss Kill";
            }
            if (bonusToGet == 10) {
                _root.save.inventoryMoreBonus[k] = "EXP / Rare Kill";
            }
            if (bonusToGet == 11) {
                _root.save.inventoryMoreBonus[k] = "EXP / Epic Kill";
            }
            if (_root.save.arenaMoreBonusPreference1 != "None" && Math.random() < 0.2) {
                _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference1;
            }
            else if (_root.save.arenaMoreBonusPreference2 != "None" && Math.random() < 0.07) {
                _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference2;
            }
        }
    }
    _root.getArenaWeapon = function getArenaWeapon(reqRank, subtype, frame, range, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, name, desc, guard) {
        let k = 9999;
        let i = 1;
        while (i <= 30) {
            if (_root.save.inventoryExist[i] != 1) {
                if (k > i) {
                    k = i;
                }
            }
            i++;
        }
        if (k == 9999) {
            k = _root.save.arenaDeletedSlot;
            _root.save.arenaDeletedSlot += 1;
            if (_root.save.arenaDeletedSlot > 830) {
                _root.save.arenaDeletedSlot = 801;
            }
            _root.deleteArenaItem(k);
        }
        if (name != undefined) {
            if (noBonus == undefined) {
                noBonus = false;
            }
            if (noLife == undefined) {
                noLife = true;
            }
            if (noFuse == undefined) {
                noFuse = false;
            }
            if (noUnique == undefined) {
                noUnique = false;
            }
            if (spirit == undefined) {
                spirit = false;
            }
            if (guard == undefined) {
                guard = false;
            }
            if (isNaN(level)) {
                level = 1;
                _root.breakNews("[Error]", "ERROR: " + name + " / [level] not defined.", 16711680, 9002);
            }
            if (isNaN(exp)) {
                exp = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [exp] not defined.", 16711680, 9002);
            }
            if (isNaN(crit)) {
                crit = 10;
                dexterity = 0;
                health = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [crit] not defined.", 16711680, 9002);
            }
            if (isNaN(unob)) {
                unob = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [unob] not defined.", 16711680, 9002);
            }
            let itemSet = _root.checkArenaSet(name);
            if (moreBonus == undefined) {
                moreBonus = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [moreBonus] not defined.", 16711680, 9002);
            }
            if (desc == undefined) {
                desc = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [desc] not defined.", 16711680, 9002);
            }
            _root.save.inventoryExist[k] = 1;
            _root.save.inventoryName[k] = name;
            _root.save.inventoryReqRank[k] = reqRank;
            _root.save.inventoryType[k] = "Weapon";
            _root.save.inventorySubtype[k] = subtype;
            _root.save.inventoryFrame[k] = frame;
            _root.save.inventoryRange[k] = range;
            _root.save.inventoryAttack[k] = attack;
            _root.save.inventorySpeed[k] = speed;
            _root.save.inventoryDefense[k] = defense;
            _root.save.inventoryBonus[k] = bonus;
            _root.save.inventoryAbility[k] = ability;
            _root.save.inventoryMoreBonus[k] = moreBonus;
            _root.save.inventoryLevel[k] = level;
            _root.save.inventoryMaxLevel[k] = maxLevel;
            _root.save.inventoryExp[k] = exp;
            _root.save.inventoryExpTNL[k] = expTNL;
            _root.save.inventoryEnhance[k] = enhance;
            _root.save.inventoryBonusPow[k] = bonusPow;
            _root.save.inventorySell[k] = sell;
            _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
            if (noLife == false) {
                _root.save.inventoryExpiry[k] = Infinity;
            }
            _root.save.inventoryObtainTime[k] = _root.systemtimenow;
            _root.save.inventoryDesc[k] = desc;
            _root.save.inventoryCrit[k] = crit;
            _root.save.inventoryDexterity[k] = dexterity;
            _root.save.inventoryHealth[k] = health;
            _root.save.inventoryNoBonus[k] = noBonus;
            _root.save.inventoryNoFuse[k] = noFuse;
            _root.save.inventoryNoUnique[k] = noUnique;
            _root.save.inventorySpirit[k] = spirit;
            _root.save.inventoryGuard[k] = guard;
            _root.save.inventoryUnob[k] = unob;
            _root.save.inventorySet[k] = itemSet;
            if (_root.save.inventoryBonus[k] == "Random") {
                bonusToGet = random(22) + 1;
                if (bonusToGet == 1 || bonusToGet == 2) {
                    _root.save.inventoryBonus[k] = "Reward";
                }
                if (bonusToGet == 3 || bonusToGet == 4) {
                    _root.save.inventoryBonus[k] = "EXP";
                }
                if (bonusToGet == 5 || bonusToGet == 6) {
                    _root.save.inventoryBonus[k] = "Coin";
                }
                if (bonusToGet == 7 || bonusToGet == 8) {
                    _root.save.inventoryBonus[k] = "Pixel";
                }
                if (bonusToGet == 9 || bonusToGet == 10) {
                    _root.save.inventoryBonus[k] = "Drop Rate";
                }
                if (bonusToGet == 11 || bonusToGet == 12) {
                    _root.save.inventoryBonus[k] = "Spawn Rate";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryBonus[k] = "Fire Element";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryBonus[k] = "Ice Element";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryBonus[k] = "Wind Element";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryBonus[k] = "Earth Element";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryBonus[k] = "Thunder Element";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryBonus[k] = "Water Element";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryBonus[k] = "Light Element";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryBonus[k] = "Dark Element";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryBonus[k] = "Rare Monster Rate";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryBonus[k] = "Epic Monster Rate";
                }
                if (_root.save.arenaBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference1;
                }
                else if (_root.save.arenaBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference2;
                }
            }
            if (_root.save.inventoryAbility[k] == "Random") {
                bonusToGet = random(47) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryAbility[k] = "Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryAbility[k] = "Attack Speed";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryAbility[k] = "Ignore Defense";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryAbility[k] = "Mastery";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryAbility[k] = "Critical Chance";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryAbility[k] = "Critical Damage";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryAbility[k] = "Defense";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryAbility[k] = "Damage Taken";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryAbility[k] = "Reflect";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryAbility[k] = "Accuracy";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryAbility[k] = "Hit Chance";
                }
                if (bonusToGet == 12) {
                    _root.save.inventoryAbility[k] = "Evasion";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryAbility[k] = "Dodge Chance";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryAbility[k] = "Poison Chance";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryAbility[k] = "Weaken Chance";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryAbility[k] = "Blind Chance";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryAbility[k] = "Stun Chance";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryAbility[k] = "HP";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryAbility[k] = "MP";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryAbility[k] = "HP Regen";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryAbility[k] = "MP Regen";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryAbility[k] = "Rage Depletion";
                }
                if (bonusToGet == 23) {
                    _root.save.inventoryAbility[k] = "Drain";
                }
                if (bonusToGet == 24) {
                    _root.save.inventoryAbility[k] = "Mana Eater";
                }
                if (bonusToGet == 25) {
                    _root.save.inventoryAbility[k] = "Autosteal";
                }
                if (bonusToGet == 26) {
                    _root.save.inventoryAbility[k] = "Double Hit Chance";
                }
                if (bonusToGet == 27) {
                    _root.save.inventoryAbility[k] = "Rage Attack";
                }
                if (bonusToGet == 28) {
                    _root.save.inventoryAbility[k] = "Rage Speed";
                }
                if (bonusToGet == 29) {
                    _root.save.inventoryAbility[k] = "Poison Damage";
                }
                if (bonusToGet == 30) {
                    _root.save.inventoryAbility[k] = "Poison Duration";
                }
                if (bonusToGet == 31) {
                    _root.save.inventoryAbility[k] = "Weaken Effect";
                }
                if (bonusToGet == 32) {
                    _root.save.inventoryAbility[k] = "Weaken Duration";
                }
                if (bonusToGet == 33) {
                    _root.save.inventoryAbility[k] = "Blind Effect";
                }
                if (bonusToGet == 34) {
                    _root.save.inventoryAbility[k] = "Blind Duration";
                }
                if (bonusToGet == 35) {
                    _root.save.inventoryAbility[k] = "Potion Efficiency";
                }
                if (bonusToGet == 36) {
                    _root.save.inventoryAbility[k] = "Boss Damage";
                }
                if (bonusToGet == 37) {
                    _root.save.inventoryAbility[k] = "Magic Resist";
                }
                if (bonusToGet == 38) {
                    _root.save.inventoryAbility[k] = "Instant Kill";
                }
                if (bonusToGet == 39) {
                    _root.save.inventoryAbility[k] = "Negate Effect";
                }
                if (bonusToGet == 40) {
                    _root.save.inventoryAbility[k] = "Non-Boss Damage";
                }
                if (bonusToGet == 41) {
                    _root.save.inventoryAbility[k] = "Damage";
                }
                if (bonusToGet == 42) {
                    _root.save.inventoryAbility[k] = "Extra Combo";
                }
                if (bonusToGet == 43) {
                    _root.save.inventoryAbility[k] = "Magic Reflect";
                }
                if (bonusToGet == 44) {
                    _root.save.inventoryAbility[k] = "Nullify Death Penalty";
                }
                if (bonusToGet == 45) {
                    _root.save.inventoryAbility[k] = "Buff Effect";
                }
                if (bonusToGet == 46) {
                    _root.save.inventoryAbility[k] = "All Elements";
                }
                if (bonusToGet == 47) {
                    _root.save.inventoryAbility[k] = "Max Spirit";
                }
                if (_root.save.arenaAbilityPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference1;
                }
                else if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.1) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
                }
                else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.05) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
                }
            }
            if (_root.save.inventoryMoreBonus[k] == "Random") {
                bonusToGet = random(11) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Defense";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryMoreBonus[k] = "Attack Power";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryMoreBonus[k] = "Defense Power";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryMoreBonus[k] = "MaxHP";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryMoreBonus[k] = "MaxMP";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryMoreBonus[k] = "Accuracy";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryMoreBonus[k] = "Evasion";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Boss Kill";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Rare Kill";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Epic Kill";
                }
                if (_root.save.arenaMoreBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference1;
                }
                else if (_root.save.arenaMoreBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference2;
                }
            }
            if (k <= 30) {
                dispNews(49, "Weapon GET! [" + name + "]");
            }
            else {
                dispNews(55, "Weapon inventory full! [" + name + "] moved to Recently Deleted tab.");
            }
        }
        else {
            dispNews(55, "Weapon inventory full! [" + name + "] deleted :(");
        }
        checkFullInventory();
    }
    _root.getArenaArmor = function getArenaArmor(reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, name, desc, guard) {
        let k = 9999;
        let i = 101;
        while (i <= 130) {
            if (_root.save.inventoryExist[i] != 1) {
                if (k > i) {
                    k = i;
                }
            }
            i++;
        }
        if (k == 9999) {
            k = _root.save.arenaDeletedSlot;
            _root.save.arenaDeletedSlot += 1;
            if (_root.save.arenaDeletedSlot > 830) {
                _root.save.arenaDeletedSlot = 801;
            }
            _root.deleteArenaItem(k);
        }
        if (name != undefined) {
            if (noBonus == undefined) {
                noBonus = false;
            }
            if (noLife == undefined) {
                noLife = true;
            }
            if (noFuse == undefined) {
                noFuse = false;
            }
            if (noUnique == undefined) {
                noUnique = false;
            }
            if (spirit == undefined) {
                spirit = false;
            }
            if (guard == undefined) {
                guard = false;
            }
            if (isNaN(level)) {
                level = 1;
                _root.breakNews("[Error]", "ERROR: " + name + " / [level] not defined.", 16711680, 9002);
            }
            if (isNaN(exp)) {
                exp = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [exp] not defined.", 16711680, 9002);
            }
            if (isNaN(crit)) {
                crit = 10;
                dexterity = 0;
                health = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [crit] not defined.", 16711680, 9002);
            }
            if (isNaN(unob)) {
                unob = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [unob] not defined.", 16711680, 9002);
            }
            let itemSet = _root.checkArenaSet(name);
            if (moreBonus == undefined) {
                moreBonus = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [moreBonus] not defined.", 16711680, 9002);
            }
            if (desc == undefined) {
                desc = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [desc] not defined.", 16711680, 9002);
            }
            _root.save.inventoryExist[k] = 1;
            _root.save.inventoryName[k] = name;
            _root.save.inventoryReqRank[k] = reqRank;
            _root.save.inventoryType[k] = "Armor";
            _root.save.inventorySubtype[k] = subtype;
            _root.save.inventoryFrame[k] = frame;
            _root.save.inventoryRange[k] = false;
            _root.save.inventoryAttack[k] = attack;
            _root.save.inventorySpeed[k] = speed;
            _root.save.inventoryDefense[k] = defense;
            _root.save.inventoryBonus[k] = bonus;
            _root.save.inventoryAbility[k] = ability;
            _root.save.inventoryMoreBonus[k] = moreBonus;
            _root.save.inventoryLevel[k] = level;
            _root.save.inventoryMaxLevel[k] = maxLevel;
            _root.save.inventoryExp[k] = exp;
            _root.save.inventoryExpTNL[k] = expTNL;
            _root.save.inventoryEnhance[k] = enhance;
            _root.save.inventoryBonusPow[k] = bonusPow;
            _root.save.inventorySell[k] = sell;
            _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
            if (noLife == false) {
                _root.save.inventoryExpiry[k] = Infinity;
            }
            _root.save.inventoryObtainTime[k] = _root.systemtimenow;
            _root.save.inventoryDesc[k] = desc;
            _root.save.inventoryCrit[k] = crit;
            _root.save.inventoryDexterity[k] = dexterity;
            _root.save.inventoryHealth[k] = health;
            _root.save.inventoryNoBonus[k] = noBonus;
            _root.save.inventoryNoFuse[k] = noFuse;
            _root.save.inventoryNoUnique[k] = noUnique;
            _root.save.inventorySpirit[k] = spirit;
            _root.save.inventoryGuard[k] = guard;
            _root.save.inventoryUnob[k] = unob;
            _root.save.inventorySet[k] = itemSet;
            if (_root.save.inventoryBonus[k] == "Random") {
                bonusToGet = random(15) + 1;
                if (Math.random() < 0.2) {
                    bonusToGet = random(22) + 1;
                }
                if (bonusToGet == 1 || bonusToGet == 2) {
                    _root.save.inventoryBonus[k] = "Reward";
                }
                if (bonusToGet == 3 || bonusToGet == 4) {
                    _root.save.inventoryBonus[k] = "EXP";
                }
                if (bonusToGet == 5 || bonusToGet == 6) {
                    _root.save.inventoryBonus[k] = "Coin";
                }
                if (bonusToGet == 7 || bonusToGet == 8) {
                    _root.save.inventoryBonus[k] = "Pixel";
                }
                if (bonusToGet == 9 || bonusToGet == 10) {
                    _root.save.inventoryBonus[k] = "Drop Rate";
                }
                if (bonusToGet == 11 || bonusToGet == 12) {
                    _root.save.inventoryBonus[k] = "Spawn Rate";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryBonus[k] = "Fire Element";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryBonus[k] = "Ice Element";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryBonus[k] = "Wind Element";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryBonus[k] = "Earth Element";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryBonus[k] = "Thunder Element";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryBonus[k] = "Water Element";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryBonus[k] = "Light Element";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryBonus[k] = "Dark Element";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryBonus[k] = "Rare Monster Rate";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryBonus[k] = "Epic Monster Rate";
                }
                if (_root.save.arenaBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference1;
                }
                else if (_root.save.arenaBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference2;
                }
            }
            if (_root.save.inventoryAbility[k] == "Random") {
                bonusToGet = random(25) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryAbility[k] = "Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryAbility[k] = "Attack Speed";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryAbility[k] = "Ignore Defense";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryAbility[k] = "Mastery";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryAbility[k] = "Critical Chance";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryAbility[k] = "Critical Damage";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryAbility[k] = "Defense";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryAbility[k] = "Damage Taken";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryAbility[k] = "Reflect";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryAbility[k] = "Accuracy";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryAbility[k] = "Hit Chance";
                }
                if (bonusToGet == 12) {
                    _root.save.inventoryAbility[k] = "Evasion";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryAbility[k] = "Dodge Chance";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryAbility[k] = "Poison Chance";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryAbility[k] = "Weaken Chance";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryAbility[k] = "Blind Chance";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryAbility[k] = "Stun Chance";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryAbility[k] = "HP";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryAbility[k] = "MP";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryAbility[k] = "HP Regen";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryAbility[k] = "MP Regen";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryAbility[k] = "Rage Depletion";
                }
                if (bonusToGet == 23) {
                    _root.save.inventoryAbility[k] = "Drain";
                }
                if (bonusToGet == 24) {
                    _root.save.inventoryAbility[k] = "Mana Eater";
                }
                if (bonusToGet == 25) {
                    _root.save.inventoryAbility[k] = "Autosteal";
                }
                if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
                }
                else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
                }
            }
            if (_root.save.inventoryMoreBonus[k] == "Random") {
                bonusToGet = random(11) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Defense";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryMoreBonus[k] = "Attack Power";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryMoreBonus[k] = "Defense Power";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryMoreBonus[k] = "MaxHP";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryMoreBonus[k] = "MaxMP";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryMoreBonus[k] = "Accuracy";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryMoreBonus[k] = "Evasion";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Boss Kill";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Rare Kill";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Epic Kill";
                }
                if (_root.save.arenaMoreBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference1;
                }
                else if (_root.save.arenaMoreBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference2;
                }
            }
            if (k <= 130) {
                dispNews(50, "Armor GET! [" + name + "]");
            }
            else {
                dispNews(56, "Armor inventory full! [" + name + "] moved to Recently Deleted tab.");
            }
        }
        else {
            dispNews(56, "Armor inventory full! [" + name + "] deleted :(");
        }
        checkFullInventory();
    }
    function getArenaOutfit(reqRank, subtype, frame, bonusPow, sell, name, desc) {
        k = 9999;
        i = 601;
        while (i <= 630) {
            if (_root.save.inventoryExist[i] != 1) {
                if (k > i) {
                    k = i;
                }
            }
            i++;
        }
        if (k == 9999) {
            k = _root.save.arenaDeletedSlot;
            _root.save.arenaDeletedSlot += 1;
            if (_root.save.arenaDeletedSlot > 830) {
                _root.save.arenaDeletedSlot = 801;
            }
            _root.deleteArenaItem(k);
        }
        if (name != undefined) {
            _root.save.inventoryExist[k] = 1;
            _root.save.inventoryName[k] = name;
            _root.save.inventoryReqRank[k] = reqRank;
            _root.save.inventoryType[k] = "Outfit";
            _root.save.inventorySubtype[k] = subtype;
            _root.save.inventoryFrame[k] = frame;
            _root.save.inventoryEnhance[k] = 0;
            _root.save.inventoryBonusPow[k] = bonusPow;
            _root.save.inventorySell[k] = sell;
            _root.save.inventoryExpiry[k] = Infinity;
            _root.save.inventoryObtainTime[k] = _root.systemtimenow;
            _root.save.inventoryDesc[k] = desc;
            if (k <= 630) {
                dispNews(54, "Outfit GET! [" + name + "]");
            }
            else {
                dispNews(60, "Outfit inventory full! [" + name + "] moved to Recently Deleted tab.");
            }
        }
        else {
            dispNews(60, "Outfit inventory full! [" + name + "] deleted :(");
        }
        checkFullInventory();
    }
    function getArenaAccessory(reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noUnique, spirit, unob, name, desc, guard) {
        k = 9999;
        i = 501;
        while (i <= 530) {
            if (_root.save.inventoryExist[i] != 1) {
                if (k > i) {
                    k = i;
                }
            }
            i++;
        }
        if (k == 9999) {
            k = _root.save.arenaDeletedSlot;
            _root.save.arenaDeletedSlot += 1;
            if (_root.save.arenaDeletedSlot > 830) {
                _root.save.arenaDeletedSlot = 801;
            }
            _root.deleteArenaItem(k);
        }
        if (name != undefined) {
            if (noBonus == undefined) {
                noBonus = false;
            }
            if (noLife == undefined) {
                noLife = true;
            }
            if (noFuse == undefined) {
                noFuse = false;
            }
            if (noUnique == undefined) {
                noUnique = false;
            }
            if (spirit == undefined) {
                spirit = false;
            }
            if (guard == undefined) {
                guard = false;
            }
            if (isNaN(level)) {
                level = 1;
                _root.breakNews("[Error]", "ERROR: " + name + " / [level] not defined.", 16711680, 9002);
            }
            if (isNaN(exp)) {
                exp = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [exp] not defined.", 16711680, 9002);
            }
            if (isNaN(crit)) {
                crit = 10;
                dexterity = 0;
                health = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [crit] not defined.", 16711680, 9002);
            }
            if (isNaN(unob)) {
                unob = 0;
                _root.breakNews("[Error]", "ERROR: " + name + " / [unob] not defined.", 16711680, 9002);
            }
            let itemSet = _root.checkArenaSet(name);
            if (desc == "This medal\'s name depends on your Anti-Idle title when you craft it. Don\'t ask how that works.") {
                itemSet = 0;
            }
            if (desc == "Thank you for your donation and your continued support!") {
                itemSet = 0;
            }
            if (moreBonus == undefined) {
                moreBonus = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [moreBonus] not defined.", 16711680, 9002);
            }
            if (desc == undefined) {
                desc = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [desc] not defined.", 16711680, 9002);
            }
            _root.save.inventoryExist[k] = 1;
            _root.save.inventoryName[k] = name;
            _root.save.inventoryReqRank[k] = reqRank;
            _root.save.inventoryType[k] = "Accessory";
            _root.save.inventorySubtype[k] = subtype;
            _root.save.inventoryFrame[k] = frame;
            _root.save.inventoryRange[k] = false;
            _root.save.inventoryAttack[k] = attack;
            _root.save.inventorySpeed[k] = speed;
            _root.save.inventoryDefense[k] = defense;
            _root.save.inventoryBonus[k] = bonus;
            _root.save.inventoryAbility[k] = ability;
            if (moreBonus == undefined) {
                moreBonus = "";
            }
            _root.save.inventoryMoreBonus[k] = moreBonus;
            _root.save.inventoryLevel[k] = level;
            _root.save.inventoryMaxLevel[k] = maxLevel;
            _root.save.inventoryExp[k] = exp;
            if (isNaN(level)) {
                _root.save.inventoryLevel[k] = 1;
            }
            if (isNaN(exp)) {
                _root.save.inventoryExp[k] = 0;
            }
            _root.save.inventoryExpTNL[k] = expTNL;
            _root.save.inventoryEnhance[k] = enhance;
            _root.save.inventoryBonusPow[k] = bonusPow;
            _root.save.inventorySell[k] = sell;
            _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
            if (noLife == false) {
                _root.save.inventoryExpiry[k] = Infinity;
            }
            _root.save.inventoryObtainTime[k] = _root.systemtimenow;
            _root.save.inventoryDesc[k] = desc;
            _root.save.inventoryCrit[k] = crit;
            _root.save.inventoryDexterity[k] = dexterity;
            _root.save.inventoryHealth[k] = health;
            _root.save.inventoryNoBonus[k] = noBonus;
            _root.save.inventoryNoFuse[k] = false;
            _root.save.inventoryNoUnique[k] = noUnique;
            _root.save.inventorySpirit[k] = spirit;
            _root.save.inventoryGuard[k] = guard;
            _root.save.inventoryUnob[k] = unob;
            _root.save.inventorySet[k] = itemSet;
            if (_root.save.inventoryBonus[k] == "Random") {
                bonusToGet = random(22) + 1;
                if (bonusToGet == 1 || bonusToGet == 2) {
                    _root.save.inventoryBonus[k] = "Reward";
                }
                if (bonusToGet == 3 || bonusToGet == 4) {
                    _root.save.inventoryBonus[k] = "EXP";
                }
                if (bonusToGet == 5 || bonusToGet == 6) {
                    _root.save.inventoryBonus[k] = "Coin";
                }
                if (bonusToGet == 7 || bonusToGet == 8) {
                    _root.save.inventoryBonus[k] = "Pixel";
                }
                if (bonusToGet == 9 || bonusToGet == 10) {
                    _root.save.inventoryBonus[k] = "Drop Rate";
                }
                if (bonusToGet == 11 || bonusToGet == 12) {
                    _root.save.inventoryBonus[k] = "Spawn Rate";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryBonus[k] = "Fire Element";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryBonus[k] = "Ice Element";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryBonus[k] = "Wind Element";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryBonus[k] = "Earth Element";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryBonus[k] = "Thunder Element";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryBonus[k] = "Water Element";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryBonus[k] = "Light Element";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryBonus[k] = "Dark Element";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryBonus[k] = "Rare Monster Rate";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryBonus[k] = "Epic Monster Rate";
                }
                if (_root.save.arenaBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference1;
                }
                else if (_root.save.arenaBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference2;
                }
            }
            if (_root.save.inventoryAbility[k] == "Random") {
                bonusToGet = random(25) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryAbility[k] = "Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryAbility[k] = "Attack Speed";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryAbility[k] = "Ignore Defense";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryAbility[k] = "Mastery";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryAbility[k] = "Critical Chance";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryAbility[k] = "Critical Damage";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryAbility[k] = "Defense";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryAbility[k] = "Damage Taken";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryAbility[k] = "Reflect";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryAbility[k] = "Accuracy";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryAbility[k] = "Hit Chance";
                }
                if (bonusToGet == 12) {
                    _root.save.inventoryAbility[k] = "Evasion";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryAbility[k] = "Dodge Chance";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryAbility[k] = "Poison Chance";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryAbility[k] = "Weaken Chance";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryAbility[k] = "Blind Chance";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryAbility[k] = "Stun Chance";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryAbility[k] = "HP";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryAbility[k] = "MP";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryAbility[k] = "HP Regen";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryAbility[k] = "MP Regen";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryAbility[k] = "Rage Depletion";
                }
                if (bonusToGet == 23) {
                    _root.save.inventoryAbility[k] = "Drain";
                }
                if (bonusToGet == 24) {
                    _root.save.inventoryAbility[k] = "Mana Eater";
                }
                if (bonusToGet == 25) {
                    _root.save.inventoryAbility[k] = "Autosteal";
                }
                if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
                }
                else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
                }
            }
            if (_root.save.inventoryMoreBonus[k] == "Random") {
                bonusToGet = random(11) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Defense";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryMoreBonus[k] = "Attack Power";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryMoreBonus[k] = "Defense Power";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryMoreBonus[k] = "MaxHP";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryMoreBonus[k] = "MaxMP";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryMoreBonus[k] = "Accuracy";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryMoreBonus[k] = "Evasion";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Boss Kill";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Rare Kill";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Epic Kill";
                }
                if (_root.save.arenaMoreBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference1;
                }
                else if (_root.save.arenaMoreBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference2;
                }
            }
            if (k <= 530) {
                dispNews(51, "Accessory GET! [" + name + "]");
            }
            else {
                dispNews(57, "Accessory inventory full! [" + name + "] moved to Recently Deleted tab.");
            }
        }
        else {
            dispNews(57, "Accessory inventory full! [" + name + "] deleted :(");
        }
        checkFullInventory();
    }
    _root.getArenaEnhancer = function getArenaEnhancer(subtype, frame, power, curse, success, bonus, ability, moreBonus, enhance, bonusPow, sell, expiry, name, desc, guard) {
        let k = 9999;
        let i = 201;
        while (i <= 230) {
            if (_root.save.inventoryExist[i] != 1) {
                if (k > i) {
                    k = i;
                }
            }
            i++;
        }
        if (k == 9999) {
            k = _root.save.arenaDeletedSlot;
            _root.save.arenaDeletedSlot += 1;
            if (_root.save.arenaDeletedSlot > 830) {
                _root.save.arenaDeletedSlot = 801;
            }
            _root.deleteArenaItem(k);
        }
        if (name != undefined) {
            if (guard == undefined) {
                guard = false;
            }
            if (moreBonus == undefined) {
                moreBonus = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [moreBonus] not defined.", 16711680, 9002);
            }
            if (desc == undefined) {
                desc = "";
                _root.breakNews("[Error]", "ERROR: " + name + " / [desc] not defined.", 16711680, 9002);
            }
            _root.save.inventoryExist[k] = 1;
            _root.save.inventoryName[k] = name;
            _root.save.inventoryReqRank[k] = 1;
            _root.save.inventoryType[k] = "Enhancer";
            _root.save.inventorySubtype[k] = subtype;
            _root.save.inventoryFrame[k] = frame;
            _root.save.inventoryRange[k] = false;
            _root.save.inventoryAttack[k] = power;
            _root.save.inventoryBonus[k] = bonus;
            _root.save.inventoryAbility[k] = ability;
            _root.save.inventoryMoreBonus[k] = moreBonus;
            _root.save.inventoryEnhance[k] = enhance;
            _root.save.inventoryBonusPow[k] = bonusPow;
            _root.save.inventorySell[k] = sell;
            _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
            _root.save.inventoryObtainTime[k] = _root.systemtimenow;
            _root.save.inventoryNoBonus[k] = false;
            _root.save.inventoryNoRecycle[k] = false;
            _root.save.inventoryNoFuse[k] = false;
            _root.save.inventoryNoUnique[k] = false;
            _root.save.inventorySpirit[k] = false;
            _root.save.inventoryGuard[k] = guard;
            _root.save.inventoryDesc[k] = desc;
            if (_root.save.inventoryBonus[k] == "Random") {
                bonusToGet = random(22) + 1;
                if (bonusToGet == 1 || bonusToGet == 2) {
                    _root.save.inventoryBonus[k] = "Reward";
                }
                if (bonusToGet == 3 || bonusToGet == 4) {
                    _root.save.inventoryBonus[k] = "EXP";
                }
                if (bonusToGet == 5 || bonusToGet == 6) {
                    _root.save.inventoryBonus[k] = "Coin";
                }
                if (bonusToGet == 7 || bonusToGet == 8) {
                    _root.save.inventoryBonus[k] = "Pixel";
                }
                if (bonusToGet == 9 || bonusToGet == 10) {
                    _root.save.inventoryBonus[k] = "Drop Rate";
                }
                if (bonusToGet == 11 || bonusToGet == 12) {
                    _root.save.inventoryBonus[k] = "Spawn Rate";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryBonus[k] = "Fire Element";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryBonus[k] = "Ice Element";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryBonus[k] = "Wind Element";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryBonus[k] = "Earth Element";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryBonus[k] = "Thunder Element";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryBonus[k] = "Water Element";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryBonus[k] = "Light Element";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryBonus[k] = "Dark Element";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryBonus[k] = "Rare Monster Rate";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryBonus[k] = "Epic Monster Rate";
                }
                if (_root.save.arenaBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference1;
                }
                else if (_root.save.arenaBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryBonus[k] = _root.save.arenaBonusPreference2;
                }
            }
            if (_root.save.inventoryAbility[k] == "Random") {
                bonusToGet = random(25) + 1;
                if (subtype == "Weapon Bonus Adder") {
                    bonusToGet = random(47) + 1;
                }
                if (bonusToGet == 1) {
                    _root.save.inventoryAbility[k] = "Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryAbility[k] = "Attack Speed";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryAbility[k] = "Ignore Defense";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryAbility[k] = "Mastery";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryAbility[k] = "Critical Chance";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryAbility[k] = "Critical Damage";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryAbility[k] = "Defense";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryAbility[k] = "Damage Taken";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryAbility[k] = "Reflect";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryAbility[k] = "Accuracy";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryAbility[k] = "Hit Chance";
                }
                if (bonusToGet == 12) {
                    _root.save.inventoryAbility[k] = "Evasion";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryAbility[k] = "Dodge Chance";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryAbility[k] = "Poison Chance";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryAbility[k] = "Weaken Chance";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryAbility[k] = "Blind Chance";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryAbility[k] = "Stun Chance";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryAbility[k] = "HP";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryAbility[k] = "MP";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryAbility[k] = "HP Regen";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryAbility[k] = "MP Regen";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryAbility[k] = "Rage Depletion";
                }
                if (bonusToGet == 23) {
                    _root.save.inventoryAbility[k] = "Drain";
                }
                if (bonusToGet == 24) {
                    _root.save.inventoryAbility[k] = "Mana Eater";
                }
                if (bonusToGet == 25) {
                    _root.save.inventoryAbility[k] = "Autosteal";
                }
                if (bonusToGet == 26) {
                    _root.save.inventoryAbility[k] = "Double Hit Chance";
                }
                if (bonusToGet == 27) {
                    _root.save.inventoryAbility[k] = "Rage Attack";
                }
                if (bonusToGet == 28) {
                    _root.save.inventoryAbility[k] = "Rage Speed";
                }
                if (bonusToGet == 29) {
                    _root.save.inventoryAbility[k] = "Poison Damage";
                }
                if (bonusToGet == 30) {
                    _root.save.inventoryAbility[k] = "Poison Duration";
                }
                if (bonusToGet == 31) {
                    _root.save.inventoryAbility[k] = "Weaken Effect";
                }
                if (bonusToGet == 32) {
                    _root.save.inventoryAbility[k] = "Weaken Duration";
                }
                if (bonusToGet == 33) {
                    _root.save.inventoryAbility[k] = "Blind Effect";
                }
                if (bonusToGet == 34) {
                    _root.save.inventoryAbility[k] = "Blind Duration";
                }
                if (bonusToGet == 35) {
                    _root.save.inventoryAbility[k] = "Potion Efficiency";
                }
                if (bonusToGet == 36) {
                    _root.save.inventoryAbility[k] = "Boss Damage";
                }
                if (bonusToGet == 37) {
                    _root.save.inventoryAbility[k] = "Magic Resist";
                }
                if (bonusToGet == 38) {
                    _root.save.inventoryAbility[k] = "Instant Kill";
                }
                if (bonusToGet == 39) {
                    _root.save.inventoryAbility[k] = "Negate Effect";
                }
                if (bonusToGet == 40) {
                    _root.save.inventoryAbility[k] = "Non-Boss Damage";
                }
                if (bonusToGet == 41) {
                    _root.save.inventoryAbility[k] = "Damage";
                }
                if (bonusToGet == 42) {
                    _root.save.inventoryAbility[k] = "Extra Combo";
                }
                if (bonusToGet == 43) {
                    _root.save.inventoryAbility[k] = "Magic Reflect";
                }
                if (bonusToGet == 44) {
                    _root.save.inventoryAbility[k] = "Nullify Death Penalty";
                }
                if (bonusToGet == 45) {
                    _root.save.inventoryAbility[k] = "Buff Effect";
                }
                if (bonusToGet == 46) {
                    _root.save.inventoryAbility[k] = "All Elements";
                }
                if (bonusToGet == 47) {
                    _root.save.inventoryAbility[k] = "Max Spirit";
                }
                if (subtype == "Weapon Bonus Adder") {
                    if (_root.save.arenaAbilityPreference1 != "None" && Math.random() < 0.2) {
                        _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference1;
                    }
                    else if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.1) {
                        _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
                    }
                    else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.05) {
                        _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
                    }
                }
                else if (_root.save.arenaAbilityPreference2 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference2;
                }
                else if (_root.save.arenaAbilityPreference3 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryAbility[k] = _root.save.arenaAbilityPreference3;
                }
            }
            if (_root.save.inventoryMoreBonus[k] == "Random") {
                bonusToGet = random(11) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryMoreBonus[k] = "Equipment Defense";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryMoreBonus[k] = "Attack Power";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryMoreBonus[k] = "Defense Power";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryMoreBonus[k] = "MaxHP";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryMoreBonus[k] = "MaxMP";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryMoreBonus[k] = "Accuracy";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryMoreBonus[k] = "Evasion";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Boss Kill";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Rare Kill";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryMoreBonus[k] = "EXP / Epic Kill";
                }
                if (_root.save.arenaMoreBonusPreference1 != "None" && Math.random() < 0.2) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference1;
                }
                else if (_root.save.arenaMoreBonusPreference2 != "None" && Math.random() < 0.07) {
                    _root.save.inventoryMoreBonus[k] = _root.save.arenaMoreBonusPreference2;
                }
            }
            if (k <= 230) {
                dispNews(52, "Enhancer GET! [" + name + "]");
            }
            else {
                dispNews(58, "Enhancer inventory full! [" + name + "] moved to Recently Deleted tab.");
            }
        }
        else {
            dispNews(58, "Enhancer inventory full! [" + name + "] deleted :(");
        }
        checkFullInventory();
    }
    function getArenaPotion(subtype, frame, attack, defense, enhance, bonusPow, sell, expiry, name, desc) {
        k = 9999;
        i = 401;
        while (i <= 430) {
            if (_root.save.inventoryExist[i] != 1) {
                if (k > i) {
                    k = i;
                }
            }
            i++;
        }
        if (k == 9999) {
            k = _root.save.arenaDeletedSlot;
            _root.save.arenaDeletedSlot += 1;
            if (_root.save.arenaDeletedSlot > 830) {
                _root.save.arenaDeletedSlot = 801;
            }
            _root.deleteArenaItem(k);
        }
        if (name != undefined) {
            _root.save.inventoryExist[k] = 1;
            _root.save.inventoryName[k] = name;
            _root.save.inventoryReqRank[k] = 1;
            _root.save.inventoryType[k] = "Potion";
            _root.save.inventorySubtype[k] = subtype;
            _root.save.inventoryFrame[k] = frame;
            _root.save.inventoryAttack[k] = attack;
            _root.save.inventoryDefense[k] = defense;
            _root.save.inventoryEnhance[k] = enhance;
            _root.save.inventoryBonusPow[k] = bonusPow;
            _root.save.inventorySell[k] = sell;
            _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
            _root.save.inventoryObtainTime[k] = _root.systemtimenow;
            _root.save.inventoryDesc[k] = desc;
            if (k <= 430) {
                dispNews(53, "Potion GET! [" + name + "]");
            }
            else {
                dispNews(59, "Potion inventory full! [" + name + "] moved to Recently Deleted tab.");
            }
        }
        else {
            dispNews(59, "Potion inventory full! [" + name + "] deleted :(");
        }
        checkFullInventory();
    }
    function getArenaChip(subtype, frame, attack, defense, enhance, bonusPow, sell, expiry, name, desc) {
        k = 9999;
        i = 701;
        while (i <= 730) {
            if (_root.save.inventoryExist[i] != 1) {
                if (k > i) {
                    k = i;
                }
            }
            i++;
        }
        if (k == 9999) {
            k = _root.save.arenaDeletedSlot;
            _root.save.arenaDeletedSlot += 1;
            if (_root.save.arenaDeletedSlot > 830) {
                _root.save.arenaDeletedSlot = 801;
            }
            _root.deleteArenaItem(k);
        }
        if (name != undefined) {
            _root.save.inventoryExist[k] = 1;
            _root.save.inventoryName[k] = name;
            _root.save.inventoryReqRank[k] = 1;
            _root.save.inventoryType[k] = "Chip";
            _root.save.inventorySubtype[k] = subtype;
            _root.save.inventoryFrame[k] = frame;
            _root.save.inventoryAttack[k] = attack;
            _root.save.inventoryDefense[k] = defense;
            _root.save.inventoryEnhance[k] = enhance;
            _root.save.inventoryBonusPow[k] = bonusPow;
            _root.save.inventorySell[k] = sell;
            _root.save.inventoryExpiry[k] = expiry + _root.systemtimenow;
            _root.save.inventoryObtainTime[k] = _root.systemtimenow;
            _root.save.inventoryDesc[k] = desc;
            if (k <= 730) {
                dispNews(170, "Chip GET! [" + name + "]");
            }
            else {
                dispNews(171, "Chip inventory full! [" + name + "] moved to Recently Deleted tab.");
            }
        }
        else {
            dispNews(171, "Chip inventory full! [" + name + "] deleted :(");
        }
        checkFullInventory();
    }
    function addArenaWeapon(name, reqRank, subtype, frame, range, attack, speed, defense, bonus, ability, maxLevel, expTNL, enhance, bonusPow, sell, expiry, noBonus, noLife, noRecycle, spirit, crit, dexterity, health, desc, noFuse, level, exp, noUnique, unob, moreBonus) {
        getArenaWeapon(reqRank, subtype, frame, range, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, name, desc);
    }
    function addArenaArmor(name, reqRank, subtype, frame, attack, speed, defense, bonus, ability, maxLevel, expTNL, enhance, bonusPow, sell, expiry, noBonus, noLife, noRecycle, spirit, crit, dexterity, health, desc, noFuse, level, exp, noUnique, unob, moreBonus) {
        getArenaArmor(reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noFuse, noUnique, spirit, unob, name, desc);
    }
    function addArenaAccessory(name, reqRank, subtype, frame, attack, speed, defense, bonus, ability, maxLevel, expTNL, enhance, bonusPow, sell, expiry, noBonus, noLife, noRecycle, spirit, crit, dexterity, health, desc, noFuse, level, exp, noUnique, unob) {
        getArenaAccessory(reqRank, subtype, frame, attack, speed, defense, crit, dexterity, health, maxLevel, expTNL, level, exp, enhance, bonusPow, bonus, ability, moreBonus, sell, expiry, noBonus, noLife, noUnique, spirit, unob, name, desc);
    }
    function addArenaEnhancer(name, subtype, frame, power, curse, success, bonus, ability, enhance, bonusPow, sell, expiry, desc, moreBonus) {
        getArenaEnhancer(subtype, frame, power, curse, success, bonus, ability, moreBonus, enhance, bonusPow, sell, expiry, name, desc);
    }
    function addArenaPotion(name, subtype, frame, attack, defense, enhance, bonusPow, sell, expiry, desc) {
        getArenaPotion(subtype, frame, attack, defense, enhance, bonusPow, sell, expiry, name, desc);
    }
    function swapArenaItem(item1, item2) {
        j = item1;
        k = item2;
        _root.xSwapArenaItem(900, item1);
        _root.xSwapArenaItem(item1, item2);
        _root.xSwapArenaItem(item2, 900);
        _root.deleteArenaItem(900);
        _root.arenaSwap1 = 0;
        checkFullInventory();
    }
    function xSwapArenaItem(xitem1, xitem2) {
        j = xitem2;
        k = xitem1;
        _root.save.inventoryExist[k] = _root.save.inventoryExist[j];
        _root.save.inventoryName[k] = _root.save.inventoryName[j];
        _root.save.inventoryReqRank[k] = _root.save.inventoryReqRank[j];
        _root.save.inventoryType[k] = _root.save.inventoryType[j];
        _root.save.inventorySubtype[k] = _root.save.inventorySubtype[j];
        _root.save.inventoryFrame[k] = _root.save.inventoryFrame[j];
        _root.save.inventoryRange[k] = _root.save.inventoryRange[j];
        _root.save.inventoryAttack[k] = _root.save.inventoryAttack[j];
        _root.save.inventorySpeed[k] = _root.save.inventorySpeed[j];
        _root.save.inventoryDefense[k] = _root.save.inventoryDefense[j];
        _root.save.inventoryBonus[k] = _root.save.inventoryBonus[j];
        _root.save.inventoryAbility[k] = _root.save.inventoryAbility[j];
        _root.save.inventoryMoreBonus[k] = _root.save.inventoryMoreBonus[j];
        _root.save.inventoryLevel[k] = _root.save.inventoryLevel[j];
        _root.save.inventoryMaxLevel[k] = _root.save.inventoryMaxLevel[j];
        _root.save.inventoryExp[k] = _root.save.inventoryExp[j];
        _root.save.inventoryExpTNL[k] = _root.save.inventoryExpTNL[j];
        _root.save.inventoryEnhance[k] = _root.save.inventoryEnhance[j];
        _root.save.inventoryBonusPow[k] = _root.save.inventoryBonusPow[j];
        _root.save.inventorySell[k] = _root.save.inventorySell[j];
        _root.save.inventoryExpiry[k] = _root.save.inventoryExpiry[j];
        _root.save.inventoryObtainTime[k] = _root.save.inventoryObtainTime[j];
        _root.save.inventoryNoBonus[k] = _root.save.inventoryNoBonus[j];
        _root.save.inventoryNoRecycle[k] = _root.save.inventoryNoRecycle[j];
        _root.save.inventoryNoFuse[k] = _root.save.inventoryNoFuse[j];
        _root.save.inventoryNoUnique[k] = _root.save.inventoryNoUnique[j];
        _root.save.inventoryUnob[k] = _root.save.inventoryUnob[j];
        _root.save.inventorySpirit[k] = _root.save.inventorySpirit[j];
        _root.save.inventoryCrit[k] = _root.save.inventoryCrit[j];
        _root.save.inventoryDexterity[k] = _root.save.inventoryDexterity[j];
        _root.save.inventoryHealth[k] = _root.save.inventoryHealth[j];
        _root.save.inventoryDesc[k] = _root.save.inventoryDesc[j];
        _root.save.inventorySet[k] = _root.save.inventorySet[j];
        _root.save.inventoryGuard[k] = _root.save.inventoryGuard[j];
        checkFullInventory();
    }
    function deleteArenaItem(k) {
        _root.save.inventoryExist[k] = 0;
        delete _root.save.inventoryName[k];
        delete _root.save.inventoryReqRank[k];
        delete _root.save.inventoryType[k];
        delete _root.save.inventorySubtype[k];
        delete _root.save.inventoryFrame[k];
        delete _root.save.inventoryRange[k];
        delete _root.save.inventoryAttack[k];
        delete _root.save.inventorySpeed[k];
        delete _root.save.inventoryDefense[k];
        delete _root.save.inventoryBonus[k];
        delete _root.save.inventoryAbility[k];
        delete _root.save.inventoryMoreBonus[k];
        delete _root.save.inventoryLevel[k];
        delete _root.save.inventoryMaxLevel[k];
        delete _root.save.inventoryExp[k];
        delete _root.save.inventoryExpTNL[k];
        delete _root.save.inventoryEnhance[k];
        delete _root.save.inventoryBonusPow[k];
        delete _root.save.inventorySell[k];
        delete _root.save.inventoryExpiry[k];
        delete _root.save.inventoryObtainTime[k];
        delete _root.save.inventoryNoBonus[k];
        delete _root.save.inventoryNoRecycle[k];
        delete _root.save.inventoryNoFuse[k];
        delete _root.save.inventoryNoUnique[k];
        delete _root.save.inventoryUnob[k];
        delete _root.save.inventorySpirit[k];
        delete _root.save.inventoryCrit[k];
        delete _root.save.inventoryDexterity[k];
        delete _root.save.inventoryHealth[k];
        delete _root.save.inventoryDesc[k];
        delete _root.save.inventorySet[k];
        delete _root.save.inventoryGuard[k];
        checkFullInventory();
    }
    function sellArenaItem(k) {
        _root.deleteArenaItem(_root.save.arenaDeletedSlot);
        if (_root.save.inventorySell[k] > 0 && !isNaN(_root.save.inventorySell[k]) && _root.save.inventorySell[k] != Infinity) {
            _root.save.arenaPixel += _root.save.inventorySell[k];
        }
        _root.swapArenaItem(k, _root.save.arenaDeletedSlot);
        _root.deleteArenaItem(k);
        _root.save.arenaDeletedSlot += 1;
        if (_root.save.arenaDeletedSlot > 830) {
            _root.save.arenaDeletedSlot = 801;
        }
    }
    function enhanceArenaItem(j, k) {
        canEnhance = false;
        if (_root.save.inventoryEnhance[k] < 10 || _root.save.inventorySubtype[j] == "Weapon Bonus Adder" || _root.save.inventorySubtype[j] == "Armor Bonus Adder" || _root.save.inventorySubtype[j] == "Weapon Lifespan Extender" || _root.save.inventorySubtype[j] == "Armor Lifespan Extender" || _root.save.inventorySubtype[j] == "Weapon Recycler" || _root.save.inventorySubtype[j] == "Armor Recycler" || _root.save.inventorySubtype[j] == "Weapon Spirit Rock" || _root.save.inventorySubtype[j] == "Armor Spirit Rock" || _root.save.inventorySubtype[j] == "Accessory Spirit Rock" || _root
            .save.inventorySubtype[j] == "Weapon Unique Enhancer" || _root.save.inventorySubtype[j] == "Armor Unique Enhancer" || _root.save.inventorySubtype[j] == "Accessory Bonus Adder" || _root.save.inventorySubtype[j] == "Accessory Lifespan Extender" || _root.save.inventorySubtype[j] == "Accessory Growth Rock" || _root.save.inventorySubtype[j] == "Accessory Unique Enhancer" || _root.save.inventorySubtype[j] == "Mystery Enhancer Identifier" || _root.save.inventorySubtype[j] == "Weapon Unobtainium Enhancer" || _root.save.inventorySubtype[j] == "Armor Unobtainium Enhancer" || _root
                .save.inventorySubtype[j] == "Accessory Unobtainium Enhancer" || _root.save.inventorySubtype[j] == "Weapon Protector" || _root.save.inventorySubtype[j] == "Armor Protector" || _root.save.inventorySubtype[j] == "Accessory Protector" || _root.save.inventorySubtype[j] == "Enhancer Protector" || _root.save.inventorySubtype[j] == "Weapon Finalizer" || _root.save.inventorySubtype[j] == "Armor Finalizer" || _root.save.inventorySubtype[j] == "Accessory Finalizer" || _root.save.inventorySubtype[j] == "Weapon Cleansing Rock" || _root
                    .save.inventorySubtype[j] == "Armor Cleansing Rock" || _root.save.inventorySubtype[j] == "Weapon Tukkonium Enhancer" || _root.save.inventorySubtype[j] == "Armor Tukkonium Enhancer" || _root.save.inventorySubtype[j] == "Accessory Tukkonium Enhancer") {
            canEnhance = true;
            if (j == k) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Attack Enhancer" && _root.save.inventoryAttack[k] < 1) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Unique Enhancer" && _root.save.inventoryAttack[k] < 1) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Unique Enhancer" && _root.save.inventoryAttack[k] >= 3000) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Armor Unique Enhancer" && _root.save.inventoryDefense[k] >= 1800) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Accessory Unique Enhancer" && _root.save.inventoryDefense[k] >= 1800) {
                canEnhance = false;
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Unique Enhancer" || _root.save.inventorySubtype[j] == "Armor Unique Enhancer" || _root.save.inventorySubtype[j] == "Accessory Unique Enhancer") && _root.save.inventoryEnhance[k] < 10) {
                canEnhance = false;
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Unique Enhancer" || _root.save.inventorySubtype[j] == "Armor Unique Enhancer" || _root.save.inventorySubtype[j] == "Accessory Unique Enhancer") && _root.save.inventoryLevel[k] < _root.save.inventoryMaxLevel[k]) {
                canEnhance = false;
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Unique Enhancer" || _root.save.inventorySubtype[j] == "Armor Unique Enhancer" || _root.save.inventorySubtype[j] == "Accessory Unique Enhancer") && _root.save.inventoryNoUnique[k] == true) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Speed Enhancer" && _root.save.inventorySpeed[k] < 3) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Growth Rock" && _root.save.inventoryAttack[k] < 1) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Mystery Enhancer Identifier" && _root.save.inventorySubtype[k] != "Weapon Mystery Enhancer" && _root.save.inventorySubtype[k] != "Armor Mystery Enhancer") {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Lifespan Extender" || _root.save.inventorySubtype[j] == "Armor Lifespan Extender" || _root.save.inventorySubtype[j] == "Accessory Lifespan Extender") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "GIGA LIFE ROCK" && (_root.save.inventoryName[k] == "GIGA PENDANT" || _root.save.inventoryName[k] == "GIGA EARRINGS") && _root.save.inventorySubtype[k] != "Medal") {
                canEnhance = true;
            }
            if (_root.save.inventoryName[j] == "GIGA LIFE ROCK EX" && (_root.save.inventoryName[k] == "GIGA PENDANT" || _root.save.inventoryName[k] == "GIGA EARRINGS") && _root.save.inventorySubtype[k] != "Medal") {
                canEnhance = true;
            }
            if (_root.save.inventoryName[j] == "GIGA ENHANCER" && _root.save.inventoryName[k] != "GIGA PENDANT" && _root.save.inventoryName[k] != "GIGA EARRINGS") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "GIGA ENHANCER" && _root.save.inventorySubtype[k] != "Pendant" && _root.save.inventorySubtype[k] != "Earring") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "GIGA ENHANCER EX" && _root.save.inventoryName[k] != "GIGA PENDANT" && _root.save.inventoryName[k] != "GIGA EARRINGS") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "GIGA ENHANCER EX" && _root.save.inventorySubtype[k] != "Pendant" && _root.save.inventorySubtype[k] != "Earring") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "TERA LIFE ROCK" && (_root.save.inventoryName[k] == "TERA PENDANT" || _root.save.inventoryName[k] == "TERA EARRINGS") && _root.save.inventorySubtype[k] != "Medal") {
                canEnhance = true;
            }
            if (_root.save.inventoryName[j] == "TERA LIFE ROCK EX" && (_root.save.inventoryName[k] == "TERA PENDANT" || _root.save.inventoryName[k] == "TERA EARRINGS") && _root.save.inventorySubtype[k] != "Medal") {
                canEnhance = true;
            }
            if (_root.save.inventoryName[j] == "TERA ENHANCER" && _root.save.inventoryName[k] != "TERA PENDANT" && _root.save.inventoryName[k] != "TERA EARRINGS") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "TERA ENHANCER" && _root.save.inventorySubtype[k] != "Pendant" && _root.save.inventorySubtype[k] != "Earring") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "TERA ENHANCER EX" && _root.save.inventoryName[k] != "TERA PENDANT" && _root.save.inventoryName[k] != "TERA EARRINGS") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "TERA ENHANCER EX" && _root.save.inventorySubtype[k] != "Pendant" && _root.save.inventorySubtype[k] != "Earring") {
                canEnhance = false;
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Bonus Adder" || _root.save.inventorySubtype[j] == "Armor Bonus Adder" || _root.save.inventorySubtype[j] == "Accessory Bonus Adder") && _root.save.inventoryNoBonus[k] == true && _root.save.inventoryName[j].indexOf("[S]") == -1) {
                canEnhance = false;
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Bonus Adder" || _root.save.inventorySubtype[j] == "Armor Bonus Adder" || _root.save.inventorySubtype[j] == "Accessory Bonus Adder") && _root.save.inventoryNoBonus[k] == true && _root.save.inventorySubtype[k] == "Trinket") {
                canEnhance = false;
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Bonus Adder" || _root.save.inventorySubtype[j] == "Armor Bonus Adder" || _root.save.inventorySubtype[j] == "Accessory Bonus Adder") && _root.save.inventoryNoBonus[k] == true && _root.save.inventorySubtype[k] == "Medal") {
                canEnhance = false;
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Spirit Rock" || _root.save.inventorySubtype[j] == "Armor Spirit Rock" || _root.save.inventorySubtype[j] == "Accessory Spirit Rock") && _root.save.inventoryName[j].indexOf("[S]") == -1) {
                if (_root.save.inventoryEnhance[k] < 10 || _root.save.inventoryEnhance[k] > 1000) {
                    canEnhance = false;
                }
            }
            if ((_root.save.inventorySubtype[j] == "Weapon Spirit Rock" || _root.save.inventorySubtype[j] == "Armor Spirit Rock" || _root.save.inventorySubtype[j] == "Accessory Spirit Rock") && _root.save.inventoryName[k] == "Dark Ruler") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Fairy Weapon Enhancer" && _root.save.inventoryName[k].indexOf("Fairy") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Fairy Armor Enhancer" && _root.save.inventoryName[k].indexOf("Fairy") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Dominator Gem Enhancer" && (_root.save.inventoryName[k] != "Dominator Gem" || _root.save.inventorySubtype[k] != "Trinket")) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Mega Triangle Gem Enhancer" && (_root.save.inventoryName[k] != "Mega Triangle Gem" || _root.save.inventorySubtype[k] != "Trinket")) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Crystal Unique Enhancer MAX" && _root.save.inventoryName[k].indexOf("Crystal") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Alien Core" && _root.save.inventoryName[k].indexOf("Alien") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Alien Core" && isNaN(_root.save.inventoryName[k].indexOf("Alien"))) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Weapon Cleansing Rock" && _root.save.inventoryName[k].indexOf("(Cursed)") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Weapon Cleansing Rock" && isNaN(_root.save.inventoryName[k].indexOf("(Cursed)"))) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Armor Cleansing Rock" && _root.save.inventoryName[k].indexOf("(Cursed)") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Armor Cleansing Rock" && isNaN(_root.save.inventoryName[k].indexOf("(Cursed)"))) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Anti-Nerfer" && _root.save.inventoryName[k] != "Nerf Accepted!") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Awesome Enhancer" && (_root.save.inventoryName[k] != "Awesome Earrings" || _root.save.inventorySubtype[k] != "Earring")) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] != "Humblebee Armor Upgrade" && _root.save.inventoryEnhance[k] == 8 && _root.save.inventoryMaxLevel[k] < 184 && _root.save.inventoryName[k].indexOf("Humblebee") != -1) {
                if (!(_root.save.inventorySubtype[j] == "Armor Bonus Adder" || _root.save.inventorySubtype[j] == "Armor Spirit Rock" || _root.save.inventorySubtype[j] == "Armor Unobtainium Enhancer" || _root.save.inventorySubtype[j] == "Armor Protector" || _root.save.inventorySubtype[j] == "Armor Finalizer")) {
                    canEnhance = false;
                }
            }
            if (_root.save.inventoryName[j] != "Humblebee Armor Upgrade" && _root.save.inventoryEnhance[k] == 9 && _root.save.inventoryMaxLevel[k] < 284 && _root.save.inventoryName[k].indexOf("Humblebee") != -1) {
                if (!(_root.save.inventorySubtype[j] == "Armor Bonus Adder" || _root.save.inventorySubtype[j] == "Armor Spirit Rock" || _root.save.inventorySubtype[j] == "Armor Unobtainium Enhancer" || _root.save.inventorySubtype[j] == "Armor Protector" || _root.save.inventorySubtype[j] == "Armor Finalizer")) {
                    canEnhance = false;
                }
            }
            if (_root.save.inventoryName[j] == "Humblebee Armor Upgrade") {
                if (_root.save.inventoryName[k].indexOf("Humblebee") == -1) {
                    canEnhance = false;
                }
                if (_root.save.inventoryMaxLevel[k] >= 284) {
                    canEnhance = false;
                }
            }
            if (_root.save.inventoryName[j] == "Corrupted Bonus Rock" && _root.save.inventoryName[k].indexOf("Elm") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j] == "Corrupted Bonus Rock" && isNaN(_root.save.inventoryName[k].indexOf("Elm"))) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Unobtainium Enhancer" && _root.save.inventoryUnob[k] >= _root.save.inventoryAttack[j]) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Armor Unobtainium Enhancer" && _root.save.inventoryUnob[k] >= _root.save.inventoryAttack[j]) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Accessory Unobtainium Enhancer" && _root.save.inventoryUnob[k] >= _root.save.inventoryAttack[j]) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Weapon Finalizer" && _root.save.inventoryReqRank[k] > _root.save.inventoryAttack[j]) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Armor Finalizer" && _root.save.inventoryReqRank[k] > _root.save.inventoryAttack[j]) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Accessory Finalizer" && _root.save.inventoryReqRank[k] > _root.save.inventoryAttack[j]) {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[j] == "Accessory Finalizer" && _root.save.inventorySubtype[k] == "Trinket") {
                canEnhance = false;
            }
            if (_root.save.inventorySubtype[k] == "Secondary Weapon" && _root.save.inventorySubtype[j].indexOf("Protector") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[k] == "Eric\'s Shovel") {
                canEnhance = false;
            }
            if (_root.save.inventoryName[k] == "Eric\'s Gun-Shovel") {
                canEnhance = false;
            }
            if (_root.save.inventoryLevel[k] == 9999 && _root.save.inventorySubtype[j].indexOf("Protector") == -1 && _root.save.inventoryName[j].indexOf("[S]") == -1 && _root.save.inventoryName[j].indexOf("Tukkonium") == -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryLevel[k] != 9999 && _root.save.inventoryName[j].indexOf("Tukkonium") != -1) {
                canEnhance = false;
            }
            if (_root.save.inventoryName[j].indexOf("Auto Buff") != -1 && (_root.save.inventoryName[k] != "Auto Buff Gem" || _root.save.inventorySubtype[k] != "Trinket")) {
                canEnhance = false;
            }
        }
        if (_root.save.inventoryName[j].indexOf("Auto Buff") != -1 && _root.save.inventoryName[k] == "Auto Buff Gem" && _root.save.inventorySubtype[k] == "Trinket") {
            canEnhance = true;
        }
        if (canEnhance == true) {
            pow = _root.save.inventoryAttack[j];
            if (_root.save.inventoryBonus[j] != "") {
                _root.save.inventoryBonus[k] = _root.save.inventoryBonus[j];
            }
            if (_root.save.inventoryAbility[j] != "") {
                _root.save.inventoryAbility[k] = _root.save.inventoryAbility[j];
            }
            if (_root.save.inventoryMoreBonus[j] != "") {
                _root.save.inventoryMoreBonus[k] = _root.save.inventoryMoreBonus[j];
            }
            if (_root.save.inventoryBonus[j] == "Random") {
                bonusToGet = random(20) + 1;
                if (bonusToGet == 1 || bonusToGet == 2) {
                    _root.save.inventoryBonus[k] = "Reward";
                }
                if (bonusToGet == 3 || bonusToGet == 4) {
                    _root.save.inventoryBonus[k] = "EXP";
                }
                if (bonusToGet == 5 || bonusToGet == 6) {
                    _root.save.inventoryBonus[k] = "Coin";
                }
                if (bonusToGet == 7 || bonusToGet == 8) {
                    _root.save.inventoryBonus[k] = "Pixel";
                }
                if (bonusToGet == 9 || bonusToGet == 10) {
                    _root.save.inventoryBonus[k] = "Drop Rate";
                }
                if (bonusToGet == 11 || bonusToGet == 12) {
                    _root.save.inventoryBonus[k] = "Spawn Rate";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryBonus[k] = "Fire Element";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryBonus[k] = "Ice Element";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryBonus[k] = "Wind Element";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryBonus[k] = "Earth Element";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryBonus[k] = "Thunder Element";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryBonus[k] = "Water Element";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryBonus[k] = "Light Element";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryBonus[k] = "Dark Element";
                }
            }
            if (_root.save.inventoryAbility[j] == "Random") {
                bonusToGet = random(25) + 1;
                if (bonusToGet == 1) {
                    _root.save.inventoryAbility[k] = "Attack";
                }
                if (bonusToGet == 2) {
                    _root.save.inventoryAbility[k] = "Attack Speed";
                }
                if (bonusToGet == 3) {
                    _root.save.inventoryAbility[k] = "Ignore Defense";
                }
                if (bonusToGet == 4) {
                    _root.save.inventoryAbility[k] = "Mastery";
                }
                if (bonusToGet == 5) {
                    _root.save.inventoryAbility[k] = "Critical Chance";
                }
                if (bonusToGet == 6) {
                    _root.save.inventoryAbility[k] = "Critical Damage";
                }
                if (bonusToGet == 7) {
                    _root.save.inventoryAbility[k] = "Defense";
                }
                if (bonusToGet == 8) {
                    _root.save.inventoryAbility[k] = "Damage Taken";
                }
                if (bonusToGet == 9) {
                    _root.save.inventoryAbility[k] = "Reflect";
                }
                if (bonusToGet == 10) {
                    _root.save.inventoryAbility[k] = "Accuracy";
                }
                if (bonusToGet == 11) {
                    _root.save.inventoryAbility[k] = "Hit Chance";
                }
                if (bonusToGet == 12) {
                    _root.save.inventoryAbility[k] = "Evasion";
                }
                if (bonusToGet == 13) {
                    _root.save.inventoryAbility[k] = "Dodge Chance";
                }
                if (bonusToGet == 14) {
                    _root.save.inventoryAbility[k] = "Poison Chance";
                }
                if (bonusToGet == 15) {
                    _root.save.inventoryAbility[k] = "Weaken Chance";
                }
                if (bonusToGet == 16) {
                    _root.save.inventoryAbility[k] = "Blind Chance";
                }
                if (bonusToGet == 17) {
                    _root.save.inventoryAbility[k] = "Stun Chance";
                }
                if (bonusToGet == 18) {
                    _root.save.inventoryAbility[k] = "HP";
                }
                if (bonusToGet == 19) {
                    _root.save.inventoryAbility[k] = "MP";
                }
                if (bonusToGet == 20) {
                    _root.save.inventoryAbility[k] = "HP Regen";
                }
                if (bonusToGet == 21) {
                    _root.save.inventoryAbility[k] = "MP Regen";
                }
                if (bonusToGet == 22) {
                    _root.save.inventoryAbility[k] = "Rage Depletion";
                }
                if (bonusToGet == 23) {
                    _root.save.inventoryAbility[k] = "Drain";
                }
                if (bonusToGet == 24) {
                    _root.save.inventoryAbility[k] = "Mana Eater";
                }
                if (bonusToGet == 25) {
                    _root.save.inventoryAbility[k] = "Autosteal";
                }
            }
            if (_root.save.inventorySubtype[j] == "Weapon Attack Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryAttack[k] += pow;
                _root.save.inventoryBonusPow[k] += pow;
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Unique Enhancer") {
                _root.save.inventoryAttack[k] += pow;
                _root.save.inventoryBonusPow[k] += pow;
                if (_root.save.inventoryAttack[k] > 3000) {
                    _root.save.inventoryAttack[k] = 3000;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Tukkonium Enhancer") {
                if (_root.save.inventoryBonusPow[k] < 100000) {
                    tukkoniumPow = Math.ceil((5000 - _root.save.inventoryAttack[k]) / 5);
                }
                else {
                    tukkoniumPow = Math.ceil((5000 - _root.save.inventoryAttack[k]) / 10);
                }
                if (_root.save.inventoryName[k] == "Glaive of Smiting") {
                    tukkoniumPow = 1;
                }
                if (_root.save.inventoryName[k] == "Darkglaive of Smiting") {
                    tukkoniumPow = 1;
                }
                if (_root.save.inventoryName[k] == "Fiend Glaive") {
                    tukkoniumPow = 1;
                }
                if (_root.save.inventoryName[k] == "CHAOS AURA") {
                    tukkoniumPow = 1;
                }
                if (_root.save.inventoryName[k] == "Dark Ruler") {
                    tukkoniumPow = 1;
                }
                if (_root.save.inventoryName[k] == "Ultimate Weapon") {
                    tukkoniumPow = 1;
                }
                if (_root.save.inventoryName[k] == "Reincarnation Weapon") {
                    tukkoniumPow = 1;
                }
                if (_root.save.inventoryNoUnique[k] == true) {
                    tukkoniumPow = 1;
                }
                if (tukkoniumPow < 1) {
                    tukkoniumPow = 1;
                }
                _root.save.inventoryAttack[k] += tukkoniumPow;
                if (_root.save.inventoryBonusPow[k] < 100000) {
                    _root.save.inventoryBonusPow[k] = 100000;
                }
                _root.save.inventoryBonusPow[k] += tukkoniumPow;
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Speed Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventorySpeed[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 20;
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Defense Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryDefense[k] += pow;
                _root.save.inventoryBonusPow[k] += Math.round(pow * 5 / 12);
            }
            else if (_root.save.inventorySubtype[j] == "Armor Attack Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryAttack[k] += pow;
                _root.save.inventoryBonusPow[k] += Math.round(pow * 5 / 2);
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Attack Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryAttack[k] += pow;
                _root.save.inventoryBonusPow[k] += Math.round(pow * 5 / 2);
            }
            else if (_root.save.inventorySubtype[j] == "Armor Speed Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventorySpeed[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 20;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Defense Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryDefense[k] += pow;
                _root.save.inventoryBonusPow[k] += pow;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Unique Enhancer") {
                _root.save.inventoryDefense[k] += pow;
                _root.save.inventoryBonusPow[k] += pow;
                if (_root.save.inventoryDefense[k] > 1800) {
                    _root.save.inventoryDefense[k] = 1800;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Armor Tukkonium Enhancer") {
                if (_root.save.inventorySubtype[k] == "Skin") {
                    if (_root.save.inventoryBonusPow[k] < 100000) {
                        tukkoniumPow = Math.ceil((3000 - _root.save.inventoryDefense[k]) / 5);
                    }
                    else {
                        tukkoniumPow = Math.ceil((3000 - _root.save.inventoryDefense[k]) / 10);
                    }
                }
                else if (_root.save.inventoryBonusPow[k] < 100000) {
                    tukkoniumPow = Math.ceil((30000 - _root.save.inventoryDefense[k]) / 5);
                }
                else {
                    tukkoniumPow = Math.ceil((30000 - _root.save.inventoryDefense[k]) / 10);
                }
                if (_root.save.inventoryNoUnique[k] == true) {
                    tukkoniumPow = 5;
                }
                if (tukkoniumPow < 5) {
                    tukkoniumPow = 5;
                }
                if (_root.save.inventoryDefense[k] > 29990 && _root.save.inventoryDefense[k] < 30000) {
                    tukkoniumPow = 30000 - _root.save.inventoryDefense[k];
                }
                _root.save.inventoryDefense[k] += tukkoniumPow;
                if (_root.save.inventoryBonusPow[k] < 100000) {
                    _root.save.inventoryBonusPow[k] = 100000;
                }
                _root.save.inventoryBonusPow[k] += 1;
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Unique Enhancer") {
                _root.save.inventoryDefense[k] += pow;
                _root.save.inventoryBonusPow[k] += pow;
                if (_root.save.inventoryDefense[k] > 1800) {
                    _root.save.inventoryDefense[k] = 1800;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Tukkonium Enhancer") {
                if (_root.save.inventoryBonusPow[k] < 100000) {
                    tukkoniumPow = Math.ceil((30000 - _root.save.inventoryDefense[k]) / 5);
                }
                else {
                    tukkoniumPow = Math.ceil((30000 - _root.save.inventoryDefense[k]) / 10);
                }
                if (_root.save.inventoryNoUnique[k] == true) {
                    tukkoniumPow = 1;
                }
                if (tukkoniumPow < 1) {
                    tukkoniumPow = 1;
                }
                _root.save.inventoryDefense[k] += tukkoniumPow;
                if (_root.save.inventoryBonusPow[k] < 100000) {
                    _root.save.inventoryBonusPow[k] = 100000;
                }
                _root.save.inventoryBonusPow[k] += 1;
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Spirit Rock" || _root.save.inventorySubtype[j] == "Armor Spirit Rock" || _root.save.inventorySubtype[j] == "Accessory Spirit Rock") {
                if (_root.save.inventorySpirit[k] != true) {
                    _root.save.inventorySpirit[k] = true;
                }
                else {
                    _root.save.inventorySpirit[k] = false;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Growth Rock") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                if (_root.save.inventoryExpTNL[k] < 400) {
                    _root.save.inventoryExpTNL[k] = 400 * _root.save.inventoryReqRank[k] * _root.save.inventoryReqRank[k];
                }
                if (_root.save.inventoryLevel[k] == _root.save.inventoryMaxLevel[k]) {
                    _root.save.inventoryExp[k] = 0;
                }
                _root.save.inventoryMaxLevel[k] += pow;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Growth Rock") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                if (_root.save.inventoryExpTNL[k] < 400) {
                    _root.save.inventoryExpTNL[k] = 400 * _root.save.inventoryReqRank[k] * _root.save.inventoryReqRank[k];
                }
                if (_root.save.inventoryLevel[k] == _root.save.inventoryMaxLevel[k]) {
                    _root.save.inventoryExp[k] = 0;
                }
                _root.save.inventoryMaxLevel[k] += pow;
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Growth Rock") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                if (_root.save.inventoryExpTNL[k] < 400) {
                    _root.save.inventoryExpTNL[k] = 400 * _root.save.inventoryReqRank[k] * _root.save.inventoryReqRank[k];
                }
                if (_root.save.inventoryLevel[k] == _root.save.inventoryMaxLevel[k]) {
                    _root.save.inventoryExp[k] = 0;
                }
                if (_root.save.inventoryEnhance[k] <= 10) {
                    _root.save.inventoryMaxLevel[k] += pow;
                }
                else {
                    _root.save.inventoryDefense[k] += 180;
                    if (_root.save.inventoryDefense[k] > 1800) {
                        _root.save.inventoryDefense[k] = 1800;
                    }
                }
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Critical Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryCrit[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 5;
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Dexterity Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryDexterity[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 5;
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Health Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryHealth[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 5;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Critical Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryCrit[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 5;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Dexterity Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryDexterity[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 5;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Health Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryHealth[k] += pow;
                _root.save.inventoryBonusPow[k] += pow * 5;
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Cleansing Rock") {
                _root.save.inventoryName[k] = _root.save.inventoryName[k].substr(0, _root.save.inventoryName[k].length - 9);
            }
            else if (_root.save.inventorySubtype[j] == "Armor Cleansing Rock") {
                _root.save.inventoryName[k] = _root.save.inventoryName[k].substr(0, _root.save.inventoryName[k].length - 9);
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Lifespan Extender") {
                if (_root.save.inventoryExpiry[k] < _root.systemtimenow) {
                    _root.save.inventoryExpiry[k] = _root.systemtimenow;
                }
                _root.save.inventoryExpiry[k] += pow * 86400000;
                if (pow >= 99999) {
                    _root.save.inventoryExpiry[k] = Infinity;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Mystery Enhancer Identifier") {
                if (_root.save.inventorySubtype[k] == "Weapon Mystery Enhancer") {
                    _root.save.inventoryBonusPow[k] += 500;
                    typeX = random(5) + 1;
                    if (typeX == 1) {
                        _root.save.inventorySubtype[k] = "Weapon Attack Enhancer";
                        _root.save.inventoryAttack[k] *= 5;
                    }
                    if (typeX == 2) {
                        _root.save.inventorySubtype[k] = "Weapon Defense Enhancer";
                        _root.save.inventoryAttack[k] *= 12;
                    }
                    if (typeX == 3) {
                        _root.save.inventorySubtype[k] = "Weapon Critical Enhancer";
                    }
                    if (typeX == 4) {
                        _root.save.inventorySubtype[k] = "Weapon Dexterity Enhancer";
                    }
                    if (typeX == 5) {
                        _root.save.inventorySubtype[k] = "Weapon Health Enhancer";
                    }
                }
                if (_root.save.inventorySubtype[k] == "Armor Mystery Enhancer") {
                    _root.save.inventoryBonusPow[k] += 500;
                    typeX = random(5) + 1;
                    if (typeX == 1) {
                        _root.save.inventorySubtype[k] = "Armor Attack Enhancer";
                        _root.save.inventoryAttack[k] *= 2;
                    }
                    if (typeX == 2) {
                        _root.save.inventorySubtype[k] = "Armor Defense Enhancer";
                        _root.save.inventoryAttack[k] *= 5;
                    }
                    if (typeX == 3) {
                        _root.save.inventorySubtype[k] = "Armor Critical Enhancer";
                    }
                    if (typeX == 4) {
                        _root.save.inventorySubtype[k] = "Armor Dexterity Enhancer";
                    }
                    if (typeX == 5) {
                        _root.save.inventorySubtype[k] = "Armor Health Enhancer";
                    }
                }
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Mystery Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                if (_root.save.inventoryAttack[k] != 0) {
                    typeX = random(5) + 1;
                }
                else {
                    typeX = random(4) + 2;
                }
                if (typeX == 1) {
                    _root.save.inventoryAttack[k] += pow * 5;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 2) {
                    _root.save.inventoryDefense[k] += pow * 12;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 3) {
                    _root.save.inventoryCrit[k] += pow;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 4) {
                    _root.save.inventoryDexterity[k] += pow;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 5) {
                    _root.save.inventoryHealth[k] += pow;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Armor Mystery Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                typeX = random(5) + 1;
                if (typeX == 1) {
                    _root.save.inventoryAttack[k] += pow * 2;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 2) {
                    _root.save.inventoryDefense[k] += pow * 5;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 3) {
                    _root.save.inventoryCrit[k] += pow;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 4) {
                    _root.save.inventoryDexterity[k] += pow;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
                if (typeX == 5) {
                    _root.save.inventoryHealth[k] += pow;
                    _root.save.inventoryBonusPow[k] += pow * 5;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Unobtainium Enhancer") {
                _root.save.inventoryUnob[k] = pow;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Unobtainium Enhancer") {
                _root.save.inventoryUnob[k] = pow;
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Unobtainium Enhancer") {
                _root.save.inventoryUnob[k] = pow;
            }
            else if (_root.save.inventorySubtype[j] == "Enhancer Success Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventoryDefense[k] = Math.ceil(_root.save.inventoryDefense[k] * pow / 100);
                _root.save.inventoryBonusPow[k] += pow - 100;
            }
            else if (_root.save.inventorySubtype[j] == "Enhancer Destruction Enhancer") {
                _root.save.inventoryEnhance[k] += 1;
                if (_root.save.inventoryEnhance[k] == 10) {
                    _root.save.arenaMaxEnhance += 1;
                }
                _root.save.inventorySpeed[k] = Math.floor(_root.save.inventorySpeed[k] * pow / 100);
                _root.save.inventoryBonusPow[k] += Math.floor((100 - pow) / 2);
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Protector") {
                if (_root.save.inventoryGuard[k] != true) {
                    _root.save.inventoryGuard[k] = true;
                }
                else {
                    _root.save.inventoryGuard[k] = false;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Armor Protector") {
                if (_root.save.inventoryGuard[k] != true) {
                    _root.save.inventoryGuard[k] = true;
                }
                else {
                    _root.save.inventoryGuard[k] = false;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Protector") {
                if (_root.save.inventoryGuard[k] != true) {
                    _root.save.inventoryGuard[k] = true;
                }
                else {
                    _root.save.inventoryGuard[k] = false;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Enhancer Protector") {
                if (_root.save.inventoryGuard[k] != true) {
                    _root.save.inventoryGuard[k] = true;
                }
                else {
                    _root.save.inventoryGuard[k] = false;
                }
            }
            else if (_root.save.inventorySubtype[j] == "Weapon Finalizer") {
                _root.save.inventoryAttack[k] = Math.ceil(_root.save.inventoryAttack[k] * 1.2);
                _root.save.inventorySpeed[k] = Math.ceil(_root.save.inventorySpeed[k] * 1.2);
                _root.save.inventoryDefense[k] = Math.ceil(_root.save.inventoryDefense[k] * 1.2);
                _root.save.inventoryCrit[k] = Math.ceil(_root.save.inventoryCrit[k] * 1.2);
                _root.save.inventoryDexterity[k] = Math.ceil(_root.save.inventoryDexterity[k] * 1.2);
                _root.save.inventoryHealth[k] = Math.ceil(_root.save.inventoryHealth[k] * 1.2);
                _root.save.inventoryLevel[k] = 9999;
                _root.save.inventoryMaxLevel[k] = 9999;
                _root.save.inventoryExp[k] = 0;
                _root.save.inventoryExpTNL[k] = 0;
                _root.save.inventoryNoBonus[k] = true;
                _root.save.inventoryNoFuse[k] = true;
                _root.save.inventoryNoUnique[k] = false;
            }
            else if (_root.save.inventorySubtype[j] == "Armor Finalizer") {
                _root.save.inventoryAttack[k] = Math.ceil(_root.save.inventoryAttack[k] * 1.2);
                _root.save.inventorySpeed[k] = Math.ceil(_root.save.inventorySpeed[k] * 1.2);
                _root.save.inventoryDefense[k] = Math.ceil(_root.save.inventoryDefense[k] * 1.2);
                _root.save.inventoryCrit[k] = Math.ceil(_root.save.inventoryCrit[k] * 1.2);
                _root.save.inventoryDexterity[k] = Math.ceil(_root.save.inventoryDexterity[k] * 1.2);
                _root.save.inventoryHealth[k] = Math.ceil(_root.save.inventoryHealth[k] * 1.2);
                _root.save.inventoryLevel[k] = 9999;
                _root.save.inventoryMaxLevel[k] = 9999;
                _root.save.inventoryExp[k] = 0;
                _root.save.inventoryExpTNL[k] = 0;
                _root.save.inventoryNoBonus[k] = true;
                _root.save.inventoryNoFuse[k] = true;
                _root.save.inventoryNoUnique[k] = false;
            }
            else if (_root.save.inventorySubtype[j] == "Accessory Finalizer") {
                _root.save.inventoryAttack[k] = Math.ceil(_root.save.inventoryAttack[k] * 1.2);
                _root.save.inventorySpeed[k] = Math.ceil(_root.save.inventorySpeed[k] * 1.2);
                _root.save.inventoryDefense[k] = Math.ceil(_root.save.inventoryDefense[k] * 1.2);
                _root.save.inventoryCrit[k] = Math.ceil(_root.save.inventoryCrit[k] * 1.2);
                _root.save.inventoryDexterity[k] = Math.ceil(_root.save.inventoryDexterity[k] * 1.2);
                _root.save.inventoryHealth[k] = Math.ceil(_root.save.inventoryHealth[k] * 1.2);
                _root.save.inventoryLevel[k] = 9999;
                _root.save.inventoryMaxLevel[k] = 9999;
                _root.save.inventoryExp[k] = 0;
                _root.save.inventoryExpTNL[k] = 0;
                _root.save.inventoryNoBonus[k] = true;
                _root.save.inventoryNoFuse[k] = true;
                _root.save.inventoryNoUnique[k] = false;
            }
            dispNews(61, "[" + _root.save.inventoryName[k] + "] enhanced with [" + _root.save.inventoryName[j] + "]!");
            if (_root.save.inventorySubtype[j].indexOf("Protector") == -1 && _root.save.inventoryName[j].indexOf("[I]") == -1) {
                if (_root.save.questType == "Enhance") {
                    if (_root.save.questSubtype == "Success") {
                        _root.save.questCount += 1;
                    }
                }
                if (_root.save.inventorySell[j] > 0) {
                    _root.gainCareerEXP(4, Math.ceil(_root.save.inventorySell[j] / 1000000), true);
                }
                deleteArenaItem(j);
            }
        }
        else if (_root.save.inventorySubtype[k] == "Secondary Weapon") {
            _root.showPopup("Cannot Enhance", "Secondary Weapons cannot be enhanced.");
        }
        else {
            _root.showPopup("Cannot Enhance", "You cannot use this enhancer on this item!");
        }
        _root.enhancerToUse = 0;
    }
    function checkFullInventory() {
        if (_root.save.inventoryExist == null) {
            _root.save.inventoryExist = [];
        }

        _root.emptyWeaponSlot = 0;
        _root.emptyArmorSlot = 0;
        _root.emptyAccessorySlot = 0;
        _root.emptyEnhancerSlot = 0;
        _root.emptyPotionSlot = 0;
        _root.emptyOutfitSlot = 0;
        _root.emptyChipSlot = 0;
        let i = 1;
        while (i <= 30) {
            if (_root.save.inventoryExist[i] != 1) {
                _root.emptyWeaponSlot += 1;
            }
            i++;
        }
        i = 101;
        while (i <= 130) {
            if (_root.save.inventoryExist[i] != 1) {
                _root.emptyArmorSlot += 1;
            }
            i++;
        }
        i = 201;
        while (i <= 230) {
            if (_root.save.inventoryExist[i] != 1) {
                _root.emptyEnhancerSlot += 1;
            }
            i++;
        }
        i = 401;
        while (i <= 430) {
            if (_root.save.inventoryExist[i] != 1) {
                _root.emptyPotionSlot += 1;
            }
            i++;
        }
        i = 501;
        while (i <= 530) {
            if (_root.save.inventoryExist[i] != 1) {
                _root.emptyAccessorySlot += 1;
            }
            i++;
        }
        i = 601;
        while (i <= 630) {
            if (_root.save.inventoryExist[i] != 1) {
                _root.emptyOutfitSlot += 1;
            }
            i++;
        }
        i = 701;
        while (i <= 730) {
            if (_root.save.inventoryExist[i] != 1) {
                _root.emptyChipSlot += 1;
            }
            i++;
        }
    }
    _root.checkFullInventory = checkFullInventory;
    function addArenaEnemy(level, speed, attack, defense, accuracy, evasion, hp, exp, coin, pixel, name, element, boss, evolve, heal, zombie, rangeDamage, explode, explodeDamage, rampagePct, skill, skillLevel, art, loc, allyPassive1, allyPassive1X, allyPassive2, allyPassive2X, allyPassive3, allyPassive3X, allyActive1, allyActive1X, allyActive1Y, allyActive1Z, allyActive2, allyActive2X, allyActive2Y, allyActive2Z, allyActive3, allyActive3X, allyActive3Y, allyActive3Z) {
        var _loc1_ = new Object();
        _loc1_.level = level;
        _loc1_.speed = speed;
        _loc1_.attack = attack;
        _loc1_.defense = defense;
        _loc1_.accuracy = accuracy;
        _loc1_.evasion = evasion;
        _loc1_.hp = hp;
        _loc1_.exp = exp;
        _loc1_.coin = coin;
        _loc1_.pixel = pixel;
        _loc1_.name = name;
        _loc1_.element = element;
        _loc1_.boss = boss;
        _loc1_.evolve = evolve;
        _loc1_.heal = heal;
        _loc1_.zombie = zombie;
        _loc1_.rangeDamage = rangeDamage;
        _loc1_.explode = explode;
        _loc1_.explodeDamage = explodeDamage;
        _loc1_.rampagePct = rampagePct;
        _loc1_.skill = skill;
        _loc1_.skillLevel = skillLevel;
        _loc1_.art = art;
        _loc1_.loc = loc;
        _loc1_.allyPassive1 = allyPassive1;
        _loc1_.allyPassive1X = allyPassive1X;
        _loc1_.allyPassive2 = allyPassive2;
        _loc1_.allyPassive2X = allyPassive2X;
        _loc1_.allyPassive3 = allyPassive3;
        _loc1_.allyPassive3X = allyPassive3X;
        _loc1_.allyActive1 = allyActive1;
        _loc1_.allyActive1X = allyActive1X;
        _loc1_.allyActive1Y = allyActive1Y;
        _loc1_.allyActive1Z = allyActive1Z;
        _loc1_.allyActive2 = allyActive2;
        _loc1_.allyActive2X = allyActive2X;
        _loc1_.allyActive2Y = allyActive2Y;
        _loc1_.allyActive2Z = allyActive2Z;
        _loc1_.allyActive3 = allyActive3;
        _loc1_.allyActive3X = allyActive3X;
        _loc1_.allyActive3Y = allyActive3Y;
        _loc1_.allyActive3Z = allyActive3Z;
        enemyList.push(_loc1_);
    }
    function obtainAlly(ID) {
        if (isNaN(_root.save.arenaAllyEXP[ID])) {
            _root.save.arenaAllyEXP[ID] = 0;
            _root.save.arenaAllyUpgrade[ID] = 0;
            dispNews(35, "Invisible Ally GET! [" + _root.enemyList[ID].name + "]!");
        }
    }
    function addKommanderMission(monID, minDiff, monCount) {
        _root.komDiff[monID] = minDiff;
        _root.komCount[monID] = monCount;
    }
    function addMuseumItem(mSlotID, mValue, mName) {
        _root.museumItem[mSlotID] = mName;
        _root.museumValue[mSlotID] = mValue;
        _root.museumMaxItem += 1;
        _root.museumMaxValue += mValue;
    }
    function addMuseumArmorSet(mSlotID, mValue, mName) {
        _root.museumItem[mSlotID] = mName + " Hat";
        _root.museumValue[mSlotID] = mValue;
        _root.museumItem[mSlotID + 1] = mName + " Shirt";
        _root.museumValue[mSlotID + 1] = mValue;
        _root.museumItem[mSlotID + 2] = mName + " Gloves";
        _root.museumValue[mSlotID + 2] = mValue;
        _root.museumItem[mSlotID + 3] = mName + " Pants";
        _root.museumValue[mSlotID + 3] = mValue;
        _root.museumItem[mSlotID + 4] = mName + " Shoes";
        _root.museumValue[mSlotID + 4] = mValue;
        _root.museumMaxItem += 5;
        _root.museumMaxValue += mValue * 5;
    }
    function recalcMuseumScore() {
        _root.save.collectionPoint = 0;
        _root.save.collectionPointTrophy = 0;
        i = 1401;
        while (i <= 3000) {
            if (_root.save.inventoryExist[i] == 1 && !isNaN(_root.museumValue[i])) {
                _root.save.collectionPoint += _root.museumValue[i];
                if (_root.save.inventorySubtype[i] == "Trophy") {
                    _root.save.collectionPointTrophy += 1;
                }
            }
            i++;
        }
        if (_root.save.collectionPointMax < _root.save.collectionPoint) {
            _root.save.collectionPointMax = _root.save.collectionPoint;
        }
    }
    _root.arenaSkillNameF = ["", "Quick Attack", "Power Attack", "Specialized Skill", "Combo Strike", "Heal", "Quick Attack Improve", "Power Attack Improve", "Specialized Skill Improve", "Strength Enhancement", "Dexterity Enhancement", "Invisible Armor", "Invisible Weapon", "Artful Dodger", "Accuracy Boost", "Weapon Mastery", "Weapon Booster", "", "Critical Force", "Critical Chance", "Keen Eyes", "HP Recovery", "HP Boost", "Overpowered Tanker", "MP Recovery", "MP Boost", "\'potion [PROFANITY] 1/5\'", "Combo Power", "Combo Protection", "Combo Precision", "Combo Reward", "Rage Mastery", "Rage Power", "Panic", "Learner", "Money UP", "Drain", "Mana Eater", "Coup de Grace", "Poison Ability", "Poison Power", "Weaken Ability", "Weaken Power", "Blind Ability", "Blind Power", "Explosive Attacks", "", "", "", "Mana Power", "Five-Leaf Clover", "Reflect", "Magic Reflect", "Autosteal", "Basic Attack", "Double Hit", "Elemental Bonus", "Master Hunter", "Spirit Shield", "Legendary Weapon", "Adrenaline", "Protection", "Buff Boost", "Crescendo", "Revive", "Charge", "Absorb"];
    _root.arenaSkillMaxF = [0, 30, 30, 30, 30, 10, 1, 1, 1, 50, 50, 40, 40, 50, 50, 50, 40, 0, 50, 30, 50, 30, 50, 50, 30, 50, 1, 30, 30, 40, 50, 30, 50, 50, 50, 50, 50, 30, 50, 30, 40, 30, 40, 30, 40, 50, 0, 0, 0, 1, 50, 30, 30, 50, 20, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    _root.arenaSkillRankF = [999, 10, 30, 70, 120, 10, 250, 350, 500, 10, 10, 30, 40, 50, 60, 70, 80, 999, 90, 100, 110, 15, 25, 130, 45, 55, 120, 35, 75, 115, 155, 65, 85, 95, 30, 30, 70, 70, 70, 105, 145, 135, 175, 125, 165, 140, 999, 999, 999, 180, 170, 150, 160, 120, 1, 120, 500, 500, 500, 500, 500, 120, 120, 180, 180, 180, 180];
    _root.craftWeapon = [];
    _root.craftArmor = [];
    _root.craftAccessory = [];
    _root.craftEnhancer = [];
    _root.craftPotion = [];
    _root.craftChip = [];
    let stickName = _root.kongregate_username + "\'s Tree Stick";
    if (_root.kongregate_username == undefined || _root.kongregate_username == "Guest") {
        stickName = "????\'s Tree Stick";
    }
    addArenaCraftWeapon("Title", "Newbie Items");
    addArenaCraftWeapon(1, 1, 1, 1, "Stick", false, 101, 30, 13, 0, 10, 0, 0, 1, 0, 0, 0, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 0, 0, "Newbie Stick", "");
    addArenaCraftWeapon(1, 1, 1, 1, "Stick", false, 102, 50, 13, 0, 10, 0, 0, 1, 0, 0, 0, "Pixel", "Mastery", "", 0, Infinity, false, false, false, false, false, 0, 100, 0, 0, 0, "Tree Stick", "");
    addArenaCraftWeapon(1, 1, 1, 10, "Stick", false, 103, 150, 13, 0, 10, 25, 0, 1, 0, 0, 0, "Pixel", "Mastery", "", 0, Infinity, false, false, false, false, false, 0, 1000, 0, 0, 0, "Enchanted Tree Stick", "");
    addArenaCraftWeapon(1, 1, 1, 20, "Stick", false, 104, 250, 13, 0, 10, 50, 0, 10, 30000, 0, 0, "Pixel", "Mastery", "", 0, Infinity, false, false, false, false, true, 0, 50000, 0, 0, 0, stickName, "");
    addArenaCraftWeapon("Title", "Basic");
    addArenaCraftWeapon("Title 2", "Melee Weapons");
    addArenaCraftWeapon(3, 1, 2, 10, "Dagger", false, 105, 190, 16, 40, 10, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 250, Infinity, false, false, false, false, false, 0, 2500, 0, 0, 0, "Wooden Dagger", "");
    addArenaCraftWeapon(3, 1, 2, 15, "Sword", false, 110, 210, 15, 40, 15, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 500, Infinity, false, false, false, false, false, 0, 5000, 0, 0, 0, "Wooden Sword", "");
    addArenaCraftWeapon(3, 1, 2, 20, "Sword", false, 115, 230, 14, 40, 15, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 1000, Infinity, false, false, false, false, false, 0, 10000, 0, 0, 0, "Wooden Longsword", "");
    addArenaCraftWeapon(3, 1, 2, 25, "Spear", false, 120, 250, 13, 40, 15, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 2500, Infinity, false, false, false, false, false, 0, 25000, 0, 0, 0, "Wooden Spear", "");
    addArenaCraftWeapon(3, 1, 2, 30, "Axe", false, 125, 290, 12, 70, 20, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 5000, Infinity, false, false, false, false, false, 0, 50000, 0, 0, 0, "Small Axe", "");
    addArenaCraftWeapon(3, 1, 2, 35, "Axe", false, 130, 310, 11, 100, 20, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 10000, Infinity, false, false, false, false, false, 0, 100000, 0, 0, 0, "Doubleaxe", "");
    addArenaCraftWeapon(3, 1, 3, 40, "Dagger", false, 106, 320, 17, 40, 15, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 15000, Infinity, false, false, false, false, false, 0, 150000, 0, 0, 0, "Silver Dagger", "");
    addArenaCraftWeapon(3, 1, 3, 45, "Sword", false, 111, 345, 16, 40, 20, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 25000, Infinity, false, false, false, false, false, 0, 250000, 0, 0, 1, "Silver Sword", "");
    addArenaCraftWeapon(3, 1, 3, 50, "Sword", false, 116, 370, 15, 40, 20, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 40000, Infinity, false, false, false, false, false, 0, 400000, 0, 0, 2, "Blue Longsword", "");
    addArenaCraftWeapon(3, 1, 3, 55, "Spear", false, 121, 395, 14, 40, 20, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 60000, Infinity, false, false, false, false, false, 0, 600000, 0, 0, 3, "Silver Spear", "");
    addArenaCraftWeapon(3, 1, 3, 60, "Axe", false, 126, 445, 13, 70, 25, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 100000, Infinity, false, false, false, false, false, 0, 1000000, 0, 0, 5, "Medium Axe", "");
    addArenaCraftWeapon(3, 1, 3, 65, "Axe", false, 131, 470, 12, 100, 25, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 150000, Infinity, false, false, false, false, false, 0, 1500000, 0, 0, 7, "Dark Doubleaxe", "");
    addArenaCraftWeapon(3, 1, 4, 70, "Dagger", false, 107, 490, 18, 40, 20, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 250000, Infinity, false, false, false, false, false, 0, 2500000, 0, 0, 12, "Golden Dagger", "");
    addArenaCraftWeapon(3, 1, 4, 75, "Sword", false, 112, 520, 17, 40, 25, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 400000, Infinity, false, false, false, false, false, 0, 4000000, 0, 0, 20, "Golden Sword", "");
    addArenaCraftWeapon(3, 1, 4, 80, "Sword", false, 117, 550, 16, 40, 25, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 600000, Infinity, false, false, false, false, false, 0, 6000000, 0, 0, 30, "Golden Longsword", "");
    addArenaCraftWeapon(3, 1, 4, 85, "Spear", false, 122, 580, 15, 40, 25, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 1000000, Infinity, false, false, false, false, false, 0, 10000000, 0, 0, 50, "Golden Spear", "");
    addArenaCraftWeapon(3, 1, 4, 90, "Axe", false, 127, 640, 14, 70, 30, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 1500000, Infinity, false, false, false, false, false, 0, 15000000, 0, 0, 75, "Large Axe", "");
    addArenaCraftWeapon(3, 1, 4, 95, "Hammer", false, 132, 670, 13, 100, 30, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 2000000, Infinity, false, false, false, false, false, 0, 20000000, 0, 0, 100, "Darkhammer", "");
    addArenaCraftWeapon(3, 2, 5, 100, "Dagger", false, 108, 690, 19, 40, 25, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 3000000, Infinity, false, false, false, false, false, 0, 30000000, 0, 0, 150, "Diamond Dagger", "");
    addArenaCraftWeapon(3, 2, 5, 105, "Sword", false, 113, 725, 18, 40, 30, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 4000000, Infinity, false, false, false, false, false, 0, 40000000, 0, 0, 200, "Diamond Sword", "");
    addArenaCraftWeapon(3, 2, 5, 110, "Sword", false, 118, 750, 17, 40, 30, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 5000000, Infinity, false, false, false, false, false, 0, 50000000, 0, 0, 250, "Blood Longsword", "");
    addArenaCraftWeapon(3, 2, 5, 115, "Spear", false, 123, 785, 16, 40, 30, 10, 0, 1, 0, 0, 0, "EXP", "Attack", "", 6000000, Infinity, false, false, false, false, false, 0, 60000000, 0, 0, 300, "Diamond Spear", "");
    addArenaCraftWeapon(3, 2, 5, 120, "Axe", false, 128, 855, 15, 70, 35, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 7000000, Infinity, false, false, false, false, false, 0, 70000000, 0, 0, 350, "Golden Axe", "");
    addArenaCraftWeapon(3, 2, 5, 125, "Sword", false, 133, 825, 20, 100, 35, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 8000000, Infinity, false, false, false, false, false, 0, 80000000, 0, 0, 400, "Hero Sword", "");
    addArenaCraftWeapon(3, 2, 5, 130, "Sword", false, 135, 875, 21, 100, 40, 30, 0, 1, 0, 0, 0, "EXP", "Attack", "", 9000000, Infinity, false, false, false, false, false, 0, 90000000, 0, 0, 450, "Legendary Sword", "");
    addArenaCraftWeapon(3, 2, 5, 135, "Sword", false, 134, 925, 22, 100, 40, 30, 12, 1, 0, 0, 0, "EXP", "Attack", "", 10000000, Infinity, false, false, false, false, false, 0, 100000000, 0, 0, 500, "Triangle Sword", "");
    addArenaCraftWeapon(3, 2, 5, 140, "Sword", false, 302, 1250, 17, 100, 40, 0, 0, 1, 0, 0, 0, "EXP", "Attack", "", 15000000, Infinity, false, false, false, false, true, 0, 150000000, 0, 0, 750, "Spirit Sword", "");
    addArenaCraftWeapon("Title 2", "Ranged Weapons");
    addArenaCraftWeapon(3, 1, 2, 10, "Gun", true, 146, 50, 13, 0, 10, 0, 0, 1, 0, 0, 0, "Water Element", "Critical Damage", "", 250, Infinity, false, false, false, false, false, 0, 2500, 0, 0, 0, "Water Gun", "");
    addArenaCraftWeapon(3, 1, 2, 15, "Bow", true, 136, 120, 8, 0, 5, 10, 0, 1, 0, 0, 0, "EXP", "Accuracy", "", 500, Infinity, false, false, false, false, false, 0, 5000, 0, 0, 0, "Weak Bow", "");
    addArenaCraftWeapon(3, 1, 2, 20, "Crossbow", true, 141, 150, 7, 0, 10, 10, 0, 1, 0, 0, 0, "Coin", "Accuracy", "", 1000, Infinity, false, false, false, false, false, 0, 10000, 0, 0, 0, "Weak Crossbow", "");
    addArenaCraftWeapon(3, 1, 2, 25, "Wand", true, 155, 180, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Reward", "MP Regen", "", 2500, Infinity, false, false, false, false, false, 0, 25000, 0, 0, 0, "Basic Wand", "");
    addArenaCraftWeapon(3, 1, 2, 30, "Claw", true, 171, 170, 11, 5, 5, 5, 10, 1, 0, 0, 0, "Pixel", "Autosteal", "", 5000, Infinity, false, false, false, false, false, 0, 50000, 0, 0, 0, "Basic Claw", "");
    addArenaCraftWeapon(3, 1, 3, 40, "Gun", true, 147, 160, 13, 0, 10, 0, 0, 1, 0, 0, 0, "Fire Element", "Critical Damage", "", 15000, Infinity, false, false, false, false, false, 0, 150000, 0, 0, 0, "Fire Gun", "");
    addArenaCraftWeapon(3, 1, 3, 45, "Bow", true, 137, 265, 8, 0, 5, 10, 0, 1, 0, 0, 0, "EXP", "Accuracy", "", 25000, Infinity, false, false, false, false, false, 0, 250000, 0, 0, 1, "Advanced Bow", "");
    addArenaCraftWeapon(3, 1, 3, 50, "Crossbow", true, 142, 300, 7, 0, 10, 10, 0, 1, 0, 0, 0, "Coin", "Accuracy", "", 40000, Infinity, false, false, false, false, false, 0, 400000, 0, 0, 2, "Advanced Crossbow", "");
    addArenaCraftWeapon(3, 1, 3, 55, "Wand", true, 156, 335, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Fire Element", "MP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 600000, 0, 0, 3, "Fire Wand", "");
    addArenaCraftWeapon(3, 1, 3, 55, "Wand", true, 157, 335, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Ice Element", "MP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 600000, 0, 0, 3, "Ice Wand", "");
    addArenaCraftWeapon(3, 1, 3, 55, "Wand", true, 158, 335, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Wind Element", "MP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 600000, 0, 0, 3, "Wind Wand", "");
    addArenaCraftWeapon(3, 1, 3, 55, "Wand", true, 159, 335, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Earth Element", "MP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 600000, 0, 0, 3, "Earth Wand", "");
    addArenaCraftWeapon(3, 1, 3, 55, "Wand", true, 160, 335, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Thunder Element", "MP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 600000, 0, 0, 3, "Thunder Wand", "");
    addArenaCraftWeapon(3, 1, 3, 55, "Wand", true, 161, 335, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Water Element", "MP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 600000, 0, 0, 3, "Water Wand", "");
    addArenaCraftWeapon(3, 1, 3, 60, "Claw", true, 172, 325, 11, 10, 5, 5, 10, 1, 0, 0, 0, "Pixel", "Autosteal", "", 100000, Infinity, false, false, false, false, false, 0, 1000000, 0, 0, 5, "Steel Claw", "");
    addArenaCraftWeapon(3, 1, 4, 70, "Gun", true, 148, 325, 13, 0, 10, 0, 0, 1, 0, 0, 0, "Dark Element", "Critical Damage", "", 250000, Infinity, false, false, false, false, false, 0, 2500000, 0, 0, 12, "Dark Gun", "");
    addArenaCraftWeapon(3, 1, 4, 75, "Bow", true, 138, 445, 8, 0, 5, 10, 0, 1, 0, 0, 0, "EXP", "Accuracy", "", 400000, Infinity, false, false, false, false, false, 0, 4000000, 0, 0, 20, "Diamond Bow", "");
    addArenaCraftWeapon(3, 1, 4, 80, "Crossbow", true, 143, 485, 7, 0, 10, 10, 0, 1, 0, 0, 0, "Coin", "Accuracy", "", 600000, Infinity, false, false, false, false, false, 0, 6000000, 0, 0, 30, "Diamond Crossbow", "");
    addArenaCraftWeapon(3, 1, 4, 85, "Wand", true, 162, 525, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Light Element", "MP Regen", "", 1000000, Infinity, false, false, false, false, false, 0, 10000000, 0, 0, 50, "Light Wand", "");
    addArenaCraftWeapon(3, 1, 4, 85, "Wand", true, 163, 525, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Dark Element", "MP Regen", "", 1000000, Infinity, false, false, false, false, false, 0, 10000000, 0, 0, 50, "Dark Wand", "");
    addArenaCraftWeapon(3, 1, 4, 85, "Wand", true, 164, 525, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Reward", "Drain", "", 1000000, Infinity, false, false, false, false, false, 0, 10000000, 0, 0, 50, "Life Drain Wand", "");
    addArenaCraftWeapon(3, 1, 4, 85, "Wand", true, 165, 525, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Reward", "Mana Eater", "", 1000000, Infinity, false, false, false, false, false, 0, 10000000, 0, 0, 50, "Mana Eater Wand", "");
    addArenaCraftWeapon(3, 1, 4, 90, "Claw", true, 173, 515, 11, 15, 5, 5, 10, 1, 0, 0, 0, "Pixel", "Autosteal", "", 1500000, Infinity, false, false, false, false, false, 0, 15000000, 0, 0, 75, "Venomous Claw", "");
    addArenaCraftWeapon(3, 2, 5, 100, "Gun", true, 149, 505, 13, 0, 10, 0, 0, 1, 0, 0, 0, "Coin", "Critical Damage", "", 3000000, Infinity, false, false, false, false, false, 0, 30000000, 0, 0, 150, "Golden Gun", "");
    addArenaCraftWeapon(3, 2, 5, 105, "Bow", true, 139, 640, 8, 0, 5, 10, 0, 1, 0, 0, 0, "Light Element", "Accuracy", "", 4000000, Infinity, false, false, false, false, false, 0, 40000000, 0, 0, 200, "Holy Bow", "");
    addArenaCraftWeapon(3, 2, 5, 110, "Crossbow", true, 144, 685, 7, 0, 10, 10, 0, 1, 0, 0, 0, "Light Element", "Accuracy", "", 5000000, Infinity, false, false, false, false, false, 0, 50000000, 0, 0, 250, "Holy Crossbow", "");
    addArenaCraftWeapon(3, 2, 5, 115, "Wand", true, 166, 730, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Reward", "HP", "", 6000000, Infinity, false, false, false, false, false, 0, 60000000, 0, 0, 300, "Life Wand", "");
    addArenaCraftWeapon(3, 2, 5, 115, "Wand", true, 167, 730, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Reward", "MP", "", 6000000, Infinity, false, false, false, false, false, 0, 60000000, 0, 0, 300, "Mana Wand", "");
    addArenaCraftWeapon(3, 2, 5, 115, "Wand", true, 168, 730, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Reward", "Poison Chance", "", 6000000, Infinity, false, false, false, false, false, 0, 60000000, 0, 0, 300, "Poison Wand", "");
    addArenaCraftWeapon(3, 2, 5, 115, "Wand", true, 169, 730, 6, 0, 10, 0, 10, 1, 0, 0, 0, "Reward", "Weaken Chance", "", 6000000, Infinity, false, false, false, false, false, 0, 60000000, 0, 0, 300, "Weaken Wand", "");
    addArenaCraftWeapon(3, 2, 5, 120, "Claw", true, 174, 720, 11, 20, 5, 5, 10, 1, 0, 0, 0, "Pixel", "Autosteal", "", 7000000, Infinity, false, false, false, false, false, 0, 70000000, 0, 0, 350, "Blood Claw", "");
    addArenaCraftWeapon(3, 2, 5, 130, "Gun", true, 150, 720, 13, 0, 10, 0, 0, 1, 0, 0, 0, "Water Element", "Critical Damage", "", 9000000, Infinity, false, false, false, false, false, 0, 90000000, 0, 0, 450, "Advanced Water Gun", "");
    addArenaCraftWeapon(3, 2, 5, 130, "Gun", true, 151, 720, 13, 0, 10, 0, 0, 1, 0, 0, 0, "Fire Element", "Critical Damage", "", 9000000, Infinity, false, false, false, false, false, 0, 90000000, 0, 0, 450, "Advanced Fire Gun", "");
    addArenaCraftWeapon("Title", "\'lrn2craft\'");
    addArenaCraftWeapon("Title 2", "Melee Weapons");
    addArenaCraftWeapon(4, 1, 2, 8, "Sword", false, 201, 125, 14, 5, 15, 0, 0, 10, 5000, 0, 0, "Reward", "", "", 500, Infinity, false, false, false, false, false, 0, 2500, 500, 0, 0, "Broken Greatsword", "");
    addArenaCraftWeapon(4, 1, 2, 18, "Polearm (Stab)", false, 202, 145, 12, 15, 16, 0, 0, 10, 10000, 0, 0, "Reward", "Mastery", "", 2500, Infinity, false, false, false, false, false, 0, 12500, 2500, 0, 0, "Ranseur", "");
    addArenaCraftWeapon(4, 1, 2, 28, "Polearm", false, 203, 180, 13, 25, 17, 0, 0, 10, 25000, 0, 0, "Reward", "Mastery", "", 10000, Infinity, false, false, false, false, false, 0, 50000, 10000, 0, 1, "Halberd", "");
    addArenaCraftWeapon(4, 1, 2, 38, "Polearm (Stab)", false, 204, 230, 12, 35, 18, 0, 0, 10, 50000, 0, 0, "Reward", "Mastery", "", 50000, Infinity, false, false, false, false, false, 0, 250000, 50000, 0, 5, "Trident", "");
    addArenaCraftWeapon(4, 1, 2, 48, "Polearm (Stab)", false, 205, 250, 12, 45, 19, 0, 0, 10, 100000, 0, 0, "Reward", "Mastery", "", 100000, Infinity, false, false, false, false, false, 0, 500000, 100000, 1, 10, "Partisan", "");
    addArenaCraftWeapon(4, 1, 2, 58, "Polearm (Stab)", false, 206, 260, 15, 55, 20, 0, 0, 10, 250000, 0, 0, "Reward", "Mastery", "", 300000, Infinity, false, false, false, false, false, 0, 1500000, 300000, 2, 30, "Awl Pike", "");
    addArenaCraftWeapon(4, 1, 3, 68, "Polearm", false, 207, 270, 18, 65, 21, 0, 0, 10, 500000, 0, 0, "Reward", "Mastery", "", 600000, Infinity, false, false, false, false, false, 0, 3000000, 600000, 5, 60, "Bill Hook", "");
    addArenaCraftWeapon(4, 1, 3, 78, "Polearm (Stab)", false, 208, 350, 12, 75, 22, 0, 0, 10, 1000000, 0, 0, "Reward", "Mastery", "", 1000000, Infinity, false, false, false, false, false, 0, 5000000, 1000000, 10, 100, "Bat-Wing Corseque", "");
    addArenaCraftWeapon(4, 1, 3, 88, "Polearm (Stab)", false, 209, 380, 12, 85, 23, 0, 0, 10, 1500000, 0, 0, "Reward", "Mastery", "", 1500000, Infinity, false, false, false, false, false, 0, 7500000, 1500000, 15, 150, "Corseque", "");
    addArenaCraftWeapon(4, 2, 3, 98, "Polearm", false, 210, 375, 12, 95, 24, 0, 0, 10, 1500000, 0, 0, "Reward", "Mastery", "", 2000000, Infinity, false, false, false, false, false, 0, 10000000, 2000000, 20, 200, "Fauchard", "");
    addArenaCraftWeapon(4, 2, 3, 108, "Polearm (Stab)", false, 211, 410, 12, 105, 25, 0, 0, 10, 3000000, 0, 0, "Reward", "Mastery", "", 3000000, Infinity, false, false, false, false, false, 0, 15000000, 3000000, 30, 300, "Military Fork", "");
    addArenaCraftWeapon(4, 2, 3, 118, "Polearm", false, 212, 405, 12, 115, 26, 0, 0, 10, 3000000, 0, 0, "Reward", "Mastery", "", 4000000, Infinity, false, false, false, false, false, 0, 20000000, 4000000, 40, 400, "Fauchard-Fork", "");
    addArenaCraftWeapon(4, 2, 3, 128, "Polearm", false, 213, 385, 13, 125, 27, 0, 0, 20, 4500000, 0, 0, "Reward", "Mastery", "", 6000000, Infinity, false, false, false, false, false, 0, 30000000, 6000000, 60, 600, "Naginata", "");
    addArenaCraftWeapon(4, 2, 4, 133, "Polearm", false, 214, 410, 12, 135, 28, 0, 0, 20, 4500000, 0, 0, "Reward", "Mastery", "", 8000000, Infinity, false, false, false, false, false, 0, 40000000, 8000000, 80, 800, "Nagimaki", "");
    addArenaCraftWeapon(4, 2, 4, 138, "Polearm", false, 215, 410, 14, 145, 29, 0, 0, 20, 6000000, 0, 0, "Reward", "Mastery", "", 10000000, Infinity, false, false, false, false, false, 0, 50000000, 10000000, 100, 1000, "Fukuro Yari", "");
    addArenaCraftWeapon(4, 2, 4, 143, "Polearm", false, 216, 440, 12, 155, 30, 0, 0, 20, 6000000, 0, 0, "Reward", "Mastery", "", 15000000, Infinity, false, false, false, false, false, 0, 75000000, 15000000, 150, 1500, "Voulge", "");
    addArenaCraftWeapon(4, 3, 4, 148, "Polearm", false, 217, 510, 10, 165, 31, 0, 0, 20, 6000000, 0, 0, "Reward", "Mastery", "", 20000000, Infinity, false, false, false, false, false, 0, 100000000, 20000000, 200, 2000, "Scythe", "");
    addArenaCraftWeapon(4, 3, 4, 153, "Polearm", false, 218, 485, 10, 175, 32, 0, 0, 30, 9000000, 0, 0, "Reward", "Mastery", "", 25000000, Infinity, false, false, false, false, false, 0, 125000000, 25000000, 250, 2500, "Bardiche", "");
    addArenaCraftWeapon(4, 3, 4, 158, "Polearm", false, 219, 510, 12, 185, 33, 0, 0, 30, 9000000, 0, 0, "Reward", "Mastery", "", 30000000, Infinity, false, false, false, false, false, 0, 150000000, 30000000, 300, 3000, "Poleaxe", "");
    addArenaCraftWeapon(4, 3, 4, 163, "Polearm", false, 220, 535, 10, 195, 34, 0, 0, 30, 9000000, 0, 0, "Reward", "Mastery", "", 35000000, Infinity, false, false, false, false, false, 0, 175000000, 35000000, 350, 3500, "Lochaber Axe", "");
    addArenaCraftWeapon(4, 3, 4, 168, "Polearm", false, 221, 560, 10, 205, 35, 0, 0, 30, 12000000, 0, 0, "Reward", "Mastery", "", 40000000, Infinity, false, false, false, false, false, 0, 200000000, 40000000, 400, 4000, "Bohemian Earspoon", "");
    addArenaCraftWeapon(4, 3, 4, 173, "Hammer", false, 222, 570, 10, 215, 36, 0, 0, 30, 12000000, 0, 0, "Reward", "Mastery", "", 45000000, Infinity, false, false, false, false, false, 0, 225000000, 45000000, 450, 4500, "Bec de Corbin", "");
    addArenaCraftWeapon(4, 3, 4, 178, "Polearm", false, 223, 625, 10, 225, 37, 0, 0, 30, 15000000, 0, 0, "Reward", "Mastery", "", 50000000, Infinity, false, false, false, false, false, 0, 250000000, 50000000, 500, 5000, "Ox Tongue", "");
    addArenaCraftWeapon(4, 3, 4, 183, "Polearm (Stab)", false, 224, 640, 10, 235, 38, 0, 0, 30, 15000000, 0, 0, "Reward", "Mastery", "", 60000000, Infinity, false, false, false, false, false, 0, 300000000, 60000000, 600, 6000, "Spetum", "");
    addArenaCraftWeapon(4, 3, 5, 188, "Polearm", false, 225, 645, 10, 245, 39, 5, 0, 40, 18000000, 0, 0, "Reward", "Mastery", "", 70000000, Infinity, false, false, false, false, false, 0, 350000000, 70000000, 700, 7000, "Glaive", "");
    addArenaCraftWeapon(4, 3, 5, 193, "Polearm", false, 226, 650, 12, 255, 40, 10, 0, 40, 18000000, 0, 0, "Reward", "Mastery", "", 80000000, Infinity, false, false, false, false, false, 0, 400000000, 80000000, 800, 8000, "Guisarme", "");
    addArenaCraftWeapon(4, 3, 5, 198, "Polearm (Stab)", false, 231, 695, 11, 265, 41, 10, 0, 40, 21000000, 0, 0, "Reward", "Mastery", "", 90000000, Infinity, false, false, false, false, false, 0, 450000000, 90000000, 900, 9000, "Longspear", "");
    addArenaCraftWeapon(4, 4, 5, 203, "Hammer", false, 232, 745, 9, 275, 42, 10, 0, 40, 21000000, 0, 0, "Reward", "Mastery", "", 100000000, Infinity, false, false, false, false, false, 0, 500000000, 100000000, 1000, 10000, "Lucerne Hammer", "");
    addArenaCraftWeapon(4, 4, 5, 208, "Polearm", false, 227, 750, 9, 285, 43, 15, 0, 40, 24000000, 0, 0, "Reward", "Mastery", "", 150000000, Infinity, false, false, false, false, false, 0, 750000000, 150000000, 1500, 15000, "Glaive-Guisarme", "");
    addArenaCraftWeapon(4, 4, 5, 213, "Polearm", false, 228, 775, 11, 295, 44, 15, 0, 40, 24000000, 0, 0, "Reward", "Mastery", "", 200000000, Infinity, false, false, false, false, false, 0, 1000000000, 200000000, 2000, 20000, "Guisarme-Glaive", "");
    addArenaCraftWeapon(4, 4, 5, 218, "Polearm", false, 229, 825, 9, 320, 45, 20, 0, 40, 27000000, 0, 0, "Reward", "Mastery", "", 250000000, Infinity, false, false, false, false, false, 0, 1250000000, 250000000, 2500, 25000, "Glaive-Guisarme-Glaive", "");
    addArenaCraftWeapon(4, 4, 5, 228, "Polearm", false, 230, 850, 7, 360, 50, 25, 0, 50, 30000000, 0, 0, "Reward", "Mastery", "Attack Power", 400000000, Infinity, false, false, false, false, false, 0, 2000000000, 400000000, 4000, 40000, "Glaive-Glaive-Glaive-Guisarme-Glaive", "");
    addArenaCraftWeapon(4, 5, 5, 238, "Sword", false, 233, 1225, 15, 400, 60, 30, 10, 50, 30000000, 0, 0, "Reward", "Boss Damage", "Attack Power", 600000000, Infinity, false, false, false, false, false, 0, 3000000000, 600000000, 6000, 60000, "Greatsword", "");
    addArenaCraftWeapon(4, 5, 5, 248, "Sword", false, 234, 1300, 15, 500, 70, 35, 10, 50, 30000000, 0, 0, "Reward", "Boss Damage", "Attack Power", 800000000, Infinity, false, false, false, false, false, 0, 4000000000, 800000000, 8000, 80000, "Greatersword", "");
    addArenaCraftWeapon(4, 5, 1, 298, "Polearm", false, 264, 0, 11, 0, 45, 0, 20, 1, 0, -5, 0, "Dark Element", "Boss Damage", "", 1000000000, Infinity, false, false, true, false, false, 0, 0, 1000000000, 5000, 50000, "Fiend Glaive", "Cannot be enhanced with Attack enhancers.");
    addArenaCraftWeapon("Title 2", "Ranged Weapons");
    addArenaCraftWeapon(4, 2, 3, 108, "Gun", true, 153, 125, 25, 25, 35, 25, 0, 1, 0, 0, 0, "EXP", "Stun Chance", "", 3000000, Infinity, false, false, false, false, false, 0, 15000000, 3000000, 30, 300, "Laser Gun", "");
    addArenaCraftWeapon(4, 3, 4, 128, "Bow", true, 249, 650, 12, 0, 25, 35, 0, 1, 0, 0, 0, "Epic Monster Rate", "Instant Kill", "Accuracy", 6000000, Infinity, false, false, false, false, false, 0, 30000000, 6000000, 60, 600, "Mystic Bow", "");
    addArenaCraftWeapon(4, 3, 4, 148, "Gun", true, 154, 175, 30, 30, 40, 30, 0, 1, 0, 0, 0, "EXP", "Stun Chance", "", 20000000, Infinity, false, false, false, false, false, 0, 100000000, 20000000, 200, 2000, "Strong Machine Gun", "");
    addArenaCraftWeapon(4, 4, 5, 168, "Crossbow", true, 250, 725, 11, 0, 40, 25, 0, 1, 0, 0, 0, "Epic Monster Rate", "Instant Kill", "Accuracy", 40000000, Infinity, false, false, false, false, false, 0, 200000000, 40000000, 400, 4000, "Mystic Crossbow", "");
    addArenaCraftWeapon(4, 4, 5, 188, "Claw", true, 277, 775, 16, 60, 25, 15, 30, 1, 0, 0, 0, "Dark Element", "Autosteal", "Accuracy", 70000000, Infinity, false, false, false, false, false, 0, 350000000, 70000000, 700, 7000, "Pure Darkness Claw", "");
    addArenaCraftWeapon(4, 5, 5, 198, "Slingshot", true, 236, 925, 7, 0, 30, 100, 0, 1, 0, 0, 0, "Epic Monster Rate", "Instant Kill", "Accuracy", 90000000, Infinity, false, false, false, false, false, 0, 450000000, 90000000, 900, 9000, "Slingshot", "");
    addArenaCraftWeapon(4, 5, 5, 208, "Bow", true, 278, 850, 12, 0, 30, 40, 20, 1, 0, 0, 0, "Epic Monster Rate", "Poison Damage", "Equipment Attack", 150000000, Infinity, false, false, false, false, false, 0, 750000000, 150000000, 1500, 15000, "Crimson Bow", "");
    addArenaCraftWeapon(4, 5, 5, 218, "Slingshot", true, 237, 1050, 5, 0, 40, 120, 0, 1, 0, 0, 0, "Epic Monster Rate", "Instant Kill", "Accuracy", 250000000, Infinity, false, false, false, false, false, 0, 1250000000, 250000000, 2500, 25000, "Oversized Slingshot", "");
    addArenaCraftWeapon(4, 5, 5, 228, "Cannon", true, 238, 1175, 3, 200, 40, 0, 0, 1, 0, 0, 0, "Epic Monster Rate", "Instant Kill", "Defense Power", 300000000, Infinity, false, false, false, false, false, 0, 1500000000, 300000000, 3000, 30000, "Cannon", "");
    addArenaCraftWeapon(4, 5, 5, 238, "Cannon", true, 239, 1250, 3, 300, 50, 0, 0, 1, 0, 0, 0, "Epic Monster Rate", "Instant Kill", "Defense Power", 400000000, Infinity, false, false, false, false, false, 0, 2000000000, 400000000, 4000, 40000, "Gold Cannon", "");
    addArenaCraftWeapon(4, 5, 1, 258, "Staff", true, 261, 0, 9, 0, 25, 0, 10, 1, 0, -5, 0, "Light Element", "Boss Damage", "", 600000000, Infinity, false, false, true, false, false, 0, 0, 600000000, 3000, 30000, "Glaive of Smiting", "Shoots invisible projectiles!\nCannot be enhanced with Attack enhancers.");
    addArenaCraftWeapon(4, 5, 1, 278, "Staff", true, 263, 0, 10, 0, 35, 0, 10, 1, 0, -5, 0, "Dark Element", "Boss Damage", "", 800000000, Infinity, false, false, true, false, false, 0, 0, 800000000, 4000, 40000, "Darkglaive of Smiting", "Shoots invisible projectiles!\nCannot be enhanced with Attack enhancers.");
    addArenaCraftWeapon("Title", "Career");
    addArenaCraftWeapon(6, 2, 3, 135, "Sword", false, 301, 666, 8, 60, 20, 10, 10, 66, 600000, -6, 0, "", "Random", "", 0, Infinity, true, false, true, false, false, 0, 5000000, 250000, 10, 10, "Cursed Sword (1)", "");
    addArenaCraftWeapon(6, 3, 4, 165, "Sword", false, 301, 666, 9, 90, 30, 20, 20, 66, 600000, -6, 0, "", "Random", "", 0, Infinity, true, false, true, false, false, 0, 50000000, 2500000, 100, 100, "Cursed Sword (2)", "");
    addArenaCraftWeapon(6, 4, 5, 195, "Sword", false, 301, 666, 10, 120, 40, 30, 30, 66, 600000, -6, 0, "", "Random", "", 0, Infinity, true, false, true, false, false, 0, 500000000, 25000000, 1000, 1000, "Cursed Sword (3)", "");
    addArenaCraftWeapon(6, 5, 1, 500, "Sword", false, 300, 2005, 10, 0, 20, 0, 0, 1, 0, 2005, 300, "EXP", "Silence Chance", "", 0, Infinity, true, false, true, false, false, 0, 5000000000, 0, 0, 0, "Dark Ruler", "It\'s a ruler with Darkruler2005\'s contributions written on it. Unfortunately, there\'s so much text on it that it turned dark, and no matter how hard you try, you can\'t read anything.");
    addArenaCraftWeapon("Title", "Mission Kommander");
    addArenaCraftWeapon(7, 1, 1, 30, "Mining Tool", false, 311, 0, 5, 0, 3, 0, 0, 2, 500000, 10, 1, "Drop Rate", "", "", 0, Infinity, true, false, true, false, false, 0, 10000, 1000, 0, 0, "Bronze Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon(7, 2, 1, 70, "Mining Tool", false, 312, 0, 6, 0, 6, 0, 0, 2, 800000, 9, 16, "Drop Rate", "Critical Damage", "", 0, Infinity, true, false, true, false, false, 0, 100000, 10000, 0, 1, "Silver Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon(7, 3, 1, 120, "Mining Tool", false, 313, 0, 6, 0, 9, 0, 0, 3, 1100000, 9, 36, "Drop Rate", "Critical Damage", "", 0, Infinity, true, false, true, false, false, 0, 1000000, 100000, 1, 10, "Golden Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon(7, 4, 1, 180, "Mining Tool", false, 314, 0, 7, 0, 12, 0, 0, 3, 1500000, 9, 66, "Drop Rate", "Critical Damage", "", 0, Infinity, true, false, true, false, false, 0, 10000000, 1000000, 5, 100, "Diamond Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon(7, 5, 1, 250, "Mining Tool", false, 315, 0, 7, 0, 15, 0, 0, 4, 2000000, 9, 106, "Drop Rate", "Critical Damage", "", 0, Infinity, true, false, true, false, false, 0, 100000000, 10000000, 25, 1000, "Master\'s Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon(7, 5, 1, 350, "Mining Tool", false, 316, 0, 8, 0, 18, 0, 0, 4, 3000000, 9, 156, "Drop Rate", "Critical Damage", "", 0, Infinity, true, false, true, false, false, 0, 1000000000, 100000000, 100, 10000, "Legendary Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon(7, 2, 1, 1, "Sword", false, 177, 0, 1, 0, 10, 0, 0, 2, 100000, 0, 0, "Fire Element", "", "", 0, Infinity, false, false, true, false, false, 0, 200000, 0, 1, 0, "Burned Rope", "");
    addArenaCraftWeapon(7, 3, 1, 1, "Wand", true, 178, 0, 8, 0, 10, 0, 0, 3, 4000000, 0, 0, "", "", "", 9001, Infinity, false, false, true, false, false, 0, 2000000, 0, 10, 0, "Special Wand", "");
    addArenaCraftWeapon("Title", "The Special Arena");
    addArenaCraftWeapon(8, 3, 3, 120, "Trophy", false, 193, 937, 25, 100, 20, 20, 0, 60, 25000000, 10, 100, "Random", "Random", "", 0, 30, false, true, true, false, false, 5, 0, 0, 100, 100, "Bronze Endurance Trophy", "");
    addArenaCraftWeapon(8, 4, 4, 180, "Trophy", false, 194, 1037, 25, 200, 30, 30, 0, 90, 25000000, 9, 200, "Random", "Random", "", 0, 45, false, true, true, false, false, 10, 0, 0, 300, 300, "Silver Endurance Trophy", "");
    addArenaCraftWeapon(8, 5, 5, 250, "Trophy", false, 195, 1137, 25, 300, 40, 40, 0, 120, 25000000, 8, 300, "Random", "Random", "", 0, 60, false, true, true, false, false, 15, 0, 0, 900, 900, "Gold Endurance Trophy", "");
    addArenaCraftWeapon(8, 5, 5, 350, "Trophy", false, 298, 1237, 25, 400, 50, 50, 0, 150, 25000000, 7, 400, "Random", "Random", "", 0, 75, false, true, true, false, false, 20, 0, 0, 8100, 8100, "Platinum Endurance Trophy", "");
    addArenaCraftWeapon(8, 5, 5, 500, "Trophy", false, 299, 1337, 25, 500, 60, 60, 0, 180, 25000000, 6, 500, "Random", "Random", "", 0, 90, false, true, true, false, false, 25, 0, 0, 72900, 72900, "Unobtainium Endurance Trophy", "");
    addArenaCraftWeapon("Title", "Alien");
    addArenaCraftWeapon(12, 2, 5, 70, "Sword", false, 303, 900, 16, 100, 30, 30, 0, 30, 5000000, 0, 0, "Random", "Boss Damage", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Sword #1", "");
    addArenaCraftWeapon(12, 2, 5, 70, "Claw", true, 304, 600, 16, 20, 30, 30, 0, 30, 5000000, 0, 0, "Random", "Boss Damage", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Claw #1", "");
    addArenaCraftWeapon(12, 2, 5, 70, "Wand", true, 305, 600, 16, 20, 30, 30, 0, 30, 5000000, 0, 0, "Random", "Boss Damage", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Wand #1", "");
    addArenaCraftWeapon(12, 2, 5, 70, "Bow", true, 306, 600, 16, 20, 30, 30, 0, 30, 5000000, 0, 0, "Random", "Boss Damage", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Bow #1", "");
    addArenaCraftWeapon(12, 3, 5, 110, "Sword", false, 307, 1200, 16, 100, 30, 30, 0, 30, 10000000, 0, 0, "Random", "Boss Damage", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Sword #2", "");
    addArenaCraftWeapon(12, 3, 5, 110, "Claw", true, 308, 900, 16, 20, 30, 30, 0, 30, 10000000, 0, 0, "Random", "Boss Damage", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Claw #2", "");
    addArenaCraftWeapon(12, 3, 5, 110, "Wand", true, 309, 900, 16, 20, 30, 30, 0, 30, 10000000, 0, 0, "Random", "Boss Damage", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Wand #2", "");
    addArenaCraftWeapon(12, 3, 5, 110, "Bow", true, 310, 900, 16, 20, 30, 30, 0, 30, 10000000, 0, 0, "Random", "Boss Damage", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Bow #2", "");
    addArenaCraftWeapon("Title", "Elite Alien");
    addArenaCraftWeapon(14, 2, 5, 90, "Sword", false, 303, 1000, 19, 100, 30, 40, 10, 40, 10000000, 0, 0, "Random", "Boss Damage", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Sword #1", "");
    addArenaCraftWeapon(14, 2, 5, 90, "Claw", true, 304, 700, 19, 20, 30, 40, 10, 40, 10000000, 0, 0, "Random", "Boss Damage", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Claw #1", "");
    addArenaCraftWeapon(14, 2, 5, 90, "Wand", true, 305, 700, 19, 20, 30, 40, 10, 40, 10000000, 0, 0, "Random", "Boss Damage", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Wand #1", "");
    addArenaCraftWeapon(14, 2, 5, 90, "Bow", true, 306, 700, 19, 20, 30, 40, 10, 40, 10000000, 0, 0, "Random", "Boss Damage", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Bow #1", "");
    addArenaCraftWeapon(14, 3, 5, 130, "Sword", false, 307, 1300, 19, 100, 30, 40, 10, 40, 20000000, 0, 0, "Random", "Boss Damage", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Sword #2", "");
    addArenaCraftWeapon(14, 3, 5, 130, "Claw", true, 308, 1000, 19, 20, 30, 40, 10, 40, 20000000, 0, 0, "Random", "Boss Damage", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Claw #2", "");
    addArenaCraftWeapon(14, 3, 5, 130, "Wand", true, 309, 1000, 19, 20, 30, 40, 10, 40, 20000000, 0, 0, "Random", "Boss Damage", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Wand #2", "");
    addArenaCraftWeapon(14, 3, 5, 130, "Bow", true, 310, 1000, 19, 20, 30, 40, 10, 40, 20000000, 0, 0, "Random", "Boss Damage", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Bow #2", "");
    addArenaCraftWeapon("Title", "Chaotic Items");
    addArenaCraftWeapon(15, 1, 5, 268, "Polearm", false, 235, 725, 10, 600, 30, 30, 12, 60, 60000000, 0, 0, "Reward", "Mastery", "Attack Power", 100000000, Infinity, false, false, false, false, false, 0, 1000000000, 500000000, 100, 10000, "Badly Recolored Weapon", "");
    addArenaCraftWeapon(15, 1, 5, 288, "Sword", false, 251, 975, 18, 800, 50, 50, 12, 60, 60000000, 0, 0, "Drop Rate", "Instant Kill", "Attack Power", 150000000, Infinity, false, false, false, false, false, 0, 1500000000, 750000000, 150, 15000, "Scimitar", "");
    addArenaCraftWeapon(15, 1, 5, 308, "Sword", false, 252, 1000, 21, 1000, 50, 50, 40, 60, 60000000, 0, 0, "Drop Rate", "Instant Kill", "Attack Power", 250000000, Infinity, false, false, false, false, false, 0, 2500000000, 1250000000, 250, 25000, "Blood Scimitar", "");
    addArenaCraftWeapon(15, 1, 2, 500, "Axe", false, 266, 300, 8, 0, 30, 10, 10, 6, 70000000, 6, 500, "EXP", "Boss Damage", "Equipment Attack", 8000000000, Infinity, false, false, true, true, false, 20, 80000000000, 40000000000, 16000, 1600000, "Meteoric Battleaxe", "");
    addArenaCraftWeapon(15, 1, 2, 500, "Sword", false, 267, 275, 7, 0, 20, 20, 10, 6, 70000000, 6, 500, "EXP", "Boss Damage", "Equipment Attack", 8000000000, Infinity, false, false, true, true, false, 20, 80000000000, 40000000000, 16000, 1600000, "Meteoric Sword", "");
    addArenaCraftWeapon(15, 1, 2, 500, "Dagger", false, 268, 325, 11, 0, 20, 30, 10, 6, 70000000, 6, 500, "EXP", "Boss Damage", "Equipment Attack", 8000000000, Infinity, false, false, true, true, false, 20, 80000000000, 40000000000, 16000, 1600000, "Meteoric Cleaver", "");
    addArenaCraftWeapon(15, 1, 2, 500, "Polearm", false, 269, 275, 5, 0, 20, 10, 10, 6, 70000000, 6, 500, "EXP", "Boss Damage", "Equipment Attack", 8000000000, Infinity, false, false, true, true, false, 20, 80000000000, 40000000000, 16000, 1600000, "Meteoric Glaive", "");
    addArenaCraftWeapon(15, 1, 2, 500, "Polearm", false, 270, 325, 7, 0, 10, 10, 40, 6, 70000000, 6, 500, "EXP", "Boss Damage", "Equipment Attack", 8000000000, Infinity, false, false, true, true, false, 20, 80000000000, 40000000000, 16000, 1600000, "Meteoric Scythe", "");
    addArenaCraftWeapon(15, 1, 2, 500, "Polearm", false, 271, 175, 6, 0, 20, 10, 10, 6, 70000000, 6, 500, "EXP", "Boss Damage", "Equipment Attack", 8000000000, Infinity, false, false, true, true, false, 20, 80000000000, 40000000000, 16000, 1600000, "Meteoric Voulge", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Dagger", false, 81, 1250, 9, 200, 10, 10, 0, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Dagger", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Sword", false, 71, 1300, 8, 200, 10, 10, 0, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Sword", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Spear", false, 72, 1150, 4, 200, 10, 10, 0, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Spear", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Axe", false, 73, 1200, 6, 200, 10, 10, 0, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Axe", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Bow", true, 74, 950, 8, 200, 10, 20, 0, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Bow", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Gun", true, 75, 1000, 10, 200, 10, 10, 0, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Gun", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Staff", true, 82, 1100, 5, 200, 10, 10, 20, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Staff", "");
    addArenaCraftWeapon(15, 4, 1, 388, "Claw", true, 83, 950, 10, 200, 10, 10, 10, 44, 70000000, 4, 500, "Spawn Rate", "Boss Damage", "Attack Power", 444444444, Infinity, false, false, false, false, false, 0, 4444444444, 444444444, 444, 44444, "Dragon Slayer Claw", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Dagger", false, 84, 2500, 10, 300, 15, 15, 0, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Dagger", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Sword", false, 76, 2600, 9, 300, 15, 15, 0, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Sword", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Spear", false, 77, 2300, 5, 300, 15, 15, 0, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Spear", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Axe", false, 78, 2400, 7, 300, 15, 15, 0, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Axe", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Bow", true, 79, 1900, 9, 300, 15, 25, 0, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Bow", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Gun", true, 80, 2000, 11, 300, 15, 15, 0, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Gun", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Staff", true, 85, 2200, 6, 300, 15, 15, 20, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Staff", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Claw", true, 86, 1900, 11, 300, 15, 15, 10, 66, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Claw", "");
    addArenaCraftWeapon(15, 5, 1, 438, "Stick", false, 87, 30, 13, 0, 10, 0, 0, 1, 2700000000, 6, 500, "Spawn Rate", "Boss Damage", "Attack Power", 66666666666, Infinity, false, false, false, false, false, 0, 666666666666, 66666666666, 66666, 6666666, "Demon Slayer Stick", "");
    addArenaCraftWeapon("Title", "Unobtainium");
    addArenaCraftWeapon(16, 1, 1, 300, "Wand", true, 272, 350, 25, 0, 5, 0, 0, 10, 600000000, -7, 0, "Light Element", "Potion Efficiency", "", 50000000, Infinity, false, false, true, false, false, 10, 0, 2500000000, 7500, 125000, "Fairy Godmother Wand", "When equipped: Magic Resist +15%, Negate Effect Chance +15%");
    addArenaCraftWeapon(16, 1, 1, 500, "Mining Tool", false, 317, 0, 7, 0, 21, 0, 0, 6, 400000000, 8, 510, "Drop Rate", "Boss Damage", "", 0, 7, true, true, true, false, false, 10, 1000000000, 50000000, 1337, 10000, "Unobtainium Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon(16, 1, 1, 500, "Mining Tool", false, 317, 0, 7, 0, 20, 0, 0, 5, 400000000, 8, 500, "Drop Rate", "Boss Damage", "", 0, Infinity, true, false, true, false, false, 10, 1000000000, 50000000, 9001, 25000, "Unobtainium Pickaxe", "A pickaxe used for mining. You can only mine in some areas.");
    addArenaCraftWeapon("Title", "Robotic");
    addArenaCraftWeapon(18, 5, 5, 120, "Sword", false, 197, 175, 7, 0, 10, 0, 0, 10, 300000000, 0, 100, "Random", "Random", "", 0, Infinity, false, false, false, false, false, 0, 20000000000, 0, 10000, 100000, "Bacon Sword", "3rd Edition");
    addArenaCraftWeapon("Title", "Tukkonium");
    addArenaCraftWeapon(21, 1, 1, 488, "Dagger", false, 94, 4166, 20, 833, 33, 125, 20, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Dagger", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Sword", false, 89, 4166, 19, 833, 33, 125, 20, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Sword", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Spear", false, 90, 4166, 16, 833, 33, 125, 20, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Spear", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Axe", false, 91, 4166, 18, 833, 33, 125, 20, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Axe", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Bow", true, 92, 4166, 19, 833, 33, 150, 20, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Bow", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Gun", true, 93, 4166, 21, 833, 33, 125, 20, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Gun", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Staff", true, 95, 4166, 16, 833, 33, 125, 40, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Staff", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Claw", true, 96, 4166, 21, 833, 33, 125, 30, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Claw", "");
    addArenaCraftWeapon(21, 1, 1, 488, "Stick", false, 97, 30, 13, 0, 10, 0, 0, 1, 7700000000, 9, 100000, "Spawn Rate", "Boss Damage", "Attack Power", 0, Infinity, false, false, true, false, false, 16, 0, 0, 35, 6250000, "Tukkonium Stick", "");
    addArenaCraftWeapon("Title", "?????????????");
    addArenaCraftWeapon(19, 1, 1, 50, "Sword", false, 330, 2500, 50, 0, 50, 250, 0, 1, 0, 10, 4200, "Random", "Random", "Random", 0, Infinity, true, false, true, true, false, 60, 0, 0, 0, 0, "Reincarnation Weapon", "Also shoots projectiles at monsters from a far distance!");
    addArenaCraftWeapon("Title", "Secondary Weapons");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 280, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "", "Poison Chance", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 45, 500000000, 100000000, 250, 10000, "Poison Arrows", "<font color=\'#FFFF00\'>Can only be equipped with a Bow or Crossbow.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 281, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "", "Stun Chance", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 45, 500000000, 100000000, 250, 10000, "Explosive Arrows", "<font color=\'#FFFF00\'>Can only be equipped with a Bow or Crossbow.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 282, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "", "Double Hit Chance", "Attack Power", 50000000, Infinity, true, false, true, false, false, 45, 500000000, 100000000, 250, 10000, "Mega Bullets", "<font color=\'#FFFF00\'>Can only be equipped with a Gun.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 283, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "", "Mastery", "Attack Power", 50000000, Infinity, true, false, true, false, false, 45, 500000000, 100000000, 250, 10000, "Master Shurikens", "<font color=\'#FFFF00\'>Can only be equipped with a Claw.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 351, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Fire Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Fire", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 352, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Ice Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Ice", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 353, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Wind Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Wind", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 354, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Earth Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Earth", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 355, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Thunder Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Thunder", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 356, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Water Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Water", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 357, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Light Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Light", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 358, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Dark Element", "MP", "Equipment Attack", 50000000, Infinity, true, false, true, false, false, 15, 500000000, 100000000, 250, 10000, "Spell Scroll - Dark", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 284, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Fire Element", "Poison Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Fire Card", "Adds a special FIRE effect (rapidly deal 300% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 285, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Ice Element", "Stun Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Ice Card", "Adds a special ICE effect (rapidly deal 200% damage and knock the monster back a 20% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 286, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Wind Element", "Weaken Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Wind Card", "Adds a special WIND effect (rapidly deal 200% damage and knock the monster back a 30% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 287, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Earth Element", "Weaken Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Earth Card", "Adds a special EARTH effect (rapidly deal 300% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 288, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Thunder Element", "Stun Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Thunder Card", "Adds a special THUNDER effect (rapidly deal 150% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 289, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Water Element", "Poison Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Water Card", "Adds a special WATER effect (rapidly deal 300% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 290, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Light Element", "Blind Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Light Card", "Adds a special LIGHT effect (rapidly deal 150% damage and knock the monster back a 20% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 291, 0, 0, 0, 0, 0, 0, -1, 100000, 0, 706, "Dark Element", "Blind Chance", "", 500000000, Infinity, true, false, true, false, false, 15, 5000000000, 1000000000, 2500, 100000, "Dark Card", "Adds a special DARK effect (rapidly deal 200% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon("Title", "Secondary Weapons [+]");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 280, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "", "Poison Chance", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 45, 20000000000, 4000000000, 9999, 400000, "Poison Arrows [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Bow or Crossbow.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 281, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "", "Stun Chance", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 45, 20000000000, 4000000000, 9999, 400000, "Explosive Arrows [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Bow or Crossbow.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 282, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "", "Double Hit Chance", "Attack Power", 2000000000, Infinity, true, false, true, false, false, 45, 20000000000, 4000000000, 9999, 400000, "Mega Bullets [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Gun.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 283, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "", "Mastery", "Attack Power", 2000000000, Infinity, true, false, true, false, false, 45, 20000000000, 4000000000, 9999, 400000, "Master Shurikens [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Claw.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 351, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Fire Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Fire [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 352, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Ice Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Ice [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 353, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Wind Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Wind [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 354, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Earth Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Earth [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 355, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Thunder Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Thunder [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 356, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Water Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Water [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 357, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Light Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Light [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 200, "Secondary Weapon", false, 358, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Dark Element", "MP", "Equipment Attack", 2000000000, Infinity, true, false, true, false, false, 15, 20000000000, 4000000000, 9999, 400000, "Spell Scroll - Dark [+]", "<font color=\'#FFFF00\'>Can only be equipped with a Wand or Staff.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 284, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Fire Element", "Poison Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Fire Card [+]", "Adds a special FIRE effect (rapidly deal 300% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 285, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Ice Element", "Stun Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Ice Card [+]", "Adds a special ICE effect (rapidly deal 200% damage and knock the monster back a 20% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 286, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Wind Element", "Weaken Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Wind Card [+]", "Adds a special WIND effect (rapidly deal 200% damage and knock the monster back a 30% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 287, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Earth Element", "Weaken Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Earth Card [+]", "Adds a special EARTH effect (rapidly deal 300% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 288, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Thunder Element", "Stun Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Thunder Card [+]", "Adds a special THUNDER effect (rapidly deal 150% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 289, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Water Element", "Poison Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Water Card [+]", "Adds a special WATER effect (rapidly deal 300% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 290, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Light Element", "Blind Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Light Card [+]", "Adds a special LIGHT effect (rapidly deal 150% damage and knock the monster back a 20% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftWeapon(16, 1, 1, 500, "Secondary Weapon", false, 291, 0, 0, 0, 0, 0, 0, -1, 2500000, 0, 706, "Dark Element", "Blind Chance", "", 20000000000, Infinity, true, false, true, false, false, 15, 200000000000, 40000000000, 99999, 4000000, "Dark Card [+]", "Adds a special DARK effect (rapidly deal 200% damage and knock the monster back a 10% distance) when you use Limit Break, Combo Strike or Overkill, allowing you to deal increased damage. Effect also has a 1% chance to activate with any other attack.\n\n<font color=\'#FFFF00\'>Can be equipped with any melee weapon, except Ultimate Weapon and Reincarnation Weapon.</font>\n\nThis item cannot be enhanced.");
    addArenaCraftArmor("Title", "Newbie Items");
    addArenaCraftArmor(1, 1, 1, 1, "Hat", 101, 0, 0, 10, 10, 0, 0, 1, 0, 0, 0, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 0, 0, "Newbie Hat", "");
    addArenaCraftArmor(1, 1, 1, 1, "Shirt", 101, 0, 0, 10, 10, 0, 0, 1, 0, 0, 0, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 0, 0, "Newbie Shirt", "");
    addArenaCraftArmor(1, 1, 1, 1, "Gloves", 101, 0, 0, 10, 10, 0, 0, 1, 0, 0, 0, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 0, 0, "Newbie Gloves", "");
    addArenaCraftArmor(1, 1, 1, 1, "Pants", 101, 0, 0, 10, 10, 0, 0, 1, 0, 0, 0, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 0, 0, "Newbie Pants", "");
    addArenaCraftArmor(1, 1, 1, 1, "Shoes", 101, 0, 0, 10, 10, 0, 0, 1, 0, 0, 0, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 0, 0, "Newbie Shoes", "");
    addArenaCraftArmor("Title", "Basic");
    addArenaCraftArmor("Title 2", "Skin");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 2, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "Pink Skin", "");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 3, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "Teal Skin", "");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 4, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "Green Skin", "");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 5, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "Red Skin", "");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 6, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "Black Skin", "");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 7, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "White Skin", "");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 10, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "Purple Skin", "");
    addArenaCraftArmor(3, 1, 1, 50, "Skin", 11, 0, 0, 25, 0, 0, 0, 1, 0, 7, 0, "Random", "Random", "Random", 750000, Infinity, false, false, true, false, false, 0, 5000000, 0, 0, 25, "Blue Skin", "");
    addArenaCraftArmor("Title 2", "Armor Sets");
    addArenaCraftArmor(3, 1, 2, 10, "Hat", 102, 2, 0, 20, 11, 0, 0, 1, 0, 0, 0, "", "", "", 50, Infinity, false, false, false, false, false, 0, 500, 0, 0, 0, "Leather Hat", "");
    addArenaCraftArmor(3, 1, 2, 10, "Shirt", 102, 2, 0, 30, 10, 0, 0, 1, 0, 0, 0, "", "", "", 50, Infinity, false, false, false, false, false, 0, 500, 0, 0, 0, "Leather Shirt", "");
    addArenaCraftArmor(3, 1, 2, 10, "Gloves", 102, 5, 0, 10, 11, 0, 0, 1, 0, 0, 0, "", "", "", 50, Infinity, false, false, false, false, false, 0, 500, 0, 0, 0, "Leather Gloves", "");
    addArenaCraftArmor(3, 1, 2, 10, "Pants", 102, 2, 0, 30, 10, 0, 0, 1, 0, 0, 0, "", "", "", 50, Infinity, false, false, false, false, false, 0, 500, 0, 0, 0, "Leather Pants", "");
    addArenaCraftArmor(3, 1, 2, 10, "Shoes", 102, 2, 1, 10, 10, 1, 0, 1, 0, 0, 0, "", "", "", 50, Infinity, false, false, false, false, false, 0, 500, 0, 0, 0, "Leather Shoes", "");
    addArenaCraftArmor(3, 1, 2, 20, "Hat", 103, 4, 0, 30, 12, 0, 0, 1, 0, 0, 0, "", "", "", 200, Infinity, false, false, false, false, false, 0, 2000, 0, 0, 0, "Kongregate Hat", "");
    addArenaCraftArmor(3, 1, 2, 20, "Shirt", 103, 4, 0, 45, 10, 0, 0, 1, 0, 0, 0, "", "", "", 200, Infinity, false, false, false, false, false, 0, 2000, 0, 0, 0, "Kongregate Shirt", "");
    addArenaCraftArmor(3, 1, 2, 20, "Gloves", 103, 10, 0, 15, 12, 0, 0, 1, 0, 0, 0, "", "", "", 200, Infinity, false, false, false, false, false, 0, 2000, 0, 0, 0, "Kongregate Gloves", "");
    addArenaCraftArmor(3, 1, 2, 20, "Pants", 103, 4, 0, 45, 10, 0, 0, 1, 0, 0, 0, "", "", "", 200, Infinity, false, false, false, false, false, 0, 2000, 0, 0, 0, "Kongregate Pants", "");
    addArenaCraftArmor(3, 1, 2, 20, "Shoes", 103, 4, 1, 15, 10, 2, 0, 1, 0, 0, 0, "", "", "", 200, Infinity, false, false, false, false, false, 0, 2000, 0, 0, 0, "Kongregate Shoes", "");
    addArenaCraftArmor(3, 1, 2, 30, "Hat", 104, 6, 0, 40, 13, 0, 0, 1, 0, 0, 0, "", "", "", 1000, Infinity, false, false, false, false, false, 0, 10000, 0, 0, 0, "Lovely Hat", "");
    addArenaCraftArmor(3, 1, 2, 30, "Shirt", 104, 6, 0, 60, 10, 0, 0, 1, 0, 0, 0, "", "", "", 1000, Infinity, false, false, false, false, false, 0, 10000, 0, 0, 0, "Lovely Shirt", "");
    addArenaCraftArmor(3, 1, 2, 30, "Gloves", 104, 15, 0, 20, 13, 0, 0, 1, 0, 0, 0, "", "", "", 1000, Infinity, false, false, false, false, false, 0, 10000, 0, 0, 0, "Lovely Gloves", "");
    addArenaCraftArmor(3, 1, 2, 30, "Pants", 104, 6, 0, 60, 10, 0, 0, 1, 0, 0, 0, "", "", "", 1000, Infinity, false, false, false, false, false, 0, 10000, 0, 0, 0, "Lovely Pants", "");
    addArenaCraftArmor(3, 1, 2, 30, "Shoes", 104, 6, 1, 20, 10, 3, 0, 1, 0, 0, 0, "", "", "", 1000, Infinity, false, false, false, false, false, 0, 10000, 0, 0, 0, "Lovely Shoes", "");
    addArenaCraftArmor(3, 1, 3, 40, "Hat", 105, 8, 0, 50, 14, 0, 0, 1, 0, 0, 0, "", "", "", 3000, Infinity, false, false, false, false, false, 0, 30000, 0, 0, 0, "Red Hat", "");
    addArenaCraftArmor(3, 1, 3, 40, "Shirt", 105, 8, 0, 75, 10, 0, 0, 1, 0, 0, 0, "", "", "", 3000, Infinity, false, false, false, false, false, 0, 30000, 0, 0, 0, "Red Shirt", "");
    addArenaCraftArmor(3, 1, 3, 40, "Gloves", 105, 20, 0, 25, 14, 0, 0, 1, 0, 0, 0, "", "", "", 3000, Infinity, false, false, false, false, false, 0, 30000, 0, 0, 0, "Red Gloves", "");
    addArenaCraftArmor(3, 1, 3, 40, "Pants", 105, 8, 0, 75, 10, 0, 0, 1, 0, 0, 0, "", "", "", 3000, Infinity, false, false, false, false, false, 0, 30000, 0, 0, 0, "Red Pants", "");
    addArenaCraftArmor(3, 1, 3, 40, "Shoes", 105, 8, 1, 25, 10, 4, 0, 1, 0, 0, 0, "", "", "", 3000, Infinity, false, false, false, false, false, 0, 30000, 0, 0, 0, "Red Shoes", "");
    addArenaCraftArmor(3, 1, 3, 50, "Hat", 106, 10, 0, 60, 15, 0, 0, 1, 0, 0, 0, "", "", "", 8000, Infinity, false, false, false, false, false, 0, 80000, 0, 0, 0, "Knight Hat", "");
    addArenaCraftArmor(3, 1, 3, 50, "Shirt", 106, 10, 0, 90, 10, 0, 0, 1, 0, 0, 0, "", "", "", 8000, Infinity, false, false, false, false, false, 0, 80000, 0, 0, 0, "Knight Shirt", "");
    addArenaCraftArmor(3, 1, 3, 50, "Gloves", 106, 25, 0, 30, 15, 0, 0, 1, 0, 0, 0, "", "", "", 8000, Infinity, false, false, false, false, false, 0, 80000, 0, 0, 0, "Knight Gloves", "");
    addArenaCraftArmor(3, 1, 3, 50, "Pants", 106, 10, 0, 90, 10, 0, 0, 1, 0, 0, 0, "", "", "", 8000, Infinity, false, false, false, false, false, 0, 80000, 0, 0, 0, "Knight Pants", "");
    addArenaCraftArmor(3, 1, 3, 50, "Shoes", 106, 10, 2, 30, 10, 5, 0, 1, 0, 0, 0, "", "", "", 8000, Infinity, false, false, false, false, false, 0, 80000, 0, 0, 0, "Knight Shoes", "");
    addArenaCraftArmor(3, 1, 4, 60, "Hat", 107, 12, 0, 70, 16, 0, 0, 1, 0, 0, 0, "", "", "", 20000, Infinity, false, false, false, false, false, 0, 200000, 0, 0, 1, "Paladin Hat", "");
    addArenaCraftArmor(3, 1, 4, 60, "Shirt", 107, 12, 0, 105, 10, 0, 0, 1, 0, 0, 0, "", "", "", 20000, Infinity, false, false, false, false, false, 0, 200000, 0, 0, 1, "Paladin Shirt", "");
    addArenaCraftArmor(3, 1, 4, 60, "Gloves", 107, 30, 0, 35, 16, 0, 0, 1, 0, 0, 0, "", "", "", 20000, Infinity, false, false, false, false, false, 0, 200000, 0, 0, 1, "Paladin Gloves", "");
    addArenaCraftArmor(3, 1, 4, 60, "Pants", 107, 12, 0, 105, 10, 0, 0, 1, 0, 0, 0, "", "", "", 20000, Infinity, false, false, false, false, false, 0, 200000, 0, 0, 1, "Paladin Pants", "");
    addArenaCraftArmor(3, 1, 4, 60, "Shoes", 107, 12, 2, 35, 10, 6, 0, 1, 0, 0, 0, "", "", "", 20000, Infinity, false, false, false, false, false, 0, 200000, 0, 0, 1, "Paladin Shoes", "");
    addArenaCraftArmor(3, 1, 4, 70, "Hat", 108, 14, 0, 80, 17, 0, 0, 1, 0, 0, 0, "", "", "", 50000, Infinity, false, false, false, false, false, 0, 500000, 0, 0, 2, "Executioner Hat", "");
    addArenaCraftArmor(3, 1, 4, 70, "Shirt", 108, 14, 0, 120, 10, 0, 0, 1, 0, 0, 0, "", "", "", 50000, Infinity, false, false, false, false, false, 0, 500000, 0, 0, 2, "Executioner Shirt", "");
    addArenaCraftArmor(3, 1, 4, 70, "Gloves", 108, 35, 0, 40, 17, 0, 0, 1, 0, 0, 0, "", "", "", 50000, Infinity, false, false, false, false, false, 0, 500000, 0, 0, 2, "Executioner Gloves", "");
    addArenaCraftArmor(3, 1, 4, 70, "Pants", 108, 14, 0, 120, 10, 0, 0, 1, 0, 0, 0, "", "", "", 50000, Infinity, false, false, false, false, false, 0, 500000, 0, 0, 2, "Executioner Pants", "");
    addArenaCraftArmor(3, 1, 4, 70, "Shoes", 108, 14, 2, 40, 10, 7, 0, 1, 0, 0, 0, "", "", "", 50000, Infinity, false, false, false, false, false, 0, 500000, 0, 0, 2, "Executioner Shoes", "");
    addArenaCraftArmor(3, 1, 5, 80, "Hat", 109, 16, 0, 100, 18, 0, 0, 1, 0, 0, 0, "", "", "", 120000, Infinity, false, false, false, false, false, 0, 1200000, 0, 0, 6, "Dragonewyn Hat", "");
    addArenaCraftArmor(3, 1, 5, 80, "Shirt", 109, 16, 0, 150, 10, 0, 0, 1, 0, 0, 0, "", "", "", 120000, Infinity, false, false, false, false, false, 0, 1200000, 0, 0, 6, "Dragonewyn Shirt", "");
    addArenaCraftArmor(3, 1, 5, 80, "Gloves", 109, 40, 0, 50, 18, 0, 0, 1, 0, 0, 0, "", "", "", 120000, Infinity, false, false, false, false, false, 0, 1200000, 0, 0, 6, "Dragonewyn Gloves", "");
    addArenaCraftArmor(3, 1, 5, 80, "Pants", 109, 16, 0, 150, 10, 0, 0, 1, 0, 0, 0, "", "", "", 120000, Infinity, false, false, false, false, false, 0, 1200000, 0, 0, 6, "Dragonewyn Pants", "");
    addArenaCraftArmor(3, 1, 5, 80, "Shoes", 109, 16, 2, 50, 10, 8, 0, 1, 0, 0, 0, "", "", "", 120000, Infinity, false, false, false, false, false, 0, 1200000, 0, 0, 6, "Dragonewyn Shoes", "");
    addArenaCraftArmor(3, 1, 5, 90, "Hat", 127, 18, 0, 150, 19, 0, 0, 3, 600000, 0, 0, "", "", "", 300000, Infinity, false, false, false, false, true, 0, 3000000, 0, 0, 15, "Spirit Hat", "");
    addArenaCraftArmor(3, 1, 5, 90, "Shirt", 127, 18, 0, 225, 10, 0, 0, 3, 600000, 0, 0, "", "", "", 300000, Infinity, false, false, false, false, true, 0, 3000000, 0, 0, 15, "Spirit Shirt", "");
    addArenaCraftArmor(3, 1, 5, 90, "Gloves", 127, 45, 0, 75, 19, 0, 0, 3, 600000, 0, 0, "", "", "", 300000, Infinity, false, false, false, false, true, 0, 3000000, 0, 0, 15, "Spirit Gloves", "");
    addArenaCraftArmor(3, 1, 5, 90, "Pants", 127, 18, 0, 225, 10, 0, 0, 3, 600000, 0, 0, "", "", "", 300000, Infinity, false, false, false, false, true, 0, 3000000, 0, 0, 15, "Spirit Pants", "");
    addArenaCraftArmor(3, 1, 5, 90, "Shoes", 127, 18, 2, 75, 10, 9, 0, 3, 600000, 0, 0, "", "", "", 300000, Infinity, false, false, false, false, true, 0, 3000000, 0, 0, 15, "Spirit Shoes", "");
    addArenaCraftArmor(3, 2, 5, 100, "Hat", 131, 20, 0, 200, 20, 0, 0, 9, 1337000, 0, 0, "", "", "", 600000, Infinity, false, false, false, false, false, 0, 6000000, 0, 0, 30, "Elite Hat", "");
    addArenaCraftArmor(3, 2, 5, 100, "Shirt", 131, 20, 0, 300, 10, 0, 0, 9, 1337000, 0, 0, "", "", "", 600000, Infinity, false, false, false, false, false, 0, 6000000, 0, 0, 30, "Elite Shirt", "");
    addArenaCraftArmor(3, 2, 5, 100, "Gloves", 131, 50, 0, 100, 20, 0, 0, 9, 1337000, 0, 0, "", "", "", 600000, Infinity, false, false, false, false, false, 0, 6000000, 0, 0, 30, "Elite Gloves", "");
    addArenaCraftArmor(3, 2, 5, 100, "Pants", 131, 20, 0, 300, 10, 0, 0, 9, 1337000, 0, 0, "", "", "", 600000, Infinity, false, false, false, false, false, 0, 6000000, 0, 0, 30, "Elite Pants", "");
    addArenaCraftArmor(3, 2, 5, 100, "Shoes", 131, 20, 3, 100, 10, 10, 0, 9, 1337000, 0, 0, "", "", "", 600000, Infinity, false, false, false, false, false, 0, 6000000, 0, 0, 30, "Elite Shoes", "");
    addArenaCraftArmor("Title", "\'lrn2craft\'");
    addArenaCraftArmor(4, 1, 2, 8, "Hat", 116, 3, 0, 20, 10, 0, 6, 1, 0, 0, 0, "Reward", "Mastery", "", 100, Infinity, false, false, false, false, false, 0, 500, 100, 0, 0, "Training Hat", "");
    addArenaCraftArmor(4, 1, 2, 8, "Shirt", 116, 3, 0, 20, 11, 0, 0, 1, 0, 0, 0, "Reward", "Mastery", "", 100, Infinity, false, false, false, false, false, 0, 500, 100, 0, 0, "Training Shirt", "");
    addArenaCraftArmor(4, 1, 2, 8, "Gloves", 116, 4, 0, 20, 11, 6, 0, 1, 0, 0, 0, "Reward", "Mastery", "", 100, Infinity, false, false, false, false, false, 0, 500, 100, 0, 0, "Training Gloves", "");
    addArenaCraftArmor(4, 1, 2, 8, "Pants", 116, 3, 0, 20, 11, 0, 0, 1, 0, 0, 0, "Reward", "Mastery", "", 100, Infinity, false, false, false, false, false, 0, 500, 100, 0, 0, "Training Pants", "");
    addArenaCraftArmor(4, 1, 2, 8, "Shoes", 116, 3, 1, 20, 10, 6, 0, 1, 0, 0, 0, "Reward", "Mastery", "", 100, Infinity, false, false, false, false, false, 0, 500, 100, 0, 0, "Training Shoes", "");
    addArenaCraftArmor(4, 1, 2, 38, "Hat", 117, 5, 0, 50, 10, 0, 7, 1, 0, 0, 0, "Reward", "Accuracy", "", 10000, Infinity, false, false, false, false, false, 0, 50000, 10000, 0, 1, "Soldier Hat", "");
    addArenaCraftArmor(4, 1, 2, 38, "Shirt", 117, 5, 0, 50, 12, 0, 0, 1, 0, 0, 0, "Reward", "Accuracy", "", 10000, Infinity, false, false, false, false, false, 0, 50000, 10000, 0, 1, "Soldier Shirt", "");
    addArenaCraftArmor(4, 1, 2, 38, "Gloves", 117, 7, 0, 50, 12, 7, 0, 1, 0, 0, 0, "Reward", "Accuracy", "", 10000, Infinity, false, false, false, false, false, 0, 50000, 10000, 0, 1, "Soldier Gloves", "");
    addArenaCraftArmor(4, 1, 2, 38, "Pants", 117, 5, 0, 50, 12, 0, 0, 1, 0, 0, 0, "Reward", "Accuracy", "", 10000, Infinity, false, false, false, false, false, 0, 50000, 10000, 0, 1, "Soldier Pants", "");
    addArenaCraftArmor(4, 1, 2, 38, "Shoes", 117, 5, 1, 50, 10, 7, 0, 1, 0, 0, 0, "Reward", "Accuracy", "", 10000, Infinity, false, false, false, false, false, 0, 50000, 10000, 0, 1, "Soldier Shoes", "");
    addArenaCraftArmor(4, 1, 3, 68, "Hat", 118, 7, 0, 80, 10, 0, 8, 1, 0, 0, 0, "Reward", "HP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 300000, 60000, 0, 6, "Stripper Nurse Hat", "");
    addArenaCraftArmor(4, 1, 3, 68, "Shirt", 118, 7, 0, 80, 13, 0, 0, 1, 0, 0, 0, "Reward", "HP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 300000, 60000, 0, 6, "Stripper Nurse Shirt", "");
    addArenaCraftArmor(4, 1, 3, 68, "Gloves", 118, 10, 0, 80, 13, 8, 0, 1, 0, 0, 0, "Reward", "HP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 300000, 60000, 0, 6, "Stripper Nurse Gloves", "");
    addArenaCraftArmor(4, 1, 3, 68, "Pants", 118, 7, 0, 80, 13, 0, 0, 1, 0, 0, 0, "Reward", "HP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 300000, 60000, 0, 6, "Stripper Nurse Pants", "");
    addArenaCraftArmor(4, 1, 3, 68, "Shoes", 118, 7, 1, 80, 10, 8, 0, 1, 0, 0, 0, "Reward", "HP Regen", "", 60000, Infinity, false, false, false, false, false, 0, 300000, 60000, 0, 6, "Stripper Nurse Shoes", "");
    addArenaCraftArmor(4, 2, 3, 88, "Hat", 110, 9, 0, 110, 10, 0, 9, 1, 0, 0, 0, "Reward", "Evasion", "", 150000, Infinity, false, false, false, false, false, 0, 750000, 150000, 1, 15, "Enchanted Leather Hat", "");
    addArenaCraftArmor(4, 2, 3, 88, "Shirt", 110, 9, 0, 110, 14, 0, 0, 1, 0, 0, 0, "Reward", "Evasion", "", 150000, Infinity, false, false, false, false, false, 0, 750000, 150000, 1, 15, "Enchanted Leather Shirt", "");
    addArenaCraftArmor(4, 2, 3, 88, "Gloves", 110, 13, 0, 110, 14, 9, 0, 1, 0, 0, 0, "Reward", "Evasion", "", 150000, Infinity, false, false, false, false, false, 0, 750000, 150000, 1, 15, "Enchanted Leather Gloves", "");
    addArenaCraftArmor(4, 2, 3, 88, "Pants", 110, 9, 0, 110, 14, 0, 0, 1, 0, 0, 0, "Reward", "Evasion", "", 150000, Infinity, false, false, false, false, false, 0, 750000, 150000, 1, 15, "Enchanted Leather Pants", "");
    addArenaCraftArmor(4, 2, 3, 88, "Shoes", 110, 9, 2, 110, 10, 9, 0, 1, 0, 0, 0, "Reward", "Evasion", "", 150000, Infinity, false, false, false, false, false, 0, 750000, 150000, 1, 15, "Enchanted Leather Shoes", "");
    addArenaCraftArmor(4, 2, 4, 108, "Hat", 111, 11, 0, 140, 10, 0, 10, 1, 0, 0, 0, "Reward", "Blind Chance", "", 300000, Infinity, false, false, false, false, false, 0, 1500000, 300000, 2, 30, "Golden Hat", "");
    addArenaCraftArmor(4, 2, 4, 108, "Shirt", 111, 11, 0, 140, 15, 0, 0, 1, 0, 0, 0, "Reward", "Blind Chance", "", 300000, Infinity, false, false, false, false, false, 0, 1500000, 300000, 2, 30, "Golden Shirt", "");
    addArenaCraftArmor(4, 2, 4, 108, "Gloves", 111, 16, 0, 140, 15, 10, 0, 1, 0, 0, 0, "Reward", "Blind Chance", "", 300000, Infinity, false, false, false, false, false, 0, 1500000, 300000, 2, 30, "Golden Gloves", "");
    addArenaCraftArmor(4, 2, 4, 108, "Pants", 111, 11, 0, 140, 15, 0, 0, 1, 0, 0, 0, "Reward", "Blind Chance", "", 300000, Infinity, false, false, false, false, false, 0, 1500000, 300000, 2, 30, "Golden Pants", "");
    addArenaCraftArmor(4, 2, 4, 108, "Shoes", 111, 11, 2, 140, 10, 10, 0, 1, 0, 0, 0, "Reward", "Blind Chance", "", 300000, Infinity, false, false, false, false, false, 0, 1500000, 300000, 2, 30, "Golden Shoes", "");
    addArenaCraftArmor(4, 3, 4, 128, "Hat", 112, 13, 0, 170, 10, 0, 11, 1, 0, 0, 0, "Reward", "MP Regen", "", 600000, Infinity, false, false, false, false, false, 0, 3000000, 600000, 5, 60, "Regeneration Hat", "");
    addArenaCraftArmor(4, 3, 4, 128, "Shirt", 112, 13, 0, 170, 16, 0, 0, 1, 0, 0, 0, "Reward", "MP Regen", "", 600000, Infinity, false, false, false, false, false, 0, 3000000, 600000, 5, 60, "Regeneration Shirt", "");
    addArenaCraftArmor(4, 3, 4, 128, "Gloves", 112, 19, 0, 170, 16, 11, 0, 1, 0, 0, 0, "Reward", "MP Regen", "", 600000, Infinity, false, false, false, false, false, 0, 3000000, 600000, 5, 60, "Regeneration Gloves", "");
    addArenaCraftArmor(4, 3, 4, 128, "Pants", 112, 13, 0, 170, 16, 0, 0, 1, 0, 0, 0, "Reward", "MP Regen", "", 600000, Infinity, false, false, false, false, false, 0, 3000000, 600000, 5, 60, "Regeneration Pants", "");
    addArenaCraftArmor(4, 3, 4, 128, "Shoes", 112, 13, 2, 170, 10, 11, 0, 1, 0, 0, 0, "Reward", "MP Regen", "", 600000, Infinity, false, false, false, false, false, 0, 3000000, 600000, 5, 60, "Regeneration Shoes", "");
    addArenaCraftArmor(4, 3, 5, 148, "Hat", 113, 15, 0, 200, 10, 0, 12, 1, 0, 0, 0, "Reward", "Critical Chance", "", 4000000, Infinity, false, false, false, false, false, 0, 20000000, 4000000, 40, 400, "Berserker Hat", "");
    addArenaCraftArmor(4, 3, 5, 148, "Shirt", 113, 15, 0, 200, 17, 0, 0, 1, 0, 0, 0, "Reward", "Critical Chance", "", 4000000, Infinity, false, false, false, false, false, 0, 20000000, 4000000, 40, 400, "Berserker Shirt", "");
    addArenaCraftArmor(4, 3, 5, 148, "Gloves", 113, 22, 0, 200, 17, 12, 0, 1, 0, 0, 0, "Reward", "Critical Chance", "", 4000000, Infinity, false, false, false, false, false, 0, 20000000, 4000000, 40, 400, "Berserker Gloves", "");
    addArenaCraftArmor(4, 3, 5, 148, "Pants", 113, 15, 0, 200, 17, 0, 0, 1, 0, 0, 0, "Reward", "Critical Chance", "", 4000000, Infinity, false, false, false, false, false, 0, 20000000, 4000000, 40, 400, "Berserker Pants", "");
    addArenaCraftArmor(4, 3, 5, 148, "Shoes", 113, 15, 2, 200, 10, 12, 0, 1, 0, 0, 0, "Reward", "Critical Chance", "", 4000000, Infinity, false, false, false, false, false, 0, 20000000, 4000000, 40, 400, "Berserker Shoes", "");
    addArenaCraftArmor(4, 4, 5, 168, "Hat", 114, 17, 0, 250, 10, 0, 15, 5, 1000000, 0, 0, "Reward", "Defense", "", 8000000, Infinity, false, false, false, false, false, 0, 40000000, 8000000, 80, 800, "Defensive Hat", "");
    addArenaCraftArmor(4, 4, 5, 168, "Shirt", 114, 17, 0, 250, 20, 0, 0, 5, 1000000, 0, 0, "Reward", "Defense", "", 8000000, Infinity, false, false, false, false, false, 0, 40000000, 8000000, 80, 800, "Defensive Shirt", "");
    addArenaCraftArmor(4, 4, 5, 168, "Gloves", 114, 25, 0, 250, 20, 13, 0, 5, 1000000, 0, 0, "Reward", "Defense", "", 8000000, Infinity, false, false, false, false, false, 0, 40000000, 8000000, 80, 800, "Defensive Gloves", "");
    addArenaCraftArmor(4, 4, 5, 168, "Pants", 114, 17, 0, 250, 20, 0, 0, 5, 1000000, 0, 0, "Reward", "Defense", "", 8000000, Infinity, false, false, false, false, false, 0, 40000000, 8000000, 80, 800, "Defensive Pants", "");
    addArenaCraftArmor(4, 4, 5, 168, "Shoes", 114, 17, 2, 250, 10, 15, 0, 5, 1000000, 0, 0, "Reward", "Defense", "", 8000000, Infinity, false, false, false, false, false, 0, 40000000, 8000000, 80, 800, "Defensive Shoes", "");
    addArenaCraftArmor(4, 4, 5, 188, "Hat", 119, 19, 0, 300, 10, 0, 20, 10, 3000000, 0, 0, "Dark Element", "Autosteal", "", 14000000, Infinity, false, false, false, false, false, 0, 70000000, 14000000, 140, 1400, "Pure Darkness Hat", "");
    addArenaCraftArmor(4, 4, 5, 188, "Shirt", 119, 19, 0, 300, 25, 0, 0, 10, 3000000, 0, 0, "Dark Element", "Autosteal", "", 14000000, Infinity, false, false, false, false, false, 0, 70000000, 14000000, 140, 1400, "Pure Darkness Shirt", "");
    addArenaCraftArmor(4, 4, 5, 188, "Gloves", 119, 28, 0, 300, 25, 14, 0, 10, 3000000, 0, 0, "Dark Element", "Autosteal", "", 14000000, Infinity, false, false, false, false, false, 0, 70000000, 14000000, 140, 1400, "Pure Darkness Gloves", "");
    addArenaCraftArmor(4, 4, 5, 188, "Pants", 119, 19, 0, 300, 25, 0, 0, 10, 3000000, 0, 0, "Dark Element", "Autosteal", "", 14000000, Infinity, false, false, false, false, false, 0, 70000000, 14000000, 140, 1400, "Pure Darkness Pants", "");
    addArenaCraftArmor(4, 4, 5, 188, "Shoes", 119, 19, 3, 300, 10, 20, 0, 10, 3000000, 0, 0, "Dark Element", "Autosteal", "", 14000000, Infinity, false, false, false, false, false, 0, 70000000, 14000000, 140, 1400, "Pure Darkness Shoes", "");
    addArenaCraftArmor(4, 5, 5, 208, "Hat", 132, 21, 1, 400, 10, 0, 30, 21, 10000000, 0, 0, "Rare Monster Rate", "Poison Damage", "Equipment Attack", 30000000, Infinity, false, false, false, false, false, 0, 150000000, 30000000, 300, 3000, "Crimson Hat", "");
    addArenaCraftArmor(4, 5, 5, 208, "Shirt", 132, 21, 1, 400, 35, 0, 0, 21, 10000000, 0, 0, "Rare Monster Rate", "Poison Damage", "Equipment Attack", 30000000, Infinity, false, false, false, false, false, 0, 150000000, 30000000, 300, 3000, "Crimson Shirt", "");
    addArenaCraftArmor(4, 5, 5, 208, "Gloves", 132, 31, 1, 400, 35, 15, 0, 21, 10000000, 0, 0, "Rare Monster Rate", "Poison Damage", "Equipment Attack", 30000000, Infinity, false, false, false, false, false, 0, 150000000, 30000000, 300, 3000, "Crimson Gloves", "");
    addArenaCraftArmor(4, 5, 5, 208, "Pants", 132, 21, 1, 400, 35, 0, 0, 21, 10000000, 0, 0, "Rare Monster Rate", "Poison Damage", "Equipment Attack", 30000000, Infinity, false, false, false, false, false, 0, 150000000, 30000000, 300, 3000, "Crimson Pants", "");
    addArenaCraftArmor(4, 5, 5, 208, "Shoes", 132, 21, 4, 400, 10, 30, 0, 21, 10000000, 0, 0, "Rare Monster Rate", "Poison Damage", "Equipment Attack", 30000000, Infinity, false, false, false, false, false, 0, 150000000, 30000000, 300, 3000, "Crimson Shoes", "");
    addArenaCraftArmor(4, 5, 5, 218, "Hat", 150, 23, 2, 550, 10, 0, 50, 42, 30000000, 0, 0, "Rare Monster Rate", "Weaken Effect", "Attack Power", 50000000, Infinity, false, false, false, false, false, 0, 250000000, 50000000, 500, 5000, "Knightmare Hat", "");
    addArenaCraftArmor(4, 5, 5, 218, "Shirt", 150, 23, 2, 550, 50, 0, 0, 42, 30000000, 0, 0, "Rare Monster Rate", "Weaken Effect", "Attack Power", 50000000, Infinity, false, false, false, false, false, 0, 250000000, 50000000, 500, 5000, "Knightmare Shirt", "");
    addArenaCraftArmor(4, 5, 5, 218, "Gloves", 150, 34, 2, 550, 50, 16, 0, 42, 30000000, 0, 0, "Rare Monster Rate", "Weaken Effect", "Attack Power", 50000000, Infinity, false, false, false, false, false, 0, 250000000, 50000000, 500, 5000, "Knightmare Gloves", "");
    addArenaCraftArmor(4, 5, 5, 218, "Pants", 150, 23, 2, 550, 50, 0, 0, 42, 30000000, 0, 0, "Rare Monster Rate", "Weaken Effect", "Attack Power", 50000000, Infinity, false, false, false, false, false, 0, 250000000, 50000000, 500, 5000, "Knightmare Pants", "");
    addArenaCraftArmor(4, 5, 5, 218, "Shoes", 150, 23, 5, 550, 10, 50, 0, 42, 30000000, 0, 0, "Rare Monster Rate", "Weaken Effect", "Attack Power", 50000000, Infinity, false, false, false, false, false, 0, 250000000, 50000000, 500, 5000, "Knightmare Shoes", "");
    addArenaCraftArmor(4, 5, 1, 238, "Hat", 164, 25, 3, 750, 10, 0, 70, 84, 60000000, -2, 0, "Epic Monster Rate", "Blind Effect", "MaxHP", 100000000, Infinity, false, false, true, false, false, 0, 500000000, 100000000, 1000, 10000, "Humblebee Hat", "");
    addArenaCraftArmor(4, 5, 1, 238, "Shirt", 164, 25, 3, 750, 70, 0, 0, 84, 60000000, -2, 0, "Epic Monster Rate", "Blind Effect", "MaxHP", 100000000, Infinity, false, false, true, false, false, 0, 500000000, 100000000, 1000, 10000, "Humblebee Shirt", "");
    addArenaCraftArmor(4, 5, 1, 238, "Gloves", 164, 37, 3, 750, 70, 17, 0, 84, 60000000, -2, 0, "Epic Monster Rate", "Blind Effect", "MaxHP", 100000000, Infinity, false, false, true, false, false, 0, 500000000, 100000000, 1000, 10000, "Humblebee Gloves", "");
    addArenaCraftArmor(4, 5, 1, 238, "Pants", 164, 25, 3, 750, 70, 0, 0, 84, 60000000, -2, 0, "Epic Monster Rate", "Blind Effect", "MaxHP", 100000000, Infinity, false, false, true, false, false, 0, 500000000, 100000000, 1000, 10000, "Humblebee Pants", "");
    addArenaCraftArmor(4, 5, 1, 238, "Shoes", 164, 25, 6, 750, 10, 70, 0, 84, 60000000, -2, 0, "Epic Monster Rate", "Blind Effect", "MaxHP", 100000000, Infinity, false, false, true, false, false, 0, 500000000, 100000000, 1000, 10000, "Humblebee Shoes", "");
    addArenaCraftArmor(4, 5, 1, 248, "Hat", 165, 157, 7, 1500, 70, 60, 160, 1, 0, 10, 0, "Epic Monster Rate", "Max Spirit", "MaxHP", 200000000, Infinity, false, false, true, false, true, 0, 2000000000, 400000000, 5000, 20000, "Ghost Hat", "");
    addArenaCraftArmor(4, 5, 1, 248, "Shirt", 165, 157, 7, 1500, 160, 60, 60, 1, 0, 10, 0, "Epic Monster Rate", "Max Spirit", "MaxHP", 200000000, Infinity, false, false, true, false, true, 0, 2000000000, 400000000, 5000, 20000, "Ghost Shirt", "");
    addArenaCraftArmor(4, 5, 1, 248, "Gloves", 165, 170, 7, 1500, 160, 78, 60, 1, 0, 10, 0, "Epic Monster Rate", "Max Spirit", "MaxHP", 200000000, Infinity, false, false, true, false, true, 0, 2000000000, 400000000, 5000, 20000, "Ghost Gloves", "");
    addArenaCraftArmor(4, 5, 1, 248, "Pants", 165, 157, 7, 1500, 160, 60, 60, 1, 0, 10, 0, "Epic Monster Rate", "Max Spirit", "MaxHP", 200000000, Infinity, false, false, true, false, true, 0, 2000000000, 400000000, 5000, 20000, "Ghost Pants", "");
    addArenaCraftArmor(4, 5, 1, 248, "Shoes", 165, 157, 10, 1500, 70, 160, 60, 1, 0, 10, 0, "Epic Monster Rate", "Max Spirit", "MaxHP", 200000000, Infinity, false, false, true, false, true, 0, 2000000000, 400000000, 5000, 20000, "Ghost Shoes", "");
    addArenaCraftArmor("Title", "Secret");
    addArenaCraftArmor(5, 4, 2, 70, "Hat", 136, 0, 0, 0, 0, 0, 100, 1, 0, -4, 100, "", "", "Random", 0, Infinity, false, false, true, false, false, 10, 0, 0, 500, 500, "Elm Hat", "");
    addArenaCraftArmor(5, 4, 2, 70, "Shirt", 136, 0, 0, 0, 0, 100, 0, 1, 0, -4, 100, "", "", "Random", 0, Infinity, false, false, true, false, false, 10, 0, 0, 500, 500, "Elm Shirt", "");
    addArenaCraftArmor(5, 4, 2, 70, "Gloves", 136, 0, 0, 0, 100, 0, 0, 1, 0, -4, 100, "", "", "Random", 0, Infinity, false, false, true, false, false, 10, 0, 0, 500, 500, "Elm Gloves", "");
    addArenaCraftArmor(5, 4, 2, 70, "Pants", 136, 0, 0, 0, 0, 100, 0, 1, 0, -4, 100, "", "", "Random", 0, Infinity, false, false, true, false, false, 10, 0, 0, 500, 500, "Elm Pants", "");
    addArenaCraftArmor(5, 4, 2, 70, "Shoes", 136, 0, 10, 0, 0, 50, 0, 1, 0, -4, 100, "", "", "Random", 0, Infinity, false, false, true, false, false, 10, 0, 0, 500, 500, "Elm Shoes", "");
    addArenaCraftArmor(5, 5, 5, 500, "Hat", 126, 0, 0, 0, 0, 0, 0, 1, 0, 5, 100, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 5000, 5000, "Emperor\'s Hat", "");
    addArenaCraftArmor(5, 5, 5, 500, "Shirt", 126, 0, 0, 0, 0, 0, 0, 1, 0, 5, 100, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 5000, 5000, "Emperor\'s Shirt", "");
    addArenaCraftArmor(5, 5, 5, 500, "Gloves", 126, 0, 0, 0, 0, 0, 0, 1, 0, 5, 100, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 5000, 5000, "Emperor\'s Gloves", "");
    addArenaCraftArmor(5, 5, 5, 500, "Pants", 126, 0, 0, 0, 0, 0, 0, 1, 0, 5, 100, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 5000, 5000, "Emperor\'s Pants", "");
    addArenaCraftArmor(5, 5, 5, 500, "Shoes", 126, 0, 0, 0, 0, 0, 0, 1, 0, 5, 100, "", "", "", 0, Infinity, false, false, false, false, false, 0, 0, 0, 5000, 5000, "Emperor\'s Shoes", "");
    addArenaCraftArmor("Title", "Mission Kommander");
    addArenaCraftArmor(7, 5, 1, 400, "Gloves", 130, 225, 15, 7500, 75, 75, 75, 75, 75000000, 0, 0, "Random", "Random", "Random", 75000000, Infinity, true, false, true, false, false, 35, 75000000000, 0, 7500, 750000, "MEGA WINGS", "");
    addArenaCraftArmor("Title", "Chuck Norris");
    addArenaCraftArmor(10, 2, 5, 222, "Hat", 120, 150, 1, 75, 30, 0, 60, 22, 22000000, 0, 100, "Random", "Random", "", 60000000, 60, false, true, false, false, false, 0, 600000000, 60000000, 600, 6000, "Chuck Norris Hat", "");
    addArenaCraftArmor(10, 2, 5, 222, "Shirt", 120, 150, 1, 50, 45, 30, 30, 22, 22000000, 0, 100, "Random", "Random", "", 60000000, 60, false, true, false, false, false, 0, 600000000, 60000000, 600, 6000, "Chuck Norris Shirt", "");
    addArenaCraftArmor(10, 2, 5, 222, "Gloves", 120, 200, 1, 30, 75, 0, 30, 22, 22000000, 0, 100, "Random", "Random", "", 60000000, 60, false, true, false, false, false, 0, 600000000, 60000000, 600, 6000, "Chuck Norris Gloves", "");
    addArenaCraftArmor(10, 2, 5, 222, "Pants", 120, 150, 1, 50, 45, 30, 30, 22, 22000000, 0, 100, "Random", "Random", "", 60000000, 60, false, true, false, false, false, 0, 600000000, 60000000, 600, 6000, "Chuck Norris Pants", "");
    addArenaCraftArmor(10, 2, 5, 222, "Shoes", 120, 150, 4, 30, 30, 75, 30, 22, 22000000, 0, 100, "Random", "Random", "", 60000000, 60, false, true, false, false, false, 0, 600000000, 60000000, 600, 6000, "Chuck Norris Shoes", "");
    addArenaCraftArmor("Title", "Alien");
    addArenaCraftArmor("Title 2", "Set #1");
    addArenaCraftArmor(12, 2, 5, 70, "Hat", 121, 20, 1, 200, 10, 5, 0, 10, 5000000, 0, 100, "Random", "Attack", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Hat #1", "");
    addArenaCraftArmor(12, 2, 5, 70, "Shirt", 121, 20, 1, 200, 10, 5, 0, 10, 5000000, 0, 100, "Random", "Attack", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Shirt #1", "");
    addArenaCraftArmor(12, 2, 5, 70, "Gloves", 121, 70, 1, 150, 10, 5, 0, 10, 5000000, 0, 100, "Random", "Attack", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Gloves #1", "");
    addArenaCraftArmor(12, 2, 5, 70, "Pants", 121, 20, 1, 200, 10, 5, 0, 10, 5000000, 0, 100, "Random", "Attack", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Pants #1", "");
    addArenaCraftArmor(12, 2, 5, 70, "Shoes", 121, 20, 4, 150, 10, 5, 0, 10, 5000000, 0, 100, "Random", "Attack", "", 5000000, 14, false, true, false, false, false, 0, 50000000, 5000000, 5, 250, "Alien Shoes #1", "");
    addArenaCraftArmor("Title 2", "Set #2");
    addArenaCraftArmor(12, 3, 5, 110, "Hat", 122, 30, 1, 250, 10, 10, 0, 10, 10000000, 0, 100, "Random", "Attack", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Hat #2", "");
    addArenaCraftArmor(12, 3, 5, 110, "Shirt", 122, 30, 1, 250, 10, 10, 0, 10, 10000000, 0, 100, "Random", "Attack", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Shirt #2", "");
    addArenaCraftArmor(12, 3, 5, 110, "Gloves", 122, 80, 1, 200, 10, 10, 0, 10, 10000000, 0, 100, "Random", "Attack", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Gloves #2", "");
    addArenaCraftArmor(12, 3, 5, 110, "Pants", 122, 30, 1, 250, 10, 10, 0, 10, 10000000, 0, 100, "Random", "Attack", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Pants #2", "");
    addArenaCraftArmor(12, 3, 5, 110, "Shoes", 122, 30, 4, 200, 10, 10, 0, 10, 10000000, 0, 100, "Random", "Attack", "", 15000000, 14, false, true, false, false, false, 0, 150000000, 15000000, 10, 750, "Alien Shoes #2", "");
    addArenaCraftArmor("Title 2", "Set #3");
    addArenaCraftArmor(12, 4, 5, 150, "Hat", 123, 40, 1, 300, 10, 15, 0, 10, 15000000, 0, 100, "Random", "Attack", "", 35000000, 14, false, true, false, false, false, 0, 350000000, 35000000, 20, 1750, "Alien Hat #3", "");
    addArenaCraftArmor(12, 4, 5, 150, "Shirt", 123, 40, 1, 300, 10, 15, 0, 10, 15000000, 0, 100, "Random", "Attack", "", 35000000, 14, false, true, false, false, false, 0, 350000000, 35000000, 20, 1750, "Alien Shirt #3", "");
    addArenaCraftArmor(12, 4, 5, 150, "Gloves", 123, 90, 1, 250, 10, 15, 0, 10, 15000000, 0, 100, "Random", "Attack", "", 35000000, 14, false, true, false, false, false, 0, 350000000, 35000000, 20, 1750, "Alien Gloves #3", "");
    addArenaCraftArmor(12, 4, 5, 150, "Pants", 123, 40, 1, 300, 10, 15, 0, 10, 15000000, 0, 100, "Random", "Attack", "", 35000000, 14, false, true, false, false, false, 0, 350000000, 35000000, 20, 1750, "Alien Pants #3", "");
    addArenaCraftArmor(12, 4, 5, 150, "Shoes", 123, 40, 4, 250, 10, 15, 0, 10, 15000000, 0, 100, "Random", "Attack", "", 35000000, 14, false, true, false, false, false, 0, 350000000, 35000000, 20, 1750, "Alien Shoes #3", "");
    addArenaCraftArmor("Title 2", "Set #4");
    addArenaCraftArmor(12, 5, 5, 190, "Hat", 124, 50, 1, 350, 10, 20, 0, 10, 20000000, 0, 100, "Random", "Attack", "", 75000000, 14, false, true, false, false, false, 0, 750000000, 75000000, 40, 3500, "Alien Hat #4", "");
    addArenaCraftArmor(12, 5, 5, 190, "Shirt", 124, 50, 1, 350, 10, 20, 0, 10, 20000000, 0, 100, "Random", "Attack", "", 75000000, 14, false, true, false, false, false, 0, 750000000, 75000000, 40, 3500, "Alien Shirt #4", "");
    addArenaCraftArmor(12, 5, 5, 190, "Gloves", 124, 100, 1, 300, 10, 20, 0, 10, 20000000, 0, 100, "Random", "Attack", "", 75000000, 14, false, true, false, false, false, 0, 750000000, 75000000, 40, 3500, "Alien Gloves #4", "");
    addArenaCraftArmor(12, 5, 5, 190, "Pants", 124, 50, 1, 350, 10, 20, 0, 10, 20000000, 0, 100, "Random", "Attack", "", 75000000, 14, false, true, false, false, false, 0, 750000000, 75000000, 40, 3500, "Alien Pants #4", "");
    addArenaCraftArmor(12, 5, 5, 190, "Shoes", 124, 50, 4, 300, 10, 20, 0, 10, 20000000, 0, 100, "Random", "Attack", "", 75000000, 14, false, true, false, false, false, 0, 750000000, 75000000, 40, 3500, "Alien Shoes #4", "");
    addArenaCraftArmor("Title", "Elite Alien");
    addArenaCraftArmor("Title 2", "Set #1");
    addArenaCraftArmor(14, 2, 5, 90, "Hat", 121, 40, 2, 300, 15, 5, 5, 20, 10000000, 0, 100, "Random", "Boss Damage", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Hat #1", "");
    addArenaCraftArmor(14, 2, 5, 90, "Shirt", 121, 40, 2, 300, 15, 5, 5, 20, 10000000, 0, 100, "Random", "Magic Resist", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Shirt #1", "");
    addArenaCraftArmor(14, 2, 5, 90, "Gloves", 121, 90, 2, 250, 15, 5, 5, 20, 10000000, 0, 100, "Random", "Rage Attack", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Gloves #1", "");
    addArenaCraftArmor(14, 2, 5, 90, "Pants", 121, 40, 2, 300, 15, 5, 5, 20, 10000000, 0, 100, "Random", "Potion Efficiency", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Pants #1", "");
    addArenaCraftArmor(14, 2, 5, 90, "Shoes", 121, 40, 5, 250, 15, 5, 5, 20, 10000000, 0, 100, "Random", "Negate Effect", "", 10000000, 30, false, true, false, false, false, 0, 100000000, 10000000, 25, 500, "Elite Alien Shoes #1", "");
    addArenaCraftArmor("Title 2", "Set #2");
    addArenaCraftArmor(14, 2, 5, 130, "Hat", 122, 50, 2, 350, 15, 10, 10, 20, 20000000, 0, 100, "Random", "Boss Damage", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Hat #2", "");
    addArenaCraftArmor(14, 2, 5, 130, "Shirt", 122, 50, 2, 350, 15, 10, 10, 20, 20000000, 0, 100, "Random", "Magic Resist", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Shirt #2", "");
    addArenaCraftArmor(14, 2, 5, 130, "Gloves", 122, 100, 2, 300, 15, 10, 10, 20, 20000000, 0, 100, "Random", "Rage Attack", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Gloves #2", "");
    addArenaCraftArmor(14, 2, 5, 130, "Pants", 122, 50, 2, 350, 15, 10, 10, 20, 20000000, 0, 100, "Random", "Potion Efficiency", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Pants #2", "");
    addArenaCraftArmor(14, 2, 5, 130, "Shoes", 122, 50, 5, 300, 15, 10, 10, 20, 20000000, 0, 100, "Random", "Negate Effect", "", 30000000, 30, false, true, false, false, false, 0, 300000000, 30000000, 50, 1500, "Elite Alien Shoes #2", "");
    addArenaCraftArmor("Title 2", "Set #3");
    addArenaCraftArmor(14, 2, 5, 170, "Hat", 123, 60, 2, 400, 15, 15, 15, 20, 30000000, 0, 100, "Random", "Boss Damage", "", 70000000, 30, false, true, false, false, false, 0, 700000000, 70000000, 100, 3500, "Elite Alien Hat #3", "");
    addArenaCraftArmor(14, 2, 5, 170, "Shirt", 123, 60, 2, 400, 15, 15, 15, 20, 30000000, 0, 100, "Random", "Magic Resist", "", 70000000, 30, false, true, false, false, false, 0, 700000000, 70000000, 100, 3500, "Elite Alien Shirt #3", "");
    addArenaCraftArmor(14, 2, 5, 170, "Gloves", 123, 110, 2, 350, 15, 15, 15, 20, 30000000, 0, 100, "Random", "Rage Attack", "", 70000000, 30, false, true, false, false, false, 0, 700000000, 70000000, 100, 3500, "Elite Alien Gloves #3", "");
    addArenaCraftArmor(14, 2, 5, 170, "Pants", 123, 60, 2, 400, 15, 15, 15, 20, 30000000, 0, 100, "Random", "Potion Efficiency", "", 70000000, 30, false, true, false, false, false, 0, 700000000, 70000000, 100, 3500, "Elite Alien Pants #3", "");
    addArenaCraftArmor(14, 2, 5, 170, "Shoes", 123, 60, 5, 350, 15, 15, 15, 20, 30000000, 0, 100, "Random", "Negate Effect", "", 70000000, 30, false, true, false, false, false, 0, 700000000, 70000000, 100, 3500, "Elite Alien Shoes #3", "");
    addArenaCraftArmor("Title 2", "Set #4");
    addArenaCraftArmor(14, 2, 5, 210, "Hat", 124, 70, 2, 450, 15, 20, 20, 20, 40000000, 0, 100, "Random", "Boss Damage", "", 150000000, 30, false, true, false, false, false, 0, 1500000000, 150000000, 200, 7500, "Elite Alien Hat #4", "");
    addArenaCraftArmor(14, 2, 5, 210, "Shirt", 124, 70, 2, 450, 15, 20, 20, 20, 40000000, 0, 100, "Random", "Magic Resist", "", 150000000, 30, false, true, false, false, false, 0, 1500000000, 150000000, 200, 7500, "Elite Alien Shirt #4", "");
    addArenaCraftArmor(14, 2, 5, 210, "Gloves", 124, 120, 2, 400, 15, 20, 20, 20, 40000000, 0, 100, "Random", "Rage Attack", "", 150000000, 30, false, true, false, false, false, 0, 1500000000, 150000000, 200, 7500, "Elite Alien Gloves #4", "");
    addArenaCraftArmor(14, 2, 5, 210, "Pants", 124, 70, 2, 450, 15, 20, 20, 20, 40000000, 0, 100, "Random", "Potion Efficiency", "", 150000000, 30, false, true, false, false, false, 0, 1500000000, 150000000, 200, 7500, "Elite Alien Pants #4", "");
    addArenaCraftArmor(14, 2, 5, 210, "Shoes", 124, 70, 5, 400, 15, 20, 20, 20, 40000000, 0, 100, "Random", "Negate Effect", "", 150000000, 30, false, true, false, false, false, 0, 1500000000, 150000000, 200, 7500, "Elite Alien Shoes #4", "");
    addArenaCraftArmor("Title", "Chaotic Items");
    addArenaCraftArmor(15, 1, 2, 500, "Hat", 138, 0, 0, 0, 0, 0, 50, 6, 70000000, 6, 0, "Epic Monster Rate", "Poison Damage", "Equipment Defense", 4000000000, Infinity, false, false, true, true, false, 20, 40000000000, 4000000000, 4000, 400000, "Meteoric Hat", "");
    addArenaCraftArmor(15, 1, 2, 500, "Shirt", 138, 0, 0, 50, 0, 0, 0, 6, 70000000, 6, 0, "Epic Monster Rate", "Poison Damage", "Equipment Defense", 4000000000, Infinity, false, false, true, true, false, 20, 40000000000, 4000000000, 4000, 400000, "Meteoric Shirt", "");
    addArenaCraftArmor(15, 1, 2, 500, "Gloves", 138, 0, 2, 0, 10, 0, 0, 6, 70000000, 6, 0, "Epic Monster Rate", "Poison Damage", "Equipment Defense", 4000000000, Infinity, false, false, true, true, false, 20, 40000000000, 4000000000, 4000, 400000, "Meteoric Gloves", "");
    addArenaCraftArmor(15, 1, 2, 500, "Pants", 138, 0, 0, 50, 0, 0, 0, 6, 70000000, 6, 0, "Epic Monster Rate", "Poison Damage", "Equipment Defense", 4000000000, Infinity, false, false, true, true, false, 20, 40000000000, 4000000000, 4000, 400000, "Meteoric Pants", "");
    addArenaCraftArmor(15, 1, 2, 500, "Shoes", 138, 0, 2, 0, 0, 10, 0, 6, 70000000, 6, 0, "Epic Monster Rate", "Poison Damage", "Equipment Defense", 4000000000, Infinity, false, false, true, true, false, 20, 40000000000, 4000000000, 4000, 400000, "Meteoric Shoes", "");
    addArenaCraftArmor("Title", "Robotic");
    addArenaCraftArmor(18, 3, 3, 275, "Hat", 168, 0, 0, 6300, 0, 0, 0, 1, 0, 0, 100, "Spawn Rate", "Damage Taken", "Defense Power", 0, Infinity, false, false, true, false, false, 0, 0, 1000000000, 5000, 10000, "Companion Cube Hat", "");
    addArenaCraftArmor(18, 3, 3, 275, "Shirt", 168, 0, 0, 7650, 0, 0, 0, 1, 0, 0, 100, "Spawn Rate", "Damage Taken", "Defense Power", 0, Infinity, false, false, true, false, false, 0, 0, 1000000000, 5000, 10000, "Companion Cube Shirt", "");
    addArenaCraftArmor(18, 3, 3, 275, "Gloves", 168, 0, 0, 4950, 0, 0, 0, 1, 0, 0, 100, "Spawn Rate", "Damage Taken", "Defense Power", 0, Infinity, false, false, true, false, false, 0, 0, 1000000000, 5000, 10000, "Companion Cube Gloves", "");
    addArenaCraftArmor(18, 3, 3, 275, "Pants", 168, 0, 0, 7650, 0, 0, 0, 1, 0, 0, 100, "Spawn Rate", "Damage Taken", "Defense Power", 0, Infinity, false, false, true, false, false, 0, 0, 1000000000, 5000, 10000, "Companion Cube Pants", "");
    addArenaCraftArmor(18, 3, 3, 275, "Shoes", 168, 0, 0, 4950, 0, 0, 0, 1, 0, 0, 100, "Spawn Rate", "Damage Taken", "Defense Power", 0, Infinity, false, false, true, false, false, 0, 0, 1000000000, 5000, 10000, "Companion Cube Shoes", "");
    addArenaCraftArmor("Title", "Tukkonium");
    addArenaCraftArmor(21, 1, 1, 463, "Hat", 190, 1333, 5, 25000, 833, 500, 500, 1, 7700000000, 9, 100000, "Spawn Rate", "Defense", "Defense Power", 0, Infinity, false, false, true, false, false, 18, 0, 0, 7, 1250000, "Tukkonium Hat", "");
    addArenaCraftArmor(21, 1, 1, 463, "Shirt", 190, 1333, 5, 25000, 833, 500, 500, 1, 7700000000, 9, 100000, "Spawn Rate", "Defense", "Defense Power", 0, Infinity, false, false, true, false, false, 18, 0, 0, 7, 1250000, "Tukkonium Shirt", "");
    addArenaCraftArmor(21, 1, 1, 463, "Gloves", 190, 1333, 5, 25000, 833, 500, 500, 1, 7700000000, 9, 100000, "Spawn Rate", "Defense", "Defense Power", 0, Infinity, false, false, true, false, false, 18, 0, 0, 7, 1250000, "Tukkonium Gloves", "");
    addArenaCraftArmor(21, 1, 1, 463, "Pants", 190, 1333, 5, 25000, 833, 500, 500, 1, 7700000000, 9, 100000, "Spawn Rate", "Defense", "Defense Power", 0, Infinity, false, false, true, false, false, 18, 0, 0, 7, 1250000, "Tukkonium Pants", "");
    addArenaCraftArmor(21, 1, 1, 463, "Shoes", 190, 1333, 5, 25000, 833, 500, 500, 1, 7700000000, 9, 100000, "Spawn Rate", "Defense", "Defense Power", 0, Infinity, false, false, true, false, false, 18, 0, 0, 7, 1250000, "Tukkonium Shoes", "");
    addArenaCraftArmor(21, 1, 1, 50, "Skin", 41, 0, 0, 2500, 0, 0, 0, 1, 7700000000, 9, 100000, "Spawn Rate", "Defense", "Defense Power", 0, Infinity, false, false, true, false, false, 60, 0, 0, 35, 6250000, "Tukkonium Skin", "");
    addArenaCraftArmor("Title", "?????????????");
    addArenaCraftArmor(19, 1, 1, 50, "Hat", 141, 200, 5, 2500, 0, 0, 250, 1, 0, 10, 4200, "Random", "Random", "Random", 0, Infinity, false, false, true, true, false, 20, 0, 0, 0, 0, "Reincarnation Hat", "");
    addArenaCraftArmor(19, 1, 1, 50, "Shirt", 141, 200, 5, 2500, 0, 125, 0, 1, 0, 10, 4200, "Random", "Random", "Random", 0, Infinity, false, false, true, true, false, 20, 0, 0, 0, 0, "Reincarnation Shirt", "");
    addArenaCraftArmor(19, 1, 1, 50, "Gloves", 147, 200, 5, 2500, 250, 0, 0, 1, 0, 10, 4200, "Random", "Random", "Random", 0, Infinity, false, false, true, true, false, 20, 0, 0, 0, 0, "Reincarnation Gloves", "");
    addArenaCraftArmor(19, 1, 1, 50, "Pants", 141, 200, 5, 2500, 0, 125, 0, 1, 0, 10, 4200, "Random", "Random", "Random", 0, Infinity, false, false, true, true, false, 20, 0, 0, 0, 0, "Reincarnation Pants", "");
    addArenaCraftArmor(19, 1, 1, 50, "Shoes", 141, 200, 20, 2500, 0, 0, 0, 1, 0, 10, 4200, "Random", "Random", "Random", 0, Infinity, false, false, true, true, false, 20, 0, 0, 0, 0, "Reincarnation Shoes", "");
    addArenaCraftAccessory("Title", "\'lrn2craft\'");
    addArenaCraftAccessory("Title 2", "Pendant");
    addArenaCraftAccessory(4, 1, 1, 30, "Pendant", 20, 0, 0, 0, 0, 0, 0, 1, 0, 10, 706, "", "", "", 25000, Infinity, true, false, false, false, 0, 0, 400000000, 0, 10000, "Collector\'s Pendant", "Equip this pendant, and you will be able to find special equipment items from monsters!");
    addArenaCraftAccessory(4, 1, 1, 120, "Pendant", 1, 40, 2, 0, 5, 5, 5, 26, 360000, 10, 1, "Random", "Random", "", 100000, Infinity, false, false, false, false, 0, 0, 200000, 100, 100, "Bronze Pendant", "A pendant crafted with skill. Unlike looted pendants, this one has improved stats, lasts permanently and levels up three times as fast.");
    addArenaCraftAccessory(4, 2, 1, 180, "Pendant", 2, 90, 3, 0, 15, 15, 15, 34, 1960000, 10, 1, "Random", "Random", "", 250000, Infinity, false, false, false, false, 0, 0, 1000000, 500, 500, "Silver Pendant", "A pendant crafted with skill. Unlike looted pendants, this one has improved stats, lasts permanently and levels up three times as fast.");
    addArenaCraftAccessory(4, 3, 1, 250, "Pendant", 3, 140, 4, 0, 25, 25, 25, 42, 5760000, 10, 1, "Random", "Random", "", 500000, Infinity, false, false, false, false, 0, 0, 5000000, 2500, 2500, "Gold Pendant", "A pendant crafted with skill. Unlike looted pendants, this one has improved stats, lasts permanently and levels up three times as fast.");
    addArenaCraftAccessory(4, 4, 1, 350, "Pendant", 4, 190, 5, 0, 35, 35, 35, 50, 12960000, 10, 1, "Random", "Random", "", 1000000, Infinity, false, false, false, false, 0, 0, 25000000, 10000, 10000, "Platinum Pendant", "A pendant crafted with skill. Unlike looted pendants, this one has improved stats, lasts permanently and levels up three times as fast.");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 9, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Fire Element", "Poison Chance", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Fire", "");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 10, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Ice Element", "Stun Chance", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Ice", "");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 11, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Wind Element", "Weaken Chance", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Wind", "");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 12, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Earth Element", "Weaken Effect", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Earth", "");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 13, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Thunder Element", "Stun Chance", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Thunder", "");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 14, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Water Element", "Poison Damage", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Water", "");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 15, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Light Element", "Blind Effect", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Light", "");
    addArenaCraftAccessory(4, 2, 5, 500, "Pendant", 16, 0, 2, 0, 0, 0, 0, 1, 0, 10, 456, "Dark Element", "Blind Chance", "", 5000000, Infinity, true, false, false, false, 0, 0, 200000000, 1000, 10000, "Pendant of Darkness", "");
    addArenaCraftAccessory(4, 5, 5, 1, "Pendant", 8, 0, 0, 0, 0, 0, 0, 1, 0, 10, 706, "", "", "", 0, Infinity, true, false, false, false, 0, 0, 400000000, 0, 10000, "Cursed Pendant", "");
    addArenaCraftAccessory(4, 5, 5, 250, "Pendant", 8, 0, 0, 0, 0, 0, 0, 1, 0, 10, 706, "", "", "", 0, Infinity, true, false, false, false, 0, 0, 400000000, 0, 10000, "Anti-Checkpoint Pendant", "This pendant allows you to ignore checkpoints in Spooky Crypt.");
    addArenaCraftAccessory("Title 2", "Earring");
    addArenaCraftAccessory(4, 1, 1, 30, "Earring", 3, 0, 0, 0, 0, 0, 0, 15, 1000000, 10, 150, "", "Potion Efficiency", "", 200000, Infinity, false, false, false, false, 0, 0, 2000000, 100, 500, "Crappy Earrings", "");
    addArenaCraftAccessory(4, 5, 5, 70, "Earring", 10, 0, 0, 0, 0, 0, 0, 30, 10000000, 0, 0, "", "Potion Efficiency", "", 20000000, 14, false, true, false, false, 0, 0, 200000000, 10000, 50000, "Awesome Earrings", "");
    addArenaCraftAccessory("Title 2", "Trinket");
    addArenaCraftAccessory(4, 1, 1, 400, "Trinket", 7, 0, 0, 0, 0, 0, 0, 500, 25000, 0, 1, "Random", "Random", "Random", 25000000, Infinity, false, false, false, false, 10, 0, 1000000000, 75000, 100000, "Gem of Constancy", "This gem gets more and more powerful as you fight with it equipped, but whenever you unequip it, it goes back to its original state. Also, you cannot change equipment when Gem of Constancy is equipped!");
    addArenaCraftAccessory(4, 1, 1, 400, "Trinket", 10, 0, 0, 0, 0, 0, 0, 500, 250000, 0, 1, "", "Damage", "Attack Power", 500000000, Infinity, true, false, false, false, 10, 5000000000, 500000000, 50000, 100000, "Empowering Gem", "This gem allows you to deal extra damage to monsters. The more you use it, the better it becomes!");
    addArenaCraftAccessory(4, 1, 1, 400, "Trinket", 13, 0, 0, 0, 0, 0, 0, 500, 1000000, 0, 1, "Spawn Rate", "", "", 500000000, Infinity, true, false, false, false, 10, 5000000000, 500000000, 50000, 100000, "Worst Moon Gem", "This gem allows you to enter Worst Moon state. The gem does not look like what you expect it to, but it still does the job. Combine with Invisible X ally to enter Apocalypse mode!");
    addArenaCraftAccessory(4, 1, 1, 400, "Trinket", 15, 0, 0, 0, 0, 0, 0, 500, 250000, 0, 1, "", "Buff Effect", "MaxHP", 500000000, Infinity, true, false, false, false, 10, 5000000000, 500000000, 50000, 100000, "Auto Buff Gem", "When you equip this gem, you will receive random buffs if you don\'t already have one! You can also cancel your current buff to receive a new one.\n\nPossible buffs: Power, Master, Reward, Enrage, Elemental Boost\n\nAlso, you will get +0.5% Boost whenever you kill a monster and 1 Insta-Progress whenever you kill a boss.");
    addArenaCraftAccessory("Title", "Mission Kommander");
    addArenaCraftAccessory(7, 1, 1, 40, "Trinket", 17, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, "", "", "", 250000, Infinity, true, false, false, false, 0, 0, 1000000, 25, 100, "Mission Kommander\'s Gem", "When you equip this gem, each monster you kill for Mission Kommander\'s Mission will count as two.");
    addArenaCraftAccessory("Title", "Unobtainium");
    addArenaCraftAccessory("Title 2", "Pendant");
    addArenaCraftAccessory(16, 1, 1, 500, "Pendant", 17, 240, 6, 0, 45, 45, 45, 58, 25000000, 10, 1, "Random", "Random", "", 5000000, Infinity, false, false, false, false, 5, 0, 100000000, 5000, 100000, "Unobtainium Pendant", "A pendant crafted with skill. Unlike looted pendants, this one has improved stats, lasts permanently and levels up three times as fast.");
    addArenaCraftAccessory("Title 2", "Trinket");
    addArenaCraftAccessory(16, 1, 1, 400, "Trinket", 6, 0, 0, 0, 0, 0, 0, 500, 250000, 0, 1, "Drop Rate", "", "", 250000000, Infinity, true, false, false, false, 10, 0, 10000000000, 75000, 1000000, "Gem of Good Luck", "Every perfectionist\'s dream. With this, you are much more likely to get perfect stats on looted items!");
    addArenaCraftAccessory(16, 1, 1, 400, "Trinket", 11, 0, 0, 0, 0, 0, 0, 500, 250000, 0, 1, "EXP", "", "EXP / Rare Kill", 5000000000, Infinity, true, false, false, false, 10, 50000000000, 5000000000, 50000, 1000000, "Yellow Madness Gem", "With this, you will no longer suffer a 10% EXP penalty when fighting yellow-named monsters! It also increases your EXP gain rate and makes rare monsters more likely to appear! Also, Coins will fall from the sky! Isn\'t it awesome?");
    addArenaCraftAccessory(16, 1, 1, 400, "Trinket", 12, 0, 0, 0, 0, 0, 0, 500, 250000, 0, 1, "", "Rage Speed", "", 5000000000, Infinity, true, false, false, false, 10, 50000000000, 5000000000, 50000, 1000000, "Gem of Eternal Rage", "With this, you will gain 0.5% Rage every second and ignore all forms of rage depletion! It also multiplies your Rage Attack by 1.2x.");
    addArenaCraftAccessory("Title", "?????????????");
    addArenaCraftAccessory(19, 1, 1, 50, "Pendant", 21, 250, 0, 0, 0, 0, 0, 1, 0, 0, 4200, "Random", "Random", "Random", 0, Infinity, true, false, true, false, 60, 0, 0, 0, 0, "Reincarnation Pendant", "");
    addArenaCraftAccessory(19, 1, 1, 50, "Earring", 11, 250, 0, 0, 0, 0, 0, 1, 0, 0, 4200, "", "", "", 0, Infinity, true, false, true, false, 0, 0, 0, 0, 0, "Reincarnation Earrings", "");
    addArenaCraftAccessory(19, 1, 1, 50, "Trinket", 16, 500, 0, 0, 0, 0, 0, 1, 0, 0, 4200, "", "", "", 0, Infinity, true, false, true, false, 0, 0, 0, 0, 0, "Reincarnation Trinket", "");
    addArenaCraftPotion("Title", "Secret");
    addArenaCraftPotion("Title 2", "Power Buff");
    addArenaCraftPotion(5, 1, 1, "Power Buff Potion", 1, 600, 1, 0, 36, 20000, Infinity, 200000, 20000, 1, 2, "Small Power Potion", "");
    addArenaCraftPotion(5, 2, 2, "Power Buff Potion", 2, 1800, 1, 0, 66, 150000, Infinity, 1500000, 150000, 5, 15, "Medium Power Potion", "");
    addArenaCraftPotion(5, 3, 3, "Power Buff Potion", 3, 5400, 1, 0, 106, 1000000, Infinity, 10000000, 1000000, 25, 100, "Large Power Potion", "");
    addArenaCraftPotion(5, 5, 5, "Power Buff Potion", 4, 1800, 50, 0, 156, 0, Infinity, 500000000, 50000000, 1000, 5000, "Power Crystal", "A rare Power Crystal. Unlike Buff Potions, this can be used 50 times before it vanishes.");
    addArenaCraftPotion("Title 2", "Master Buff");
    addArenaCraftPotion(5, 1, 1, "Master Buff Potion", 6, 600, 1, 0, 36, 20000, Infinity, 200000, 20000, 1, 2, "Small Master Potion", "");
    addArenaCraftPotion(5, 2, 2, "Master Buff Potion", 7, 1800, 1, 0, 66, 150000, Infinity, 1500000, 150000, 5, 15, "Medium Master Potion", "");
    addArenaCraftPotion(5, 3, 3, "Master Buff Potion", 8, 5400, 1, 0, 106, 1000000, Infinity, 10000000, 1000000, 25, 100, "Large Master Potion", "");
    addArenaCraftPotion(5, 5, 5, "Master Buff Potion", 9, 1800, 50, 0, 156, 0, Infinity, 500000000, 50000000, 1000, 5000, "Master Crystal", "A rare Master Crystal. Unlike Buff Potions, this can be used 50 times before it vanishes.");
    addArenaCraftPotion("Title 2", "Reward Buff");
    addArenaCraftPotion(5, 1, 1, "Reward Buff Potion", 11, 600, 1, 0, 36, 20000, Infinity, 200000, 20000, 1, 2, "Small Reward Potion", "");
    addArenaCraftPotion(5, 2, 2, "Reward Buff Potion", 12, 1800, 1, 0, 66, 150000, Infinity, 1500000, 150000, 5, 15, "Medium Reward Potion", "");
    addArenaCraftPotion(5, 3, 3, "Reward Buff Potion", 13, 5400, 1, 0, 106, 1000000, Infinity, 10000000, 1000000, 25, 100, "Large Reward Potion", "");
    addArenaCraftPotion(5, 5, 5, "Reward Buff Potion", 14, 1800, 50, 0, 156, 0, Infinity, 500000000, 50000000, 1000, 5000, "Reward Crystal", "A rare Reward Crystal. Unlike Buff Potions, this can be used 50 times before it vanishes.");
    addArenaCraftPotion("Title 2", "???");
    addArenaCraftPotion(5, 5, 5, "Nightmare Potion", 16, 200, 1, 0, -1, 0, Infinity, 1000000, 0, 0, 10, "???", "");
    addArenaCraftPotion("Title", "Unobtainium");
    addArenaCraftPotion(16, 1, 1, "Rebirth Potion", 23, 120, 1, 0, 706, 0, Infinity, 1000000000, 1000000000, 250, 0, "Rebirth Potion", "This potion allows you to Rebirth - which means, starting over from Rank 50 with bonuses.\n\n<font color=\'#FFFF00\'>Rank 500 required. Must be used in Ye Olde Pub.</font>");
    addArenaCraftPotion(16, 1, 1, "Potion of Regrets", 24, 1, 1, 0, 706, 0, Infinity, 5000000000, 5000000000, 1250, 0, "Potion of Regrets", "This potion contains all of your regrets after making the worst life decision ever (don\'t ask how that works). Drink this potion to gain 10,000,000,000 Arena EXP and 10,000,000,000 Robacon EXP. Does not affect Item EXP. Cannot be used if you haven\'t performed a Rebirth. Can only be used once per real life month.");
    addArenaCraftPotion(16, 1, 1, "Loot Magnet", 17, 3600, 100, 0, 706, 0, Infinity, 0, 0, 2500, 50000, "Loot Magnet", "This thing seems overpowered. It\'s like, NEVER WORRY ABOUT LOOTING AGAIN!!!\n... until the effect wears off, of course.");
    addArenaCraftPotion(16, 1, 1, "Monster Magnet", 18, 3600, 100, 0, 706, 0, Infinity, 0, 0, 50000, 1000000, "Monster Magnet", "This thing speeds monsters up when they are farther away from you, and slows them down when they are closer to you. One can argue that it is not exactly a magnet.");
    addArenaCraftPotion("Title", "Tukkonium");
    addArenaCraftPotion(21, 1, 1, "Power Buff Potion", 4, 5400, 1000000000, 0, 100000, 0, Infinity, 0, 0, 7, 1250000, "Infinite Power Crystal", "An extremely rare Power Crystal. Unlike Buff Potions, this can be used a billion times before it vanishes.");
    addArenaCraftPotion(21, 1, 1, "Master Buff Potion", 9, 5400, 1000000000, 0, 100000, 0, Infinity, 0, 0, 7, 1250000, "Infinite Master Crystal", "An extremely rare Master Crystal. Unlike Buff Potions, this can be used a billion times before it vanishes.");
    addArenaCraftPotion(21, 1, 1, "Reward Buff Potion", 14, 5400, 1000000000, 0, 100000, 0, Infinity, 0, 0, 7, 1250000, "Infinite Reward Crystal", "An extremely rare Reward Crystal. Unlike Buff Potions, this can be used a billion times before it vanishes.");
    addArenaCraftPotion(21, 1, 1, "Loot Magnet", 17, 5400, 1000000000, 0, 100000, 0, Infinity, 0, 0, 35, 6250000, "Infinite Loot Magnet", "This thing seems overpowered. It\'s like, NEVER WORRY ABOUT LOOTING AGAIN!!!\n... until the effect wears off, of course.");
    addArenaCraftPotion(21, 1, 1, "Monster Magnet", 18, 5400, 1000000000, 0, 100000, 0, Infinity, 0, 0, 142, 25000000, "Infinite Monster Magnet", "This thing speeds monsters up when they are farther away from you, and slows them down when they are closer to you. One can argue that it is not exactly a magnet.");
    addArenaCraftChip("Title", "Monster Chips");
    addArenaCraftChip(1, 1, 1, "Monster Chip (Rare)", 3, 178, 0, 0, 16, 0, Infinity, 99999999, 99999999, 999, 2999, "Monster Chip R-178", "");
    addArenaCraftChip(1, 1, 1, "Monster Chip (Rare)", 3, 179, 0, 0, 16, 0, Infinity, 99999999, 99999999, 999, 2999, "Monster Chip R-179", "");
    addArenaCraftChip(1, 1, 1, "Monster Chip (Rare)", 3, 180, 0, 0, 16, 0, Infinity, 99999999, 99999999, 999, 2999, "Monster Chip R-180", "");
    addArenaCraftChip(1, 1, 1, "Monster Chip (Rare)", 3, 181, 0, 0, 16, 0, Infinity, 99999999, 99999999, 999, 2999, "Monster Chip R-181", "");
    addArenaCraftChip(1, 1, 1, "Monster Chip (Rare)", 3, 182, 0, 0, 16, 0, Infinity, 99999999, 99999999, 999, 2999, "Monster Chip R-182", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 331, 0, 0, 16, 0, Infinity, 9999999999, 9999999999, 9999, 299999, "Monster Chip R-331", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 433, 0, 0, 16, 0, Infinity, 999999999, 999999999, 999, 29999, "Monster Chip R-433", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 434, 0, 0, 16, 0, Infinity, 999999999, 999999999, 999, 29999, "Monster Chip R-434", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 437, 0, 0, 16, 0, Infinity, 999999999, 999999999, 999, 29999, "Monster Chip R-437", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 486, 0, 0, 16, 0, Infinity, 9999999999, 9999999999, 9999, 299999, "Monster Chip R-486", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 488, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-488", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 489, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-489", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 490, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-490", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 491, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-491", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 492, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-492", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 493, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-493", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 494, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-494", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 495, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-495", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 496, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-496", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 497, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-497", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 498, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-498", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 499, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-499", "");
    addArenaCraftChip(16, 1, 1, "Monster Chip (Rare)", 3, 500, 0, 0, 16, 0, Infinity, 99999999, 99999999, 99, 2999, "Monster Chip R-500", "");
    addArenaCraftEnhancer("Title", "Item Protection");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Protector", 421, 0, 0, 100, 0, 1, "", "", "", 0, Infinity, 0, 0, 0, 0, "Weapon Protector", "Protects a weapon from being accidentally sold. Use this on a protected item to remove the protected status.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Protector", 422, 0, 0, 100, 0, 1, "", "", "", 0, Infinity, 0, 0, 0, 0, "Armor Protector", "Protects an armor piece from being accidentally sold. Use this on a protected item to remove the protected status.");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Protector", 423, 0, 0, 100, 0, 1, "", "", "", 0, Infinity, 0, 0, 0, 0, "Accessory Protector", "Protects an accessory from being accidentally sold. Use this on a protected item to remove the protected status.");
    addArenaCraftEnhancer(17, 1, 1, "Enhancer Protector", 426, 0, 0, 100, 0, 1, "", "", "", 0, Infinity, 0, 0, 0, 0, "Enhancer Protector", "Protects an enhancer from being accidentally sold. The item may still be used. Use this on a protected item to remove the protected status.");
    addArenaCraftEnhancer("Title", "Weapon Enhancer");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 1, 5, 20, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Weapon Attack Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 2, 10, 20, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Weapon Attack Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 3, 15, 20, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Weapon Attack Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 4, 20, 20, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Weapon Attack Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 5, 25, 20, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Weapon Attack Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 6, 30, 20, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Weapon Attack Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 7, 35, 20, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Weapon Attack Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 8, 40, 20, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Weapon Attack Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 9, 45, 20, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Weapon Attack Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Attack Enhancer", 10, 50, 20, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Weapon Attack Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 11, 12, 20, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Weapon Defense Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 12, 24, 20, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Weapon Defense Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 13, 36, 20, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Weapon Defense Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 14, 48, 20, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Weapon Defense Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 15, 60, 20, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Weapon Defense Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 16, 72, 20, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Weapon Defense Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 17, 84, 20, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Weapon Defense Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 18, 96, 20, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Weapon Defense Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 19, 108, 20, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Weapon Defense Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Defense Enhancer", 20, 120, 20, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Weapon Defense Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 61, 1, 120, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Weapon Critical Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 62, 2, 120, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Weapon Critical Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 63, 3, 120, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Weapon Critical Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 64, 4, 120, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Weapon Critical Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 65, 5, 120, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Weapon Critical Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 66, 6, 120, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Weapon Critical Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 67, 7, 120, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Weapon Critical Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 68, 8, 120, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Weapon Critical Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 69, 9, 120, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Weapon Critical Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Critical Enhancer", 70, 10, 120, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Weapon Critical Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 71, 1, 120, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Weapon Dexterity Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 72, 2, 120, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Weapon Dexterity Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 73, 3, 120, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Weapon Dexterity Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 74, 4, 120, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Weapon Dexterity Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 75, 5, 120, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Weapon Dexterity Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 76, 6, 120, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Weapon Dexterity Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 77, 7, 120, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Weapon Dexterity Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 78, 8, 120, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Weapon Dexterity Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 79, 9, 120, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Weapon Dexterity Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Dexterity Enhancer", 80, 10, 120, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Weapon Dexterity Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 81, 1, 120, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Weapon Health Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 82, 2, 120, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Weapon Health Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 83, 3, 120, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Weapon Health Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 84, 4, 120, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Weapon Health Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 85, 5, 120, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Weapon Health Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 86, 6, 120, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Weapon Health Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 87, 7, 120, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Weapon Health Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 88, 8, 120, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Weapon Health Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 89, 9, 120, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Weapon Health Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Health Enhancer", 90, 10, 120, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Weapon Health Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Speed Enhancer", 51, 1, 70, 50, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Weapon Speed Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Speed Enhancer", 52, 2, 70, 30, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Weapon Speed Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Speed Enhancer", 53, 3, 70, 10, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Weapon Speed Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 91, 3, 0, 1000, 0, 0, "", "", "", 1000, Infinity, 20000, 4000, 2, 0, "Weapon Mystery Rock Lv. 1", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 92, 4, 0, 1000, 0, 0, "", "", "", 3500, Infinity, 70000, 14000, 7, 0, "Weapon Mystery Rock Lv. 2", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 93, 5, 0, 1000, 0, 0, "", "", "", 10000, Infinity, 200000, 40000, 20, 2, "Weapon Mystery Rock Lv. 3", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 94, 6, 0, 1000, 0, 0, "", "", "", 35000, Infinity, 700000, 140000, 70, 7, "Weapon Mystery Rock Lv. 4", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 95, 7, 0, 1000, 0, 0, "", "", "", 100000, Infinity, 2000000, 400000, 200, 20, "Weapon Mystery Rock Lv. 5", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 96, 8, 0, 1000, 0, 0, "", "", "", 350000, Infinity, 7000000, 1400000, 700, 70, "Weapon Mystery Rock Lv. 6", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 97, 9, 0, 1000, 0, 0, "", "", "", 1000000, Infinity, 20000000, 4000000, 2000, 200, "Weapon Mystery Rock Lv. 7", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 98, 10, 0, 1000, 0, 0, "", "", "", 3500000, Infinity, 70000000, 14000000, 7000, 700, "Weapon Mystery Rock Lv. 8", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 99, 11, 0, 1000, 0, 0, "", "", "", 10000000, Infinity, 200000000, 40000000, 20000, 2000, "Weapon Mystery Rock Lv. 9", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Mystery Enhancer", 100, 12, 0, 1000, 0, 0, "", "", "", 35000000, Infinity, 700000000, 140000000, 70000, 7000, "Weapon Mystery Rock Lv. 10", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Bonus Adder", 321, 0, 0, 100, 0, 36, "Random", "", "", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Weapon Bonus: Type A", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Bonus Adder", 322, 0, 0, 100, 0, 16, "", "Random", "", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Weapon Bonus: Type B", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Bonus Adder", 323, 0, 0, 100, 0, 406, "", "", "Random", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Weapon Bonus: Type C", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Bonus Adder", 335, 0, 0, 100, 0, 100000, "Random", "Random", "", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Weapon Bonus: Type X", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Bonus Adder", 336, 0, 0, 100, 0, 100000, "", "Random", "Random", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Weapon Bonus: Type Y", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Bonus Adder", 337, 0, 0, 100, 0, 100000, "Random", "", "Random", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Weapon Bonus: Type Z", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Bonus Adder", 338, 0, 0, 100, 0, 100000, "Random", "Random", "Random", 0, Infinity, 0, 0, 21, 3750000, "[S] [I] Weapon Bonus: Type T", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Bonus Adder", 321, 0, 0, 100, 0, 26, "Ignore Epic Weapons", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Weapon Bonus: Ignore Epic Weapons", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Bonus Adder", 321, 0, 0, 100, 0, 26, "Ignore Bonus Rocks", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Weapon Bonus: Ignore Bonus Rocks", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Bonus Adder", 321, 0, 0, 100, 0, 26, "Ignore Pendants", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Weapon Bonus: Ignore Pendants", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Bonus Adder", 321, 0, 0, 100, 0, 26, "Ignore Finalizers", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Weapon Bonus: Ignore Finalizers", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Bonus Adder", 321, 0, 0, 100, 0, 26, "Ignore Outfit Items", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Weapon Bonus: Ignore Outfit Items", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Spirit Rock", 301, 10, 0, 100, 0, 100, "", "", "", 7000000, Infinity, 70000000, 7000000, 500, 700, "Weapon Spirit Rock", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Spirit Rock", 301, 10, 0, 100, 0, 100, "", "", "", 7000000000, Infinity, 70000000000, 7000000000, 99999, 500000, "[S] Weapon Spirit Rock", "");
    addArenaCraftEnhancer(17, 1, 1, "Weapon Growth Rock", 302, 5, 0, 1000, 0, 100, "", "", "", 200000, Infinity, 2000000, 200000, 250, 20, "Basic Weapon Growth Rock", "");
    addArenaCraftEnhancer(15, 1, 1, "Weapon Growth Rock", 302, 8, 0, 1000, 0, 300, "", "", "", 7000000, Infinity, 70000000, 7000000, 50, 700, "Chaotic Weapon Growth Rock", "");
    addArenaCraftEnhancer(4, 1, 1, "Weapon Unique Enhancer", 391, 1, 0, 100, 0, 106, "", "", "", 200000000, Infinity, 2000000000, 400000000, 400, 20000, "Weapon Unique Enhancer Lv. 1", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Weapon Unique Enhancer", 392, 2, 0, 100, 0, 156, "", "", "", 350000000, Infinity, 3500000000, 700000000, 700, 35000, "Weapon Unique Enhancer Lv. 2", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Weapon Unique Enhancer", 393, 3, 0, 100, 0, 256, "", "", "", 500000000, Infinity, 5000000000, 1000000000, 1000, 50000, "Weapon Unique Enhancer Lv. 3", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Weapon Unique Enhancer", 394, 4, 0, 100, 0, 406, "", "", "", 600000000, Infinity, 6000000000, 1200000000, 1200, 60000, "Weapon Unique Enhancer Lv. 4", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Weapon Unique Enhancer", 395, 5, 0, 100, 0, 706, "", "", "", 700000000, Infinity, 7000000000, 1400000000, 1400, 70000, "Weapon Unique Enhancer Lv. 5", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Unique Enhancer", 400, 3000, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 2, 500000, "Weapon Unique Enhancer MAX", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Unique Enhancer", 400, 3000, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 13, 2500000, "[I] Weapon Unique Enhancer MAX", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(16, 1, 1, "Weapon Unobtainium Enhancer", 351, 1, 0, 100, 0, 106, "", "", "", 0, Infinity, 10000000, 2000000, 10, 100, "Weapon Unobtainium Enhancer Lv. 1", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Weapon Unobtainium Enhancer", 352, 2, 0, 100, 0, 156, "", "", "", 0, Infinity, 50000000, 10000000, 50, 500, "Weapon Unobtainium Enhancer Lv. 2", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Weapon Unobtainium Enhancer", 353, 3, 0, 100, 0, 256, "", "", "", 0, Infinity, 250000000, 50000000, 250, 2500, "Weapon Unobtainium Enhancer Lv. 3", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Weapon Unobtainium Enhancer", 354, 4, 0, 100, 0, 406, "", "", "", 0, Infinity, 1000000000, 200000000, 1000, 10000, "Weapon Unobtainium Enhancer Lv. 4", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Weapon Unobtainium Enhancer", 355, 5, 0, 100, 0, 706, "", "", "", 0, Infinity, 5000000000, 1000000000, 5000, 50000, "Weapon Unobtainium Enhancer Lv. 5", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Unobtainium Enhancer", 355, 5, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 7, 1250000, "[I] Weapon Unobtainium Enhancer Lv. 5", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Weapon Finalizer", 424, 90, 0, 100, 0, 296, "", "", "", 0, Infinity, 1000000, 200000, 25, 10, "[I] Weapon Finalizer (Rank 90)", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Finalizer", 424, 500, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 2, 500000, "[I] Weapon Finalizer (Rank 500)", "");
    addArenaCraftEnhancer(21, 1, 1, "Weapon Tukkonium Enhancer", 456, 0, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 35, 6250000, "Weapon Tukkonium Enhancer", "Can be used on a finalized weapon to increase its Attack. There is no limit to the number of Tukkonium Enhancers that can be applied to an item.");
    addArenaCraftEnhancer("Title", "Armor Enhancer");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 101, 2, 20, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Armor Attack Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 102, 4, 20, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Armor Attack Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 103, 6, 20, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Armor Attack Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 104, 8, 20, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Armor Attack Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 105, 10, 20, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Armor Attack Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 106, 12, 20, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Armor Attack Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 107, 14, 20, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Armor Attack Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 108, 16, 20, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Armor Attack Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 109, 18, 20, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Armor Attack Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Attack Enhancer", 110, 20, 20, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Armor Attack Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 111, 5, 20, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Armor Defense Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 112, 10, 20, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Armor Defense Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 113, 15, 20, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Armor Defense Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 114, 20, 20, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Armor Defense Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 115, 25, 20, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Armor Defense Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 116, 30, 20, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Armor Defense Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 117, 35, 20, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Armor Defense Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 118, 40, 20, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Armor Defense Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 119, 45, 20, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Armor Defense Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Defense Enhancer", 120, 50, 20, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Armor Defense Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 161, 1, 120, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Armor Critical Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 162, 2, 120, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Armor Critical Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 163, 3, 120, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Armor Critical Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 164, 4, 120, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Armor Critical Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 165, 5, 120, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Armor Critical Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 166, 6, 120, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Armor Critical Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 167, 7, 120, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Armor Critical Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 168, 8, 120, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Armor Critical Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 169, 9, 120, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Armor Critical Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Critical Enhancer", 170, 10, 120, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Armor Critical Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 171, 1, 120, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Armor Dexterity Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 172, 2, 120, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Armor Dexterity Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 173, 3, 120, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Armor Dexterity Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 174, 4, 120, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Armor Dexterity Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 175, 5, 120, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Armor Dexterity Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 176, 6, 120, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Armor Dexterity Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 177, 7, 120, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Armor Dexterity Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 178, 8, 120, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Armor Dexterity Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 179, 9, 120, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Armor Dexterity Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Dexterity Enhancer", 180, 10, 120, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Armor Dexterity Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 181, 1, 120, 100, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Armor Health Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 182, 2, 120, 90, 0, 0, "", "", "", 3500, Infinity, 35000, 7000, 2, 0, "Armor Health Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 183, 3, 120, 80, 0, 0, "", "", "", 10000, Infinity, 100000, 20000, 5, 1, "Armor Health Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 184, 4, 120, 70, 0, 0, "", "", "", 35000, Infinity, 350000, 70000, 10, 3, "Armor Health Rock Lv. 4", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 185, 5, 120, 60, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Armor Health Rock Lv. 5", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 186, 6, 120, 50, 0, 0, "", "", "", 350000, Infinity, 3500000, 700000, 100, 35, "Armor Health Rock Lv. 6", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 187, 7, 120, 40, 0, 0, "", "", "", 1000000, Infinity, 10000000, 2000000, 350, 100, "Armor Health Rock Lv. 7", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 188, 8, 120, 30, 0, 0, "", "", "", 3500000, Infinity, 35000000, 7000000, 1000, 350, "Armor Health Rock Lv. 8", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 189, 9, 120, 20, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Armor Health Rock Lv. 9", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Health Enhancer", 190, 10, 120, 10, 0, 0, "", "", "", 35000000, Infinity, 350000000, 70000000, 10000, 3500, "Armor Health Rock Lv. 10", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Speed Enhancer", 151, 1, 70, 50, 0, 0, "", "", "", 1000, Infinity, 10000, 2000, 1, 0, "Armor Speed Rock Lv. 1", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Speed Enhancer", 152, 2, 70, 30, 0, 0, "", "", "", 100000, Infinity, 1000000, 200000, 35, 10, "Armor Speed Rock Lv. 2", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Speed Enhancer", 153, 3, 70, 10, 0, 0, "", "", "", 10000000, Infinity, 100000000, 20000000, 3500, 1000, "Armor Speed Rock Lv. 3", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 191, 3, 0, 1000, 0, 0, "", "", "", 1000, Infinity, 20000, 4000, 2, 0, "Armor Mystery Rock Lv. 1", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 192, 4, 0, 1000, 0, 0, "", "", "", 3500, Infinity, 70000, 14000, 7, 0, "Armor Mystery Rock Lv. 2", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 193, 5, 0, 1000, 0, 0, "", "", "", 10000, Infinity, 200000, 40000, 20, 2, "Armor Mystery Rock Lv. 3", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 194, 6, 0, 1000, 0, 0, "", "", "", 35000, Infinity, 700000, 140000, 70, 7, "Armor Mystery Rock Lv. 4", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 195, 7, 0, 1000, 0, 0, "", "", "", 100000, Infinity, 2000000, 400000, 200, 20, "Armor Mystery Rock Lv. 5", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 196, 8, 0, 1000, 0, 0, "", "", "", 350000, Infinity, 7000000, 1400000, 700, 70, "Armor Mystery Rock Lv. 6", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 197, 9, 0, 1000, 0, 0, "", "", "", 1000000, Infinity, 20000000, 4000000, 2000, 200, "Armor Mystery Rock Lv. 7", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 198, 10, 0, 1000, 0, 0, "", "", "", 3500000, Infinity, 70000000, 14000000, 7000, 700, "Armor Mystery Rock Lv. 8", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 199, 11, 0, 1000, 0, 0, "", "", "", 10000000, Infinity, 200000000, 40000000, 20000, 2000, "Armor Mystery Rock Lv. 9", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Mystery Enhancer", 200, 12, 0, 1000, 0, 0, "", "", "", 35000000, Infinity, 700000000, 140000000, 70000, 7000, "Armor Mystery Rock Lv. 10", "What this enhancer does remains a mystery.");
    addArenaCraftEnhancer(21, 1, 1, "Armor Bonus Adder", 324, 0, 0, 100, 0, 36, "Random", "", "", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Armor Bonus: Type A", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Bonus Adder", 325, 0, 0, 100, 0, 16, "", "Random", "", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Armor Bonus: Type B", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Bonus Adder", 326, 0, 0, 100, 0, 406, "", "", "Random", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Armor Bonus: Type C", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Bonus Adder", 339, 0, 0, 100, 0, 100000, "Random", "Random", "", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Armor Bonus: Type X", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Bonus Adder", 340, 0, 0, 100, 0, 100000, "", "Random", "Random", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Armor Bonus: Type Y", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Bonus Adder", 341, 0, 0, 100, 0, 100000, "Random", "", "Random", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Armor Bonus: Type Z", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Bonus Adder", 342, 0, 0, 100, 0, 100000, "Random", "Random", "Random", 0, Infinity, 0, 0, 21, 3750000, "[S] [I] Armor Bonus: Type T", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Bonus Adder", 324, 0, 0, 100, 0, 26, "Ignore Epic Weapons", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Armor Bonus: Ignore Epic Weapons", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Bonus Adder", 324, 0, 0, 100, 0, 26, "Ignore Bonus Rocks", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Armor Bonus: Ignore Bonus Rocks", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Bonus Adder", 324, 0, 0, 100, 0, 26, "Ignore Pendants", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Armor Bonus: Ignore Pendants", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Bonus Adder", 324, 0, 0, 100, 0, 26, "Ignore Finalizers", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Armor Bonus: Ignore Finalizers", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Bonus Adder", 324, 0, 0, 100, 0, 26, "Ignore Outfit Items", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Armor Bonus: Ignore Outfit Items", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Spirit Rock", 304, 10, 0, 100, 0, 100, "", "", "", 3500000, Infinity, 35000000, 3500000, 250, 350, "Armor Spirit Rock", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Spirit Rock", 304, 10, 0, 100, 0, 100, "", "", "", 3500000000, Infinity, 35000000000, 3500000000, 99999, 250000, "[S] Armor Spirit Rock", "");
    addArenaCraftEnhancer(17, 1, 1, "Armor Growth Rock", 305, 5, 0, 1000, 0, 100, "", "", "", 100000, Infinity, 1000000, 100000, 125, 10, "Basic Armor Growth Rock", "");
    addArenaCraftEnhancer(15, 1, 1, "Armor Growth Rock", 305, 8, 0, 1000, 0, 300, "", "", "", 3500000, Infinity, 35000000, 3500000, 25, 350, "Chaotic Armor Growth Rock", "");
    addArenaCraftEnhancer(4, 1, 1, "Armor Unique Enhancer", 401, 1, 0, 100, 0, 106, "", "", "", 100000000, Infinity, 1000000000, 200000000, 200, 10000, "Armor Unique Enhancer Lv. 1", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Armor Unique Enhancer", 402, 2, 0, 100, 0, 156, "", "", "", 175000000, Infinity, 1750000000, 350000000, 350, 17500, "Armor Unique Enhancer Lv. 2", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Armor Unique Enhancer", 403, 3, 0, 100, 0, 256, "", "", "", 250000000, Infinity, 2500000000, 500000000, 500, 25000, "Armor Unique Enhancer Lv. 3", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Armor Unique Enhancer", 404, 4, 0, 100, 0, 406, "", "", "", 300000000, Infinity, 3000000000, 600000000, 600, 30000, "Armor Unique Enhancer Lv. 4", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(4, 1, 1, "Armor Unique Enhancer", 405, 5, 0, 100, 0, 706, "", "", "", 350000000, Infinity, 3500000000, 700000000, 700, 35000, "Armor Unique Enhancer Lv. 5", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(21, 1, 1, "Armor Unique Enhancer", 410, 1800, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 1, 250000, "Armor Unique Enhancer MAX", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(21, 1, 1, "Armor Unique Enhancer", 410, 1800, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 7, 1250000, "[I] Armor Unique Enhancer MAX", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(16, 1, 1, "Armor Unobtainium Enhancer", 361, 1, 0, 100, 0, 106, "", "", "", 0, Infinity, 10000000, 1000000, 10, 100, "Armor Unobtainium Enhancer Lv. 1", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Armor Unobtainium Enhancer", 362, 2, 0, 100, 0, 156, "", "", "", 0, Infinity, 50000000, 5000000, 50, 500, "Armor Unobtainium Enhancer Lv. 2", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Armor Unobtainium Enhancer", 363, 3, 0, 100, 0, 256, "", "", "", 0, Infinity, 250000000, 25000000, 250, 2500, "Armor Unobtainium Enhancer Lv. 3", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Armor Unobtainium Enhancer", 364, 4, 0, 100, 0, 406, "", "", "", 0, Infinity, 1000000000, 100000000, 1000, 10000, "Armor Unobtainium Enhancer Lv. 4", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Armor Unobtainium Enhancer", 365, 5, 0, 100, 0, 706, "", "", "", 0, Infinity, 5000000000, 500000000, 5000, 50000, "Armor Unobtainium Enhancer Lv. 5", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(21, 1, 1, "Armor Unobtainium Enhancer", 365, 5, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 7, 1250000, "[I] Armor Unobtainium Enhancer Lv. 5", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Armor Finalizer", 425, 90, 0, 100, 0, 296, "", "", "", 0, Infinity, 1000000, 200000, 25, 10, "[I] Armor Finalizer (Rank 90)", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Finalizer", 425, 500, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 2, 500000, "[I] Armor Finalizer (Rank 500)", "");
    addArenaCraftEnhancer(21, 1, 1, "Armor Tukkonium Enhancer", 457, 0, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 7, 1250000, "Armor Tukkonium Enhancer", "Can be used on a finalized armor piece to increase its Defense. There is no limit to the number of Tukkonium Enhancers that can be applied to an item.");
    addArenaCraftEnhancer(17, 1, 1, "Armor Growth Rock", 451, 100, 0, 100, 0, 706, "", "", "", 0, Infinity, 250000000, 50000000, 5000, 2500, "Humblebee Armor Upgrade", "Raises the Max Level of Humblebee Armor by 100. Adds 1 to the enhancement count. Cannot be used if the item\'s Max Level is already 284 or higher.");
    addArenaCraftEnhancer("Title", "Accessory Enhancer");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Bonus Adder", 327, 0, 0, 100, 0, 36, "Random", "", "", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Accessory Bonus: Type A", "");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Bonus Adder", 328, 0, 0, 100, 0, 16, "", "Random", "", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Accessory Bonus: Type B", "");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Bonus Adder", 329, 0, 0, 100, 0, 406, "", "", "Random", 0, Infinity, 0, 0, 1, 250000, "[S] [I] Accessory Bonus: Type C", "");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Bonus Adder", 343, 0, 0, 100, 0, 100000, "Random", "Random", "", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Accessory Bonus: Type X", "");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Bonus Adder", 344, 0, 0, 100, 0, 100000, "", "Random", "Random", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Accessory Bonus: Type Y", "");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Bonus Adder", 345, 0, 0, 100, 0, 100000, "Random", "", "Random", 0, Infinity, 0, 0, 13, 2500000, "[S] [I] Accessory Bonus: Type Z", "");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Bonus Adder", 346, 0, 0, 100, 0, 100000, "Random", "Random", "Random", 0, Infinity, 0, 0, 21, 3750000, "[S] [I] Accessory Bonus: Type T", "");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Bonus Adder", 327, 0, 0, 100, 0, 36, "Ignore Epic Weapons", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Accessory Bonus: Ignore Epic Weapons", "");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Bonus Adder", 327, 0, 0, 100, 0, 26, "Ignore Bonus Rocks", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Accessory Bonus: Ignore Bonus Rocks", "");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Bonus Adder", 327, 0, 0, 100, 0, 26, "Ignore Pendants", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Accessory Bonus: Ignore Pendants", "");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Bonus Adder", 327, 0, 0, 100, 0, 26, "Ignore Finalizers", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Accessory Bonus: Ignore Finalizers", "");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Bonus Adder", 327, 0, 0, 100, 0, 26, "Ignore Outfit Items", "", "", 0, Infinity, 50000, 0, 0, 0, "[S] [I] Accessory Bonus: Ignore Outfit Items", "");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Spirit Rock", 313, 10, 0, 100, 0, 100, "", "", "", 7000000, Infinity, 70000000, 7000000, 500, 700, "Accessory Spirit Rock", "");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Spirit Rock", 313, 10, 0, 100, 0, 100, "", "", "", 70000000000, Infinity, 700000000000, 70000000000, 99999, 2000000, "[S] Accessory Spirit Rock", "");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Unique Enhancer", 420, 1800, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 2, 1000000, "Accessory Unique Enhancer MAX", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Unique Enhancer", 420, 1800, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 35, 12500000, "[I] Accessory Unique Enhancer MAX", "A unique enhancer. Unlike other enhancers, it doesn\'t add to the enhancement count of the item. However, it cannot be used on items that aren\'t fully enhanced and leveled.");
    addArenaCraftEnhancer(17, 1, 1, "Accessory Attack Enhancer", 331, 300, 0, 100, 0, 706, "", "", "", 30000000000, 2, 300000000000, 15000000000, 99999, 750000, "Awesome Enhancer", "The worst resource sink that has ever existed.\n\nCan only be used on Awesome Earrings.");
    addArenaCraftEnhancer(15, 1, 1, "Accessory Attack Enhancer", 332, 150, 0, 100, 0, 706, "", "", "", 75000000000, Infinity, 750000000000, 75000000000, 75000, 7500000, "GIGA ENHANCER EX", "Can only be used on GIGA PENDANT and GIGA EARRINGS.");
    addArenaCraftEnhancer(15, 1, 1, "Accessory Lifespan Extender", 333, 15, 0, 100, 0, 706, "", "", "", 75000000000, Infinity, 750000000000, 75000000000, 75000, 7500000, "GIGA LIFE ROCK EX", "Can only be used on GIGA PENDANT and GIGA EARRINGS.");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Attack Enhancer", 332, 150, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 2, 500000, "TERA ENHANCER", "Can only be used on TERA PENDANT and TERA EARRINGS.");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Attack Enhancer", 332, 175, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 35, 6250000, "TERA ENHANCER EX", "Can only be used on TERA PENDANT and TERA EARRINGS.");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Lifespan Extender", 333, 15, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 7, 1250000, "TERA LIFE ROCK", "Can only be used on TERA PENDANT and TERA EARRINGS.");
    addArenaCraftEnhancer(21, 1, 1, "Accessory Lifespan Extender", 333, 99999, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 142, 25000000, "TERA LIFE ROCK EX", "Can only be used on TERA PENDANT and TERA EARRINGS.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Unobtainium Enhancer", 371, 1, 0, 100, 0, 106, "", "", "", 0, Infinity, 10000000, 1000000, 10, 100, "Accessory Unobtainium Enhancer Lv. 1", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Unobtainium Enhancer", 372, 2, 0, 100, 0, 156, "", "", "", 0, Infinity, 50000000, 5000000, 50, 500, "Accessory Unobtainium Enhancer Lv. 2", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Unobtainium Enhancer", 373, 3, 0, 100, 0, 256, "", "", "", 0, Infinity, 250000000, 25000000, 250, 2500, "Accessory Unobtainium Enhancer Lv. 3", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Unobtainium Enhancer", 374, 4, 0, 100, 0, 406, "", "", "", 0, Infinity, 1000000000, 100000000, 1000, 10000, "Accessory Unobtainium Enhancer Lv. 4", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Unobtainium Enhancer", 375, 5, 0, 100, 0, 706, "", "", "", 0, Infinity, 5000000000, 500000000, 5000, 50000, "Accessory Unobtainium Enhancer Lv. 5", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Unobtainium Enhancer", 380, 10, 0, 100, 0, 2506, "", "", "", 0, Infinity, 50000000000, 5000000000, 50000, 500000, "Accessory Unobtainium Enhancer Lv. 10", "Increases the bonus tier of an item. If the item already has an Unobtainium Enhancement count, it will be replaced.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Bonus Adder", 222, 0, 0, 100, 0, 26, "Auto Buff - Random", "", "", 0, Infinity, 0, 0, 999, 999, "[I] Auto Buff - RANDOM", "Apply this to Auto Buff Gem to make it give you random buffs.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Bonus Adder", 222, 0, 0, 100, 0, 26, "Auto Buff - Power", "", "", 0, Infinity, 0, 0, 9999, 9999, "[I] Auto Buff - POWER", "Apply this to Auto Buff Gem to make it give you Power buff.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Bonus Adder", 222, 0, 0, 100, 0, 26, "Auto Buff - Master", "", "", 0, Infinity, 0, 0, 9999, 9999, "[I] Auto Buff - MASTER", "Apply this to Auto Buff Gem to make it give you Master buff.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Bonus Adder", 222, 0, 0, 100, 0, 26, "Auto Buff - Reward", "", "", 0, Infinity, 0, 0, 9999, 9999, "[I] Auto Buff - REWARD", "Apply this to Auto Buff Gem to make it give you Reward buff.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Bonus Adder", 222, 0, 0, 100, 0, 26, "Auto Buff - Enrage", "", "", 0, Infinity, 0, 0, 99999, 99999, "[I] Auto Buff - ENRAGE", "Apply this to Auto Buff Gem to make it give you Enrage buff.");
    addArenaCraftEnhancer(16, 1, 1, "Accessory Bonus Adder", 222, 0, 0, 100, 0, 26, "Auto Buff - Boost", "", "", 0, Infinity, 0, 0, 99999, 99999, "[I] Auto Buff - BOOST", "Apply this to Auto Buff Gem to make it give you Elemental Boost buff.");
    addArenaCraftEnhancer("Title", "Enhancer Enhancer");
    addArenaCraftEnhancer(16, 1, 1, "Mystery Enhancer Identifier", 221, 0, 0, 100, 0, 300, "", "", "", 100000000, Infinity, 1000000000, 150000000, 100, 10000, "Mystery Enhancer Identifier", "");
    addArenaCraftEnhancer(16, 1, 1, "Mystery Enhancer Identifier", 221, 0, 0, 100, 0, 300, "", "", "", 5000000000, 7, 50000000000, 7500000000, 5000, 500000, "[I] Mystery Enhancer Identifier", "");
    addArenaCraftEnhancer(21, 1, 1, "Mystery Enhancer Identifier", 221, 0, 0, 100, 0, 100000, "", "", "", 0, Infinity, 0, 0, 13, 5000000, "[I] Mystery Enhancer Identifier", "");
    _root.setArray = [];
    addArenaSet("Gem of Constancy\n(Gem of Constancy must be equipped)", [2, 3, 4, 5, 6, 7, 8], ["Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate"], [5, 5, 5, 5, 5, 5, 10], ["Gem of Constancy", "Any Finalized Weapon", "Any Finalized Hat", "Any Finalized Shirt", "Any Finalized Gloves", "Any Finalized Pants", "Any Finalized Shoes", "Any Finalized Skin"]);
    addArenaSet("Empowering Gem\n(Empowering Gem must be equipped)", [2, 3, 4], ["Damage", "Damage", "Damage"], [5, 5, 10], ["Empowering Gem", "Any Rank 200+ Weapon", "Any Rank 300+ Weapon", "Any Rank 400+ Weapon"]);
    addArenaSet("Mining\n(Pickaxe must be equipped)", [2, 3, 4, 5, 6, 6, 6], ["Drop Rate", "Drop Rate", "Drop Rate", "Drop Rate", "Drop Rate", "Spawn Rate", "Attack Speed"], [50, 50, 50, 100, 250, 50, 50], ["Any Pickaxe", "Any Crystal Hat", "Any Crystal Shirt", "Any Crystal Gloves", "Any Crystal Pants", "Any Crystal Shoes"]);
    addArenaSet("Leather Set", [5], ["Damage"], [5], ["Leather Hat", "Leather Shirt", "Leather Gloves", "Leather Pants", "Leather Shoes"]);
    addArenaSet("Kongregate Set", [5], ["Damage"], [10], ["Kongregate Hat", "Kongregate Shirt", "Kongregate Gloves", "Kongregate Pants", "Kongregate Shoes"]);
    addArenaSet("Lovely Set", [5], ["Damage"], [15], ["Lovely Hat", "Lovely Shirt", "Lovely Gloves", "Lovely Pants", "Lovely Shoes"]);
    addArenaSet("Red Set", [5], ["Damage"], [20], ["Red Hat", "Red Shirt", "Red Gloves", "Red Pants", "Red Shoes"]);
    addArenaSet("Knight Set", [5], ["Damage"], [25], ["Knight Hat", "Knight Shirt", "Knight Gloves", "Knight Pants", "Knight Shoes"]);
    addArenaSet("Paladin Set", [5], ["Damage"], [30], ["Paladin Hat", "Paladin Shirt", "Paladin Gloves", "Paladin Pants", "Paladin Shoes"]);
    addArenaSet("Executioner Set", [5], ["Damage"], [35], ["Executioner Hat", "Executioner Shirt", "Executioner Gloves", "Executioner Pants", "Executioner Shoes"]);
    addArenaSet("Dragonewyn Set", [5], ["Damage"], [40], ["Dragonewyn Hat", "Dragonewyn Shirt", "Dragonewyn Gloves", "Dragonewyn Pants", "Dragonewyn Shoes"]);
    addArenaSet("Spirit Set", [5, 6], ["Damage", "Spawn Rate"], [45, 15], ["Spirit Sword", "Spirit Hat", "Spirit Shirt", "Spirit Gloves", "Spirit Pants", "Spirit Shoes"]);
    addArenaSet("Elite Set", [5], ["Damage"], [50], ["Elite Hat", "Elite Shirt", "Elite Gloves", "Elite Pants", "Elite Shoes"]);
    addArenaSet("Training Set", [4, 5], ["Damage", "EXP"], [5, 5], ["Training Hat", "Training Shirt", "Training Gloves", "Training Pants", "Training Shoes"]);
    addArenaSet("Soldier Set", [4, 5], ["Damage", "EXP"], [10, 10], ["Soldier Hat", "Soldier Shirt", "Soldier Gloves", "Soldier Pants", "Soldier Shoes"]);
    addArenaSet("Stripper Nurse Set", [4, 5], ["Damage", "EXP"], [15, 15], ["Stripper Nurse Hat", "Stripper Nurse Shirt", "Stripper Nurse Gloves", "Stripper Nurse Pants", "Stripper Nurse Shoes"]);
    addArenaSet("Enchanted Leather Set", [4, 5, 5], ["Damage", "EXP", "Attack Speed"], [20, 20, 20], ["Enchanted Leather Hat", "Enchanted Leather Shirt", "Enchanted Leather Gloves", "Enchanted Leather Pants", "Enchanted Leather Shoes"]);
    addArenaSet("Golden Set", [4, 5, 5], ["Damage", "EXP", "Coin"], [25, 25, 25], ["Golden Hat", "Golden Shirt", "Golden Gloves", "Golden Pants", "Golden Shoes"]);
    addArenaSet("Regeneration Set", [4, 5, 5, 5, 5], ["Damage", "EXP", "Spawn Rate", "MaxHP", "MaxMP"], [30, 30, 5, 75, 75], ["Regeneration Hat", "Regeneration Shirt", "Regeneration Gloves", "Regeneration Pants", "Regeneration Shoes"]);
    addArenaSet("Berserker Set", [4, 5, 5, 5], ["Damage", "EXP", "Spawn Rate", "MaxHP"], [35, 35, 10, 175], ["Berserker Hat", "Berserker Shirt", "Berserker Gloves", "Berserker Pants", "Berserker Shoes"]);
    addArenaSet("Defensive Set", [4, 5, 5, 5, 5], ["Damage", "Defense", "EXP", "Spawn Rate", "MaxHP"], [40, 40, 40, 15, 200], ["Defensive Hat", "Defensive Shirt", "Defensive Gloves", "Defensive Pants", "Defensive Shoes"]);
    addArenaSet("Pure Darkness Set", [4, 5, 5, 5, 5, 6, 6], ["Damage", "Evasion", "EXP", "Spawn Rate", "MaxHP", "Spawn Rate", "Damage"], [45, 45, 45, 20, 225, 20, 40], ["Pure Darkness Claw", "Pure Darkness Hat", "Pure Darkness Shirt", "Pure Darkness Gloves", "Pure Darkness Pants", "Pure Darkness Shoes"]);
    addArenaSet("Crimson Set", [4, 5, 5, 5, 5, 6, 6], ["Damage", "Accuracy", "EXP", "Spawn Rate", "MaxHP", "Spawn Rate", "Damage"], [50, 50, 50, 25, 250, 25, 50], ["Crimson Bow", "Crimson Hat", "Crimson Shirt", "Crimson Gloves", "Crimson Pants", "Crimson Shoes"]);
    addArenaSet("Knightmare Set", [4, 5, 5, 5, 5, 5, 5, 5], ["Damage", "Damage", "Defense", "EXP", "Spawn Rate", "MaxHP", "Drop Rate", "Rare Monster Rate"], [60, 10, 60, 60, 30, 300, 60, 60], ["Knightmare Hat", "Knightmare Shirt", "Knightmare Gloves", "Knightmare Pants", "Knightmare Shoes"]);
    addArenaSet("Humblebee Set", [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], ["Damage", "Damage", "EXP", "Coin", "Spawn Rate", "Attack Speed", "Accuracy", "Evasion", "Drop Rate", "Rare Monster Rate", "Epic Monster Rate"], [70, 15, 70, 35, 35, 140, 70, 70, 70, 140, 140], ["Humblebee Hat", "Humblebee Shirt", "Humblebee Gloves", "Humblebee Pants", "Humblebee Shoes"]);
    addArenaSet("Ghost Set", [4, 5, 5, 5, 5, 5, 5], ["Damage", "Damage", "Evasion", "EXP", "Spawn Rate", "MaxHP", "Drop Rate"], [80, 20, 160, 80, 40, 400, 80], ["Ghost Hat", "Ghost Shirt", "Ghost Gloves", "Ghost Pants", "Ghost Shoes"]);
    addArenaSet("Samurai Set", [4, 5, 5, 5, 5, 5], ["Damage", "Damage", "EXP", "Spawn Rate", "MaxHP", "Rare Monster Rate"], [100, 50, 100, 50, 1000, 500], ["Samurai Hat", "Samurai Shirt", "Samurai Gloves", "Samurai Pants", "Samurai Shoes"]);
    addArenaSet("Dress Set", [4, 5, 5, 5, 5, 5, 5], ["Damage", "Damage", "Coin", "Spawn Rate", "MaxHP", "MaxMP", "Epic Monster Rate"], [120, 60, 120, 60, 250, 500, 500], ["Dress Hat", "Dress Shirt", "Dress Gloves", "Dress Pants", "Dress Shoes"]);
    addArenaSet("Elm Set", [3, 4, 5, 5, 5, 5, 5, 5], ["Drop Rate", "Damage", "Spawn Rate", "Attack Speed", "MaxHP", "MaxMP", "Rare Monster Rate", "Epic Monster Rate"], [50, 50, 50, 100, 100, 100, 100, 100], ["Elm Hat", "Elm Shirt", "Elm Gloves", "Elm Pants", "Elm Shoes"]);
    addArenaSet("Corrupted Elm Set", [3, 4, 5, 5, 5, 5, 5, 5], ["Drop Rate", "Damage", "Spawn Rate", "Attack Speed", "MaxHP", "MaxMP", "Rare Monster Rate", "Epic Monster Rate"], [75, 75, 75, 150, 150, 150, 150, 150], ["Corrupted Elm Hat", "Corrupted Elm Shirt", "Corrupted Elm Gloves", "Corrupted Elm Pants", "Corrupted Elm Shoes"]);
    addArenaSet("Emperor\'s Clothing", [4, 5, 5, 5], ["Coin", "Coin", "Pixel", "Spawn Rate"], [125, 125, 250, 50], ["Emperor\'s Hat", "Emperor\'s Shirt", "Emperor\'s Gloves", "Emperor\'s Pants", "Emperor\'s Shoes"]);
    addArenaSet("Set of DOOOOOOM", [5, 6, 6, 6, 6], ["Spawn Rate", "Spawn Rate", "Damage", "MaxHP", "Damage dealt in Tower of DOOOOOOM is multiplied by <b>1.2</b>"], [5, 5, 10, 60, -1], ["Any Weapon of DOOOOOOM", "Hat of DOOOOOOM", "Shirt of DOOOOOOM", "Gloves of DOOOOOOM", "Pants of DOOOOOOM", "Shoes of DOOOOOOM"]);
    addArenaSet("Chuck Norris Set", [5], ["Damage"], [200], ["Chuck Norris Hat", "Chuck Norris Shirt", "Chuck Norris Gloves", "Chuck Norris Pants", "Chuck Norris Shoes"]);
    addArenaSet("Alien Set", [5, 6, 6, 6, 7, 7, 7, 7], ["EXP", "Spawn Rate", "MaxHP", "MaxMP", "Drop Rate", "Rare Monster Rate", "Epic Monster Rate", "Damage"], [50, 50, 50, 50, 50, 50, 50, 50], ["Any Alien Weapon", "Any Alien Hat", "Any Alien Shirt", "Any Alien Gloves", "Any Alien Pants", "Any Alien Shoes", "Alien Earrings"]);
    addArenaSet("Meteoric Set", [5, 5, 6, 6, 6], ["EXP", "Spawn Rate", "EXP", "Spawn Rate", "Damage"], [90, 60, 60, 90, 150], ["Any Meteoric Weapon", "Meteoric Hat", "Meteoric Shirt", "Meteoric Gloves", "Meteoric Pants", "Meteoric Shoes"]);
    addArenaSet("Companion Cube Set", [5, 5, 5, 5, 5], ["Drop Rate", "Spawn Rate", "Rare Monster Rate", "Epic Monster Rate", "The amount of damage dealt by Robacon/Robroccoli is tripled"], [150, 50, 150, 150, -1], ["Companion Cube Hat", "Companion Cube Shirt", "Companion Cube Gloves", "Companion Cube Pants", "Companion Cube Shoes"]);
    addArenaSet("Fairy Godfather Set", [4, 5, 5, 5], ["Damage", "Damage", "Spawn Rate", "Fairy Power Bar fills twice as fast"], [25, 25, 100, -1], ["Fairy Godfather Hat", "Fairy Godfather Shirt", "Fairy Godfather Gloves", "Fairy Godfather Pants", "Fairy Godfather Shoes"]);
    addArenaSet("Fairy Godmother Set", [4, 5, 5, 5, 6, 6, 6, 6], ["Damage", "Damage", "Spawn Rate", "Fairy Power Bar fills twice as fast", "Damage", "MaxMP", "Spawn Rate", "Potion Efficiency <b>+500%</b>"], [20, 20, 100, -1, 60, 600, 20, -1], ["Fairy Godmother Wand", "Fairy Godmother Hat", "Fairy Godmother Shirt", "Fairy Godmother Gloves", "Fairy Godmother Pants", "Fairy Godmother Shoes"]);
    addArenaSet("Censor Set", [5, 5, 5, 6, 6, 6], ["Damage", "EXP", "Spawn Rate", "EXP", "Damage", "You become invulnerable to SOAP and completely ignore monster DEF when otherwise affected by SOAP"], [50, 50, 50, 50, 100, -1], ["Censor Sword", "Censor Hat", "Censor Shirt", "Censor Gloves", "Censor Pants", "Censor Shoes"]);
    addArenaSet("Wizard Set", [4, 5, 5, 5], ["Damage", "Damage", "EXP", "MaxMP"], [20, 30, 50, 1000], ["Wizard Hat", "Wizard Shirt", "Wizard Gloves", "Wizard Pants", "Wizard Shoes"]);
    addArenaSet("Holy Glory Set", [5, 5, 5, 6, 6], ["Spawn Rate", "Damage", "Defense", "Spawn Rate", "Damage"], [35, 55, 110, 45, 345], ["Glaive of Smiting", "Holy Glory Hat", "Holy Glory Shirt", "Holy Glory Gloves", "Holy Glory Pants", "Holy Glory Shoes"]);
    addArenaSet("Dark Angel Set", [5, 5, 5, 6, 6], ["Spawn Rate", "Damage", "Defense", "Spawn Rate", "Damage"], [40, 65, 130, 50, 385], ["Darkglaive of Smiting", "Dark Angel Hat", "Dark Angel Shirt", "Dark Angel Gloves", "Dark Angel Pants", "Dark Angel Shoes"]);
    addArenaSet("Chaos Set", [5, 5, 5, 6, 6], ["Spawn Rate", "Damage", "Defense", "Spawn Rate", "Damage"], [45, 75, 150, 55, 425], ["Fiend Glaive", "Chaos Hat", "Chaos Shirt", "Chaos Gloves", "Chaos Pants", "Chaos Shoes"]);
    addArenaSet("CHAOS SET", [5, 5, 5, 6, 6, 6], ["Spawn Rate", "Damage", "Evasion", "Spawn Rate", "Damage", "Accuracy"], [50, 50, 50, 10, 250, 100], ["CHAOS AURA", "CHAOS HAT", "CHAOS SHIRT", "CHAOS GLOVES", "CHAOS PANTS", "CHAOS SHOES"]);
    addArenaSet("Green Armor of Loot", [5, 5, 5, 5, 5], ["Coin", "Drop Rate", "Spawn Rate", "Rare Monster Rate", "Epic Monster Rate"], [30, 600, 15, 120, 60], ["Green Hat of Loot", "Green Shirt of Loot", "Green Gloves of Loot", "Green Pants of Loot", "Green Shoes of Loot"]);
    addArenaSet("Blue Armor of Loot", [5, 5, 5, 5, 5], ["Coin", "Drop Rate", "Spawn Rate", "Rare Monster Rate", "Epic Monster Rate"], [40, 800, 20, 160, 80], ["Blue Hat of Loot", "Blue Shirt of Loot", "Blue Gloves of Loot", "Blue Pants of Loot", "Blue Shoes of Loot"]);
    addArenaSet("Purple Armor of Loot", [5, 5, 5, 5, 5], ["Coin", "Drop Rate", "Spawn Rate", "Rare Monster Rate", "Epic Monster Rate"], [50, 1000, 25, 200, 100], ["Purple Hat of Loot", "Purple Shirt of Loot", "Purple Gloves of Loot", "Purple Pants of Loot", "Purple Shoes of Loot"]);
    addArenaSet("Ultimate Set", [2, 3, 4, 5, 6, 6, 7, 8, 9, 9, 9, 9], ["Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate", "Damage", "Spawn Rate", "Spawn Rate", "Drop Rate", "Damage", "Most loot drops are magnetized", "Recover some MP whenever you deal damage. Effect is improved as you finish more Ascensions."], [5, 5, 10, 10, 20, 75, 20, 30, 50, 125, -1, -1], ["Ultimate Weapon", "Ultimate Hat", "Ultimate Shirt", "Ultimate Gloves", "Ultimate Pants", "Ultimate Shoes", "Ultimate Pendant", "Ultimate Earrings", "Ultimate Trinket", "Apocalypse Mode"]);
    addArenaSet("Halloween Set", [5, 6], ["Coin", "Candy Drop Rate <b>+50%</font>"], [30, -1], ["Ghostslayer", "Halloween Hat", "Halloween Shirt", "Halloween Gloves", "Halloween Pants", "Halloween Shoes"]);
    addArenaSet("Elite Lovely Set", [5], ["Coin"], [30], ["Elite Lovely Hat", "Elite Lovely Shirt", "Elite Lovely Gloves", "Elite Lovely Pants", "Elite Lovely Shoes"]);
    addArenaSet("Pre-Explosion Set", [5, 6], ["Nostalgia <b>+50%</b>", "Nostalgia <b>+150%</b>"], [-1, -1], ["Pre-Explosion Trophy", "Pre-Explosion Hat", "Pre-Explosion Shirt", "Pre-Explosion Gloves", "Pre-Explosion Pants", "Pre-Explosion Shoes"]);
    addArenaSet("2nd Anniversary Set", [5, 6], ["Nostalgia <b>+25%</b>", "Nostalgia <b>+50%</b>"], [-1, -1], ["2nd Anniversary Hat", "2nd Anniversary Shirt", "2nd Anniversary Gloves", "2nd Anniversary Pants", "2nd Anniversary Shoes", "2nd Anniversary Medal"]);
    addArenaSet("Dragon Slayer Set", [5, 5, 5, 6, 6, 6, 6, 6, 6], ["Spawn Rate", "MaxHP", "Evasion", "EXP", "Damage", "MaxMP", "Attack Speed", "Accuracy", "Damage dealt in Endless Dungeon is multiplied by <b>1.2</b>"], [25, 100, 100, 50, 75, 150, 50, 300, -1], ["Any Dragon Slayer Weapon", "Dragon Slayer Hat", "Dragon Slayer Shirt", "Dragon Slayer Gloves", "Dragon Slayer Pants", "Dragon Slayer Shoes"]);
    addArenaSet("Demon Slayer Set", [5, 5, 5, 6, 6, 6, 6, 6, 6], ["Spawn Rate", "MaxHP", "Evasion", "EXP", "Damage", "MaxMP", "Attack Speed", "Accuracy", "Damage dealt in Endless Dungeon is multiplied by <b>1.2</b>"], [25, 100, 100, 50, 75, 150, 50, 300, -1], ["Any Demon Slayer Weapon", "Demon Slayer Hat", "Demon Slayer Shirt", "Demon Slayer Gloves", "Demon Slayer Pants", "Demon Slayer Shoes"]);
    addArenaSet("Fire Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [20, 30, 50], ["Epic Fire Staff", "Pendant of Fire", "Fire Card", "Fire Card [+]", "Spell Scroll - Fire", "Spell Scroll - Fire [+]"]);
    addArenaSet("Ice Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [20, 30, 50], ["Epic Ice Staff", "Pendant of Ice", "Ice Card", "Ice Card [+]", "Spell Scroll - Ice", "Spell Scroll - Ice [+]"]);
    addArenaSet("Wind Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [20, 30, 50], ["Epic Wind Staff", "Pendant of Wind", "Wind Card", "Wind Card [+]", "Spell Scroll - Wind", "Spell Scroll - Wind [+]"]);
    addArenaSet("Earth Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [20, 30, 50], ["Epic Earth Staff", "Pendant of Earth", "Earth Card", "Earth Card [+]", "Spell Scroll - Earth", "Spell Scroll - Earth [+]"]);
    addArenaSet("Thunder Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [20, 30, 50], ["Epic Thunder Staff", "Pendant of Thunder", "Thunder Card", "Thunder Card [+]", "Spell Scroll - Thunder", "Spell Scroll - Thunder [+]"]);
    addArenaSet("Water Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [20, 30, 50], ["Epic Water Staff", "Pendant of Water", "Water Card", "Water Card [+]", "Spell Scroll - Water", "Spell Scroll - Water [+]"]);
    addArenaSet("Light Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [15, 30, 50], ["Light Glaive", "Pendant of Light", "Light Card", "Light Card [+]", "Spell Scroll - Light", "Spell Scroll - Light [+]"]);
    addArenaSet("Dark Elemental Set", [2, 3, 3], ["Damage", "Damage", "EXP"], [15, 30, 50], ["Dark Glaive", "Pendant of Darkness", "Dark Card", "Dark Card [+]", "Spell Scroll - Dark", "Spell Scroll - Dark [+]"]);
    addArenaSet("Set of Good Luck", [2], ["Drop Rate"], [500], ["Four-Leaf Clover", "Gem of Good Luck"]);
    addArenaSet("Reincarnation Set", [2, 3, 4, 5, 6, 6, 7, 8, 9, 9, 9, 9], ["Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate", "Spawn Rate", "EXP", "Spawn Rate", "Spawn Rate", "Coin", "EXP", "Most loot drops are magnetized", "Automatically gain some Arena EXP and A: TG EXP every second. Effect is multiplied by the number of Rebirths."], [5, 5, 5, 5, 10, 40, 15, 15, 20, 80, -1, -1], ["Reincarnation Weapon", "Reincarnation Hat", "Reincarnation Shirt", "Reincarnation Gloves", "Reincarnation Pants", "Reincarnation Shoes", "Reincarnation Pendant", "Reincarnation Earrings", "Reincarnation Trinket", "Apocalypse Mode"]);
    addArenaSet("ULTRA SET", [2, 3, 4, 5], ["Damage", "Damage", "Damage", "Damage"], [10, 20, 30, 40], ["ULTRA HAT", "ULTRA SHIRT", "ULTRA GLOVES", "ULTRA PANTS", "ULTRA SHOES"]);
    addArenaSet("Kana Warrior Set", [2], ["EXP"], [39], ["Kana Warrior", "Kana King"]);
    addArenaSet("Epic Pyramid Set", [2, 2, 3, 3, 3, 3], ["Coin", "Damage dealt in Dark Pyramid is multiplied by <b>1.2</b>", "Damage", "EXP", "Spawn Rate", "Damage dealt in Dark Pyramid is multiplied by <b>1.25</b>"], [5, -1, 10, 10, 10, -1], ["Revolution Pyrabow", "Revolution Earrings", "Revolution Pendant"]);
    addArenaSet("Festive Set", [5, 5, 5, 6, 6], ["EXP", "Damage", "MaxMP", "EXP", "Damage"], [40, 40, 100, 160, 160], ["Festive Hat", "Festive Shirt", "Festive Gloves", "Festive Pants", "Festive Shoes", "Technical Trophy #1"]);
    addArenaSet("Choco Set", [5, 5, 5, 6, 6], ["EXP", "Damage", "MaxHP", "EXP", "Damage"], [40, 40, 100, 160, 160], ["Choco Hat", "Choco Shirt", "Choco Gloves", "Choco Pants", "Choco Shoes", "Technical Trophy #2"]);
    addArenaSet("Apocalypse", [2, 2], ["Spawn Rate", "<b>Apocalypse Mode</b>"], [25, -1], ["Worst Moon Gem", "Invisible X"]);
    addArenaSet("Lantern Set", [5, 5, 5, 6, 6], ["EXP", "Damage", "Spawn Rate", "EXP", "Damage"], [40, 40, 5, 160, 160], ["Lantern Hat", "Lantern Shirt", "Lantern Gloves", "Lantern Pants", "Lantern Shoes", "Technical Trophy #3"]);
    addArenaSet("GIGA SET", [1, 2, 2, 2, 2, 2, 2, 2], ["Damage", "Damage", "Spawn Rate", "Drop Rate", "Rare Monster Rate", "Epic Monster Rate", "Most loot drops are magnetized", "Damage dealt in Final Chamber is multiplied by <b>1.2</b>"], [25, 50, 50, 150, 150, 150, -1, -1], ["GIGA PENDANT", "GIGA EARRINGS"]);
    addArenaSet("MEGA SET", [1, 2, 2, 3, 3, 3, 3, 3, 3], ["Damage", "Damage", "Spawn Rate", "Damage", "Spawn Rate", "Drop Rate", "Rare Monster Rate", "Epic Monster Rate", "Most loot drops are magnetized"], [25, 25, 25, 25, 25, 150, 150, 150, -1], ["MEGA PENDANT", "MEGA EARRINGS", "MEGA WINGS"]);
    addArenaSet("Tukkonium Set", [5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7], ["Damage", "Spawn Rate", "Damage", "MaxHP", "Evasion", "Spawn Rate", "EXP", "Coin", "Damage", "MaxMP", "Attack Speed", "Accuracy", "Damage dealt in all areas is multiplied by <b>1.2</b>"], [25, 25, 25, 150, 150, 25, 75, 25, 75, 300, 75, 600, -1], ["Any Tukkonium Weapon", "Tukkonium Hat", "Tukkonium Shirt", "Tukkonium Gloves", "Tukkonium Pants", "Tukkonium Shoes", "Tukkonium Skin"]);
    addArenaSet("Gem of Eternal Rage", [2, 2, 2], ["Spawn Rate", "Damage", "Attack Speed"], [10, 25, 50], ["Gem of Eternal Rage", "Rune of Rage"]);
    addArenaSet("TERA SET", [1, 2, 2, 2, 2, 2, 2, 2], ["Damage", "Damage", "Spawn Rate", "Drop Rate", "Rare Monster Rate", "Epic Monster Rate", "Most loot drops are magnetized", "Damage dealt in Final Chamber and Endless Dungeon is multiplied by <b>1.5</b>"], [25, 50, 50, 300, 300, 300, -1, -1], ["TERA PENDANT", "TERA EARRINGS"]);
    addArenaSet("Elite Grenades", [1, 1], ["EXP", "Damage"], [25, 25], ["Elite Grenades"]);
    _root.setCount = new Array();
    _root.setHighest = 0;
    checkFullInventory();
    var enemyList = [];
    _root.totalMonster = 500;
    addArenaEnemy(1, 1, 25, -999999999, 100000, 1, 30, 2000, 1000, 1000, "Invisible X", "All", true, 0, 3, false, 30, 0, 0, 0, "None", 0, "Tukkun", "2012: Ye Olde Pub", "Spawn Rate", 30, "", 0, "", 0, "Spirit Recovery", -1, 0, 1, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(15, 0, 100, 0, 70, 30, 40, 280, 28, 100, "Idle Dummy", "Earth", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Beginner Training Zone", "Instant Kill", 25, "Hit Chance", 25, "Mastery", 25, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(17, 1, 100, 0, 70, 30, 60, 290, 29, 100, "Jr. Dummy", "Earth", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Beginner Training Zone", "Accuracy %", 5, "", 0, "Mastery", 5, "Attack: Regular", 105, 0, 23, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(18, 1, 100, 0, 70, 30, 80, 300, 30, 100, "Dark Jr. Dummy", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Beginner Training Zone", "Accuracy %", 5, "", 0, "Mastery", 5, "Attack: Regular", 105, 0, 23, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(20, 2, 100, 0, 80, 30, 100, 310, 31, 100, "Wooden Dummy", "Earth", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChioreanTudor", "Beginner Training Zone", "Accuracy %", 5, "", 0, "Mastery", 5, "Attack: Regular", 105, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(21, 3, 100, 0, 80, 30, 120, 320, 32, 100, "Wind Dummy", "Wind", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChioreanTudor", "Beginner Training Zone", "Accuracy %", 5, "", 0, "Mastery", 5, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(22, 2, 100, 0, 80, 30, 140, 330, 33, 100, "Ice Dummy", "Ice", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChioreanTudor", "Beginner Training Zone", "Accuracy %", 5, "", 0, "Mastery", 5, "Attack: Regular", 105, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(23, 2, 100, 0, 80, 30, 160, 340, 34, 100, "Fire Dummy", "Fire", false, 0, 0, false, 0, 5, 100, 50, "None", 0, "ChioreanTudor", "Beginner Training Zone", "Accuracy %", 5, "", 0, "Mastery", 5, "Attack: Knockback", 50, 5, 16, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(24, 2, 100, 0, 140, 30, 180, 250, 25, 100, "Water Dummy", "Water", false, 5, 0, false, 0, 0, 0, 0, "None", 0, "ChioreanTudor", "Beginner Training Zone", "Accuracy %", 5, "Hit Chance", 2, "Mastery", 5, "Attack: Regular", 105, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(25, 2, 100, 0, 90, 40, 200, 360, 30, 100, "Thunder Dummy", "Thunder", false, 0, 0, false, 50, 0, 0, 0, "None", 0, "ChioreanTudor", "Beginner Training Zone", "Accuracy %", 5, "EXP", 2, "Mastery", 5, "Attack: Regular", 105, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(34, 3, 250, 2, 110, 50, 250, 420, 42, 100, "Living Dummy", "Earth", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChioreanTudor", "Advanced Training Zone", "Accuracy %", 8, "EXP", 4, "Mastery", 8, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(36, 3, 250, 2, 110, 50, 300, 430, 43, 100, "Healer Dummy", "Light", false, 0, 30, false, 0, 0, 0, 0, "None", 0, "ChioreanTudor", "Advanced Training Zone", "Accuracy %", 8, "EXP", 4, "Mastery", 8, "Attack: Regular", 105, 0, 19, "Heal", 50, 210, 24, "", 0, 0, 0);
    addArenaEnemy(38, 3, 250, 2, 110, 60, 350, 440, 44, 100, "Dark Dummy", "Dark", false, 0, 0, false, 0, 5, 960, 50, "None", 0, "ChioreanTudor", "Advanced Training Zone", "Accuracy %", 8, "EXP", 4, "Mastery", 8, "Attack: Knockback", 50, 5, 14, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(40, 3, 250, 4, 130, 60, 350, 450, 45, 100, "Ghost Dummy", "Dark", false, 0, 0, true, 0, 0, 0, 0, "None", 0, "ChioreanTudor", "Advanced Training Zone", "Accuracy %", 8, "Resist", 4, "Mastery", 8, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(45, 3, 500, 5, 110, 80, 700, 2000, 400, 500, "Master Dummy", "Earth", true, 0, 50, false, 300, 0, 0, 50, "None", 0, "ChioreanTudor", "Advanced Training Zone", "Reward", 4, "Mastery", 4, "Mastery", 12, "Attack: Regular", 105, 0, 19, "Heal", 50, 210, 24, "Buff: Master", 10, 0, 80);
    addArenaEnemy(52, 1, 700, 6, 310, 90, 520, 550, 55, 100, "Green Snail", "Water", false, 0, 0, false, 0, 0, 0, 25, "None", 0, "Tukkun", "Mystic Forest", "Defense %", 10, "", 0, "Resist", 5, "Attack: Regular", 150, 0, 23, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(54, 1, 750, 8, 315, 90, 600, 560, 56, 100, "Blue Snail", "Water", false, 0, 0, false, 0, 0, 0, 25, "None", 0, "Tukkun", "Mystic Forest", "Defense %", 10, "", 0, "Resist", 5, "Attack: Regular", 150, 0, 23, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(65, 1.5, 1350, 17, 515, 130, 1700, 2250, 450, 500, "Old Snail", "Fire", true, 0, 50, false, 1900, 0, 0, 25, "Slow", 3, "Tukkun", "Mystic Forest", "Reward", 5, "Resist", 5, "Resist", 7, "Attack: Regular", 150, 0, 22, "Heal", 50, 300, 27, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(56, 1.5, 1000, 7, 355, 90, 720, 570, 57, 100, "Dry Snail", "Earth", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Toudou1620", "Mystic Forest", "Equipment Defense", 40, "", 0, "Defense %", 10, "Attack: Regular", 150, 0, 22, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(58, 5, 950, 4, 325, 90, 680, 580, 58, 100, "Rabbit", "Ice", false, 0, 0, false, 0, 0, 0, 100, "None", 0, "dragonewyn", "Mystic Forest", "Attack Speed", 1, "", 0, "Attack Speed %", 10, "Attack: Regular", 150, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(70, 5, 1250, 10, 540, 140, 2000, 2500, 500, 500, "Carabbit", "Ice", true, 0, 0, false, 2550, 0, 0, 100, "None", 0, "Tukkun", "Mystic Forest", "Reward", 5, "Attack Speed", 1, "Attack Speed %", 15, "Attack: Regular", 150, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(60, 4, 1000, 5, 520, 100, 720, 590, 59, 100, "Jr. Blob", "Water", false, 0, 20, false, 0, 0, 0, 0, "None", 0, "dragonewyn", "Mystic Forest", "MaxMP %", 20, "", 0, "Critical Chance", 5, "Attack: Regular", 150, 0, 17, "Heal", 50, 300, 22, "", 0, 0, 0);
    addArenaEnemy(62, 4, 1050, 5, 530, 100, 800, 600, 60, 100, "Blob", "Water", false, 0, 25, false, 0, 0, 0, 0, "None", 0, "dragonewyn", "Mystic Forest", "MaxMP %", 20, "", 0, "Critical Chance", 5, "Attack: Regular", 150, 0, 17, "Heal", 50, 300, 22, "", 0, 0, 0);
    addArenaEnemy(64, 4, 1100, 5, 540, 100, 880, 610, 61, 100, "Glob", "Water", false, 0, 30, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Forest", "MaxMP %", 20, "", 0, "Critical Chance", 5, "Attack: Regular", 150, 0, 17, "Heal", 50, 300, 22, "", 0, 0, 0);
    addArenaEnemy(80, 4, 1300, 12, 820, 150, 2500, 2750, 550, 500, "BlobBB", "Water", true, 0, 60, false, 3000, 0, 0, 50, "None", 0, "dragonewyn", "Mystic Forest", "Reward", 5, "MaxMP %", 20, "Critical Chance", 7, "Attack: Regular", 150, 0, 17, "Heal", 50, 300, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(65, 3.5, 1100, 6, 430, 100, 1000, 620, 62, 100, "Jelly", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Forest", "MaxHP %", 20, "", 0, "Critical Damage", 20, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(67, 3.5, 1150, 7, 430, 100, 1080, 630, 63, 100, "Blue Jelly", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Forest", "MaxHP %", 20, "", 0, "Critical Damage", 20, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(68, 3.5, 1200, 7, 430, 100, 1120, 640, 64, 100, "Slime", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Forest", "MaxHP %", 20, "", 0, "Critical Damage", 20, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(70, 3.5, 1250, 7, 440, 100, 1200, 650, 65, 100, "Blue Slime", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Forest", "MaxHP %", 20, "", 0, "Critical Damage", 20, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(71, 3.5, 1300, 8, 400, 100, 1040, 440, 44, 100, "Jr. Goop", "Water", false, 32, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Forest", "Equipment Attack", 40, "", 0, "Attack %", 10, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(73, 3.5, 1350, 8, 410, 100, 1320, 450, 45, 100, "Blue Jr. Goop", "Water", false, 33, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Forest", "Equipment Attack", 40, "", 0, "Attack %", 10, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(74, 3.5, 1400, 8, 410, 100, 1360, 680, 68, 100, "Goop", "Water", false, 0, 0, false, 1700, 0, 0, 0, "None", 0, "Randomthought31", "Mystic Forest", "Equipment Attack", 40, "", 0, "Attack %", 10, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(76, 3.5, 1450, 9, 415, 100, 1440, 690, 69, 100, "Blue Goop", "Water", false, 0, 0, false, 1750, 0, 0, 0, "None", 0, "Randomthought31", "Mystic Forest", "Equipment Attack", 40, "", 0, "Attack %", 10, "Attack: Regular", 150, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(77, 4.5, 1250, 8, 375, 100, 1400, 700, 70, 100, "Octopus", "Water", false, 0, 0, false, 2150, 0, 0, 50, "None", 0, "Tukkun", "Mystic Forest", "Attack Speed", 1, "", 0, "Ignore Defense", 5, "Attack: Regular", 150, 0, 16, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(90, 1, 1800, 30, 505, 200, 2000, 800, 80, 200, "Dark Snail", "Dark", false, 0, 0, false, 0, 0, 0, 25, "None", 0, "Tukkun", "Night Forest", "Defense %", 15, "", 0, "Resist", 7, "Attack: Regular", 175, 0, 23, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(92, 5, 2050, 16, 510, 200, 2100, 810, 81, 200, "Dark Rabbit", "Dark", false, 0, 0, false, 0, 0, 0, 100, "None", 0, "dragonewyn", "Night Forest", "Attack Speed", 1, "", 0, "Attack Speed %", 15, "Attack: Regular", 175, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(95, 4, 2100, 17, 820, 210, 2200, 820, 82, 200, "Dark Blob", "Dark", false, 0, 40, false, 0, 0, 0, 0, "None", 0, "dragonewyn", "Night Forest", "MaxMP %", 30, "", 0, "Critical Chance", 7, "Attack: Regular", 175, 0, 25, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(97, 3.5, 2850, 20, 650, 210, 2300, 830, 83, 200, "Dark Jelly", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "MaxHP %", 30, "", 0, "Critical Damage", 30, "Attack: Regular", 175, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(100, 3.5, 2950, 22, 660, 220, 2400, 840, 84, 200, "Dark Slime", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "MaxHP %", 30, "", 0, "Critical Damage", 30, "Attack: Regular", 175, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(102, 3.5, 3350, 23, 600, 220, 2500, 550, 55, 200, "Dark Jr. Goop", "Dark", false, 41, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Equipment Attack", 60, "", 0, "Attack %", 15, "Attack: Regular", 175, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(105, 3.5, 3100, 24, 610, 230, 2700, 560, 56, 200, "Dark Goop", "Dark", false, 0, 0, false, 2400, 0, 0, 0, "None", 0, "Randomthought31", "Night Forest", "Equipment Attack", 60, "", 0, "Attack %", 15, "Attack: Regular", 175, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(107, 1.5, 2350, 30, 620, 230, 2900, 870, 87, 200, "Tree Stump", "Earth", false, 0, 50, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Defense %", 15, "", 0, "MaxHP %", 30, "Attack: Regular", 175, 0, 22, "Heal", 50, 350, 27, "", 0, 0, 0);
    addArenaEnemy(110, 1.5, 2450, 32, 630, 240, 3000, 880, 88, 200, "Dark Stump", "Dark", false, 0, 60, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Defense %", 15, "", 0, "MaxHP %", 30, "Attack: Regular", 175, 0, 22, "Heal", 50, 350, 27, "", 0, 0, 0);
    addArenaEnemy(112, 1.5, 2500, 56, 635, 240, 3200, 890, 89, 200, "Zombie Stump", "Dark", false, 0, 0, true, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Defense %", 15, "Resist", 7, "MaxHP %", 30, "Attack: Regular", 175, 0, 22, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(115, 2, 2550, 35, 645, 250, 3300, 900, 90, 200, "Green Tree", "Earth", false, 0, 80, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Defense %", 15, "", 0, "MaxMP %", 30, "Attack: Regular", 175, 0, 21, "Heal", 50, 350, 26, "", 0, 0, 0);
    addArenaEnemy(120, 2, 2650, 39, 660, 250, 3500, 910, 91, 200, "Red Tree", "Earth", false, 0, 90, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Defense %", 15, "", 0, "MaxMP %", 30, "Attack: Regular", 175, 0, 21, "Heal", 50, 350, 26, "", 0, 0, 0);
    addArenaEnemy(135, 2, 4500, 87, 1070, 400, 9000, 4000, 800, 1000, "Treeman", "Earth", true, 0, 200, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Reward", 7, "Resist", 7, "MaxMP %", 45, "Attack: Regular", 175, 0, 21, "Heal", 50, 350, 26, "", 0, 0, 0);
    addArenaEnemy(122, 2.5, 2450, 31, 600, 250, 3400, 920, 92, 200, "Moose", "Light", false, 0, 0, false, 0, 0, 0, 50, "None", 0, "Randomthought31", "Night Forest", "Negate Effect", 7, "", 0, "Potion Efficiency", 15, "Attack: Regular", 175, 0, 20, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(125, 2.5, 2500, 32, 610, 250, 3600, 930, 93, 200, "Orange Moose", "Light", false, 0, 0, false, 0, 0, 0, 50, "None", 0, "Randomthought31", "Night Forest", "Negate Effect", 7, "", 0, "Potion Efficiency", 15, "Attack: Regular", 175, 0, 20, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(127, 0, 2800, 45, 960, 275, 3800, 940, 94, 200, "Mushouse", "Earth", false, 51, 0, false, 3050, 7, 3800, 0, "None", 0, "Tukkun", "Night Forest", "Critical Chance", 7, "", 0, "Equipment Defense", 60, "Attack: Knockback", 85, 5, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(130, 3.5, 3450, 48, 770, 275, 3900, 950, 95, 200, "Mushroom", "Earth", false, 0, 0, false, 2950, 0, 0, 0, "None", 0, "Tukkun", "Night Forest", "Critical Damage", 30, "", 0, "Equipment Defense", 60, "Attack: Regular", 175, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(145, 0, 4800, 92, 1570, 450, 11000, 3000, 600, 1000, "Giant Mushouse", "Earth", true, 53, 0, false, 5200, 7, 6500, 0, "None", 0, "Guille", "Night Forest", "Reward", 7, "Critical Chance", 7, "Equipment Defense", 90, "Attack: Knockback", 85, 5, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(160, 3.5, 6350, 120, 1310, 450, 12500, 4500, 900, 1000, "Giant Mushroom", "Earth", true, 0, 0, false, 5450, 0, 0, 0, "None", 0, "Guille", "Night Forest", "Reward", 7, "Critical Damage", 30, "Equipment Defense", 90, "Attack: Regular", 175, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(175, 4, 6100, 120, 1270, 450, 20000, 5000, 1000, 1000, "Forest Spirit", "Earth", true, 0, 0, false, 7350, 0, 0, 0, "None", 0, "PartyzantPL", "Night Forest", "Reward", 7, "Boss Damage", 7, "Potion Efficiency", 30, "Attack: Regular", 175, 0, 17, "Heal", 50, 350, 22, "Spirit Recovery", 2, 0, 5);
    addArenaEnemy(200, 4.5, 4400, 130, 1030, 1050, 9000, 1100, 110, 300, "Bird", "Wind", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Ryo_Sangnoir", "The Sky", "Attack Speed", 2, "", 0, "Dodge Chance", 10, "Attack: Regular", 200, 0, 16, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(210, 4.5, 4600, 145, 1070, 1050, 10000, 1150, 115, 300, "Blue Bird", "Wind", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Ryo_Sangnoir", "The Sky", "Attack Speed", 2, "", 0, "Dodge Chance", 10, "Attack: Regular", 200, 0, 16, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(220, 4.5, 4850, 145, 1100, 1050, 11000, 1200, 120, 300, "Healer Bird", "Light", false, 0, 300, false, 0, 0, 0, 0, "None", 0, "Ryo_Sangnoir", "The Sky", "Attack Speed", 2, "", 0, "Dodge Chance", 10, "Attack: Regular", 200, 0, 16, "Heal", 50, 400, 21, "", 0, 0, 0);
    addArenaEnemy(230, 4.5, 4550, 160, 1020, 1050, 12000, 1250, 125, 300, "Dark Bird", "Dark", false, 0, 0, false, 0, 0, 0, 50, "None", 0, "Ryo_Sangnoir", "The Sky", "Attack Speed", 2, "", 0, "Dodge Chance", 10, "Attack: Regular", 200, 0, 16, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(240, 4.5, 4250, 180, 1060, 1050, 13000, 1300, 130, 300, "Thunderbird", "Thunder", false, 0, 0, false, 5100, 0, 0, 50, "None", 0, "Ryo_Sangnoir", "The Sky", "Attack Speed", 2, "", 0, "Dodge Chance", 10, "Attack: Regular", 200, 0, 16, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(250, 4.5, 4950, 295, 1090, 1050, 14000, 1350, 135, 300, "Zombie Bird", "Dark", false, 0, 0, true, 0, 0, 0, 50, "None", 0, "Ryo_Sangnoir", "The Sky", "Attack Speed", 2, "Resist", 10, "Dodge Chance", 10, "Attack: Regular", 200, 0, 16, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(260, 4.5, 5650, 240, 1760, 1300, 15000, 1400, 140, 300, "Seagull", "Wind", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 3, "Toudou1620", "The Sky", "Attack Speed", 2, "Critical Chance", 10, "Evasion %", 20, "Attack: Weaken", 100, 5, 21, "Attack: Regular", 200, 0, 26, "", 0, 0, 0);
    addArenaEnemy(275, 4.5, 10500, 365, 1760, 1000, 55000, 6500, 1300, 1500, "Feonix", "Fire", true, 0, 0, false, 9600, 0, 0, 50, "None", 0, "Tukkun", "The Sky", "Reward", 10, "Attack Speed %", 20, "Attack %", 30, "Attack: Regular", 200, 0, 16, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(300, 5.5, 8950, 450, 1880, 1880, 70000, 7000, 1400, 1500, "Air Spirit", "Wind", true, 0, 0, false, 11000, 0, 0, 50, "None", 0, "PartyzantPL", "Polluted Sky", "Reward", 10, "Boss Damage", 10, "Potion Efficiency", 40, "Attack: Regular", 200, 0, 14, "Buff: Enrage", 10, 0, 80, "Spirit Recovery", 3, 0, 5);
    addArenaEnemy(280, 4, 6500, 255, 2840, 1320, 20000, 1600, 160, 300, "Beeterfly", "Wind", false, 0, 400, false, 5450, 0, 0, 0, "Poison", 3, "Toudou1620", "Polluted Sky", "Hit Chance", 10, "Critical Damage", 40, "Accuracy %", 20, "Attack: Poison", 100, 5, 22, "Attack: Regular", 200, 0, 27, "Heal", 50, 400, 32);
    addArenaEnemy(330, 3, 11000, 470, 1600, 1600, 24000, 1900, 190, 400, "Bunnyhead", "Thunder", false, 0, 0, false, 13000, 0, 0, 0, "None", 0, "Tukkun", "Deadlands", "Attack Speed", 2, "Non-Boss Damage", 12, "Damage", 12, "Attack: Regular", 225, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(340, 3, 11500, 505, 1640, 1640, 26000, 1950, 195, 400, "Dark Bunnyhead", "Dark", false, 0, 0, false, 13500, 0, 0, 0, "None", 0, "Tukkun", "Deadlands", "Attack Speed", 2, "Non-Boss Damage", 12, "Damage", 12, "Attack: Regular", 225, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(350, 2, 7000, 485, 1510, 2960, 28000, 2000, 200, 400, "Earth Worm", "Earth", false, 0, 0, false, 7600, 0, 0, 50, "None", 0, "Tukkun", "Deadlands", "Dodge Chance", 12, "", 0, "Evasion %", 25, "Attack: Regular", 225, 0, 21, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(360, 2, 8000, 575, 1710, 2230, 30000, 2050, 205, 400, "Spyder", "Earth", false, 0, 0, false, 7800, 0, 0, 0, "Poison", 2, "Tukkun", "Deadlands", "Equipment Attack", 100, "", 0, "Evasion %", 25, "Attack: Poison", 110, 5, 26, "Attack: Regular", 225, 0, 31, "", 0, 0, 0);
    addArenaEnemy(370, 5, 7000, 615, 1750, 2630, 32000, 2100, 210, 400, "Stinky Rat", "Earth", false, 0, 0, false, 7500, 0, 0, 0, "Poison", 2, "ChioreanTudor", "Deadlands", "Attack Speed", 2, "", 0, "Dodge Chance", 12, "Attack: Poison", 110, 5, 20, "Attack: Regular", 225, 0, 25, "", 0, 0, 0);
    addArenaEnemy(380, 5, 7500, 655, 1790, 2690, 35000, 2150, 215, 400, "Rat", "Earth", false, 0, 0, false, 7750, 0, 0, 0, "Poison", 2, "Tukkun", "Deadlands", "Attack Speed", 2, "", 0, "Dodge Chance", 12, "Attack: Poison", 110, 5, 20, "Attack: Regular", 225, 0, 25, "", 0, 0, 0);
    addArenaEnemy(400, 5, 10000, 995, 2520, 3780, 200000, 8000, 1600, 2000, "Giant Rat", "Earth", true, 0, 0, false, 12000, 0, 0, 25, "Poison", 3, "Tukkun", "Deadlands", "Reward", 12, "Attack Speed %", 25, "Dodge Chance", 18, "Attack: Poison", 110, 5, 20, "Attack: Regular", 225, 0, 25, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(450, 3, 13000, 1200, 2260, 3390, 75000, 2350, 235, 600, "Desert Slime", "Earth", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "The Desert", "Attack %", 30, "", 0, "Dodge Chance", 15, "Attack: Stun", 275, 2, 34, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(465, 3, 12000, 1300, 2310, 3470, 80000, 2400, 240, 600, "Mud Slime", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Slow", 5, "Tukkun", "The Desert", "Attack %", 30, "", 0, "Dodge Chance", 15, "Attack: Stun", 275, 2, 34, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(480, 2.5, 11500, 1400, 2370, 2370, 85000, 2450, 245, 600, "Cactus", "Earth", false, 0, 0, false, 11000, 0, 0, 0, "Slow", 2, "Darkranboria", "The Desert", "Attack %", 30, "", 0, "MaxHP %", 60, "Attack: Regular", 275, 0, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(495, 2.5, 12000, 1500, 2430, 2430, 90000, 2500, 250, 600, "Flame Cactus", "Fire", false, 0, 0, false, 11000, 0, 0, 0, "Poison", 2, "Darkranboria", "The Desert", "Attack %", 30, "", 0, "MaxHP %", 60, "Attack: Poison", 135, 5, 25, "Attack: Regular", 275, 0, 30, "", 0, 0, 0);
    addArenaEnemy(510, 5, 8750, 1600, 3740, 2490, 95000, 2550, 255, 600, "Green Snake", "Earth", false, 0, 0, false, 10500, 0, 0, 0, "Poison", 2, "Tukkun", "The Desert", "Attack Speed", 3, "", 0, "Hit Chance", 15, "Attack: Poison", 135, 5, 20, "Attack: Regular", 275, 0, 25, "", 0, 0, 0);
    addArenaEnemy(525, 5, 9000, 1700, 3810, 2540, 100000, 2600, 260, 600, "Red Snake", "Fire", false, 0, 0, false, 11000, 0, 0, 0, "Poison", 2, "Tukkun", "The Desert", "Attack Speed", 3, "", 0, "Hit Chance", 15, "Attack: Poison", 135, 5, 20, "Attack: Regular", 275, 0, 25, "", 0, 0, 0);
    addArenaEnemy(540, 5, 9300, 1850, 3900, 2600, 105000, 2650, 265, 600, "Dark Snake", "Dark", false, 0, 0, false, 11500, 0, 0, 0, "Poison", 2, "Tukkun", "The Desert", "Attack Speed", 3, "", 0, "Hit Chance", 15, "Attack: Poison", 135, 5, 20, "Attack: Regular", 275, 0, 25, "", 0, 0, 0);
    addArenaEnemy(555, 2, 11500, 1950, 2660, 6750, 110000, 2700, 270, 600, "Sand Abuser", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Blind", 6, "Tukkun", "The Desert", "Evasion %", 30, "Dodge Chance", 15, "Evasion %", 30, "Attack: Blind", 135, 5, 26, "Attack: Regular", 275, 0, 31, "", 0, 0, 0);
    addArenaEnemy(570, 2, 12000, 1850, 2440, 2440, 130000, 2750, 275, 600, "Desert Dwarf", "Earth", false, 0, 0, false, 0, 0, 0, 25, "None", 0, "Tukkun", "The Desert", "Drop Rate", 15, "", 0, "EXP", 15, "Attack: Regular", 275, 0, 21, "Buff: Enrage", 10, 0, 80, "Produce Loot: Pixel", 1000, 0, 20);
    addArenaEnemy(585, 2, 12000, 1950, 2500, 2500, 150000, 2800, 280, 600, "Dark Dwarf", "Earth", false, 0, 0, false, 0, 0, 0, 25, "None", 0, "Tukkun", "The Desert", "Drop Rate", 15, "", 0, "EXP", 15, "Attack: Regular", 275, 0, 21, "Buff: Enrage", 10, 0, 80, "Produce Loot: Material", 500, 0, 20);
    addArenaEnemy(650, 2, 16500, 5100, 4090, 6140, 800000, 12000, 2400, 3000, "Sand Giant", "Earth", true, 0, 15000, false, 19500, 0, 0, 75, "Blind", 4, "Tukkun", "The Desert", "Reward", 15, "Dodge Chance", 15, "Resist", 22, "Attack: Blind", 135, 5, 26, "Attack: Regular", 275, 0, 31, "Heal", 50, 550, 36);
    addArenaEnemy(720, 1.5, 15000, 7750, 3240, 3240, 250000, 3100, 310, 800, "Green Turtle", "Water", false, 0, 0, false, 17000, 0, 0, 75, "None", 0, "HeroicHero", "The Beach", "Defense %", 35, "", 0, "Resist", 17, "Attack: Regular", 325, 0, 22, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(740, 1.5, 15500, 8250, 3310, 3310, 275000, 3150, 315, 800, "Blue Turtle", "Water", false, 0, 0, false, 17500, 0, 0, 75, "None", 0, "HeroicHero", "The Beach", "Defense %", 35, "", 0, "Resist", 17, "Attack: Regular", 325, 0, 22, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(760, 1.5, 19500, 8950, 3760, 3760, 300000, 3200, 320, 800, "Bonefish", "Dark", false, 0, 0, true, 0, 15, 27500, 0, "None", 0, "CTSG", "The Beach", "Resist", 17, "", 0, "Equipment Defense", 140, "Attack: Knockback", 160, 5, 17, "Produce Loot: Coin", 2000, 0, 20, "", 0, 0, 0);
    addArenaEnemy(780, 3, 19000, 6900, 3840, 3840, 325000, 3250, 325, 800, "Floating Fish", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "The Beach", "Magic Resist", 17, "", 0, "MaxMP %", 70, "Attack: Regular", 325, 0, 19, "Buff Extension", 2, 0, 10, "", 0, 0, 0);
    addArenaEnemy(800, 4, 26000, 5600, 3920, 3920, 350000, 3300, 330, 800, "White Duck", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "dragonewyn", "The Beach", "Spawn Rate", 10, "Attack Speed", 3, "Attack %", 35, "Attack: Regular", 325, 0, 17, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(820, 4, 26500, 5900, 4000, 4000, 375000, 3350, 335, 800, "Dark Duck", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "dragonewyn", "The Beach", "Spawn Rate", 10, "Attack Speed", 3, "Attack %", 35, "Attack: Regular", 325, 0, 17, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(840, 5, 27500, 5600, 3670, 3670, 400000, 3400, 340, 800, "Mad Duck", "Water", false, 0, 0, false, 0, 0, 0, 75, "None", 0, "Toudou1620", "The Beach", "Attack Speed", 3, "Non-Boss Damage", 17, "Attack %", 35, "Attack: Regular", 325, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(860, 5, 32000, 5900, 4160, 4160, 425000, 3450, 345, 800, "Mallard", "Water", false, 0, 14000, false, 0, 0, 0, 0, "None", 0, "?", "The Beach", "Attack Speed", 3, "Non-Boss Damage", 17, "Damage", 17, "Attack: Regular", 325, 0, 15, "Heal", 50, 650, 20, "", 0, 0, 0);
    addArenaEnemy(880, 5, 33000, 6250, 4240, 4240, 450000, 3500, 350, 800, "Dark Mallard", "Dark", false, 0, 15000, false, 0, 0, 0, 0, "None", 0, "?", "The Beach", "Attack Speed", 3, "Non-Boss Damage", 17, "Damage", 17, "Attack: Regular", 325, 0, 15, "Heal", 50, 650, 20, "", 0, 0, 0);
    addArenaEnemy(900, 1.5, 22500, 6550, 3890, 3890, 500000, 3550, 355, 800, "Thunder Lizard", "Thunder", false, 0, 0, false, 21500, 0, 0, 50, "None", 0, "Toudou1620", "The Beach", "Equipment Attack", 140, "", 0, "MaxHP %", 70, "Attack: Regular", 325, 0, 22, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(920, 1.5, 23000, 6900, 3960, 3960, 550000, 3600, 360, 800, "Wind Lizard", "Wind", false, 0, 0, false, 22000, 0, 0, 50, "None", 0, "Toudou1620", "The Beach", "Equipment Attack", 140, "", 0, "MaxHP %", 70, "Attack: Regular", 325, 0, 22, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(940, 1.5, 23500, 7200, 4030, 4030, 600000, 3650, 365, 800, "Water Lizard", "Water", false, 0, 0, false, 22500, 0, 0, 50, "None", 0, "Toudou1620", "The Beach", "Equipment Attack", 140, "", 0, "MaxHP %", 70, "Attack: Regular", 325, 0, 22, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(960, 2, 20500, 9850, 4110, 5350, 650000, 3700, 370, 800, "Blue Crab", "Water", false, 0, 0, false, 23000, 0, 0, 50, "None", 0, "Toudou1620", "The Beach", "Evasion %", 35, "", 0, "Defense %", 35, "Attack: Regular", 325, 0, 21, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(980, 2, 21000, 10500, 4180, 5440, 700000, 3750, 375, 800, "Red Crab", "Fire", false, 0, 0, false, 23500, 0, 0, 50, "None", 0, "Toudou1620", "The Beach", "Evasion %", 35, "", 0, "Defense %", 35, "Attack: Regular", 325, 0, 21, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1050, 2, 27500, 25000, 5320, 7980, 3500000, 15000, 3000, 4000, "King Crab", "Dark", true, 0, 0, false, 30000, 0, 0, 50, "None", 0, "Toudou1620", "The Beach", "Reward", 17, "", 0, "Defense %", 35, "Attack: Regular", 325, 0, 21, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1100, 5, 35500, 15000, 6830, 6830, 4200000, 16000, 3200, 4000, "Water Spirit", "Water", true, 0, 0, false, 42500, 0, 0, 50, "None", 0, "PartyzantPL", "Secret Beach", "Reward", 17, "Boss Damage", 17, "Potion Efficiency", 70, "Attack: Regular", 325, 0, 15, "Buff: Enrage", 10, 0, 80, "Spirit Recovery", 4, 0, 5);
    addArenaEnemy(1200, 4, 51000, 30500, 8210, 8210, 4000000, 18000, 3600, 4000, "Zombie Duck", "Dark", true, 0, 0, true, 0, 0, 0, 0, "None", 0, "dragonewyn", "Secret Beach", "Reward", 17, "Resist", 17, "Attack %", 52, "Attack: Regular", 325, 0, 17, "Attack: Silence", 290, 18, 23, "Attack: Defense Down", 290, 3, 13);
    addArenaEnemy(1100, 0, 27000, 22000, 5270, 5270, 1000000, 4300, 430, 1200, "Rocky", "Earth", false, 0, 31000, false, 0, 7, 40000, 0, "None", 0, "Randomthought31", "Binary Battlefield", "Defense %", 40, "", 0, "Resist", 20, "Attack: Knockback", 185, 5, 20, "Heal", 50, 750, 30, "", 0, 0, 0);
    addArenaEnemy(1125, 3, 36500, 23500, 5920, 5380, 1100000, 4350, 435, 1200, "Moving Rocky", "Earth", false, 0, 33000, false, 0, 7, 39000, 0, "None", 0, "Randomthought31", "Binary Battlefield", "Defense %", 40, "Double Hit Chance", 20, "Resist", 20, "Attack: Knockback", 185, 5, 14, "Heal", 50, 750, 24, "", 0, 0, 0);
    addArenaEnemy(1150, 3, 38500, 30500, 5480, 5480, 1200000, 4400, 440, 1200, "RM-04", "Thunder", false, 0, 0, false, 0, 10, 40000, 0, "None", 0, "Tukkun", "Binary Battlefield", "Defense %", 40, "Reflect", 600, "Reflect", 600, "Attack: Knockback", 185, 5, 14, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1175, 3, 26500, 19000, 5580, 7260, 1300000, 4450, 445, 1200, "Robo Spyder", "Thunder", false, 0, 0, false, 26500, 10, 33000, 0, "Poison", 4, "Tukkun", "Binary Battlefield", "Defense %", 40, "Equipment Attack", 160, "Evasion %", 40, "Attack: Poison", 185, 5, 24, "Attack: Knockback", 185, 5, 24, "", 0, 0, 0);
    addArenaEnemy(1200, 2.5, 24000, 39000, 5690, 5690, 1200000, 4500, 450, 1200, "Robospook", "Dark", false, 0, 0, true, 29000, 10, 36000, 0, "Slow", 4, "Tukkun", "Binary Battlefield", "Resist", 20, "Defense %", 40, "Defense %", 40, "Attack: Knockback", 185, 5, 15, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1225, 0, 35500, 21000, 5790, 5790, 1400000, 4550, 455, 1200, "Crappy Cannon", "Thunder", false, 0, 0, false, 32500, 10, 40500, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "", 0, "Attack %", 40, "Attack: Knockback", 185, 5, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1250, 0, 36000, 22000, 5900, 5900, 1500000, 4600, 460, 1200, "Defense Cannon", "Thunder", false, 0, 0, false, 33500, 10, 41500, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "", 0, "Attack %", 40, "Attack: Knockback", 185, 5, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1275, 3, 42000, 23000, 6000, 6000, 1600000, 4650, 465, 1200, "Walking Cannon", "Thunder", false, 0, 0, false, 39000, 10, 40500, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "Attack Speed %", 40, "Attack %", 40, "Attack: Knockback", 185, 5, 14, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1300, 3, 37000, 21500, 6110, 6110, 1700000, 4700, 470, 1200, "Computer", "Light", false, 0, 48000, false, 0, 10, 46000, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "", 0, "Attack Speed %", 40, "Attack: Knockback", 185, 5, 14, "Heal", 50, 750, 24, "", 0, 0, 0);
    addArenaEnemy(1325, 3, 37500, 22500, 6210, 6210, 1800000, 4750, 475, 1200, "Lolputer", "Light", false, 0, 51000, false, 0, 10, 47000, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "", 0, "Attack Speed %", 40, "Attack: Knockback", 185, 5, 14, "Heal", 50, 750, 24, "", 0, 0, 0);
    addArenaEnemy(1350, 3, 38500, 23500, 6320, 6320, 1900000, 4800, 480, 1200, "Computetris", "Light", false, 0, 54000, false, 0, 10, 48000, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "", 0, "Attack Speed %", 40, "Attack: Knockback", 185, 5, 14, "Heal", 50, 750, 24, "", 0, 0, 0);
    addArenaEnemy(1375, 3, 55000, 27500, 7070, 6420, 2000000, 4850, 485, 1200, "Compbroken", "Light", false, 0, 0, false, 0, 10, 49000, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "Critical Damage", 80, "Attack Speed %", 40, "Attack: Knockback", 185, 5, 14, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1400, 3, 40000, 28500, 9150, 6530, 2100000, 4900, 490, 1200, "BSOD", "Water", false, 0, 0, false, 43500, 10, 45000, 0, "None", 0, "ChioreanTudor", "Binary Battlefield", "Defense %", 40, "Critical Chance", 20, "Attack Speed %", 40, "Attack: Knockback", 185, 5, 14, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1425, 5, 45500, 20500, 6570, 5970, 2200000, 4950, 495, 1200, "Blue Robo", "Water", false, 0, 0, false, 39000, 15, 37000, 50, "None", 0, "ChioreanTudor", "Binary Battlefield", "Attack Speed", 4, "Non-Boss Damage", 20, "Critical Damage", 80, "Attack: Knockback", 185, 5, 10, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1450, 5, 47000, 21500, 6680, 6070, 2300000, 5000, 500, 1200, "Green Robo", "Wind", false, 0, 0, false, 40000, 15, 38000, 50, "None", 0, "ChioreanTudor", "Binary Battlefield", "Attack Speed", 4, "Non-Boss Damage", 20, "Critical Damage", 80, "Attack: Knockback", 185, 5, 10, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1475, 5, 47500, 22000, 6780, 6160, 2400000, 5050, 505, 1200, "Red Robo", "Fire", false, 0, 0, false, 41000, 15, 38500, 50, "None", 0, "ChioreanTudor", "Binary Battlefield", "Attack Speed", 4, "Non-Boss Damage", 20, "Critical Damage", 80, "Attack: Knockback", 185, 5, 10, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1500, 0, 53500, 25500, 6960, 6960, 2250000, 5100, 510, 1200, "Bomb", "Fire", false, 0, 0, false, 0, 1, 51500, 0, "Self-Destruct", 1, "Dragonayzer", "Binary Battlefield", "Damage", 20, "", 0, "Equipment Attack", 160, "Attack: Knockback", 185, 5, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1525, 0, 54500, 26500, 7060, 7060, 2500000, 5150, 515, 1200, "Enraged Bomb", "Fire", false, 0, 0, false, 0, 1, 52500, 0, "Self-Destruct", 1, "Dragonayzer", "Binary Battlefield", "Damage", 20, "", 0, "Equipment Attack", 160, "Attack: Knockback", 185, 5, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1550, 6, 37500, 36000, 7170, 7170, 2750000, 5200, 520, 1200, "Clawbot", "Thunder", false, 0, 0, false, 0, 10, 43000, 0, "Poison", 5, "meshwire", "Binary Battlefield", "Defense %", 40, "Attack Speed", 4, "Equipment Attack", 160, "Attack: Poison", 185, 5, 18, "Attack: Knockback", 185, 5, 18, "Buff: Power", 10, 0, 80);
    addArenaEnemy(1700, 5, 41000, 90000, 10500, 10500, 15000000, 22500, 4500, 6000, "Robosaurus", "Thunder", true, 0, 0, false, 49500, 20, 61500, 75, "Slow", 5, "meshwire", "Binary Battlefield", "Reward", 20, "Defense %", 40, "Resist", 20, "Attack: Knockback", 185, 5, 10, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1575, 0, 40500, 28500, 7280, 7280, 3000000, 5250, 525, 1200, "Weird Box", "Thunder", false, 0, 0, false, 0, 10, 60500, 0, "None", 0, "Darkranboria", "Binary Battlefield", "Reward", 20, "", 0, "Drop Rate", 40, "Attack: Knockback", 185, 5, 20, "Produce Loot: Pixel", 3000, 0, 20, "Produce Loot: Rare Item", 0, 0, 150);
    addArenaEnemy(1600, 0, 41000, 38500, 7380, 7380, 3250000, 5300, 530, 1200, "Metal Box", "Thunder", false, 0, 0, false, 0, 10, 61500, 0, "None", 0, "Darkranboria", "Binary Battlefield", "Reward", 20, "Defense %", 40, "Drop Rate", 40, "Attack: Knockback", 185, 5, 20, "Produce Loot: Material", 1500, 0, 20, "Produce Loot: Rare Item", 0, 0, 150);
    addArenaEnemy(1625, 5, 41500, 27500, 6740, 6740, 3500000, 5350, 535, 1200, "Octoroc", "Fire", false, 0, 0, false, 38500, 15, 43500, 50, "None", 0, "ChioreanTudor", "Binary Battlefield", "Attack Speed", 4, "", 0, "Attack %", 40, "Attack: Knockback", 185, 5, 10, "Buff: Enrage", 10, 0, 80, "Produce Loot: Stat", 0, 0, 90);
    addArenaEnemy(1650, 5, 42000, 28500, 6840, 6840, 2750000, 5400, 540, 1200, "Evil Eye", "Thunder", false, 0, 0, false, 39000, 15, 44000, 50, "None", 0, "ChioreanTudor", "Binary Battlefield", "Attack Speed", 4, "", 0, "Attack %", 40, "Attack: Knockback", 185, 5, 10, "Buff: Enrage", 10, 0, 80, "Attack: Defense Down", 125, 5, 30);
    addArenaEnemy(1800, 3, 71000, 52500, 11100, 11100, 20000000, 25000, 5000, 6000, "Robo Spirit", "Thunder", true, 0, 0, false, 85500, 0, 0, 50, "None", 0, "PartyzantPL", "Binary Battlefield", "Reward", 20, "Boss Damage", 20, "Potion Efficiency", 80, "Attack: Power Down", 240, 5, 29, "Buff: Enrage", 10, 0, 80, "Spirit Recovery", 5, 0, 5);
    addArenaEnemy(1900, 4, 53000, 39500, 8010, 8010, 5000000, 6100, 610, 1800, "Chagon", "Fire", false, 0, 150000, false, 49000, 0, 0, 50, "Poison", 4, "Randomthought31", "Dragon Cave", "Pixel", 22, "Non-Boss Damage", 22, "Attack %", 45, "Attack: Poison", 210, 5, 22, "Attack: Regular", 425, 0, 27, "Heal", 50, 850, 32);
    addArenaEnemy(1950, 4, 54500, 42000, 8210, 8210, 5250000, 6150, 615, 1800, "Gragon", "Earth", false, 0, 160000, false, 50500, 0, 0, 50, "Poison", 4, "Randomthought31", "Dragon Cave", "Pixel", 22, "Non-Boss Damage", 22, "Attack %", 45, "Attack: Poison", 210, 5, 22, "Attack: Regular", 425, 0, 27, "Heal", 50, 850, 32);
    addArenaEnemy(2000, 4, 56500, 44500, 8410, 8410, 5500000, 6200, 620, 1800, "Wragon", "Water", false, 0, 180000, false, 52000, 0, 0, 50, "Slow", 4, "Randomthought31", "Dragon Cave", "Pixel", 22, "Non-Boss Damage", 22, "Attack %", 45, "Attack: Regular", 425, 0, 17, "Heal", 50, 850, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(2050, 4, 58500, 47500, 8600, 8600, 5750000, 6250, 625, 1800, "Dagon", "Dark", false, 0, 190000, false, 54000, 0, 0, 50, "Blind", 4, "Randomthought31", "Dragon Cave", "Pixel", 22, "Non-Boss Damage", 22, "Attack %", 45, "Attack: Blind", 210, 5, 22, "Attack: Regular", 425, 0, 27, "Heal", 50, 850, 32);
    addArenaEnemy(2100, 4, 50000, 55500, 8800, 8800, 6000000, 6300, 630, 1800, "Gryph", "Dark", false, 0, 0, false, 60000, 0, 0, 75, "Weaken", 4, "CTSG", "Dragon Cave", "Negate Effect", 22, "", 0, "Ignore Defense", 22, "Attack: Weaken", 210, 5, 22, "Attack: Regular", 425, 0, 27, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(2150, 4.5, 73500, 58500, 9000, 9000, 6500000, 6350, 635, 1800, "Fire Dragon", "Fire", false, 0, 0, false, 88000, 0, 0, 75, "Poison", 5, "HeroicHero", "Dragon Cave", "Attack Speed", 4, "Damage", 22, "Damage", 22, "Attack: Poison", 210, 5, 21, "Attack: Regular", 425, 0, 26, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(2200, 4.5, 75500, 62000, 9200, 9200, 7000000, 6400, 640, 1800, "Frost Dragon", "Ice", false, 0, 0, false, 91000, 0, 0, 75, "Slow", 5, "HeroicHero", "Dragon Cave", "Attack Speed", 4, "Damage", 22, "Damage", 22, "Attack: Regular", 425, 0, 16, "Buff: Enrage", 10, 0, 80, "HP Recovery", 11, 0, 15);
    addArenaEnemy(2250, 4.5, 78000, 65000, 9400, 9400, 7500000, 6450, 645, 1800, "Nature Dragon", "Earth", false, 0, 0, false, 93500, 0, 0, 75, "Blind", 5, "HeroicHero", "Dragon Cave", "Attack Speed", 4, "Damage", 22, "Damage", 22, "Attack: Blind", 210, 5, 21, "Attack: Regular", 425, 0, 26, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(2300, 6, 80000, 76000, 10600, 10600, 8000000, 6500, 650, 1800, "Fireball", "Fire", false, 0, 0, false, 0, 0, 0, 0, "Poison", 6, "Randomthought31", "Dragon Cave", "Attack Speed %", 45, "Damage", 22, "MaxMP %", 90, "Attack: Poison", 210, 5, 18, "Attack: Regular", 425, 0, 23, "", 0, 0, 0);
    addArenaEnemy(2300, 6, 80000, 76000, 10600, 10600, 8000000, 6500, 650, 1800, "Iceball", "Ice", false, 0, 0, false, 0, 0, 0, 0, "Slow", 6, "Randomthought31", "Dragon Cave", "Attack Speed %", 45, "Damage", 22, "MaxMP %", 90, "Attack: Stun", 425, 2, 28, "Attack: Regular", 425, 0, 23, "", 0, 0, 0);
    addArenaEnemy(2400, 6, 90000, -999999999, 40000, 40000, 20, 30000, 6000, 9000, "Boogie", "Fire", true, 0, 0, false, 120000, 0, 0, 0, "All", 10, "Tukkun", "Dragon Cave", "Negate Effect", 22, "Instant Kill", 10, "Magic Resist", 22, "Attack: Blind", 210, 5, 18, "Attack: Evasion Down", 1, 5, 29, "Attack: Accuracy Down", 1, 5, 17);
    addArenaEnemy(2500, 4.5, 94000, 115000, 15600, 15600, 60000000, 32500, 6500, 9000, "Bloodsurfer", "Dark", true, 0, 1000000, false, 115000, 0, 0, 75, "Blind", 5, "SumYungGai", "Dragon Cave", "Reward", 22, "Damage", 22, "MaxHP %", 135, "Attack: Blind", 210, 5, 21, "Attack: Regular", 425, 0, 26, "Heal", 50, 850, 31);
    addArenaEnemy(3200, 4, 110000, 170000, 14600, 14600, 20000000, 7500, 750, 3500, "Bunneye", "Ice", false, 0, 460000, false, 0, 0, 0, 75, "None", 0, "Toudou1620", "Pirate Ship", "Mastery", 50, "", 0, "Attack Speed %", 50, "Attack: Regular", 475, 0, 17, "Heal", 50, 950, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(2750, 4, 113000, 175000, 14800, 14800, 21000000, 7550, 755, 3500, "Sword Bunneye", "Ice", false, 0, 480000, false, 0, 0, 0, 75, "Weaken", 2, "Toudou1620", "Pirate Ship", "Mastery", 50, "", 0, "Attack Speed %", 50, "Attack: Weaken", 235, 5, 22, "Attack: Regular", 475, 0, 27, "Heal", 50, 950, 32);
    addArenaEnemy(2800, 4, 115000, 180000, 15000, 15000, 22000000, 7600, 760, 3500, "Gun Bunneye", "Ice", false, 0, 500000, false, 110000, 0, 0, 75, "Weaken", 2, "Toudou1620", "Pirate Ship", "Mastery", 50, "", 0, "Attack Speed %", 50, "Attack: Weaken", 235, 5, 22, "Attack: Regular", 475, 0, 27, "Heal", 50, 950, 32);
    addArenaEnemy(2850, 6, 155000, 200000, 15300, 15300, 23000000, 7650, 765, 3500, "Flying Sword", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "dragonewyn", "Pirate Ship", "Attack Speed", 5, "Attack %", 50, "Equipment Attack", 200, "Attack: Regular", 475, 0, 13, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(2900, 6, 160000, 205000, 15600, 15600, 24000000, 7700, 770, 3500, "Evil Sword", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "dragonewyn", "Pirate Ship", "Attack Speed", 5, "Attack %", 50, "Equipment Attack", 200, "Attack: Regular", 475, 0, 13, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(2950, 6, 150000, 210000, 15800, 15800, 25000000, 7750, 775, 3500, "Cursed Sword", "Dark", false, 0, 0, true, 0, 0, 0, 0, "Slow", 3, "dragonewyn", "Pirate Ship", "Attack Speed", 5, "Attack %", 50, "Equipment Attack", 200, "Attack: Regular", 475, 0, 13, "Attack: Stun", 475, 2, 38, "", 0, 0, 0);
    addArenaEnemy(3000, 5, 100000, 200000, 14600, 14600, 26000000, 7800, 780, 3500, "RandomNoob143", "Fire", false, 0, 0, false, 0, 0, 0, 75, "None", 0, "ChioreanTudor", "Pirate Ship", "Attack Speed", 5, "", 0, "Negate Effect", 25, "Attack: Regular", 475, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3050, 4, 150000, 235000, 14800, 14800, 27000000, 7850, 785, 3500, "Knight", "All", false, 0, 0, false, 0, 0, 0, 75, "None", 0, "ChioreanTudor", "Pirate Ship", "Equipment Attack", 200, "Equipment Defense", 200, "Attack %", 50, "Attack: Regular", 475, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3100, 4, 155000, 240000, 15000, 15000, 28000000, 7900, 790, 3500, "Sword Knight", "All", false, 0, 0, false, 0, 0, 0, 75, "None", 0, "ChioreanTudor", "Pirate Ship", "Attack %", 50, "Equipment Defense", 200, "Attack %", 50, "Attack: Regular", 475, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3150, 4, 160000, 265000, 15200, 15200, 29000000, 7950, 795, 3500, "Backpack Knight", "All", false, 0, 0, false, 0, 0, 0, 75, "None", 0, "ChioreanTudor", "Pirate Ship", "Attack %", 50, "Defense %", 50, "Attack %", 50, "Attack: Regular", 475, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3200, 5, 130000, 220000, 19500, 15500, 30000000, 8000, 800, 3500, "Female Hunter A", "Thunder", false, 0, 0, false, 120000, 0, 0, 75, "Slow", 3, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Accuracy %", 50, "Accuracy %", 50, "Attack: Regular", 475, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3250, 5, 133000, 230000, 19700, 15700, 31000000, 8050, 805, 3500, "Female Hunter B", "Thunder", false, 0, 0, false, 122000, 0, 0, 75, "Slow", 4, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Accuracy %", 50, "Accuracy %", 50, "Attack: Regular", 475, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3300, 5, 135000, 235000, 20000, 16000, 32000000, 8100, 810, 3500, "Female Hunter C", "Thunder", false, 0, 0, false, 124000, 0, 0, 75, "Slow", 5, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Accuracy %", 50, "Accuracy %", 50, "Attack: Regular", 475, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3350, 5, 137000, 240000, 23200, 16200, 33000000, 8150, 815, 3500, "Male Hunter A", "Thunder", false, 0, 0, false, 126000, 0, 0, 75, "Blind", 3, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Hit Chance", 25, "Hit Chance", 25, "Attack: Blind", 235, 5, 20, "Attack: Regular", 475, 0, 25, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(3400, 5, 140000, 245000, 23500, 16500, 34000000, 8200, 820, 3500, "Male Hunter B", "Thunder", false, 0, 0, false, 128000, 0, 0, 75, "Blind", 4, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Hit Chance", 25, "Hit Chance", 25, "Attack: Blind", 235, 5, 20, "Attack: Regular", 475, 0, 25, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(3450, 5, 142000, 255000, 23800, 16800, 35000000, 8250, 825, 3500, "Male Hunter C", "Thunder", false, 0, 0, false, 130000, 0, 0, 75, "Blind", 5, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Hit Chance", 25, "Hit Chance", 25, "Attack: Blind", 235, 5, 20, "Attack: Regular", 475, 0, 25, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(3500, 6.5, 125000, 260000, 16700, 24700, 36000000, 8300, 830, 3500, "Neenja A", "Dark", false, 0, 0, false, 0, 0, 0, 50, "Blind", 6, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Drop Rate", 25, "Dodge Chance", 25, "Attack: Blind", 235, 5, 17, "Attack: Regular", 475, 0, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(3550, 6.5, 127000, 265000, 16900, 24900, 37000000, 8350, 835, 3500, "Neenja B", "Dark", false, 0, 0, false, 0, 0, 0, 50, "Blind", 7, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Drop Rate", 25, "Dodge Chance", 25, "Attack: Blind", 235, 5, 17, "Attack: Regular", 475, 0, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(3600, 6.5, 130000, 275000, 17100, 25100, 38000000, 8400, 840, 3500, "Neenja C", "Dark", false, 0, 0, false, 0, 0, 0, 50, "Blind", 8, "SumYungGai", "Pirate Ship", "Attack Speed", 5, "Drop Rate", 25, "Dodge Chance", 25, "Attack: Blind", 235, 5, 17, "Attack: Regular", 475, 0, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(3650, 4, 135000, 400000, 19000, 19000, 33000000, 5500, 550, 3500, "Icewizard", "Ice", false, 134, 0, false, 270000, 0, 0, 0, "Slow", 5, "Randomthought31", "Pirate Ship", "MaxMP %", 100, "Magic Resist", 25, "MaxMP %", 100, "Attack: Regular", 475, 0, 17, "MP Recovery", 11, 0, 10, "", 0, 0, 0);
    addArenaEnemy(3650, 4, 135000, 400000, 19000, 19000, 33000000, 5500, 550, 3500, "Firewizard", "Fire", false, 133, 0, false, 270000, 0, 0, 0, "Poison", 5, "Randomthought31", "Pirate Ship", "MaxMP %", 100, "Magic Resist", 25, "MaxMP %", 100, "Attack: Poison", 235, 5, 22, "Attack: Regular", 475, 0, 27, "MP Recovery", 11, 0, 15);
    addArenaEnemy(3700, 4, 145000, 390000, 19200, 19200, 40000000, 8500, 850, 3500, "Bishop", "Light", false, 0, 1100000, false, 300000, 0, 0, 0, "None", 0, "Randomthought31", "Pirate Ship", "MaxMP %", 100, "Magic Resist", 25, "MaxMP %", 100, "Attack: Regular", 475, 0, 17, "Heal", 50, 950, 22, "MP Recovery", 11, 0, 15);
    addArenaEnemy(4000, 4, 200000, 650000, 30000, 30000, 300000000, 50000, 10000, 20000, "Dark Mage", "Dark", true, 0, 4000000, false, 360000, 0, 0, 0, "Weaken", 5, "Randomthought31", "Pirate Ship", "Reward", 25, "Magic Resist", 25, "MaxMP %", 150, "Attack: Weaken", 235, 5, 22, "Attack: Regular", 475, 0, 27, "Heal", 50, 950, 32);
    addArenaEnemy(7100, 3, 700000, 1200000, 45900, 33900, 630000000, 15000, 1500, 7500, "Triangle Dummy", "All", false, 0, 0, false, 255000, 0, 0, 25, "None", 0, "Tukkun", "Triangle Land", "Hit Chance", 30, "Non-Boss Damage", 30, "Mastery", 60, "Attack: Regular", 525, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7200, 3.5, 740000, 1800000, 32100, 32100, 660000000, 15100, 1510, 7500, "Triangle Tree", "All", false, 0, 0, false, 260000, 0, 0, 25, "None", 0, "Tukkun", "Triangle Land", "Resist", 30, "Non-Boss Damage", 30, "MaxHP %", 120, "Attack: Regular", 525, 0, 18, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7300, 4, 800000, 1400000, 44900, 32600, 700000000, 15200, 1520, 7500, "Mushtriangle", "All", false, 0, 0, false, 215000, 0, 0, 25, "None", 0, "Tukkun", "Triangle Land", "Critical Damage", 120, "Critical Chance", 30, "Equipment Defense", 240, "Attack: Regular", 525, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7400, 4, 1000000, 1600000, 33000, 33000, 720000000, 15300, 1530, 7500, "Triangoop", "All", false, 0, 0, false, 220000, 0, 0, 25, "None", 0, "Tukkun", "Triangle Land", "Equipment Attack", 240, "Attack %", 60, "Attack %", 60, "Attack: Regular", 525, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7500, 0, 800000, 2600000, 33400, 33400, 750000000, 15400, 1540, 7500, "Tridle", "All", false, 0, 0, false, 370000, 0, 0, 25, "None", 0, "Tukkun", "Triangle Land", "Equipment Defense", 240, "Defense %", 60, "Defense %", 60, "Attack: Regular", 525, 0, 25, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7600, 4, 1000000, 2800000, 33900, 33900, 750000000, 15500, 1550, 7500, "Triangle Bot", "All", false, 0, 0, false, 235000, 0, 0, 25, "None", 0, "Tukkun", "Triangle Land", "Resist", 30, "", 0, "Equipment Attack", 240, "Attack: Regular", 525, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7700, 3, 1300000, 2200000, 37000, 37000, 760000000, 15600, 1560, 7500, "Moving Spikes", "All", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Triangle Land", "Attack Speed", 6, "Reflect", 900, "Attack %", 60, "Attack: Regular", 525, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7800, 6, 1200000, 2400000, 37500, 37500, 780000000, 15700, 1570, 7500, "Fast Spikes", "All", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Triangle Land", "Attack Speed %", 60, "Reflect", 900, "Attack %", 60, "Attack: Regular", 525, 0, 13, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7900, 6, 1250000, 2600000, 38000, 38000, 800000000, 15800, 1580, 7500, "Dark Spikes", "All", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Triangle Land", "Attack Speed %", 60, "Reflect", 900, "Attack %", 60, "Attack: Regular", 525, 0, 13, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(8000, 5, 1400000, 3400000, 40000, 40000, 840000000, 15900, 1590, 7500, "Blue Triangle", "All", false, 0, 0, false, 650000, 0, 0, 75, "Slow", 15, "Tukkun", "Triangle Land", "Attack Speed", 6, "Drop Rate", 30, "Damage", 30, "Attack: Regular", 525, 0, 15, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(8100, 5, 1500000, 3600000, 40500, 40500, 860000000, 16000, 1600, 7500, "Green Triangle", "All", false, 0, 0, false, 330000, 0, 0, 75, "Poison", 15, "Tukkun", "Triangle Land", "Attack Speed", 6, "Drop Rate", 30, "Damage", 30, "Attack: Poison", 260, 5, 20, "Attack: Regular", 525, 0, 25, "Buff: Elemental Boost", 10, 0, 90);
    addArenaEnemy(8200, 5, 1600000, 3800000, 41000, 41000, 880000000, 16100, 1610, 7500, "Red Triangle", "All", false, 0, 0, false, 340000, 0, 0, 75, "Blind", 15, "Tukkun", "Triangle Land", "Attack Speed", 6, "Drop Rate", 30, "Damage", 30, "Attack: Blind", 260, 5, 20, "Attack: Regular", 525, 0, 25, "Buff: Elemental Boost", 10, 0, 90);
    addArenaEnemy(8300, 5, 1700000, 4000000, 41500, 41500, 900000000, 16200, 1620, 7500, "Black Triangle", "All", false, 0, 0, false, 350000, 0, 0, 75, "Weaken", 15, "Tukkun", "Triangle Land", "Attack Speed", 6, "Drop Rate", 30, "Damage", 30, "Attack: Weaken", 260, 5, 20, "Attack: Regular", 525, 0, 25, "Buff: Elemental Boost", 10, 0, 90);
    addArenaEnemy(8400, 4, 1600000, 4000000, 45500, 45500, 910000000, 16400, 1640, 7500, "Ghost Triangle A", "All", false, 0, 0, true, 295000, 0, 0, 75, "None", 0, "Tukkun", "Triangle Land", "EXP", 30, "Resist", 30, "Resist", 30, "Attack: Regular", 525, 0, 17, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(8500, 4, 1700000, 4200000, 46000, 46000, 940000000, 16600, 1660, 7500, "Ghost Triangle B", "All", false, 0, 0, true, 305000, 0, 0, 75, "None", 0, "Tukkun", "Triangle Land", "EXP", 30, "Resist", 30, "Resist", 30, "Attack: Regular", 525, 0, 17, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(8600, 4, 1800000, 4300000, 46400, 46400, 970000000, 16800, 1680, 7500, "Ghost Triangle C", "All", false, 0, 0, true, 310000, 0, 0, 75, "None", 0, "Tukkun", "Triangle Land", "EXP", 30, "Resist", 30, "Resist", 30, "Attack: Regular", 525, 0, 17, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(8700, 4, 1900000, 4500000, 46900, 46900, 1000000000, 17000, 1700, 7500, "Ghost Triangle D", "All", false, 0, 0, true, 320000, 0, 0, 75, "None", 0, "Tukkun", "Triangle Land", "EXP", 30, "Resist", 30, "Resist", 30, "Attack: Regular", 525, 0, 17, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(9000, 4, 3000000, 6000000, 60000, 60000, 30000000000, 150000, 30000, 75000, "Super Triangle", "All", true, 0, 30000000, false, 900000, 300, 30000000, 75, "Stat UP", 10, "Tukkun", "Triangle Land", "Reward", 30, "Attack %", 60, "Attack %", 90, "Attack: Blind", 260, 5, 22, "Attack: Knockback", 260, 5, 22, "Heal", 50, 1050, 32);
    addArenaEnemy(66, 1, 1, 0, 10000, 1, 66, 750, 450, 900, "Pyramid Worm", "Dark", false, 0, 0, true, 0, 0, 0, 0, "None", 0, "Tukkun", "Dark Pyramid", "Spawn Rate", 20, "Non-Boss Damage", 5, "Non-Boss Damage", 8, "Produce Loot: Pixel", 5000, 0, 25, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(66, 2, 1, 0, 10000, 1, 66, 750, 450, 900, "Pyramid Snake", "Dark", false, 0, 0, true, 0, 0, 0, 0, "None", 0, "Tukkun", "Dark Pyramid", "Spawn Rate", 20, "Non-Boss Damage", 5, "Non-Boss Damage", 8, "Produce Loot: Material", 2500, 0, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(66, 1.5, 1, 0, 10000, 1, 66, 750, 450, 900, "Pyramid Ghost", "Dark", false, 0, 0, true, 0, 0, 0, 0, "None", 0, "Darkranboria", "Dark Pyramid", "Spawn Rate", 20, "Non-Boss Damage", 5, "Non-Boss Damage", 8, "Produce Loot: Coin", 4000, 0, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(66, 1, 1, 0, 10000, 1, 66, 750, 450, 900, "Skulder", "Dark", false, 0, 0, true, 0, 0, 0, 0, "None", 0, "Toudou1620", "Dark Pyramid", "Spawn Rate", 20, "Non-Boss Damage", 5, "Non-Boss Damage", 8, "Produce Loot: Stat", 0, 0, 40, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(66, 2, 1, 0, 10000, 1, 166, 1000, 600, 1200, "Pyramid Dragon", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "HeroicHero", "Dark Pyramid", "Spawn Rate", 20, "Non-Boss Damage", 5, "Non-Boss Damage", 8, "Produce Loot: Rare Item", 0, 0, 200, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(2200, 3, 7000000, -999999999, 10000, 7000, 10, 4000, 500, 1000, "Killer Lily", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Mystic Path", "EXP", 10, "Damage", 10, "Damage", 50, "Attack: Regular", 105, 0, 19, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2250, 4, 75000, -999999999, 10000, 7000, 30, 5000, 500, 1000, "Minifish", "Water", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 2, "Tukkun", "Mystic Path", "EXP", 10, "Damage", 10, "Magic Resist", 50, "Attack: Weaken", 50, 5, 22, "Attack: Regular", 105, 0, 27, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(2300, 3, 80000, -999999999, 10000, 8000, 120, 7000, 3500, 3500, "Bronze Jelly", "Water", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 2, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Drop Rate", 50, "Attack: Weaken", 50, 5, 24, "Attack: Regular", 105, 0, 29, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(2325, 3, 85000, -999999999, 10000, 8000, 140, 7500, 3750, 3500, "Silver Jelly", "Water", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 2, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Drop Rate", 50, "Attack: Weaken", 50, 5, 24, "Attack: Regular", 105, 0, 29, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(2350, 3, 90000, -999999999, 10000, 8000, 160, 8000, 4000, 3500, "Golden Jelly", "Water", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 2, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Drop Rate", 50, "Attack: Weaken", 50, 5, 24, "Attack: Regular", 105, 0, 29, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(2375, 3, 95000, -999999999, 10000, 8000, 180, 8500, 4250, 3500, "Platinum Jelly", "Water", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 2, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Drop Rate", 50, "Attack: Weaken", 50, 5, 24, "Attack: Regular", 105, 0, 29, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(2400, 0, 1, -999999999, 10000, 9000, 400, 12500, 6250, 7000, "Emerald", "Earth", false, 0, 0, false, 100000, 20, 200000, 0, "None", 0, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Pixel", 50, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(2425, 0, 1, -999999999, 10000, 9000, 420, 13000, 6500, 7000, "Aquamarine", "Water", false, 0, 0, false, 105000, 20, 200000, 0, "None", 0, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Pixel", 50, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(2450, 0, 1, -999999999, 10000, 9000, 440, 13500, 6750, 7000, "Topaz", "Thunder", false, 0, 0, false, 110000, 20, 200000, 0, "None", 0, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Pixel", 50, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(2475, 0, 1, -999999999, 10000, 9000, 460, 14000, 7000, 7000, "Ruby", "Fire", false, 0, 0, false, 115000, 20, 200000, 0, "None", 0, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Pixel", 50, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(2500, 0, 1, -999999999, 10000, 9000, 480, 14500, 7250, 7000, "Diamond", "Light", false, 0, 0, false, 120000, 20, 200000, 0, "None", 0, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Pixel", 50, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(2525, 0, 1, -999999999, 10000, 9000, 500, 15000, 7500, 7000, "Dark Gem", "Dark", false, 0, 0, false, 125000, 20, 200000, 0, "None", 0, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Pixel", 50, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(2550, 0, 1, -999999999, 20000, 15000, 1200, 35000, 35000, 35000, "Supergem", "All", true, 0, 0, false, 150000, 30, 300000, 0, "None", 0, "Tukkun", "Mystic Path", "Reward", 10, "Damage", 10, "Pixel", 50, "Attack: Ignore Defense", 1, 0, 40, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(2500, 2, 65535, -999999999, 65535, 16383, 150000, 9100, 2000, 9001, "Alien A", "Light", false, 0, 10000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Power Down", 1, 3, 13);
    addArenaEnemy(2520, 2, 65535, -999999999, 65535, 16383, 155000, 9200, 2000, 9001, "Alien B", "Light", false, 0, 10000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Defense Down", 1, 3, 13);
    addArenaEnemy(2540, 2, 65535, -999999999, 65535, 16383, 160000, 9300, 2000, 9001, "Alien C", "Light", false, 0, 10000, false, 96000, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Accuracy Down", 1, 3, 11);
    addArenaEnemy(2560, 2, 65535, -999999999, 65535, 16383, 165000, 9400, 2000, 9001, "Alien D", "Light", false, 0, 10000, false, 96000, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Evasion Down", 1, 3, 11);
    addArenaEnemy(2580, 2, 65535, -999999999, 65535, 16383, 170000, 9500, 2000, 9001, "Alien E", "Light", false, 0, 10000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Power Down", 1, 3, 12);
    addArenaEnemy(2600, 2, 65535, -999999999, 65535, 16383, 175000, 9600, 2000, 9001, "Alien F", "Light", false, 0, 10000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Defense Down", 1, 3, 12);
    addArenaEnemy(2620, 2, 65535, -999999999, 65535, 16383, 180000, 9700, 2000, 9001, "Alien G", "Light", false, 0, 10000, false, 120000, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Accuracy Down", 1, 3, 10);
    addArenaEnemy(2640, 2, 65535, -999999999, 65535, 16383, 185000, 9800, 2000, 9001, "Alien H", "Light", false, 0, 10000, false, 120000, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Evasion Down", 1, 3, 10);
    addArenaEnemy(2660, 2, 65535, -999999999, 65535, 16383, 190000, 9900, 2000, 9001, "Alien I", "Light", false, 0, 10000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Power Down", 1, 3, 11);
    addArenaEnemy(2680, 2, 65535, -999999999, 65535, 16383, 195000, 10000, 2000, 9001, "Alien J", "Light", false, 0, 10000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Defense Down", 1, 3, 11);
    addArenaEnemy(2700, 2, 65535, -999999999, 65535, 16383, 200000, 10100, 2000, 9001, "Alien K", "Light", false, 0, 10000, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Accuracy Down", 1, 3, 9);
    addArenaEnemy(2720, 2, 65535, -999999999, 65535, 16383, 205000, 10200, 2000, 9001, "Alien L", "Light", false, 0, 10000, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 23, "Buff: Invincibility", 5, 0, 80, "Attack: Evasion Down", 1, 3, 9);
    addArenaEnemy(2740, 3, 131071, -999999999, 65535, 16383, 200000, 10300, 2500, 9001, "Robomin", "Light", false, 0, 15000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 21, "Buff: Invincibility", 5, 0, 80, "Attack: Silence", 1, 20, 13);
    addArenaEnemy(2760, 3, 131071, -999999999, 65535, 16383, 210000, 10400, 2500, 9001, "Invisibo", "Light", false, 0, 15000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 10, "Non-Boss Damage", 10, "", 0, "Attack: Regular", 105, 0, 21, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2780, 3, 131071, -999999999, 65535, 16383, 220000, 10500, 2500, 9001, "Weird Object", "Light", false, 0, 15000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 12, "Non-Boss Damage", 12, "", 0, "Attack: Regular", 105, 0, 21, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2800, 3, 131071, -999999999, 65535, 16383, 230000, 10600, 2500, 9001, "Weirder Object", "Light", false, 0, 15000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 12, "Non-Boss Damage", 12, "", 0, "Attack: Regular", 105, 0, 21, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2820, 4, 131071, -999999999, 65535, 16383, 240000, 10700, 2500, 9001, "Supertruck", "Light", false, 0, 15000, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 12, "Attack Speed %", 25, "", 0, "Attack: Regular", 105, 0, 15, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2840, 0, 1, -999999999, 65535, 16383, 30000, 10800, 2500, 9001, "Not_a_Bomb A", "Ice", false, 0, 0, false, 0, 2, 131071, 0, "None", 0, "Dragonayzer", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2860, 0, 1, -999999999, 65535, 16383, 32500, 10900, 2500, 9001, "Not_a_Bomb B", "Ice", false, 0, 0, false, 0, 2, 131071, 0, "None", 0, "Dragonayzer", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2880, 0, 1, -999999999, 65535, 16383, 35000, 11000, 2500, 9001, "Not_a_Bomb C", "Ice", false, 0, 0, false, 0, 2, 131071, 0, "None", 0, "Dragonayzer", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2900, 0, 1, -999999999, 65535, 16383, 280000, 11100, 2500, 9001, "Suspicious Sign", "Light", false, 0, 15000, false, 262143, 5, 262143, 0, "None", 0, "Tukkun", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2920, 4, 131071, -999999999, 65535, 16383, 270000, 11200, 3000, 9001, "Arrowbot", "Thunder", false, 0, 20000, false, 0, 0, 0, 0, "None", 0, "meshwire", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Regular", 105, 0, 15, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2940, 4, 131071, -999999999, 65535, 16383, 280000, 11300, 3000, 9001, "Dogbot", "Thunder", false, 0, 20000, false, 0, 0, 0, 0, "None", 0, "meshwire", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Regular", 105, 0, 15, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2960, 4, 131071, -999999999, 65535, 16383, 290000, 11400, 3000, 9001, "Sentrybot", "Thunder", false, 0, 20000, false, 0, 0, 0, 0, "None", 0, "meshwire", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Regular", 105, 0, 15, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2980, 4, 131071, -999999999, 65535, 16383, 300000, 11500, 3000, 9001, "Dronebot", "Thunder", false, 0, 20000, false, 0, 0, 0, 0, "None", 0, "meshwire", "9001: Mystic Forest", "Pixel", 12, "Damage", 12, "", 0, "Attack: Regular", 105, 0, 15, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3000, 4, 262143, -999999999, 131071, 32767, 1500000, 65535, 65535, 65535, "Master Alien", "Thunder", true, 0, 50000, false, 262143, 0, 0, 0, "All", 0, "meshwire", "9001: Mystic Forest", "Reward", 12, "Damage", 12, "", 0, "Attack: Regular", 105, 0, 15, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3000, 6, 7, -999999999, 100000, 10000, 500000, 20000, 2000, 10000, "Attacker Alien", "Light", false, 0, 0, false, 0, 60, 100, 0, "None", 0, "Tukkun", "9001: Defend Mission", "Pixel", 15, "Non-Boss Damage", 15, "", 0, "Buff: Invincibility", 5, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(3000, 4, 4, -999999999, 100000, 40000, 650000, 20000, 2000, 10000, "Defender Alien", "Light", false, 0, 0, false, 0, 60, 100, 0, "None", 0, "Tukkun", "9001: Defend Mission", "Pixel", 15, "Non-Boss Damage", 15, "", 0, "Buff: Invincibility", 5, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(3000, 5, 6, -999999999, 100000, 10000, 450000, 20000, 2000, 10000, "Healer Alien", "Light", false, 0, 50000, false, 0, 60, 100, 0, "None", 0, "Tukkun", "9001: Defend Mission", "Pixel", 15, "Non-Boss Damage", 15, "", 0, "Heal", 50, 210, 10, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3000, 7, 5, -999999999, 100000, 10000, 450000, 20000, 2000, 10000, "Runner Alien", "Light", false, 0, 0, false, 0, 60, 100, 0, "None", 0, "Tukkun", "9001: Defend Mission", "Pixel", 15, "Attack Speed %", 30, "", 0, "Buff: Invincibility", 5, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(3500, 4.5, 9, -999999999, 100000, 10000, 18000000, 1000000, 50000, 500000, "Super Alien", "Light", true, 0, 100000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "9001: Defend Mission", "Pixel", 30, "Damage", 30, "", 0, "Buff: Enrage", 10, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 40000, 45000000, 2000000, 100000, 1000000, "Alien Generator", "Light", true, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "9001: Defend Mission", "Pixel", 30, "Damage", 30, "", 0, "Buff: Enrage", 10, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 10000, 800000, 20000, 5000, 25000, "Alien Supply Crate", "Light", true, 0, 0, false, 0, 60, 100, 0, "None", 0, "Tukkun", "9001: Defend Mission", "Pixel", 30, "Drop Rate", 30, "", 0, "Buff: Enrage", 10, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 10000, 800000, 2000000, 200000, 2000000, "Alien Secret Box", "Light", true, 0, 0, false, 0, 60, 100, 0, "None", 0, "Tukkun", "9001: Defend Mission", "Spawn Rate", 30, "Drop Rate", 30, "", 0, "Buff: Enrage", 10, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3000000, 42500, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "None", 0, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Regular", 105, 0, 25, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3200000, 45000, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Slow", 1, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Regular", 105, 0, 25, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3400000, 47500, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Slow", 2, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Regular", 105, 0, 25, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3600000, 50000, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Slow", 3, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Regular", 105, 0, 25, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3200000, 45000, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Blind", 1, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Blind", 50, 5, 30, "Attack: Regular", 105, 0, 35, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3400000, 47500, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Blind", 2, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Blind", 50, 5, 30, "Attack: Regular", 105, 0, 35, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3600000, 50000, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Blind", 3, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Blind", 50, 5, 30, "Attack: Regular", 105, 0, 35, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3200000, 45000, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Weaken", 1, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Weaken", 50, 5, 30, "Attack: Regular", 105, 0, 35, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3400000, 47500, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Weaken", 2, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Weaken", 50, 5, 30, "Attack: Regular", 105, 0, 35, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(4000, 0, 1, -999999999, 100000, 4000, 3600000, 50000, 10000, 30000, "???", "Light", true, 0, 0, false, 1, 0, 0, 0, "Weaken", 3, "Tukkun", "9001: Secret Lab", "Reward", 20, "Drop Rate", 20, "", 0, "Attack: Weaken", 50, 5, 30, "Attack: Regular", 105, 0, 35, "Buff: Invincibility", 5, 0, 90);
    addArenaEnemy(2300, 5, 70000, 60000, 17500, 11500, 3500000, 440, 80, 500, "Treasure Hunter", "Fire", false, 240, 0, false, 0, 0, 0, 75, "None", 0, "ChioreanTudor", "Pirate Ship Interior", "Drop Rate", 25, "Coin", 25, "Drop Rate", 25, "Attack: Regular", 500, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2400, 6.5, 70000, 75000, 12000, 18000, 3900000, 450, 90, 500, "Duplicated Ninja", "Dark", false, 241, 0, false, 0, 0, 0, 50, "Blind", 6, "SumYungGai", "Pirate Ship Interior", "Attack Speed", 5, "Spawn Rate", 10, "Spawn Rate", 10, "Attack: Blind", 250, 5, 17, "Attack: Regular", 500, 0, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(2500, 0, 5, -999999999, 12500, 12500, 100, 5000, 5000, 10000, "Treasure Chest", "Dark", false, 248, 0, false, 0, 10, 33500, 50, "None", 0, "Tukkun", "Pirate Ship Interior", "Reward", 25, "Pixel", 25, "Coin", 25, "Attack: Knockback", 250, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2500, 0, 5, -999999999, 12500, 12500, 100, 10000, 2500, 5000, "Another Chest", "Dark", false, 244, 0, false, 0, 10, 33500, 50, "None", 0, "Tukkun", "Pirate Ship Interior", "Reward", 25, "Pixel", 25, "Coin", 25, "Attack: Knockback", 250, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2600, 4, 120000, 120000, 15000, 19000, 55000000, 15000, 1500, 5000, "Blue Ghost", "Water", true, 245, 0, true, 0, 0, 0, 50, "Zombify", 2, "Darkranboria", "Pirate Ship Interior", "Reward", 10, "Boss Damage", 20, "Resist", 10, "Attack: Regular", 500, 0, 17, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2700, 4, 130000, 125000, 15500, 19500, 60000000, 20000, 2000, 5000, "Green Ghost", "Wind", true, 246, 0, true, 0, 0, 0, 50, "Zombify", 3, "Darkranboria", "Pirate Ship Interior", "Reward", 10, "Boss Damage", 20, "Resist", 10, "Attack: Regular", 500, 0, 17, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2800, 4, 140000, 130000, 16000, 20000, 65000000, 25000, 2500, 5000, "Red Ghost", "Fire", true, 247, 0, true, 0, 0, 0, 50, "Zombify", 4, "Darkranboria", "Pirate Ship Interior", "Reward", 10, "Boss Damage", 20, "Resist", 10, "Attack: Regular", 500, 0, 17, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3000, 4, 150000, 180000, 18000, 22500, 115000000, 30000, 6000, 10000, "Super Ghost", "Dark", true, 0, 0, true, 0, 0, 0, 50, "Zombify", 5, "Darkranboria", "Pirate Ship Interior", "Reward", 15, "Boss Damage", 30, "Resist", 15, "Attack: Regular", 500, 0, 17, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3000, 0, 1, -999999999, 15000, 15000, 1500, 40000, 20000, 20000, "Pirate Gem", "All", true, 0, 0, false, 0, 30, 150000, 0, "None", 0, "Tukkun", "Pirate Ship Interior", "Reward", 15, "Drop Rate", 30, "Drop Rate", 30, "Attack: Knockback", 250, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1000, 2, 23000, 23500, 5060, 5060, 440000, 3800, 380, 1000, "Fire Snail", "Fire", false, 0, 44000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Resist", 20, "Attack: Regular", 550, 0, 21, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1010, 4, 23000, 16000, 7150, 5100, 450000, 3850, 385, 1000, "Lava Blob", "Fire", false, 0, 45000, false, 0, 0, 0, 50, "None", 0, "dragonewyn", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Critical Chance", 20, "Attack: Regular", 550, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1020, 4, 29500, 16500, 5650, 5130, 460000, 3900, 390, 1000, "Lava Jelly", "Fire", false, 0, 46000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Critical Damage", 80, "Attack: Regular", 550, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1030, 4, 30000, 16500, 5690, 5170, 470000, 3950, 395, 1000, "Lava Slime", "Fire", false, 0, 47000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Critical Damage", 80, "Attack: Regular", 550, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1040, 3, 23000, 20500, 5210, 5210, 480000, 4000, 400, 1000, "Red Mushroom", "Fire", false, 0, 48000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Equipment Defense", 160, "Attack: Regular", 550, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1050, 3, 21000, 17500, 7880, 5250, 500000, 4050, 405, 1000, "Fire Snake", "Fire", false, 0, 50000, false, 0, 0, 0, 50, "Poison", 7, "Tukkun", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Hit Chance", 20, "Attack: Poison", 275, 5, 24, "Attack: Regular", 550, 0, 29, "Buff: Elemental Boost", 10, 0, 90);
    addArenaEnemy(1060, 2, 24500, 26500, 5280, 5280, 510000, 4100, 410, 1000, "Fire Turtle", "Fire", false, 0, 51000, false, 0, 0, 0, 50, "None", 0, "HeroicHero", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Resist", 20, "Attack: Regular", 550, 0, 21, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1070, 2, 25000, 18000, 5320, 5320, 680000, 4150, 415, 1000, "Flame Lizard", "Fire", false, 0, 68000, false, 0, 0, 0, 50, "None", 0, "Toudou1620", "Volcano Peak", "Potion Efficiency", 20, "", 0, "MaxHP %", 80, "Attack: Regular", 550, 0, 21, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1080, 4, 26500, 18000, 5360, 5360, 530000, 4200, 420, 1000, "Fire Eye", "Fire", false, 0, 53000, false, 24500, 0, 0, 50, "None", 0, "Tukkun", "Volcano Peak", "Potion Efficiency", 20, "", 0, "Attack %", 40, "Attack: Regular", 550, 0, 17, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1090, 5, 24000, 18500, 5400, 5400, 430000, 2500, 250, 1000, "Floating Fire", "Fire", false, 260, 43000, false, 0, 5, 32500, 50, "None", 0, "Tukkun", "Volcano Peak", "Potion Efficiency", 20, "Attack Speed", 4, "Negate Effect", 20, "Attack: Knockback", 275, 5, 10, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1200, 0, 38000, 43500, 8000, 8000, 10000000, 20000, 4000, 5000, "Fire Stone", "Fire", true, 0, 1000000, false, 46000, 30, 57000, 50, "None", 0, "Tukkun", "Volcano Peak", "Reward", 20, "Potion Efficiency", 40, "Defense %", 60, "Attack: Knockback", 275, 5, 20, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1300, 4, 42000, 39000, 10300, 10300, 12000000, 21000, 4200, 5000, "Fire Spirit", "Fire", true, 0, 5000000, false, 50000, 0, 0, 0, "None", 0, "PartyzantPL", "Volcano Peak", "Reward", 20, "Potion Efficiency", 40, "Potion Efficiency", 80, "Spirit Recovery", 9, 0, 7, "Heal", 50, 1100, 22, "Buff: Elemental Boost", 10, 0, 90);
    addArenaEnemy(2700, 2, 88000, 154000, 11900, 11900, 5800000, 6900, 690, 2500, "Ice Snail", "Ice", false, 0, 180000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Resist", 30, "Attack: Regular", 600, 0, 21, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2710, 4, 88000, 102000, 14000, 11900, 5900000, 6950, 695, 2500, "Ice Blob", "Ice", false, 0, 180000, false, 0, 0, 0, 50, "None", 0, "dragonewyn", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Critical Chance", 30, "Attack: Regular", 600, 0, 17, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2720, 4, 113000, 104000, 12000, 12000, 6000000, 7000, 700, 2500, "Ice Jelly", "Ice", false, 0, 180000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Critical Damage", 120, "Attack: Regular", 600, 0, 17, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2730, 4, 113000, 106000, 13000, 12000, 6000000, 7050, 705, 2500, "Ice Slime", "Ice", false, 0, 190000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Critical Damage", 120, "Attack: Regular", 600, 0, 17, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2740, 3, 86000, 128000, 12000, 12000, 6100000, 7100, 710, 2500, "Blue Mushroom", "Ice", false, 0, 190000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Equipment Defense", 240, "Attack: Regular", 600, 0, 19, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2750, 3, 86000, 108000, 12100, 12100, 7900000, 7150, 715, 2500, "Frozen Cactus", "Ice", false, 0, 250000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "", 0, "MaxHP %", 120, "Attack: Regular", 600, 0, 19, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2760, 2.5, 92000, 109000, 12100, 14500, 6200000, 7200, 720, 2500, "Snow Abuser", "Ice", false, 0, 190000, false, 0, 0, 0, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Evasion %", 60, "Attack: Regular", 600, 0, 20, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2770, 2, 92000, 166000, 12200, 12200, 6200000, 7250, 725, 2500, "Igloo Turtle", "Ice", false, 0, 200000, false, 0, 0, 0, 50, "None", 0, "HeroicHero", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Resist", 30, "Attack: Regular", 600, 0, 21, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2780, 4, 98000, 112000, 12200, 12200, 6300000, 7300, 730, 2500, "Frost Eye", "Ice", false, 0, 200000, false, 45000, 0, 0, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "", 0, "Attack %", 60, "Attack: Regular", 600, 0, 17, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2790, 5, 88000, 113000, 12200, 12200, 5100000, 4000, 400, 2500, "Cold Fire", "Ice", false, 272, 160000, false, 0, 5, 59500, 50, "None", 0, "Tukkun", "Frosty Zone", "Potion Efficiency", 30, "Attack Speed", 6, "Negate Effect", 30, "Attack: Knockback", 300, 6, 10, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2900, 0, 123000, 250000, 18000, 18000, 106000000, 32500, 6500, 12500, "Ice Stone", "Ice", true, 0, 3600000, false, 73500, 0, 0, 50, "Slow", 3, "Tukkun", "Frosty Zone", "Reward", 30, "Potion Efficiency", 60, "Defense %", 90, "Attack: Regular", 600, 0, 25, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3000, 4, 132000, 220000, 15100, 15100, 116000000, 35000, 7000, 12500, "Ice Spirit", "Ice", true, 0, 17000000, false, 78500, 0, 0, 0, "Slow", 15, "PartyzantPL", "Frosty Zone", "Reward", 30, "Potion Efficiency", 60, "Potion Efficiency", 120, "Spirit Recovery", 9, 0, 7, "Heal", 60, 1200, 22, "Buff: Elemental Boost", 20, 0, 90);
    addArenaEnemy(5000, 2, 2000000, 50000000, 30000, 40000, 1000000000, 50000, 10000, 20000, "The Guardian", "All", true, 0, 7000000, false, 2850000, 0, 0, 25, "Slow", 30, "Tukkun", "Dark Portal", "Drop Rate", 30, "Boss Damage", 30, "Resist", 30, "Attack: Regular", 600, 0, 21, "Heal", 60, 1200, 26, "Buff: Elemental Boost", 20, 0, 90);
    addArenaEnemy(1, 2, 10, -999999999, 10000, 0, 9050, 1000, 1000, 1000, "Grinning Colossus", "All", true, 0, 300, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Ropeless Room", "Reward", 5, "Instant Kill", 5, "", 0, "Heal", 50, 210, 16, "Buff: Invincibility", 5, 0, 80, "HP Recovery", 10, 0, 15);
    addArenaEnemy(9001, 4, 10000000, 1000000, 100000, 100000, 15000000000, 2500000, 125000, 250000, "Chuck Norris", "All", true, 0, 10000000, false, 10000000, 0, 0, 75, "Blind", 30, "dragonewyn", "2012: Ye Olde Pub", "Reward", 40, "Boss Damage", 40, "Ignore Defense", 80, "Attack: Blind", 2000, 5, 22, "Attack: Ignore Defense", 20000, 0, 180, "Heal", 100, 2000, 32);
    addArenaEnemy(1, 6.5, 20, -999999999, 0, 0, 10, 5000, 500, 5000, "Arena Box", "All", true, 277, 0, false, 0, 0, 0, 0, "None", 0, "Darkranboria", "The Special Arena", "Reward", 5, "Boss Damage", 5, "", 0, "Buff: Invincibility", 5, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(500, 4, 20000, 7500, 500, 500, 20000, 6000, 600, 5000, "Arena Mob 1", "Earth", true, 278, 600, false, 30000, 0, 0, 50, "None", 0, "ChioreanTudor", "The Special Arena", "Reward", 6, "Boss Damage", 6, "Damage", 5, "Attack: Regular", 550, 0, 17, "Heal", 50, 1100, 22, "Buff: Master", 10, 0, 80);
    addArenaEnemy(600, 1.5, 25000, 10000, 800, 800, 50000, 7000, 700, 5000, "Arena Mob 2", "Water", true, 279, 2000, false, 40000, 0, 0, 25, "Slow", 3, "Tukkun", "The Special Arena", "Reward", 7, "Boss Damage", 7, "Damage", 5, "Attack: Regular", 550, 0, 22, "Heal", 50, 1100, 27, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(700, 5, 30000, 12500, 1100, 1100, 100000, 8000, 800, 5000, "Arena Mob 3", "Ice", true, 280, 0, false, 40000, 0, 0, 100, "None", 0, "Tukkun", "The Special Arena", "Reward", 8, "Boss Damage", 8, "Damage", 5, "Attack: Regular", 550, 0, 15, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(800, 4, 35000, 15000, 1400, 1400, 200000, 9000, 900, 5000, "Arena Mob 4", "Water", true, 281, 8000, false, 50000, 0, 0, 50, "None", 0, "dragonewyn", "The Special Arena", "Reward", 9, "Boss Damage", 9, "Damage", 5, "Attack: Regular", 550, 0, 17, "Heal", 50, 1100, 22, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(900, 2, 50000, 20000, 2200, 2200, 500000, 10000, 1000, 5000, "Arena Mob 5", "Earth", true, 282, 30000, false, 70000, 0, 0, 0, "None", 0, "Tukkun", "The Special Arena", "Reward", 10, "Boss Damage", 10, "Damage", 5, "Attack: Regular", 550, 0, 21, "Heal", 50, 1100, 26, "", 0, 0, 0);
    addArenaEnemy(1000, 0, 45000, -999999999, 10000, 900, 100, 50000, 25000, 50000, "Arena Bonus 1", "All", true, 283, 0, false, 60000, 30, 60000, 0, "None", 0, "Tukkun", "The Special Arena", "Reward", 10, "Boss Damage", 10, "Drop Rate", 10, "Attack: Knockback", 275, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1200, 3.5, 75000, 80000, 3000, 3000, 1000000, 12000, 1200, 10000, "Arena Mob 6", "Earth", true, 284, 0, false, 60000, 0, 0, 0, "None", 0, "Guille", "The Special Arena", "Reward", 11, "Boss Damage", 11, "Damage", 10, "Attack: Regular", 750, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1400, 4.5, 80000, 70000, 4000, 4000, 2000000, 14000, 1400, 10000, "Arena Mob 7", "Fire", true, 285, 0, false, 100000, 0, 0, 50, "None", 0, "Tukkun", "The Special Arena", "Reward", 12, "Boss Damage", 12, "Damage", 10, "Attack: Regular", 750, 0, 16, "Buff: Enrage", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(1600, 5, 90000, 100000, 5000, 5000, 5000000, 16000, 1600, 10000, "Arena Mob 8", "Earth", true, 286, 0, false, 90000, 0, 0, 25, "Poison", 3, "Tukkun", "The Special Arena", "Reward", 13, "Boss Damage", 13, "Damage", 10, "Attack: Poison", 375, 6, 20, "Attack: Regular", 750, 0, 25, "Buff: Enrage", 20, 0, 90);
    addArenaEnemy(1800, 2, 120000, 150000, 6000, 6000, 10000000, 18000, 1800, 10000, "Arena Mob 9", "Earth", true, 287, 120000, false, 150000, 0, 0, 75, "None", 0, "Tukkun", "The Special Arena", "Reward", 14, "Boss Damage", 14, "Damage", 10, "Attack: Regular", 750, 0, 21, "Heal", 60, 1500, 26, "Buff: Enrage", 20, 0, 90);
    addArenaEnemy(2100, 5, 130000, 500000, 7000, 7000, 20000000, 20000, 2000, 10000, "Arena Mob 10", "Thunder", true, 288, 0, false, 140000, 20, 98500, 75, "Slow", 5, "meshwire", "The Special Arena", "Reward", 15, "Boss Damage", 15, "Damage", 10, "Attack: Knockback", 375, 6, 10, "Buff: Enrage", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2400, 0, 165000, -999999999, 10000, 1900, 200, 100000, 50000, 100000, "Arena Bonus 2", "All", true, 289, 0, false, 0, 30, 190000, 0, "None", 0, "Tukkun", "The Special Arena", "Reward", 15, "Boss Damage", 15, "Drop Rate", 20, "Attack: Knockback", 375, 6, 20, "Buff: Invincibility", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(2700, 4.5, 210000, 400000, 8500, 8500, 50000000, 25000, 2500, 20000, "Arena Mob 11", "Dark", true, 290, 400000, false, 250000, 0, 0, 75, "Blind", 5, "SumYungGai", "The Special Arena", "Reward", 16, "Boss Damage", 16, "Damage", 20, "Attack: Blind", 500, 6, 21, "Attack: Regular", 1000, 0, 26, "Heal", 60, 2000, 31);
    addArenaEnemy(3100, 4, 315000, 600000, 10000, 10000, 100000000, 30000, 3000, 20000, "Arena Mob 12", "Dark", true, 291, 0, true, 0, 0, 0, 50, "None", 0, "Darkranboria", "The Special Arena", "Reward", 17, "Boss Damage", 17, "Damage", 20, "Attack: Regular", 1000, 0, 17, "Buff: Enrage", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3500, 4, 335000, 700000, 12000, 12000, 200000000, 35000, 3500, 20000, "Arena Mob 13", "Dark", true, 292, 1500000, false, 400000, 0, 0, 0, "Weaken", 5, "Randomthought31", "The Special Arena", "Reward", 18, "Boss Damage", 18, "Damage", 20, "Attack: Weaken", 500, 6, 22, "Attack: Regular", 1000, 0, 27, "Heal", 60, 2000, 32);
    addArenaEnemy(4000, 3, 450000, 800000, 15000, 15000, 500000000, 40000, 4000, 20000, "Arena Mob 14", "All", true, 293, 3000000, false, 450000, 40, 3000000, 75, "Stat UP", 10, "Tukkun", "The Special Arena", "Reward", 19, "Boss Damage", 19, "Damage", 20, "Attack: Blind", 500, 6, 22, "Attack: Knockback", 500, 6, 22, "Heal", 60, 2000, 32);
    addArenaEnemy(4500, 5, 400000, 1200000, 17000, 17000, 1000000000, 70000, 7000, 100000, "Dark Spirit", "Dark", true, 294, 0, false, 400000, 0, 0, 50, "Blind", 5, "Tukkun", "The Special Arena", "Reward", 20, "Boss Damage", 20, "Potion Efficiency", 100, "Attack: Blind", 500, 6, 20, "Buff: Enrage", 20, 0, 80, "Spirit Recovery", 7, 0, 5);
    addArenaEnemy(5000, 0, 500000, 1800000, 19000, 19000, 2000000000, 200000, 20000, 200000, "Dark Stone", "Dark", true, 295, 0, false, 600000, 0, 0, 50, "Slow", 5, "Tukkun", "The Special Arena", "Reward", 20, "Boss Damage", 20, "Defense %", 100, "Attack: Regular", 1000, 0, 25, "Buff: Enrage", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(6000, 4, 900000, 3000000, 29000, 21000, 5000000000, 1000000, 100000, 500000, "THE MEGABOSS", "All", true, 0, 100000000, false, 900000, 0, 0, 25, "All", 10, "dragonewyn", "The Special Arena", "Reward", 25, "Boss Damage", 25, "Negate Effect", 50, "Attack: Regular", 6000, 0, 17, "Heal", 70, 2700, 22, "Buff: Elemental Boost", 30, 0, 90);
    addArenaEnemy(1, 3, 1, 0, 0, 0, 1, 800, 50, 250, "Light Donkey", "Light", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "-Infinity: Prehistoric Area", "Spawn Rate", 20, "", 0, "Spawn Rate", 10, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1, 3, 1, 0, 0, 0, 1, 800, 50, 250, "Dark Donkey", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "-Infinity: Prehistoric Area", "Spawn Rate", 20, "", 0, "Spawn Rate", 10, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1, 4, 1, 0, 0, 0, 1, 1000, 50, 250, "Green Raptor", "Wind", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "-Infinity: Prehistoric Area", "Spawn Rate", 20, "", 0, "Spawn Rate", 10, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1, 4, 1, 0, 0, 0, 1, 1000, 50, 250, "Blue Raptor", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "-Infinity: Prehistoric Area", "Spawn Rate", 20, "", 0, "Spawn Rate", 10, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1, 4, 1, 0, 0, 0, 1, 1000, 50, 250, "Red Raptor", "Fire", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "-Infinity: Prehistoric Area", "Spawn Rate", 20, "", 0, "Spawn Rate", 10, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4000, 3, 1000, 0, 10000, 5000, 175000, 5000, 250, 4000, "Light Donkey?", "Light", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "Entry Room", "Pixel", 20, "", 0, "", 0, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4000, 3, 1000, 0, 10000, 5000, 175000, 5000, 250, 4000, "Dark Donkey?", "Dark", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "Entry Room", "Pixel", 20, "", 0, "", 0, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4250, 3, 1200, 0, 10000, 5000, 250000, 6000, 250, 4000, "Green Raptor?", "Wind", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "Entry Room", "EXP", 20, "", 0, "", 0, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4250, 3, 1200, 0, 10000, 5000, 250000, 6000, 250, 4000, "Blue Raptor?", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "Entry Room", "EXP", 20, "", 0, "", 0, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4250, 3, 1200, 0, 10000, 5000, 250000, 6000, 250, 4000, "Red Raptor?", "Fire", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "CTSG", "Entry Room", "EXP", 20, "", 0, "", 0, "Attack: Regular", 105, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4500, 0, 1, -999999999, 75000, 1500, 1, 75000, 500, 40000, "Green Bomb", "Fire", false, 0, 0, false, 0, 2, 10000000, 0, "Self-Destruct", 1, "Dragonayzer", "Reaction Room", "Pixel", 30, "Dodge Chance", 30, "", 0, "Buff: Invincibility", 5, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4500, 0, 10000000, -999999999, 75000, 1500, 9001, 75000, 500, 40000, "Red Bomb", "Fire", false, 0, 0, false, 0, 2, 1, 0, "Self-Destruct", 1, "Dragonayzer", "Reaction Room", "Pixel", 30, "Dodge Chance", 30, "", 0, "Buff: Invincibility", 5, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4500, 0, 1, -999999999, 75000, 1000, 50, 40000, 500, 20000, "Reaction Box", "Earth", false, 306, 0, false, 0, 15, 10000000, 0, "None", 0, "Darkranboria", "Chain Reaction Room", "Pixel", 30, "Attack Speed %", 60, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4500, 0, 1, -999999999, 75000, 1000, 50, 40000, 500, 20000, "Reaction Box", "Earth", false, 307, 0, false, 0, 15, 10000000, 0, "None", 0, "Darkranboria", "Chain Reaction Room", "Pixel", 30, "Attack Speed %", 60, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4500, 0, 1, -999999999, 75000, 1000, 100, 40000, 500, 20000, "Lucky Box", "Earth", false, 313, 0, false, 0, 30, 10000000, 0, "None", 0, "Darkranboria", "Luck Room", "Pixel", 30, "Drop Rate", 30, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4500, 0, 1, -999999999, 75000, 1000, 100, 40000, 500, 20000, "Lucky Box", "Earth", false, 314, 0, false, 0, 30, 10000000, 0, "None", 0, "Darkranboria", "Luck Room", "Pixel", 30, "Drop Rate", 30, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4500, 0, 1, -999999999, 75000, 1000, 100, 40000, 500, 20000, "Lucky Box", "Earth", false, 315, 0, false, 0, 30, 10000000, 0, "None", 0, "Darkranboria", "Luck Room", "Pixel", 30, "Drop Rate", 30, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4750, 4, 2000, 0, 15000, 5000, 200000, 4000, 100, 2000, "Poisonous Slime", "Water", false, 313, 0, false, 0, 0, 0, 0, "Poison", 8, "Tukkun", "Luck Room", "Spawn Rate", 30, "", 0, "", 0, "Attack: Poison", 50, 5, 22, "Attack: Regular", 105, 0, 27, "", 0, 0, 0);
    addArenaEnemy(4750, 4, 2200, 0, 15000, 5000, 200000, 4000, 100, 2000, "Darkness Slime", "Dark", false, 314, 0, false, 0, 0, 0, 0, "Blind", 8, "Tukkun", "Luck Room", "Spawn Rate", 30, "", 0, "", 0, "Attack: Blind", 50, 5, 22, "Attack: Regular", 105, 0, 27, "", 0, 0, 0);
    addArenaEnemy(4750, 4, 1800, 0, 15000, 5000, 200000, 4000, 100, 2000, "Destroyer Slime", "Water", false, 315, 0, false, 0, 0, 0, 0, "Weaken", 5, "Tukkun", "Luck Room", "Spawn Rate", 30, "", 0, "", 0, "Attack: Weaken", 50, 5, 22, "Attack: Regular", 105, 0, 27, "", 0, 0, 0);
    addArenaEnemy(4750, 7, 1500, 0, 15000, 5000, 1000000, 40000, 1000, 20000, "Anti-Snail", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Speed Room", "Pixel", 30, "Attack Speed", 6, "", 0, "Attack: Regular", 105, 0, 11, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(4750, 2.5, 5000, -999999999, 75000, 15000, 200, 75000, 1000, 40000, "Powerful Snail", "Water", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Dimensional Room", "Pixel", 30, "Attack %", 60, "", 0, "Attack: Regular", 105, 0, 20, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(5000, 0, 1, 0, 75000, 6000, 10000000, 350000, 10000, 100000, "Power Stone", "Thunder", true, 0, 0, false, 0, 45, 10000000, 25, "None", 0, "Tukkun", "Power Room", "Reward", 30, "Boss Damage", 30, "", 0, "Attack: Knockback", 50, 5, 20, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(5500, 3, 750, 0, 75000, 6000, 30000000, 750000, 20000, 200000, "Elite Crab", "Thunder", true, 0, 0, false, 0, 0, 0, 25, "Slow", 20, "Tukkun", "Water Room", "Reward", 30, "Boss Damage", 30, "", 0, "Attack: Stun", 105, 2, 34, "Buff: Enrage", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(6000, 4, 1250, 0, 75000, 7000, 100000000, 1250000, 50000, 500000, "Final Alien", "Thunder", true, 0, 0, false, 0, 0, 0, 25, "Weaken", 20, "Tukkun", "Final Room", "Reward", 30, "Boss Damage", 30, "", 0, "Attack: Weaken", 50, 5, 22, "Attack: Regular", 105, 0, 27, "Buff: Enrage", 10, 0, 90);
    addArenaEnemy(6000, 0, 1, -999999999, 10000, 3000, 2000, 750000, 100000, 1000000, "Alien Treasure", "Water", true, 0, 0, false, 0, 0, 0, 0, "None", 0, "Tukkun", "Treasure Room", "Reward", 30, "Drop Rate", 30, "", 0, "Buff: Invincibility", 5, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7000, 0, 1, -999999999, 100000, 1, 500000, 1, 1, 1, "Secret Crystal", "All", true, 0, 0, false, 1, 120, 10000000, 0, "Stun", 3, "ChaosII7", "???", "Pixel", 25, "Drop Rate", 25, "", 0, "Attack: Stun", 105, 2, 40, "Attack: Knockback", 50, 5, 30, "Buff: Reward", 10, 0, 80);
    addArenaEnemy(1000, 0, 75, -999999999, 100000, 4000, 2000000, 0, 0, 0, "DON\'T ATTACK!!!", "Light", true, 0, 0, false, 0, 3, 1, 0, "Self-Destruct", 1, "Tukkun", "9001: Defend Mission", "Instant Kill", 20, "", 0, "", 0, "Produce Loot: Rare Item", 0, 0, 150, "Buff: Invincibility", 5, 0, 80, "", 0, 0, 0);
    addArenaEnemy(5000, 3.5, 250000, 5000000, 30000, 30000, 100000000, 12000, 3000, 6000, "Blank Face", "Light", false, 0, 0, false, 0, 0, 0, 0, "Slow", 15, "ABlindOrphan", "Smiley Island", "EXP", 20, "", 0, "EXP", 20, "Attack: Regular", 900, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(5000, 4.5, 240000, 5000000, 30000, 30000, 100000000, 12000, 3000, 6000, "Confused Face", "Light", false, 0, 0, false, 0, 0, 0, 0, "Blind", 15, "ABlindOrphan", "Smiley Island", "EXP", 20, "", 0, "EXP", 20, "Attack: Blind", 450, 6, 21, "Attack: Regular", 900, 0, 26, "", 0, 0, 0);
    addArenaEnemy(5000, 3.5, 270000, 5000000, 30000, 30000, 100000000, 12000, 3000, 6000, "Happy Face", "Light", false, 0, 7000000, false, 0, 0, 0, 0, "None", 0, "ABlindOrphan", "Smiley Island", "EXP", 20, "", 0, "EXP", 20, "Attack: Regular", 900, 0, 18, "Heal", 60, 1800, 23, "", 0, 0, 0);
    addArenaEnemy(5000, 3.5, 250000, 5000000, 30000, 30000, 100000000, 12000, 3000, 6000, "Smiling Face", "Light", false, 0, 0, false, 0, 0, 0, 0, "Poison", 15, "ABlindOrphan", "Smiley Island", "EXP", 20, "", 0, "EXP", 20, "Attack: Poison", 450, 6, 23, "Attack: Regular", 900, 0, 28, "", 0, 0, 0);
    addArenaEnemy(5000, 3.5, 250000, 5000000, 30000, 30000, 100000000, 12000, 3000, 6000, "Sad Face", "Light", false, 0, 0, false, 310000, 0, 0, 0, "None", 0, "ABlindOrphan", "Smiley Island", "EXP", 20, "", 0, "EXP", 20, "Attack: Regular", 900, 0, 18, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(5000, 3.5, 220000, 5000000, 30000, 30000, 100000000, 12000, 3000, 6000, "Shocked Face", "Light", false, 0, 0, false, 0, 0, 0, 25, "Weaken", 15, "ABlindOrphan", "Smiley Island", "EXP", 20, "", 0, "EXP", 20, "Attack: Weaken", 450, 6, 23, "Attack: Regular", 900, 0, 28, "Buff: Enrage", 20, 0, 90);
    addArenaEnemy(5000, 3.5, 220000, 5000000, 30000, 30000, 100000000, 12000, 3000, 6000, "Angry Face", "Light", false, 0, 0, false, 290000, 0, 0, 75, "None", 0, "ABlindOrphan", "Smiley Island", "EXP", 20, "", 0, "EXP", 20, "Attack: Regular", 900, 0, 18, "Buff: Enrage", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(9001, 4, 500000, 500000, 16000, 9000, 9000000001, 0, 0, 0, "The Ascendant", "All", true, 0, 25000000, false, 500000, 0, 0, 25, "All", 4, "Tukkun", "???", "Instant Kill", 20, "Damage", 50, "", 0, "Attack: Poison", 9001, 10, 7, "Buff: Invincibility", 6, 0, 20, "Heal", 100, 9001, 5);
    addArenaEnemy(6000, 4, 660000, 60000000, 60000, 60000, 660000000, 60000, 30000, 30000, "Devil Face", "Dark", true, 0, 50000000, false, 1000000, 60, 6000000, 50, "All", 16, "Axecutioner64", "Smiley Island", "Reward", 20, "Negate Effect", 20, "EXP", 20, "Attack: Knockback", 450, 6, 12, "Heal", 60, 1800, 22, "Buff: Enrage", 20, 0, 90);
    addArenaEnemy(4000, 4, 200000, 27000, 30000, 30000, 100000000, 25000, 2500, 10000, "Doom Dummy", "All", true, 0, 0, false, 200000, 0, 0, 50, "Doom", 3, "ChioreanTudor", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 17, "Heal", 60, 1800, 22, "Buff: Elemental Boost", 20, 0, 90);
    addArenaEnemy(4200, 1.5, 250000, 32000, 30000, 30000, 120000000, 26000, 2600, 11000, "Doom Snail", "All", true, 0, 0, false, 250000, 0, 0, 25, "Doom", 3, "Tukkun", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 22, "Heal", 60, 1800, 27, "Buff: Elemental Boost", 20, 0, 90);
    addArenaEnemy(4400, 5, 250000, 38000, 30000, 30000, 150000000, 27000, 2700, 12000, "Doom Rabbit", "All", true, 0, 0, false, 300000, 0, 0, 100, "Doom", 4, "Tukkun", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 15, "Heal", 60, 1800, 20, "Buff: Elemental Boost", 20, 0, 90);
    addArenaEnemy(4600, 4, 300000, 45000, 30000, 30000, 180000000, 28000, 2800, 13000, "Doom BlobBB", "All", true, 0, 0, false, 300000, 0, 0, 50, "Doom", 4, "dragonewyn", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 17, "Heal", 60, 1800, 22, "Buff: Elemental Boost", 20, 0, 90);
    addArenaEnemy(4800, 2, 400000, 70000, 30000, 30000, 220000000, 29000, 2900, 14000, "Doom Treeman", "All", true, 0, 0, false, 0, 0, 0, 0, "Doom", 5, "Tukkun", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 21, "Heal", 60, 1800, 26, "Buff: Elemental Boost", 20, 0, 90);
    addArenaEnemy(5000, 3.5, 450000, 80000, 30000, 30000, 270000000, 30000, 3000, 15000, "Doom Mushroom", "All", true, 0, 0, false, 400000, 0, 0, 0, "Doom", 5, "Guille", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 18, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(5300, 4.5, 350000, 64000, 30000, 30000, 330000000, 32000, 3200, 16000, "Doom Feonix", "All", true, 0, 0, false, 450000, 0, 0, 50, "Doom", 6, "Tukkun", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 16, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(5600, 5, 400000, 75000, 30000, 30000, 400000000, 34000, 3400, 17000, "Doom Rat", "All", true, 0, 0, false, 450000, 0, 0, 25, "Doom", 6, "Tukkun", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 900, 0, 15, "Buff: Elemental Boost", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(5900, 2, 500000, 87000, 30000, 30000, 500000000, 36000, 3600, 18000, "Doom Giant", "All", true, 0, 0, false, 500000, 0, 0, 75, "Doom", 7, "Tukkun", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Regular", 1100, 0, 21, "Heal", 70, 2200, 26, "Buff: Elemental Boost", 30, 0, 90);
    addArenaEnemy(6200, 5, 500000, 110000, 30000, 30000, 600000000, 38000, 3800, 19000, "Doomsaurus", "All", true, 0, 0, false, 550000, 20, 700000, 75, "Doom", 7, "meshwire", "Tower of DOOOOOOM", "Reward", 20, "Boss Damage", 20, "Damage", 20, "Attack: Knockback", 550, 7, 10, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(6500, 4.5, 550000, 120000, 30000, 30000, 750000000, 40000, 4000, 20000, "Doomsurfer", "All", true, 0, 0, false, 600000, 0, 0, 75, "Doom", 8, "SumYungGai", "Tower of DOOOOOOM", "Reward", 25, "Boss Damage", 25, "Damage", 25, "Attack: Regular", 1100, 0, 16, "Heal", 70, 2200, 21, "Buff: Elemental Boost", 30, 0, 90);
    addArenaEnemy(6900, 4, 650000, 140000, 30000, 30000, 900000000, 45000, 4500, 21000, "Doom Ghost", "All", true, 0, 0, true, 0, 0, 0, 50, "Doom", 8, "Darkranboria", "Tower of DOOOOOOM", "Reward", 25, "Boss Damage", 25, "Damage", 25, "Attack: Regular", 1100, 0, 17, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7300, 4, 700000, 160000, 30000, 30000, 1100000000, 50000, 5000, 22000, "Doom Wizard", "All", true, 0, 0, false, 750000, 0, 0, 0, "Doom", 9, "Randomthought31", "Tower of DOOOOOOM", "Reward", 25, "Boss Damage", 25, "Damage", 25, "Attack: Regular", 1100, 0, 17, "Heal", 70, 2200, 22, "Buff: Elemental Boost", 30, 0, 90);
    addArenaEnemy(7700, 4, 900000, 190000, 30000, 30000, 1300000000, 55000, 5500, 23000, "Doom Triangle", "All", true, 0, 300000, false, 950000, 40, 6000000, 75, "Doom", 9, "Tukkun", "Tower of DOOOOOOM", "Reward", 25, "Boss Damage", 25, "Damage", 25, "Attack: Knockback", 675, 7, 12, "Heal", 70, 2700, 22, "Buff: Elemental Boost", 30, 0, 90);
    addArenaEnemy(8100, 5, 1000000, 240000, 30000, 30000, 1600000000, 90000, 6000, 24000, "Doom Spirit", "All", true, 0, 0, false, 1000000, 0, 0, 50, "Doom", 10, "Tukkun", "Tower of DOOOOOOM", "Reward", 25, "Boss Damage", 25, "Damage", 25, "Attack: Regular", 1350, 0, 15, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(8500, 0, 1, 300000, 30000, 30000, 2000000000, 125000, 6500, 25000, "Doom Stone", "All", true, 0, 0, false, 1050000, 0, 0, 50, "Doom", 10, "Tukkun", "Tower of DOOOOOOM", "Reward", 25, "Boss Damage", 25, "Damage", 25, "Attack: Regular", 1350, 0, 25, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(9000, 4, 1337000, 500000, 68000, 73000, 13370000000, 2000000, 100000, 500000, "Boss of DOOOOOOM", "All", true, 0, 600000, false, 1337000, 0, 0, 75, "Doom", 15, "Tukkun", "Tower of DOOOOOOM", "Reward", 30, "Boss Damage", 30, "Damage", 30, "Attack: Regular", 9000, 0, 17, "Heal", 80, 3700, 22, "Buff: Invincibility", 5, 0, 20);
    addArenaEnemy(9000, 0, 10, -999999999, 9900, 0, 700, 500000, 250000, 1000000, "Doom Treasure", "All", true, 0, 0, false, 10, 0, 0, 0, "Doom", 8, "Tukkun", "Tower of DOOOOOOM", "Reward", 30, "Drop Rate", 30, "Damage", 30, "Attack: Ignore Defense", 1, 0, 11, "Buff: Invincibility", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(5500, 3, 300000, 1450000, 25300, 25300, 680000000, 9000, 900, 7000, "Magikrap", "Water", false, 352, 0, false, 465000, 0, 0, 0, "Mana Drain", 13, "ChaosII7", "Pokayman City", "Reward", 20, "MaxMP %", 80, "EXP", 20, "MP Recovery", 15, 0, 5, "Attack: Regular", 1350, 0, 29, "", 0, 0, 0);
    addArenaEnemy(5800, 3, 295000, 1450000, 24100, 24100, 960000000, 17000, 1700, 7000, "Garydos", "Water", false, 0, 0, false, 460000, 0, 0, 100, "Mana Drain", 16, "ChaosII7", "Pokayman City", "Reward", 30, "MaxMP %", 120, "EXP", 30, "MP Recovery", 15, 0, 5, "Attack: Regular", 1350, 0, 29, "Buff: Enrage", 30, 0, 90);
    addArenaEnemy(5600, 3, 310000, 1350000, 25800, 25800, 925000000, 9500, 950, 7000, "Starwe", "Water", false, 354, 20000000, false, 370000, 0, 0, 0, "Health Drain", 13, "ChaosII7", "Pokayman City", "Reward", 20, "MaxHP %", 80, "EXP", 20, "HP Recovery", 15, 0, 5, "Attack: Regular", 1350, 0, 29, "Heal", 70, 2700, 34);
    addArenaEnemy(5900, 4, 290000, 1350000, 24500, 24500, 1300000000, 17500, 1750, 7000, "Starthem", "Water", false, 0, 30000000, false, 345000, 0, 0, 100, "Health Drain", 16, "ChaosII7", "Pokayman City", "Reward", 30, "MaxHP %", 120, "EXP", 30, "HP Recovery", 15, 0, 5, "Attack: Regular", 1350, 0, 27, "Heal", 70, 2700, 32);
    addArenaEnemy(6500, 6, 500000, 1850000, 100000, 43100, 3000000000, 35000, 3000, 7000, "Pokay Ball", "All", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Pokayman City", "Instant Kill", 20, "Hit Chance", 20, "Hit Chance", 20, "Attack: Regular", 1350, 0, 13, "Buff: Power", 30, 0, 70, "", 0, 0, 0);
    addArenaEnemy(7000, 6, 800000, 3050000, 1000000, 68000, 10000000000, 150000, 30000, 35000, "Castor Ball", "All", true, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Pokayman City", "Instant Kill", 30, "Hit Chance", 30, "Hit Chance", 45, "Attack: Regular", 1350, 0, 13, "Buff: Power", 30, 0, 70, "", 0, 0, 0);
    addArenaEnemy(5700, 4, 535000, 2300000, 27600, 27600, 1180000000, 10000, 1000, 8000, "Peekatchu", "Thunder", false, 358, 0, false, 495000, 0, 0, 0, "Stun", 7, "ChaosII7", "Not Copyright Infringement", "Reward", 20, "Attack %", 40, "EXP", 20, "Attack: Stun", 1600, 3, 32, "Attack: Regular", 1600, 0, 27, "", 0, 0, 0);
    addArenaEnemy(6000, 4, 525000, 2300000, 26100, 26100, 1650000000, 18000, 1800, 8000, "Ryechew", "Thunder", false, 0, 0, false, 485000, 0, 0, 50, "Stun", 9, "ChaosII7", "Not Copyright Infringement", "Reward", 30, "Attack %", 60, "EXP", 30, "Attack: Stun", 1600, 3, 32, "Attack: Regular", 1600, 0, 27, "Buff: Enrage", 40, 0, 90);
    addArenaEnemy(5800, 4, 470000, 3100000, 28100, 28100, 1230000000, 10500, 1050, 8000, "Voltode", "Thunder", false, 360, 0, false, 0, 3, 705000, 0, "Self-Destruct", 2, "ChaosII7", "Not Copyright Infringement", "Reward", 20, "Defense %", 40, "EXP", 20, "Attack: Knockback", 800, 8, 12, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(6100, 4, 510000, 3400000, 29500, 29500, 1710000000, 18500, 1850, 8000, "Electrorb", "Thunder", false, 0, 0, false, 0, 3, 765000, 0, "Self-Destruct", 2, "ChaosII7", "Not Copyright Infringement", "Reward", 30, "Defense %", 60, "EXP", 30, "Attack: Knockback", 800, 8, 12, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(5900, 3, 555000, 2450000, 28500, 28500, 1270000000, 11000, 1100, 8000, "Sanke", "Earth", false, 362, 0, false, 665000, 0, 0, 0, "Poison", 13, "ChaosII7", "Not Copyright Infringement", "Reward", 20, "Attack Speed %", 40, "EXP", 20, "Attack: Poison", 800, 8, 24, "Attack: Regular", 1600, 0, 29, "", 0, 0, 0);
    addArenaEnemy(6200, 3, 540000, 2400000, 27000, 27000, 1770000000, 19000, 1900, 8000, "Kroba", "Earth", false, 0, 0, false, 650000, 0, 0, 50, "Poison", 16, "ChaosII7", "Not Copyright Infringement", "Reward", 30, "Attack Speed %", 60, "EXP", 30, "Attack: Poison", 800, 8, 24, "Attack: Regular", 1600, 0, 29, "Buff: Enrage", 40, 0, 90);
    addArenaEnemy(6000, 3, 475000, 2550000, 29000, 37700, 1320000000, 11500, 1150, 8000, "Duglett", "Earth", false, 364, 0, false, 570000, 0, 0, 0, "Blind", 13, "ChaosII7", "Not Copyright Infringement", "Reward", 20, "Evasion %", 40, "EXP", 20, "Attack: Blind", 800, 8, 24, "Attack: Regular", 1600, 0, 29, "", 0, 0, 0);
    addArenaEnemy(6300, 3, 460000, 2500000, 27400, 35700, 1830000000, 19500, 1950, 8000, "Digtrio", "Earth", false, 0, 0, false, 555000, 0, 0, 50, "Blind", 16, "ChaosII7", "Not Copyright Infringement", "Reward", 30, "Evasion %", 60, "EXP", 30, "Attack: Blind", 800, 8, 24, "Attack: Regular", 1600, 0, 29, "Buff: Enrage", 40, 0, 90);
    addArenaEnemy(6100, 2, 510000, 2600000, 38400, 29500, 1370000000, 12000, 1200, 8000, "Magnetmight", "Thunder", false, 366, 0, false, 615000, 0, 0, 0, "Weaken", 13, "ChaosII7", "Not Copyright Infringement", "Spawn Rate", 10, "Accuracy %", 40, "EXP", 20, "Attack: Weaken", 800, 8, 26, "Attack: Regular", 1600, 0, 31, "", 0, 0, 0);
    addArenaEnemy(6400, 2, 500000, 2550000, 36300, 27900, 1890000000, 20000, 2000, 8000, "Magnettonne", "Thunder", false, 0, 0, false, 600000, 0, 0, 50, "Weaken", 16, "ChaosII7", "Not Copyright Infringement", "Spawn Rate", 15, "Accuracy %", 60, "EXP", 30, "Attack: Weaken", 800, 8, 26, "Attack: Regular", 1600, 0, 31, "Buff: Enrage", 40, 0, 90);
    addArenaEnemy(7000, 3, 1100000, 4050000, 50000, 50000, 9000000000, 150000, 30000, 40000, "Rawrquaza", "Fire", true, 0, 1000000000, false, 1300000, 0, 0, 50, "All", 9, "ChaosII7", "Not Copyright Infringement", "Negate Effect", 30, "Boss Damage", 30, "EXP", 45, "Attack: Power Down", 220, 4, 11, "Heal", 80, 3200, 24, "Buff: Enrage", 40, 0, 90);
    addArenaEnemy(9000, 4, 3000000, 45000000, 50000, 50000, 2000000000, 100000, 5000, 20000, "Mr. Vitreous", "Fire", false, 0, 0, false, 3000000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Defense %", 50, "EXP", 50, "Attack: Regular", 600, 0, 17, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 3, 3000000, 75000000, 60000, 60000, 1400000000, 100000, 5000, 20000, "Accursed Cranium", "Dark", false, 0, 0, true, 3000000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Resist", 25, "EXP", 50, "Attack: Regular", 600, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 3, 2500000, 32500000, 60000, 40000, 2000000000, 100000, 5000, 20000, "Methane Cloud", "Wind", false, 0, 0, false, 3500000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Defense %", 50, "EXP", 50, "Attack: Regular", 600, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 3, 2500000, 32500000, 50000, 50000, 1600000000, 100000, 5000, 20000, "Ring of Angry Fire", "Fire", false, 0, 0, false, 3000000, 45, 1, 75, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Defense %", 50, "EXP", 50, "Attack: Regular", 600, 0, 19, "Buff: Enrage", 20, 0, 80, "", 0, 0, 0);
    addArenaEnemy(9000, 0, 1, 32500000, 70000, 60000, 2000000000, 100000, 5000, 20000, "Sunflower", "Earth", false, 0, 0, false, 3500000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Defense %", 50, "EXP", 50, "Attack: Regular", 600, 0, 25, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 2, 3500000, 35000000, 40000, 60000, 2400000000, 100000, 5000, 20000, "Corrupted Giant", "Dark", false, 0, 0, false, 2500000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Attack %", 50, "EXP", 50, "Attack: Regular", 600, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 3, 3000000, 25000000, 70000, 40000, 2000000000, 100000, 5000, 20000, "Corrupted Blob", "Dark", false, 375, 0, false, 3000000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Attack %", 50, "EXP", 50, "Attack: Regular", 600, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 3, 4000000, 40000000, 80000, 50000, 6600000000, 2000000, 50000, 200000, "Corrupted BlobBB", "Dark", true, 0, 0, false, 4500000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Boss Damage", 25, "EXP", 50, "Attack: Regular", 600, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 2, 4500000, 50000000, 60000, 70000, 7600000000, 2000000, 50000, 200000, "Corrupted Treeman", "Dark", true, 0, 0, false, 4000000, 45, 1, 0, "None", 0, "Kurrus", "The Corruption", "Reward", 25, "Boss Damage", 25, "EXP", 50, "Attack: Regular", 600, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(9000, 3, 1500000, 5000000, 25000, 25000, 75000000, 800000, 100000, 200000, "!!!!!", "All", true, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 40, "Drop Rate", 40, "Reward", 40, "Attack: Accuracy Down", 900, 20, 17, "Buff: Reward", 30, 0, 70, "Produce Loot: Rare Item", 0, 0, 90);
    addArenaEnemy(6500, 5, 650000, 3000000, 15000, 50000, 125000000, 20000, 2500, 10000, "Small Air Elemental", "Wind", false, 379, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Evasion %", 60, "Dodge Chance", 30, "Attack: Regular", 1350, 0, 15, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7000, 5, 700000, 3500000, 15000, 50000, 200000000, 40000, 5000, 20000, "Large Air Elemental", "Wind", false, 0, 0, false, 710000, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Evasion %", 60, "Dodge Chance", 30, "Attack: Regular", 1350, 0, 15, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(6500, 2, 700000, 7800000, 30000, 15000, 150000000, 20000, 2500, 10000, "Small Earth Elemental", "Earth", false, 381, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Defense %", 60, "Resist", 30, "Attack: Regular", 1350, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7000, 2, 750000, 8800000, 30000, 15000, 250000000, 40000, 5000, 20000, "Large Earth Elemental", "Earth", false, 0, 0, false, 835000, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Defense %", 60, "Resist", 30, "Attack: Regular", 1350, 0, 21, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(6500, 3, 700000, 3500000, 30000, 15000, 125000000, 20000, 2500, 10000, "Small Water Elemental", "Water", false, 383, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Accuracy %", 60, "Hit Chance", 30, "Attack: Regular", 1350, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7000, 3, 750000, 4000000, 30000, 15000, 200000000, 40000, 5000, 20000, "Large Water Elemental", "Water", false, 0, 0, false, 795000, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Accuracy %", 60, "Hit Chance", 30, "Attack: Regular", 1350, 0, 19, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(6500, 4, 1000000, 2000000, 15000, 15000, 100000000, 20000, 2500, 10000, "Small Fire Elemental", "Fire", false, 385, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack %", 60, "Damage", 30, "Attack: Regular", 1350, 0, 17, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7000, 4, 1050000, 2500000, 15000, 15000, 175000000, 40000, 5000, 20000, "Large Fire Elemental", "Fire", false, 0, 0, false, 975000, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack %", 60, "Damage", 30, "Attack: Regular", 1350, 0, 17, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(6250, 2, 600000, 3250000, 20000, 20000, 75000000, 20000, 2500, 10000, "Lizard Slave", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Health Drain", 7, "ChaosII7", "Secret Dungeon", "Reward", 30, "Defense %", 60, "MaxHP %", 120, "Attack: Regular", 1350, 0, 21, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(6750, 2.5, 700000, 3900000, 20000, 20000, 150000000, 30000, 3750, 15000, "Lizard Hulk", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Mana Drain", 7, "ChaosII7", "Secret Dungeon", "Reward", 30, "Defense %", 60, "MaxHP %", 120, "Attack: Regular", 1350, 0, 20, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7250, 3, 900000, 3000000, 20000, 20000, 250000000, 60000, 7500, 30000, "Elite Lizard Hulk", "Light", false, 0, 0, false, 0, 0, 0, 0, "Mana Drain", 7, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack %", 60, "MaxHP %", 120, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(6250, 3, 550000, 3250000, 20000, 20000, 65000000, 20000, 2500, 10000, "Lizard Witch-Doctor", "Wind", false, 0, 0, false, 825000, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Defense %", 60, "MaxMP %", 120, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(6750, 3.5, 625000, 3900000, 20000, 20000, 130000000, 30000, 3750, 15000, "Lizard Shadow Mage", "Dark", false, 0, 0, false, 875000, 0, 0, 0, "Weaken", 7, "ChaosII7", "Secret Dungeon", "Reward", 30, "Defense %", 60, "MaxMP %", 120, "Attack: Regular", 1350, 0, 18, "Buff: Elemental Boost", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7250, 4, 850000, 3000000, 20000, 20000, 225000000, 60000, 7500, 30000, "Lizard Berserker", "Dark", false, 0, 0, false, 0, 0, 0, 75, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack %", 60, "MaxMP %", 120, "Attack: Regular", 1350, 0, 17, "Buff: Enrage", 30, 0, 80, "", 0, 0, 0);
    addArenaEnemy(7000, 3, 1200000, 4000000, 60000, 25000, 175000000, 40000, 5000, 20000, "Owlbear", "Wind", false, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack %", 60, "Damage", 30, "Attack: Regular", 1350, 0, 19, "Attack: Stun", 1350, 3, 44, "Attack: Evasion Down", 300, 4, 7);
    addArenaEnemy(7500, 3.5, 1100000, 4000000, 60000, 35000, 450000000, 120000, 15000, 60000, "Purple Worm", "Earth", false, 0, 0, false, 1000000, 0, 0, 50, "Potion Block", 7, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack %", 60, "Damage", 30, "Attack: Regular", 1350, 0, 18, "Buff: Enrage", 30, 0, 80, "Attack: Silence", 400, 10, 7);
    addArenaEnemy(6750, 5, 750000, 3500000, 60000, 22500, 100000000, 20000, 2500, 10000, "Rust Monster", "Thunder", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 12, "ChaosII7", "Secret Dungeon", "Reward", 30, "Negate Effect", 30, "Ignore Defense", 30, "Attack: Weaken", 675, 7, 20, "Attack: Regular", 1350, 0, 25, "Attack: Power Down", 200, 2, 7);
    addArenaEnemy(7250, 2, 850000, 5000000, 60000, 22500, 200000000, 40000, 5000, 20000, "Roper", "Earth", false, 0, 0, false, 1050000, 0, 0, 0, "Stun", 8, "ChaosII7", "Secret Dungeon", "Reward", 30, "Negate Effect", 30, "Ignore Defense", 30, "Attack: Stun", 1350, 3, 36, "Attack: Regular", 1350, 0, 31, "Attack: Defense Down", 300, 3, 7);
    addArenaEnemy(7750, 5.5, 1000000, 10000000, 30000, 32500, 500000000, 120000, 15000, 60000, "Mimic", "Ice", false, 0, 0, false, 800000, 0, 0, 0, "Stun", 4, "ChaosII7", "Secret Dungeon", "Reward", 30, "Drop Rate", 30, "Coin", 60, "Attack: Stun", 1350, 3, 29, "Attack: Knockback", 675, 7, 19, "Produce Loot: Pixel", 8000, 0, 20);
    addArenaEnemy(6750, 3.5, 700000, 3500000, 50000, 55000, 150000000, 30000, 3750, 15000, "Flame Lich", "Fire", false, 0, 0, false, 850000, 0, 0, 0, "Poison", 16, "ChaosII7", "Secret Dungeon", "Reward", 30, "Instant Kill", 15, "Negate Effect", 30, "Attack: Poison", 675, 7, 23, "Attack: Regular", 1350, 0, 28, "Attack: Power Down", 200, 2, 7);
    addArenaEnemy(6750, 3.5, 700000, 4000000, 50000, 55000, 150000000, 30000, 3750, 15000, "Frost Lich", "Ice", false, 0, 0, false, 850000, 0, 0, 0, "Slow", 16, "ChaosII7", "Secret Dungeon", "Reward", 30, "Instant Kill", 15, "Negate Effect", 30, "Attack: Stun", 1350, 3, 33, "Attack: Regular", 1350, 0, 28, "Attack: Defense Down", 200, 3, 7);
    addArenaEnemy(7250, 3.5, 800000, 5000000, 70000, 60000, 600000000, 120000, 15000, 60000, "Demi-Lich", "Dark", false, 0, 0, false, 1000000, 0, 0, 0, "Blind", 24, "ChaosII7", "Secret Dungeon", "Reward", 30, "Instant Kill", 15, "Negate Effect", 30, "Attack: Blind", 675, 7, 23, "Attack: Regular", 1350, 0, 28, "Attack: Silence", 300, 30, 7);
    addArenaEnemy(6750, 3.5, 750000, 2500000, 55000, 20000, 150000000, 20000, 2500, 10000, "Inky Pool", "Water", false, 401, 0, false, 700000, 0, 0, 0, "Poison", 15, "ChaosII7", "Secret Dungeon", "Reward", 30, "MaxHP %", 120, "Critical Damage", 120, "Attack: Poison", 675, 7, 23, "Attack: Regular", 1350, 0, 28, "Attack: Stun", 1350, 3, 53);
    addArenaEnemy(7250, 3.5, 850000, 3500000, 55000, 20000, 350000000, 40000, 5000, 20000, "Black Pudding", "Water", false, 402, 0, false, 800000, 0, 0, 0, "Poison", 15, "ChaosII7", "Secret Dungeon", "Reward", 30, "MaxHP %", 120, "Critical Damage", 120, "Attack: Poison", 675, 7, 23, "Attack: Regular", 1350, 0, 28, "Attack: Stun", 1350, 3, 53);
    addArenaEnemy(7750, 3.5, 1000000, 4000000, 55000, 20000, 650000000, 60000, 7500, 30000, "Elder Pudding", "Water", false, 0, 0, false, 900000, 0, 0, 0, "Poison", 15, "ChaosII7", "Secret Dungeon", "Reward", 30, "MaxHP %", 120, "Critical Damage", 120, "Attack: Poison", 675, 7, 23, "Attack: Regular", 1350, 0, 28, "Attack: Stun", 1350, 3, 53);
    addArenaEnemy(8000, 3.5, 1100000, 6000000, 55000, 40000, 1000000000, 120000, 15000, 60000, "Gelatinous Cube", "Water", false, 0, 0, false, 1000000, 0, 0, 0, "Slow", 15, "ChaosII7", "Secret Dungeon", "Reward", 30, "MaxHP %", 120, "Critical Damage", 120, "Attack: Silence", 500, 15, 11, "Attack: Stun", 1350, 3, 43, "", 0, 0, 0);
    addArenaEnemy(7000, 3, 700000, 3000000, 42000, 20000, 250000000, 30000, 3750, 15000, "Gibbering Orb", "Earth", false, 0, 0, false, 950000, 0, 0, 0, "Weaken", 9, "ChaosII7", "Secret Dungeon", "Reward", 30, "MaxMP %", 120, "Critical Chance", 30, "Attack: Weaken", 675, 7, 24, "Attack: Regular", 1350, 0, 29, "Attack: Power Down", 700, 4, 7);
    addArenaEnemy(7500, 3, 800000, 4000000, 42000, 20000, 400000000, 50000, 6250, 25000, "Gibbering Mouther", "Earth", false, 0, 0, false, 1050000, 0, 0, 0, "Weaken", 9, "ChaosII7", "Secret Dungeon", "Reward", 30, "MaxMP %", 120, "Critical Chance", 30, "Attack: Weaken", 675, 7, 24, "Attack: Regular", 1350, 0, 29, "Attack: Power Down", 700, 4, 7);
    addArenaEnemy(7000, 3, 1000000, 4400000, 44000, 55000, 150000000, 30000, 3750, 15000, "Giant Spider", "Dark", false, 0, 0, false, 0, 0, 0, 0, "Blind", 10, "ChaosII7", "Secret Dungeon", "Reward", 30, "Mastery", 60, "Instant Kill", 15, "Attack: Blind", 675, 7, 24, "Attack: Regular", 1350, 0, 29, "Attack: Accuracy Down", 700, 7, 7);
    addArenaEnemy(7500, 5, 1100000, 2000000, 40000, 30000, 250000000, 50000, 6250, 25000, "Reapling", "Dark", false, 0, 0, false, 0, 0, 0, 0, "Attack UP", 20, "ChaosII7", "Secret Dungeon", "Reward", 30, "Instant Kill", 15, "Instant Kill", 15, "Attack: Regular", 1350, 0, 15, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7000, 3, 800000, 9000000, 30000, 40000, 125000000, 30000, 3750, 15000, "Ghostly Adventurer", "All", false, 0, 400000, true, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Resist", 30, "Resist", 30, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "HP Recovery", 15, 0, 15);
    addArenaEnemy(7500, 3, 900000, 16000000, 30000, 50000, 225000000, 50000, 6250, 25000, "Invisible", "All", false, 0, 0, true, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 30, "Resist", 30, "Resist", 30, "Attack: Regular", 1350, 0, 19, "Buff: Invincibility", 15, 0, 80, "", 0, 0, 0);
    addArenaEnemy(6750, 3.5, 650000, 3500000, 35000, 68300, 150000000, 30000, 3750, 15000, "Floating Angel", "Light", false, 0, 0, false, 0, 0, 0, 0, "Potion Block", 5, "ChaosII7", "Secret Dungeon", "Reward", 30, "Dodge Chance", 30, "Evasion %", 60, "Attack: Regular", 1350, 0, 18, "Buff Extension", 2, 0, 11, "", 0, 0, 0);
    addArenaEnemy(7250, 3.5, 700000, 4000000, 35000, 68300, 225000000, 50000, 6250, 25000, "Floating Devil", "Fire", false, 0, 0, false, 0, 0, 0, 0, "Potion Block", 5, "ChaosII7", "Secret Dungeon", "Reward", 30, "Dodge Chance", 30, "Evasion %", 60, "Attack: Regular", 1350, 0, 18, "Buff Extension", 2, 0, 11, "", 0, 0, 0);
    addArenaEnemy(7750, 2, 1050000, 10000000, 35000, 45000, 750000000, 160000, 20000, 80000, "Beholder", "All", false, 0, 0, false, 850000, 0, 0, 50, "Potion Block", 5, "ChaosII7", "Secret Dungeon", "Reward", 30, "Equipment Attack", 240, "Attack %", 60, "Attack: Regular", 1350, 0, 21, "Buff: Power", 30, 0, 70, "", 0, 0, 0);
    addArenaEnemy(6750, 4.5, 800000, 3000000, 35000, 35000, 100000000, 30000, 3750, 15000, "Hellchihuahua", "Dark", false, 414, 0, false, 0, 0, 0, 0, "Poison", 4, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack Speed %", 60, "Attack Speed", 6, "Attack: Poison", 675, 7, 21, "Attack: Regular", 1350, 0, 26, "", 0, 0, 0);
    addArenaEnemy(7250, 5.5, 850000, 4000000, 35000, 35000, 150000000, 50000, 6250, 25000, "Hellhound", "Dark", false, 415, 0, false, 0, 0, 0, 0, "Poison", 6, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack Speed %", 60, "Attack Speed", 6, "Attack: Poison", 675, 7, 19, "Attack: Regular", 1350, 0, 24, "", 0, 0, 0);
    addArenaEnemy(7750, 5, 900000, 6000000, 35000, 40000, 500000000, 160000, 20000, 80000, "Cerberus", "Dark", false, 0, 0, false, 0, 0, 0, 75, "Poison", 8, "ChaosII7", "Secret Dungeon", "Reward", 30, "Attack Speed %", 60, "Attack Speed", 6, "Attack: Poison", 675, 7, 20, "Attack: Regular", 1350, 0, 25, "Buff: Enrage", 30, 0, 90);
    addArenaEnemy(7500, 2.5, 1600000, 25000000, 25000, 40000, 1300000000, 400000, 40000, 160000, "Mummy", "Dark", true, 417, 0, true, 1, 0, 0, 0, "Zombify", 10, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Resist", 40, "Attack: Regular", 1350, 0, 20, "Buff: Elemental Boost", 30, 0, 80, "Produce Loot: Coin", 12000, 0, 20);
    addArenaEnemy(8000, 3, 1750000, 30000000, 30000, 50000, 3700000000, 600000, 60000, 240000, "Pharaoh", "Dark", true, 0, 0, true, 1, 0, 0, 0, "Zombify", 10, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Resist", 40, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "Produce Loot: Coin", 19000, 0, 30);
    addArenaEnemy(7750, 2, 900000, 12000000, 25000, 35000, 1000000000, 175000, 17500, 70000, "Visage of Sorrow", "Ice", true, 419, 0, false, 900000, 0, 0, 50, "Defense UP", 12, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Defense %", 80, "Attack: Regular", 1350, 0, 21, "Buff: Enrage", 30, 0, 80, "Attack: Defense Down", 700, 10, 20);
    addArenaEnemy(8000, 4, 950000, 9000000, 25000, 35000, 800000000, 225000, 22500, 90000, "Visage of Rage", "Fire", true, 420, 0, false, 950000, 0, 0, 50, "Attack UP", 12, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Attack %", 80, "Attack: Regular", 1350, 0, 17, "Buff: Enrage", 30, 0, 80, "Attack: Power Down", 700, 7, 20);
    addArenaEnemy(8250, 3, 1000000, 10000000, 25000, 45500, 1200000000, 275000, 27500, 110000, "Visage of Joy", "Thunder", true, 421, 0, false, 1000000, 0, 0, 50, "Evasion UP", 12, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Evasion %", 80, "Attack: Regular", 1350, 0, 19, "Buff: Enrage", 30, 0, 80, "Attack: Evasion Down", 900, 13, 20);
    addArenaEnemy(8500, 3, 1050000, 10000000, 25000, 35000, 600000000, 325000, 32500, 130000, "Visage of Apathy", "All", true, 0, 0, false, 1050000, 0, 0, 50, "Stat UP", 9, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Negate Effect", 40, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "Attack: Silence", 900, 50, 20);
    addArenaEnemy(8000, 3, 1200000, 11000000, 35000, 50000, 2400000000, 200000, 20000, 80000, "Chimera", "Fire", true, 423, 0, false, 1300000, 0, 0, 0, "Potion Block", 6, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Damage", 40, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "HP Recovery", 15, 0, 15);
    addArenaEnemy(8250, 3, 1100000, 11000000, 35000, 45000, 2000000000, 300000, 30000, 120000, "Chimera", "Fire", true, 424, 0, false, 1200000, 0, 0, 0, "Potion Block", 6, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Damage", 40, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "HP Recovery", 15, 0, 15);
    addArenaEnemy(8500, 3, 900000, 11000000, 35000, 40000, 1600000000, 500000, 50000, 200000, "Chimera", "Fire", true, 0, 0, false, 1000000, 0, 0, 25, "Potion Block", 6, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Damage", 40, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "HP Recovery", 15, 0, 15);
    addArenaEnemy(7500, 3, 1100000, 18000000, 35000, 50000, 300000000, 100000, 10000, 40000, "Blooooob", "All", true, 426, 0, false, 0, 45, 1700000, 0, "Defense UP", 2, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "MaxMP %", 80, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "MP Recovery", 15, 0, 15);
    addArenaEnemy(7750, 3, 1200000, 17000000, 35000, 45000, 400000000, 150000, 15000, 60000, "Bloooob", "All", true, 427, 0, false, 0, 45, 1800000, 0, "Defense UP", 4, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "MaxMP %", 80, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "MP Recovery", 15, 0, 15);
    addArenaEnemy(8000, 3, 1300000, 16000000, 35000, 45000, 500000000, 200000, 20000, 80000, "Blooob", "All", true, 428, 0, false, 0, 45, 1900000, 0, "Defense UP", 6, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "MaxMP %", 80, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "MP Recovery", 15, 0, 15);
    addArenaEnemy(8250, 3, 1400000, 15000000, 35000, 40000, 600000000, 250000, 25000, 100000, "Bloob", "All", true, 429, 0, false, 0, 45, 2000000, 0, "Defense UP", 8, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "MaxMP %", 80, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "MP Recovery", 15, 0, 15);
    addArenaEnemy(8500, 3, 1500000, 12000000, 35000, 40000, 700000000, 300000, 30000, 120000, "Blob?", "All", true, 0, 0, false, 1100000, 0, 0, 0, "Defense UP", 10, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "MaxMP %", 80, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "MP Recovery", 15, 0, 15);
    addArenaEnemy(9000, 3, 1600000, 8000000, 40000, 40000, 2400000000, 1200000, 60000, 300000, "?????", "All", true, 0, 0, false, 0, 0, 0, 0, "None", 0, "ChaosII7", "Secret Dungeon", "Reward", 40, "Boss Damage", 40, "Drop Rate", 40, "Attack: Accuracy Down", 300, 20, 17, "Buff: Elemental Boost", 30, 0, 80, "Produce Loot: Rare Item", 0, 0, 90);
    addArenaEnemy(9000, 3, 1800000, 60000000, 60000, 45000, 6666666666, 1200000, 60000, 300000, "Chaos", "All", true, 432, 0, false, 1600000, 0, 0, 0, "Chaos", 2, "ChaosII7", "Final Chamber", "Reward", 50, "Boss Damage", 50, "Ignore Defense", 50, "Attack: Ignore Defense", 1000, 0, 11, "Buff: Elemental Boost", 30, 0, 80, "Produce Loot: Stat", 0, 0, 10);
    addArenaEnemy(9001, 3, 1800000, 60000000, 60000, 45000, 26666666666, 3000000, 150000, 750000, "CHAOS", "All", true, 0, 266666666, false, 1600000, 0, 0, 100, "Chaos", 8, "ChaosII7", "Final Chamber", "Reward", 60, "Boss Damage", 60, "Ignore Defense", 60, "Attack: Ignore Defense", 1500, 0, 11, "Buff: Elemental Boost", 30, 0, 80, "Produce Loot: Rare Item", 0, 0, 60);
    addArenaEnemy(7000, 2.5, 600000, 1000000, 25000, 30000, 10000000, 6666, 666, 6666, "Elite Mummy", "Dark", false, 434, 0, true, 0, 0, 0, 0, "Zombify", 6, "ChaosII7", "Spooky Crypt", "Reward", 40, "Non-Boss Damage", 40, "", 0, "Attack: Regular", 1350, 0, 20, "Buff: Elemental Boost", 30, 0, 80, "Produce Loot: Stat", 0, 0, 20);
    addArenaEnemy(7000, 3, 600000, 1000000, 25000, 30000, 10000000, 6666, 666, 6666, "Elite Pharaoh", "Dark", false, 433, 0, true, 0, 0, 0, 0, "Zombify", 6, "ChaosII7", "Spooky Crypt", "Reward", 40, "Non-Boss Damage", 40, "", 0, "Attack: Regular", 1350, 0, 19, "Buff: Elemental Boost", 30, 0, 80, "Produce Loot: Stat", 0, 0, 20);
    addArenaEnemy(8400, 0, 1, -999999999, 100000, 1, 1000000, 1, 1, 1, "Secret Crystal", "All", true, 0, 0, false, 1, 120, 10000000, 0, "Stun", 4, "ChaosII7", "???", "Pixel", 50, "Drop Rate", 50, "", 0, "Attack: Stun", 105, 2, 40, "Attack: Knockback", 50, 5, 30, "Buff: Reward", 10, 0, 80);
    addArenaEnemy(9000, 3, 12345, 12345, 12345, 12345, 123450000, 1600000, 200000, 400000, "shinki, the bridge dweller", "All", true, 0, 0, false, 0, 0, 0, 0, "Self-Destruct", 1, "Tukkun", "Secret Dungeon", "Drop Rate", 40, "Damage", 40, "Spawn Rate", 20, "Attack: Defense Down", 900, 30, 17, "Produce Loot: Coin", 10000, 0, 30, "Produce Loot: Rare Item", 0, 0, 45);
    addArenaEnemy(6000, 4.5, 800000, 3000000, 29000, 21000, 500000000, 55000, 1750, 17500, "THE MEGABOSS\'s Revenge", "All", true, 0, 0, false, 0, 0, 0, 0, "Chaos", 7, "???", "???", "Reward", 40, "Boss Damage", 40, "", 0, "Attack: Regular", 1350, 0, 16, "Heal", 70, 2700, 21, "Buff: Elemental Boost", 30, 0, 90);
    addArenaEnemy(6500, 4, 1000000, 4000000, 455000, 325000, 500000000, 25000, 2500, 10000, "Monster", "All", false, 0, 0, false, 5000000, 0, 0, 50, "Throw Soap", 16, "SumYungGai", "Censor Ship", "Accuracy %", 120, "Evasion %", 120, "Negate Effect", 60, "Attack: Blind", 800, 8, 22, "Attack: Regular", 1600, 0, 27, "Buff: Invincibility", 20, 0, 90);
    addArenaEnemy(7000, 4, 1500000, 14000000, 660000, 450000, 6000000000, 1000000, 100000, 200000, "Censor Sheep", "All", true, 0, 0, false, 8000000, 0, 0, 100, "Throw Soap", 40, "Arrrl", "Censor Ship", "Hit Chance", 60, "Dodge Chance", 60, "Negate Effect", 60, "Attack: Blind", 800, 8, 22, "Attack: Silence", 400, 50, 11, "Buff: Invincibility", 20, 0, 90);
    addArenaEnemy(9000, 0, 1, 50000000, 275000, 50000, 35000000000, 20000000, 500000, 2500000, "Corrupted Giant Treeman", "All", true, 0, 0, false, 2000000, 0, 0, 0, "Accuracy UP", 5, "Kurrus", "The Corruption", "Reward", 50, "Spawn Rate", 30, "EXP", 25, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1000, 2.5, 1, -999999999, 1000, 1000, 5000, 5000, 5000, 5000, "Robaconollitron", "Earth", true, 0, 0, false, 1, 0, 0, 0, "Stun", 1, "toadvine", "Foodlandistan", "Reward", 20, "Reflect", 600, "Drop Rate", 20, "Buff: Enrage", 10, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1000, 2.5, 1, -999999999, 1100, 1000, 5000, 5000, 5000, 5000, "Robroccolaconator", "Earth", true, 0, 0, false, 1, 0, 0, 0, "Stun", 1, "toadvine", "Foodlandistan", "Reward", 20, "Critical Damage", 80, "Drop Rate", 20, "Buff: Elemental Boost", 10, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7500, 0, 2800000, 20000000, 99000, 44000, 2500000000, 10000, 10000, 10000, "Abandoned Mob 1", "All", true, 0, 0, true, 0, 0, 0, 0, "Zombify", 20, "Tukkun", "Abandoned Lab", "Damage", 20, "Resist", 20, "", 0, "Buff: Elemental Boost", 60, 0, 70, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7500, 3, 2800000, 20000000, 99000, 44000, 2500000000, 10000, 10000, 10000, "Abandoned Mob 2", "All", true, 0, 0, false, 0, 0, 0, 0, "Stat UP", 20, "Tukkun", "Abandoned Lab", "Instant Kill", 10, "Boss Damage", 40, "", 0, "Attack: Ignore Defense", 500, 0, 20, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(7500, 0, 2800000, 80000000, 99000, 44000, 2500000000, 10000, 10000, 10000, "Abandoned Mob 3", "All", true, 0, 0, false, 0, 0, 0, 0, "Chaos", 20, "Tukkun", "Abandoned Lab", "Magic Resist", 20, "Negate Effect", 20, "", 0, "Buff: Invincibility", 30, 0, 70, "Spirit Recovery", 5, 0, 10, "", 0, 0, 0);
    addArenaEnemy(7500, 0, 2800000, 20000000, 99000, 44000, 2500000000, 10000, 10000, 10000, "Abandoned Mob 4", "All", true, 0, 0, false, 0, 0, 0, 0, "Doom", 10, "Tukkun", "Abandoned Lab", "Equipment Attack", 40, "Ignore Defense", 8, "", 0, "Attack: Defense Down", 100, 5, 1, "Buff: Master", 60, 0, 70, "", 0, 0, 0);
    addArenaEnemy(7500, 0, 2800000, 20000000, 99000, 44000, 3000000000, 10000, 10000, 10000, "Abandoned Mob 5", "All", true, 0, 150000000, false, 0, 0, 0, 0, "Evasion UP", 20, "Tukkun", "Abandoned Lab", "MaxHP %", 20, "Potion Efficiency", 200, "", 0, "HP Recovery", 20, 0, 5, "MP Recovery", 20, 0, 10, "Buff Extension", 1, 0, 10);
    addArenaEnemy(3500, 4.5, 250000, 2000000, 20000, 30000, 50000000, 13900, 1390, 5000, "Mother Goose", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Attack UP", 10, "toadvine", "Lullaby Lake", "Spawn Rate", 1, "", 0, "Reward", 1, "Attack: Power Down", 350, 5, 15, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(3600, 3.5, 275000, 2000000, 25000, 35000, 55000000, 14000, 1400, 5000, "Little Mermaid", "Water", false, 0, 0, false, 0, 0, 0, 0, "Weaken", 5, "toadvine", "Lullaby Lake", "Spawn Rate", 2, "", 0, "Reward", 2, "Attack: Weaken", 675, 7, 23, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(3700, 6, 300000, 3000000, 15000, 40000, 60000000, 14100, 1410, 5000, "Blind Mouse", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Blind", 30, "toadvine", "Lullaby Lake", "Spawn Rate", 3, "", 0, "Reward", 3, "Attack: Blind", 675, 7, 18, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(3800, 3, 460000, 4000000, 40000, 40000, 800000000, 45000, 4500, 25000, "Frog Prince", "Water", true, 0, 0, false, 550000, 0, 0, 0, "Poison", 15, "toadvine", "Lullaby Lake", "Spawn Rate", 4, "Ignore Defense", 5, "Reward", 4, "Attack: Poison", 675, 7, 24, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(3900, 4, 300000, 3000000, 20000, 25000, 65000000, 14400, 1440, 5000, "Ugly Duckling", "Water", false, 0, 0, false, 0, 0, 0, 25, "Attack UP", 15, "toadvine", "Lullaby Lake", "Spawn Rate", 5, "", 0, "Reward", 5, "Attack: Power Down", 500, 5, 15, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(4000, 5, 300000, 4000000, 30000, 30000, 70000000, 14500, 1450, 5000, "Tom Thumb", "Light", false, 0, 0, false, 0, 0, 0, 0, "Defense UP", 15, "toadvine", "Lullaby Lake", "Spawn Rate", 6, "", 0, "Reward", 6, "Attack: Defense Down", 500, 5, 15, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(4100, 5, 325000, 4000000, 30000, 30000, 75000000, 14600, 1460, 5000, "Thumbelina", "Light", false, 0, 0, false, 0, 0, 0, 0, "Defense UP", 20, "toadvine", "Lullaby Lake", "Spawn Rate", 7, "", 0, "Reward", 7, "Attack: Defense Down", 500, 5, 15, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(4200, 3.5, 450000, 5000000, 40000, 40000, 1000000000, 50000, 5000, 25000, "Old Woman in Shoe", "Light", true, 0, 0, false, 600000, 0, 0, 0, "Evasion UP", 30, "toadvine", "Lullaby Lake", "Spawn Rate", 8, "Potion Efficiency", 40, "Reward", 8, "Attack: Evasion Down", 500, 5, 15, "Produce Loot: Pixel", 5000, 0, 20, "Buff: Reward", 30, 0, 80);
    addArenaEnemy(4500, 4, 400000, 5000000, 25000, 40000, 140000000, 17000, 1700, 6500, "Troll", "Ice", false, 0, 0, false, 0, 0, 0, 50, "Potion Block", 20, "toadvine", "Billygoat Bridge", "Spawn Rate", 9, "", 0, "Reward", 9, "Attack: Knockback", 800, 8, 12, "Produce Loot: Pixel", 5500, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(4600, 4, 500000, 5000000, 25000, 40000, 150000000, 17100, 1710, 6500, "Trollface", "Dark", false, 0, 0, false, 400000, 0, 0, 50, "Throw Soap", 20, "toadvine", "Billygoat Bridge", "Spawn Rate", 10, "", 0, "Reward", 10, "Attack: Knockback", 800, 8, 12, "Produce Loot: Pixel", 5500, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(4700, 4, 800000, 7000000, 30000, 50000, 2000000000, 60000, 6000, 32500, "Successful Troll", "Ice", true, 0, 0, false, 0, 0, 0, 50, "Potion Block", 30, "toadvine", "Billygoat Bridge", "Spawn Rate", 11, "Ignore Defense", 10, "Reward", 11, "Attack: Knockback", 800, 8, 12, "Produce Loot: Pixel", 5500, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(4800, 4, 600000, 6000000, 25000, 25000, 160000000, 17300, 1730, 6500, "Younger Gruff", "Earth", false, 0, 0, false, 0, 0, 0, 25, "Stun", 4, "toadvine", "Billygoat Bridge", "Spawn Rate", 12, "", 0, "Reward", 12, "Attack: Stun", 1600, 3, 32, "Produce Loot: Pixel", 5500, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(4900, 3.5, 460000, 8000000, 27500, 27500, 170000000, 17400, 1740, 6500, "Middle Gruff", "Earth", false, 0, 0, false, 0, 0, 0, 25, "Stun", 6, "toadvine", "Billygoat Bridge", "Spawn Rate", 13, "", 0, "Reward", 13, "Attack: Stun", 1600, 3, 33, "Produce Loot: Pixel", 5500, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(5000, 3, 900000, 10000000, 50000, 40000, 2500000000, 65000, 6500, 32500, "Eldest Gruff", "Earth", true, 0, 0, false, 0, 0, 0, 25, "Stun", 10, "toadvine", "Billygoat Bridge", "Spawn Rate", 14, "Potion Efficiency", 80, "Reward", 14, "Attack: Stun", 1600, 3, 34, "Produce Loot: Pixel", 5500, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(5500, 4.5, 1000000, 8000000, 35000, 35000, 300000000, 20300, 2030, 8500, "Gingerbro", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Poison", 30, "toadvine", "Fabled Forest", "Spawn Rate", 15, "", 0, "Reward", 15, "Attack: Poison", 925, 8, 21, "Produce Loot: Pixel", 6000, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(5600, 3.5, 950000, 9000000, 50000, 50000, 315000000, 20400, 2040, 8500, "HEY! LISTEN!", "Light", false, 0, 0, false, 900000, 0, 0, 0, "Evasion UP", 30, "toadvine", "Fabled Forest", "Spawn Rate", 16, "", 0, "Reward", 16, "Attack: Silence", 500, 5, 15, "Produce Loot: Pixel", 6000, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(5700, 4, 700000, 7000000, 50000, 40000, 330000000, 20500, 2050, 8500, "Forest Elf", "Wind", false, 0, 0, false, 794400, 0, 0, 50, "Slow", 15, "toadvine", "Fabled Forest", "Spawn Rate", 17, "", 0, "Reward", 17, "Attack: Stun", 1850, 3, 32, "Produce Loot: Pixel", 6000, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(5800, 3, 1000000, 15000000, 40000, 40000, 350000000, 20600, 2060, 8500, "Mini Baba Yaga", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Defense UP", 30, "toadvine", "Fabled Forest", "Spawn Rate", 18, "", 0, "Reward", 18, "Attack: Defense Down", 500, 5, 15, "Produce Loot: Pixel", 6000, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(5900, 5, 1100000, 10000000, 40000, 40000, 375000000, 20700, 2070, 8500, "Warpig", "Earth", false, 0, 0, false, 0, 0, 0, 25, "Weaken", 4, "toadvine", "Fabled Forest", "Spawn Rate", 19, "", 0, "Reward", 19, "Attack: Weaken", 925, 8, 20, "Produce Loot: Pixel", 6000, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(6000, 4.5, 1200000, 12000000, 45000, 45000, 400000000, 20800, 2080, 8500, "Grandma", "Earth", false, 0, 0, false, 0, 0, 0, 25, "Weaken", 6, "toadvine", "Fabled Forest", "Spawn Rate", 20, "", 0, "Reward", 20, "Attack: Weaken", 925, 8, 21, "Produce Loot: Pixel", 6000, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(6100, 4, 1400000, 15000000, 60000, 60000, 5000000000, 90000, 9000, 42500, "Goldie Bear", "Earth", true, 0, 0, false, 0, 0, 0, 50, "Weaken", 10, "toadvine", "Fabled Forest", "Spawn Rate", 21, "Potion Efficiency", 120, "Reward", 21, "Attack: Weaken", 925, 8, 22, "Produce Loot: Pixel", 6000, 0, 20, "Buff: Reward", 40, 0, 80);
    addArenaEnemy(6500, 5, 1400000, 10000000, 60000, 70000, 650000000, 23800, 2380, 11000, "Jubjub Bird", "Dark", false, 0, 0, false, 0, 0, 0, 50, "Accuracy UP", 30, "toadvine", "Fortress Foothills", "Spawn Rate", 22, "", 0, "Reward", 22, "Attack: Accuracy Down", 500, 5, 15, "Produce Loot: Pixel", 6500, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(6600, 7, 1500000, 10000000, 50000, 50000, 700000000, 23900, 2390, 11000, "Frumious Bandersnatch", "Wind", false, 0, 0, false, 0, 0, 0, 50, "Slow", 20, "toadvine", "Fortress Foothills", "Spawn Rate", 23, "", 0, "Reward", 23, "Attack: Stun", 2100, 3, 26, "Produce Loot: Pixel", 6500, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(6700, 4.5, 1500000, 10000000, 40000, 40000, 750000000, 24000, 2400, 11000, "Dwarf 1", "Earth", false, 0, 0, false, 0, 0, 0, 50, "Stat UP", 5, "toadvine", "Fortress Foothills", "Spawn Rate", 24, "", 0, "Reward", 24, "Attack: Knockback", 1050, 9, 11, "Produce Loot: Pixel", 6500, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(6800, 4, 1600000, 20000000, 45000, 45000, 800000000, 24100, 2410, 11000, "Dwarves 2-3", "Earth", false, 0, 0, false, 0, 0, 0, 50, "Stat UP", 10, "toadvine", "Fortress Foothills", "Spawn Rate", 25, "", 0, "Reward", 25, "Attack: Knockback", 1050, 9, 12, "Produce Loot: Pixel", 6500, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(6900, 3.5, 1800000, 40000000, 55000, 55000, 850000000, 24200, 2420, 11000, "Dwarves 4-7", "Earth", false, 0, 0, false, 0, 0, 0, 50, "Stat UP", 20, "toadvine", "Fortress Foothills", "Spawn Rate", 26, "", 0, "Reward", 26, "Attack: Knockback", 1050, 9, 13, "Produce Loot: Pixel", 6500, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(7000, 3, 3500000, 100000000, 90000, 90000, 10000000000, 120000, 12000, 55000, "Pumpkin Carriage", "Earth", true, 0, 0, false, 2500000, 0, 0, 0, "Stun", 10, "toadvine", "Fortress Foothills", "Spawn Rate", 27, "Potion Efficiency", 160, "Reward", 27, "Attack: Stun", 2100, 3, 34, "Produce Loot: Pixel", 6500, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(7500, 3, 3140000, 31400000, 31400, 31400, 1500000000, 27600, 2760, 14000, "3.14 Piper", "Wind", false, 0, 0, false, 3140000, 0, 0, 0, "Blind", 30, "toadvine", "Castle Grimm", "Spawn Rate", 28, "", 0, "Reward", 28, "Attack: Blind", 1175, 9, 23, "Produce Loot: Pixel", 7000, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(7600, 3, 3300000, 30000000, 40000, 60000, 1600000000, 27700, 2770, 14000, "Leprechaun", "Light", false, 0, 0, false, 0, 0, 0, 0, "Evasion UP", 40, "toadvine", "Castle Grimm", "Spawn Rate", 29, "", 0, "Reward", 29, "Attack: Evasion Down", 750, 10, 15, "Produce Loot: Pixel", 7000, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(7700, 0, 1, 20000000, 70000, 70000, 1700000000, 27800, 2780, 14000, "Sleeping Rose", "Earth", false, 0, 0, false, 3600000, 0, 0, 0, "Slow", 30, "toadvine", "Castle Grimm", "Spawn Rate", 30, "", 0, "Reward", 30, "Attack: Stun", 2350, 3, 40, "Produce Loot: Pixel", 7000, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(7800, 2, 2700000, 50000000, 70000, 80000, 1800000000, 27900, 2790, 14000, "Moat Gator", "Water", false, 0, 0, false, 2400000, 0, 0, 25, "Slow", 30, "toadvine", "Castle Grimm", "Spawn Rate", 31, "", 0, "Reward", 31, "Attack: Stun", 2350, 3, 36, "Produce Loot: Pixel", 7000, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(7900, 3, 3900000, 150000000, 70000, 70000, 1900000000, 28000, 2800, 14000, "Gargoyle", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Stun", 10, "toadvine", "Castle Grimm", "Spawn Rate", 32, "", 0, "Reward", 32, "Attack: Stun", 2350, 3, 34, "Produce Loot: Pixel", 7000, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(8000, 5, 4000000, 250000000, 80000, 70000, 20000000000, 150000, 15000, 70000, "Flying Monkey", "Wind", true, 0, 0, false, 4000000, 0, 0, 50, "Evasion UP", 40, "toadvine", "Castle Grimm", "Spawn Rate", 33, "Potion Efficiency", 200, "Reward", 33, "Attack: Evasion Down", 750, 10, 15, "Produce Loot: Pixel", 7000, 0, 20, "Buff: Reward", 50, 0, 80);
    addArenaEnemy(8500, 3, 5000000, 20000000, 60000, 60000, 3000000000, 31700, 3170, 17500, "Pea Princess", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Mana Drain", 50, "toadvine", "Throne Room", "Spawn Rate", 34, "", 0, "Reward", 34, "MP Recovery", 20, 0, 5, "Produce Loot: Pixel", 7500, 0, 20, "Buff: Reward", 60, 0, 80);
    addArenaEnemy(8600, 3, 5250000, 25000000, 60000, 60000, 3250000000, 31800, 3180, 17500, "Peach Princess", "Earth", false, 0, 0, false, 0, 0, 0, 0, "Mana Drain", 50, "toadvine", "Throne Room", "Spawn Rate", 35, "", 0, "Reward", 35, "MP Recovery", 20, 0, 5, "Produce Loot: Pixel", 7500, 0, 20, "Buff: Reward", 60, 0, 80);
    addArenaEnemy(8700, 3, 5500000, 30000000, 60000, 60000, 3500000000, 31900, 3190, 17500, "Paperbag Princess", "Light", false, 0, 0, false, 0, 0, 0, 0, "Health Drain", 50, "toadvine", "Throne Room", "Spawn Rate", 36, "", 0, "Reward", 36, "HP Recovery", 20, 0, 5, "Produce Loot: Pixel", 7500, 0, 20, "Buff: Reward", 60, 0, 80);
    addArenaEnemy(8800, 4, 6500000, 150000000, 100000, 100000, 55000000000, 180000, 18000, 100000, "Fairy Godfather", "Light", true, 0, 0, false, 5500000, 0, 0, 25, "All", 15, "toadvine", "Throne Room", "Spawn Rate", 38, "Ignore Defense", 50, "Reward", 38, "Attack: Ignore Defense", 750, 0, 15, "Produce Loot: Rare Item", 0, 0, 40, "Buff: Reward", 60, 0, 80);
    addArenaEnemy(8900, 4, 6000000, 90000000, 100000, 100000, 60000000000, 200000, 20000, 100000, "Fairy Godmother", "Light", true, 0, 900000000, false, 7000000, 0, 0, 25, "Chaos", 25, "toadvine", "Throne Room", "Spawn Rate", 40, "Potion Efficiency", 500, "Reward", 40, "Attack: Ignore Defense", 1000, 0, 15, "Produce Loot: Rare Item", 0, 0, 40, "Buff: Reward", 60, 0, 80);
    addArenaEnemy(1, 3, 3333333, 33333333, 33333, 33333, 333333333, 33333, 3333, 33333, "Triangle", "All", true, 0, 3333333, false, 1, 25, 9999999999, 33, "Chaos", 15, "Tukkun", "Triangle Hideout", "Reward", 60, "Drop Rate", 60, "", 0, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(1, 0, 1, -999999999, 100000, 100, 100, 120000, 30000, 60000, "Strange Box", "All", true, 0, 5, false, 0, 30, 1, 0, "None", 0, "Tukkun", "Unknown Location", "Drop Rate", 50, "Spawn Rate", 20, "Drop Rate", 20, "", 0, 0, 0, "", 0, 0, 0, "", 0, 0, 0);
    addArenaEnemy(3100, 3, 40000, 1000000, 2000, 2000, 17500000, 3500, 1700, 300, "Strange Triangle Dummy", "Earth", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3200, 3, 42500, 1000000, 3000, 3000, 18500000, 3600, 1750, 300, "Strange Triangle Tree", "Earth", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3300, 3, 45000, 1000000, 3000, 3000, 20000000, 3700, 1800, 300, "Strange Mushtriangle", "Earth", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3400, 3, 47500, 1000000, 3000, 3000, 22000000, 3800, 1850, 300, "Strange Triangoop", "Water", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3500, 3, 50000, 1000000, 2000, 4000, 24000000, 3900, 1900, 300, "Strange Tridle", "Light", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3500, 3, 52500, 2000000, 4000, 4000, 24000000, 4000, 1950, 300, "Strange Triangle Bot", "Light", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3600, 3, 55000, 2000000, 9000, 4000, 26000000, 4100, 2000, 300, "Strange Moving Spikes", "Light", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 19, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3700, 5.5, 57500, 2000000, 9000, 4000, 28000000, 4200, 2050, 300, "Strange Fast Spikes", "Light", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 14, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3800, 5.5, 60000, 2000000, 9000, 4000, 30000000, 4300, 2100, 300, "Strange Dark Spikes", "Dark", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 14, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(3900, 2.5, 65000, 2000000, 2000, 2000, 32500000, 4400, 2150, 300, "Strange Blue Triangle", "Water", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 20, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4000, 2.5, 70000, 2000000, 4000, 4000, 35000000, 4500, 2200, 300, "Strange Green Triangle", "Wind", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 20, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4100, 2.5, 75000, 2000000, 4000, 4000, 37500000, 4600, 2250, 300, "Strange Red Triangle", "Fire", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 20, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    addArenaEnemy(4200, 2.5, 80000, 2000000, 4000, 4000, 40000000, 4700, 2300, 300, "Strange Black Triangle", "Dark", false, 0, 0, false, 145000, 0, 0, 0, "None", 0, "Tukkun", "2011: Triangle Land", "EXP", 50, "Non-Boss Damage", 20, "Spawn Rate", 5, "Attack: Regular", 105, 0, 20, "Buff: Elemental Boost", 10, 0, 80, "", 0, 0, 0);
    let i = 501;
    while (i <= 9999) {
        addArenaEnemy(1337, 0, 0, 0, 0, 0, 1, 0, 0, 0, "LOADING FAILED", "All", true, 0, 0, false, 0, 0, 0, 0, "None", 0, "Jimp (?)", "Kongpanion", "", 0, "", 0, "", 0, "Attack: Poison", 1337, 20, 30, "Buff: Reward", 50, 0, 70, "Produce Loot: Rare Item", 0, 0, 130);
        i++;
    }
    _root.komDiff = new Array();
    _root.komCount = new Array();
    i = 1;
    while (i <= 500) {
        _root.komDiff[i] = -1;
        _root.komCount[i] = -1;
        i++;
    }
    addKommanderMission(1, 7, 100);
    i = 2;
    while (i <= 15) {
        addKommanderMission(i, 1, 5);
        i++;
    }
    i = 16;
    while (i <= 34) {
        addKommanderMission(i, 2, 10);
        i++;
    }
    i = 35;
    while (i <= 54) {
        addKommanderMission(i, 3, 15);
        i++;
    }
    i = 55;
    while (i <= 64) {
        addKommanderMission(i, 4, 20);
        i++;
    }
    i = 65;
    while (i <= 71) {
        addKommanderMission(i, 5, 25);
        i++;
    }
    i = 72;
    while (i <= 82) {
        addKommanderMission(i, 6, 30);
        i++;
    }
    i = 83;
    while (i <= 97) {
        addKommanderMission(i, 7, 35);
        i++;
    }
    i = 98;
    while (i <= 99) {
        addKommanderMission(i, 8, 40);
        i++;
    }
    i = 100;
    while (i <= 124) {
        addKommanderMission(i, 10, 50);
        i++;
    }
    i = 125;
    while (i <= 136) {
        addKommanderMission(i, 15, 60);
        i++;
    }
    i = 137;
    while (i <= 159) {
        addKommanderMission(i, 20, 80);
        i++;
    }
    i = 160;
    while (i <= 177) {
        addKommanderMission(i, 25, 100);
        i++;
    }
    i = 178;
    while (i <= 182) {
        addKommanderMission(i, 4, 200);
        i++;
    }
    i = 183;
    while (i <= 195) {
        addKommanderMission(i, 11, 20);
        i++;
    }
    i = 196;
    while (i <= 221) {
        addKommanderMission(i, 12, 15);
        i++;
    }
    i = 222;
    while (i <= 225) {
        addKommanderMission(i, 15, 4);
        i++;
    }
    i = 226;
    while (i <= 229) {
        addKommanderMission(i, 15, 1);
        i++;
    }
    i = 240;
    while (i <= 241) {
        addKommanderMission(i, 12, 500);
        i++;
    }
    i = 242;
    while (i <= 248) {
        addKommanderMission(i, 12, 50);
        i++;
    }
    i = 249;
    while (i <= 260) {
        addKommanderMission(i, 9, 50);
        i++;
    }
    i = 261;
    while (i <= 272) {
        addKommanderMission(i, 13, 60);
        i++;
    }
    addKommanderMission(273, 25, 20);
    addKommanderMission(274, 5, 1);
    addKommanderMission(275, 40, 2);
    i = 276;
    while (i <= 288) {
        addKommanderMission(i, 10, 2);
        i++;
    }
    i = 289;
    while (i <= 294) {
        addKommanderMission(i, 15, 2);
        i++;
    }
    addKommanderMission(295, 20, 2);
    i = 296;
    while (i <= 300) {
        addKommanderMission(i, 10, 100);
        i++;
    }
    i = 301;
    while (i <= 305) {
        addKommanderMission(i, 15, 8);
        i++;
    }
    i = 306;
    while (i <= 307) {
        addKommanderMission(i, 15, 2);
        i++;
    }
    i = 313;
    while (i <= 315) {
        addKommanderMission(i, 15, 8);
        i++;
    }
    i = 316;
    while (i <= 317) {
        addKommanderMission(i, 15, 2);
        i++;
    }
    addKommanderMission(318, 17, 1);
    addKommanderMission(319, 17, 1);
    addKommanderMission(320, 20, 1);
    addKommanderMission(321, 20, 1);
    addKommanderMission(323, 14, 2);
    i = 324;
    while (i <= 330) {
        addKommanderMission(i, 20, 150);
        i++;
    }
    addKommanderMission(332, 20, 25);
    i = 333;
    while (i <= 345) {
        addKommanderMission(i, 25, 2);
        i++;
    }
    i = 346;
    while (i <= 348) {
        addKommanderMission(i, 30, 2);
        i++;
    }
    i = 349;
    while (i <= 350) {
        addKommanderMission(i, 35, 2);
        i++;
    }
    i = 351;
    while (i <= 354) {
        addKommanderMission(i, 25, 150);
        i++;
    }
    i = 355;
    while (i <= 367) {
        addKommanderMission(i, 30, 150);
        i++;
    }
    i = 368;
    while (i <= 374) {
        addKommanderMission(i, 15, 10);
        i++;
    }
    i = 375;
    while (i <= 376) {
        addKommanderMission(i, 15, 5);
        i++;
    }
    addKommanderMission(377, 35, 2);
    i = 378;
    while (i <= 415) {
        addKommanderMission(i, 30, 5);
        i++;
    }
    i = 416;
    while (i <= 430) {
        addKommanderMission(i, 35, 3);
        i++;
    }
    addKommanderMission(431, 35, 3);
    addKommanderMission(432, 40, 3);
    addKommanderMission(436, 35, 2);
    addKommanderMission(438, 30, 300);
    addKommanderMission(439, 35, 5);
    addKommanderMission(440, 50, 1);
    i = 448;
    while (i <= 455) {
        addKommanderMission(i, 20, 175);
        i++;
    }
    i = 456;
    while (i <= 461) {
        addKommanderMission(i, 25, 200);
        i++;
    }
    i = 462;
    while (i <= 468) {
        addKommanderMission(i, 30, 225);
        i++;
    }
    i = 469;
    while (i <= 474) {
        addKommanderMission(i, 35, 250);
        i++;
    }
    i = 475;
    while (i <= 480) {
        addKommanderMission(i, 40, 275);
        i++;
    }
    i = 481;
    while (i <= 483) {
        addKommanderMission(i, 45, 300);
        i++;
    }
    addKommanderMission(484, 50, 50);
    addKommanderMission(485, 50, 50);
    addKommanderMission(487, 10, 2);
    stickName = _root.kongregate_username + "\'s Tree Stick";
    if (_root.kongregate_username == undefined || _root.kongregate_username == "Guest") {
        stickName = "????\'s Tree Stick";
    }
    _root.museumItem = new Array();
    _root.museumValue = new Array();
    _root.museumMaxItem = 0;
    _root.museumMaxValue = 0;
    addMuseumItem(1401, 1, "Broken Greatsword");
    addMuseumItem(1402, 1, "Ranseur");
    addMuseumItem(1403, 2, "Halberd");
    addMuseumItem(1404, 2, "Trident");
    addMuseumItem(1405, 3, "Partisan");
    addMuseumItem(1406, 3, "Awl Pike");
    addMuseumItem(1407, 3, "Bill Hook");
    addMuseumItem(1408, 4, "Bat-Wing Corseque");
    addMuseumItem(1409, 4, "Corseque");
    addMuseumItem(1410, 4, "Fauchard");
    addMuseumItem(1411, 5, "Military Fork");
    addMuseumItem(1412, 5, "Fauchard-Fork");
    addMuseumItem(1413, 5, "Naginata");
    addMuseumItem(1414, 5, "Nagimaki");
    addMuseumItem(1415, 6, "Fukuro Yari");
    addMuseumItem(1416, 6, "Voulge");
    addMuseumItem(1417, 6, "Scythe");
    addMuseumItem(1418, 6, "Bardiche");
    addMuseumItem(1419, 6, "Poleaxe");
    addMuseumItem(1420, 6, "Lochaber Axe");
    addMuseumItem(1421, 7, "Bohemian Earspoon");
    addMuseumItem(1422, 8, "Bec de Corbin");
    addMuseumItem(1423, 9, "Ox Tongue");
    addMuseumItem(1424, 10, "Spetum");
    addMuseumItem(1425, 11, "Glaive");
    addMuseumItem(1426, 12, "Guisarme");
    addMuseumItem(1427, 13, "Longspear");
    addMuseumItem(1428, 14, "Lucerne Hammer");
    addMuseumItem(1429, 15, "Glaive-Guisarme");
    addMuseumItem(1430, 16, "Guisarme-Glaive");
    addMuseumItem(1431, 17, "Glaive-Guisarme-Glaive");
    addMuseumItem(1432, 18, "Glaive-Glaive-Glaive-Guisarme-Glaive");
    addMuseumItem(1433, 19, "Greatsword");
    addMuseumItem(1434, 20, "Greatersword");
    addMuseumItem(1441, 4, "Laser Gun");
    addMuseumItem(1442, 5, "Mystic Bow");
    addMuseumItem(1443, 6, "Strong Machine Gun");
    addMuseumItem(1444, 8, "Mystic Crossbow");
    addMuseumItem(1445, 10, "Pure Darkness Claw");
    addMuseumItem(1446, 12, "Slingshot");
    addMuseumItem(1447, 14, "Crimson Bow");
    addMuseumItem(1448, 16, "Oversized Slingshot");
    addMuseumItem(1449, 18, "Cannon");
    addMuseumItem(1450, 20, "Gold Cannon");
    addMuseumArmorSet(1451, 1, "Training");
    addMuseumArmorSet(1456, 2, "Soldier");
    addMuseumArmorSet(1461, 2, "Stripper Nurse");
    addMuseumArmorSet(1466, 3, "Enchanted Leather");
    addMuseumArmorSet(1471, 3, "Golden");
    addMuseumArmorSet(1476, 4, "Regeneration");
    addMuseumArmorSet(1481, 4, "Berserker");
    addMuseumArmorSet(1486, 5, "Defensive");
    addMuseumArmorSet(1491, 5, "Pure Darkness");
    addMuseumArmorSet(1496, 6, "Crimson");
    addMuseumArmorSet(1501, 7, "Knightmare");
    addMuseumArmorSet(1506, 8, "Humblebee");
    addMuseumArmorSet(1511, 10, "Ghost");
    addMuseumItem(1521, 1, "Pink Skin");
    addMuseumItem(1522, 1, "Teal Skin");
    addMuseumItem(1523, 1, "Green Skin");
    addMuseumItem(1524, 1, "Red Skin");
    addMuseumItem(1525, 1, "Black Skin");
    addMuseumItem(1526, 1, "White Skin");
    addMuseumItem(1527, 1, "Purple Skin");
    addMuseumItem(1528, 1, "Blue Skin");
    addMuseumItem(1529, 5, "Neon Skin");
    addMuseumItem(1531, 6, "Cursed Sword (1)");
    addMuseumItem(1532, 6, "Cursed Sword (2)");
    addMuseumItem(1533, 6, "Cursed Sword (3)");
    addMuseumItem(1534, 25, "Dark Ruler");
    addMuseumItem(1541, 1, "Burned Rope");
    addMuseumItem(1542, 1, "Special Wand");
    addMuseumItem(1543, 200, "MEGA PENDANT");
    addMuseumItem(1544, 200, "MEGA EARRINGS");
    addMuseumItem(1545, 100, "MEGA WINGS");
    addMuseumArmorSet(1551, 3, "Elm");
    addMuseumArmorSet(1561, 4, "Emperor\'s");
    addMuseumArmorSet(1571, 5, "Chuck Norris");
    addMuseumArmorSet(1581, 6, "Companion Cube");
    addMuseumItem(1586, 10, "Bacon Sword");
    addMuseumItem(1591, 5, "Collector\'s Pendant");
    addMuseumItem(1592, 5, "Cursed Pendant");
    addMuseumItem(1593, 5, "Anti-Checkpoint Pendant");
    addMuseumItem(1601, 1, "Bronze Pendant");
    addMuseumItem(1602, 2, "Silver Pendant");
    addMuseumItem(1603, 3, "Gold Pendant");
    addMuseumItem(1604, 4, "Platinum Pendant");
    addMuseumItem(1605, 5, "Unobtainium Pendant");
    addMuseumItem(1611, 5, "Pendant of Fire");
    addMuseumItem(1612, 5, "Pendant of Ice");
    addMuseumItem(1613, 5, "Pendant of Wind");
    addMuseumItem(1614, 5, "Pendant of Earth");
    addMuseumItem(1615, 5, "Pendant of Thunder");
    addMuseumItem(1616, 5, "Pendant of Water");
    addMuseumItem(1617, 5, "Pendant of Light");
    addMuseumItem(1618, 5, "Pendant of Darkness");
    addMuseumItem(1621, 3, "Pendant of Double Hit");
    addMuseumItem(1622, 3, "Pendant of Rage");
    addMuseumItem(1623, 3, "Pendant of Recovery");
    addMuseumItem(1624, 3, "Pendant of Bosshunter");
    addMuseumItem(1625, 3, "Pendant of Spell Protection");
    addMuseumItem(1626, 3, "Pendant of Cruelty");
    addMuseumItem(1627, 3, "Pendant of Resistance");
    addMuseumItem(1628, 3, "Crappy Earrings");
    addMuseumItem(1629, 5, "Awesome Earrings");
    addMuseumItem(1630, 5, "Mission Kommander\'s Gem");
    addMuseumItem(1631, 15, "Gem of Constancy");
    addMuseumItem(1632, 15, "Empowering Gem");
    addMuseumItem(1633, 15, "Worst Moon Gem");
    addMuseumItem(1634, 15, "Auto Buff Gem");
    addMuseumItem(1635, 25, "Gem of Good Luck");
    addMuseumItem(1636, 25, "Yellow Madness Gem");
    addMuseumItem(1637, 25, "Gem of Eternal Rage");
    addMuseumItem(1638, 5, "Dominator Gem");
    addMuseumItem(1639, 5, "Triangle Gem");
    addMuseumItem(1640, 5, "Mega Triangle Gem");
    addMuseumItem(1641, 2, "Ultimate Weapon");
    addMuseumArmorSet(1642, 1, "Ultimate");
    addMuseumItem(1647, 1, "Ultimate Pendant");
    addMuseumItem(1648, 1, "Ultimate Earrings");
    addMuseumItem(1649, 1, "Ultimate Trinket");
    addMuseumItem(1651, 2, "Reincarnation Weapon");
    addMuseumArmorSet(1652, 1, "Reincarnation");
    addMuseumItem(1657, 1, "Reincarnation Pendant");
    addMuseumItem(1658, 1, "Reincarnation Earrings");
    addMuseumItem(1659, 1, "Reincarnation Trinket");
    addMuseumItem(1661, 2, "Bronze Pickaxe");
    addMuseumItem(1662, 4, "Silver Pickaxe");
    addMuseumItem(1663, 6, "Golden Pickaxe");
    addMuseumItem(1664, 8, "Diamond Pickaxe");
    addMuseumItem(1665, 10, "Master\'s Pickaxe");
    addMuseumItem(1666, 15, "Legendary Pickaxe");
    addMuseumItem(1667, 20, "Unobtainium Pickaxe");
    addMuseumArmorSet(1671, 2, "Blue Crystal");
    addMuseumArmorSet(1676, 2, "Red Crystal");
    addMuseumArmorSet(1681, 2, "Yellow Crystal");
    addMuseumArmorSet(1686, 4, "Green Crystal");
    addMuseumArmorSet(1691, 4, "Purple Crystal");
    addMuseumArmorSet(1696, 4, "Pink Crystal");
    addMuseumItem(1701, 2, "Green Hat of Loot");
    addMuseumItem(1702, 2, "Green Shirt of Loot");
    addMuseumItem(1703, 2, "Green Gloves of Loot");
    addMuseumItem(1704, 2, "Green Pants of Loot");
    addMuseumItem(1705, 2, "Green Shoes of Loot");
    addMuseumItem(1706, 4, "Blue Hat of Loot");
    addMuseumItem(1707, 4, "Blue Shirt of Loot");
    addMuseumItem(1708, 4, "Blue Gloves of Loot");
    addMuseumItem(1709, 4, "Blue Pants of Loot");
    addMuseumItem(1710, 4, "Blue Shoes of Loot");
    addMuseumItem(1711, 6, "Purple Hat of Loot");
    addMuseumItem(1712, 6, "Purple Shirt of Loot");
    addMuseumItem(1713, 6, "Purple Gloves of Loot");
    addMuseumItem(1714, 6, "Purple Pants of Loot");
    addMuseumItem(1715, 6, "Purple Shoes of Loot");
    addMuseumArmorSet(1721, 12, "Samurai");
    addMuseumArmorSet(1726, 15, "Dress");
    addMuseumItem(1731, 50, "Dummy Sword");
    addMuseumItem(1732, 50, "Carrot Gun");
    addMuseumItem(1733, 50, "Treeman Dagger");
    addMuseumItem(1734, 50, "Rat Tail");
    addMuseumItem(1735, 50, "Dark Mage Wand");
    addMuseumArmorSet(1741, 5, "Censor");
    addMuseumItem(1746, 10, "Censor Sword");
    addMuseumItem(1751, 1, "Revolution Pyrabow");
    addMuseumItem(1752, 1, "Revolution Earrings");
    addMuseumItem(1753, 2, "Immortal Pendant");
    addMuseumItem(1754, 5, "Roflhunter\'s Pendant");
    addMuseumItem(1755, 1, "Revolution Pendant");
    addMuseumItem(1761, 2, "Alien Sword #1");
    addMuseumItem(1762, 2, "Alien Claw #1");
    addMuseumItem(1763, 2, "Alien Wand #1");
    addMuseumItem(1764, 2, "Alien Bow #1");
    addMuseumItem(1765, 2, "Alien Sword #2");
    addMuseumItem(1766, 2, "Alien Claw #2");
    addMuseumItem(1767, 2, "Alien Wand #2");
    addMuseumItem(1768, 2, "Alien Bow #2");
    addMuseumItem(1771, 2, "Alien Hat #1");
    addMuseumItem(1772, 2, "Alien Shirt #1");
    addMuseumItem(1773, 2, "Alien Gloves #1");
    addMuseumItem(1774, 2, "Alien Pants #1");
    addMuseumItem(1775, 2, "Alien Shoes #1");
    addMuseumItem(1776, 2, "Alien Hat #2");
    addMuseumItem(1777, 2, "Alien Shirt #2");
    addMuseumItem(1778, 2, "Alien Gloves #2");
    addMuseumItem(1779, 2, "Alien Pants #2");
    addMuseumItem(1780, 2, "Alien Shoes #2");
    addMuseumItem(1781, 2, "Alien Hat #3");
    addMuseumItem(1782, 2, "Alien Shirt #3");
    addMuseumItem(1783, 2, "Alien Gloves #3");
    addMuseumItem(1784, 2, "Alien Pants #3");
    addMuseumItem(1785, 2, "Alien Shoes #3");
    addMuseumItem(1786, 2, "Alien Hat #4");
    addMuseumItem(1787, 2, "Alien Shirt #4");
    addMuseumItem(1788, 2, "Alien Gloves #4");
    addMuseumItem(1789, 2, "Alien Pants #4");
    addMuseumItem(1790, 2, "Alien Shoes #4");
    addMuseumItem(1791, 4, "Elite Alien Sword #1");
    addMuseumItem(1792, 4, "Elite Alien Claw #1");
    addMuseumItem(1793, 4, "Elite Alien Wand #1");
    addMuseumItem(1794, 4, "Elite Alien Bow #1");
    addMuseumItem(1795, 4, "Elite Alien Sword #2");
    addMuseumItem(1796, 4, "Elite Alien Claw #2");
    addMuseumItem(1797, 4, "Elite Alien Wand #2");
    addMuseumItem(1798, 4, "Elite Alien Bow #2");
    addMuseumItem(1801, 4, "Elite Alien Hat #1");
    addMuseumItem(1802, 4, "Elite Alien Shirt #1");
    addMuseumItem(1803, 4, "Elite Alien Gloves #1");
    addMuseumItem(1804, 4, "Elite Alien Pants #1");
    addMuseumItem(1805, 4, "Elite Alien Shoes #1");
    addMuseumItem(1806, 4, "Elite Alien Hat #2");
    addMuseumItem(1807, 4, "Elite Alien Shirt #2");
    addMuseumItem(1808, 4, "Elite Alien Gloves #2");
    addMuseumItem(1809, 4, "Elite Alien Pants #2");
    addMuseumItem(1810, 4, "Elite Alien Shoes #2");
    addMuseumItem(1811, 4, "Elite Alien Hat #3");
    addMuseumItem(1812, 4, "Elite Alien Shirt #3");
    addMuseumItem(1813, 4, "Elite Alien Gloves #3");
    addMuseumItem(1814, 4, "Elite Alien Pants #3");
    addMuseumItem(1815, 4, "Elite Alien Shoes #3");
    addMuseumItem(1816, 4, "Elite Alien Hat #4");
    addMuseumItem(1817, 4, "Elite Alien Shirt #4");
    addMuseumItem(1818, 4, "Elite Alien Gloves #4");
    addMuseumItem(1819, 4, "Elite Alien Pants #4");
    addMuseumItem(1820, 4, "Elite Alien Shoes #4");
    addMuseumItem(1821, 10, "Alien Earrings");
    addMuseumItem(1831, 2, "Bronze Trophy");
    addMuseumItem(1832, 4, "Silver Trophy");
    addMuseumItem(1833, 6, "Gold Trophy");
    addMuseumItem(1834, 8, "Platinum Trophy");
    addMuseumItem(1835, 10, "Unobtainium Trophy");
    addMuseumItem(1836, 2, "Bronze Endurance Trophy");
    addMuseumItem(1837, 4, "Silver Endurance Trophy");
    addMuseumItem(1838, 6, "Gold Endurance Trophy");
    addMuseumItem(1839, 8, "Platinum Endurance Trophy");
    addMuseumItem(1840, 10, "Unobtainium Endurance Trophy");
    addMuseumItem(1841, 2, "Dagger of DOOOOOOM");
    addMuseumItem(1842, 2, "Sword of DOOOOOOM");
    addMuseumItem(1843, 2, "Longsword of DOOOOOOM");
    addMuseumItem(1844, 2, "Spear of DOOOOOOM");
    addMuseumItem(1845, 2, "Axe of DOOOOOOM");
    addMuseumItem(1846, 2, "Bow of DOOOOOOM");
    addMuseumItem(1847, 2, "Crossbow of DOOOOOOM");
    addMuseumItem(1848, 2, "Gun of DOOOOOOM");
    addMuseumItem(1849, 2, "Wand of DOOOOOOM");
    addMuseumItem(1850, 2, "Claw of DOOOOOOM");
    addMuseumItem(1851, 1, "Hat of DOOOOOOM");
    addMuseumItem(1852, 1, "Shirt of DOOOOOOM");
    addMuseumItem(1853, 1, "Gloves of DOOOOOOM");
    addMuseumItem(1854, 1, "Pants of DOOOOOOM");
    addMuseumItem(1855, 1, "Shoes of DOOOOOOM");
    addMuseumItem(1861, 5, "THE MEGABOSS\'s Earrings of Experience");
    addMuseumItem(1862, 5, "THE MEGABOSS\'s Earrings of Wealth");
    addMuseumItem(1863, 5, "THE MEGABOSS\'s Earrings of Health");
    addMuseumItem(1864, 5, "THE MEGABOSS\'s Earrings of Power");
    addMuseumArmorSet(1871, 6, "Corrupted Elm");
    addMuseumItem(1881, 10, "Badly Recolored Weapon");
    addMuseumItem(1882, 15, "Scimitar");
    addMuseumItem(1883, 20, "Blood Scimitar");
    addMuseumItem(1891, 50, "Meteoric Battleaxe");
    addMuseumItem(1892, 50, "Meteoric Sword");
    addMuseumItem(1893, 50, "Meteoric Cleaver");
    addMuseumItem(1894, 50, "Meteoric Glaive");
    addMuseumItem(1895, 50, "Meteoric Scythe");
    addMuseumItem(1896, 50, "Meteoric Voulge");
    addMuseumArmorSet(1901, 25, "Meteoric");
    addMuseumArmorSet(1911, 5, "Wizard");
    addMuseumItem(1916, 7, "Rain Bow");
    addMuseumItem(1921, 3, "Epic Fire Staff");
    addMuseumItem(1922, 3, "Epic Ice Staff");
    addMuseumItem(1923, 3, "Epic Wind Staff");
    addMuseumItem(1924, 3, "Epic Earth Staff");
    addMuseumItem(1925, 3, "Epic Thunder Staff");
    addMuseumItem(1926, 3, "Epic Water Staff");
    addMuseumItem(1927, 3, "Light Glaive");
    addMuseumItem(1928, 3, "Dark Glaive");
    addMuseumItem(1931, 3, "Ultimate Fire Sword");
    addMuseumItem(1932, 3, "Ultimate Fire Spear");
    addMuseumItem(1933, 3, "Ultimate Fire Polearm");
    addMuseumItem(1934, 3, "Ultimate Ice Sword");
    addMuseumItem(1935, 3, "Ultimate Ice Spear");
    addMuseumItem(1936, 3, "Ultimate Ice Polearm");
    addMuseumItem(1937, 3, "Ultimate Lightning Sword");
    addMuseumItem(1938, 3, "Ultimate Lightning Spear");
    addMuseumItem(1939, 3, "Ultimate Lightning Polearm");
    addMuseumArmorSet(1941, 4, "Holy Glory");
    addMuseumItem(1946, 20, "Glaive of Smiting");
    addMuseumArmorSet(1951, 5, "Dark Angel");
    addMuseumItem(1956, 25, "Darkglaive of Smiting");
    addMuseumArmorSet(1961, 6, "Chaos");
    addMuseumItem(1966, 30, "Fiend Glaive");
    addMuseumItem(1971, 8, "CHAOS HAT");
    addMuseumItem(1972, 8, "CHAOS SHIRT");
    addMuseumItem(1973, 8, "CHAOS GLOVES");
    addMuseumItem(1974, 8, "CHAOS PANTS");
    addMuseumItem(1975, 8, "CHAOS SHOES");
    addMuseumItem(1976, 40, "CHAOS AURA");
    addMuseumItem(1977, 250, "GIGA PENDANT");
    addMuseumItem(1978, 250, "GIGA EARRINGS");
    addMuseumItem(1979, 750, "TERA PENDANT");
    addMuseumItem(1980, 750, "TERA EARRINGS");
    addMuseumItem(1981, 44, "Dragon Slayer Dagger");
    addMuseumItem(1982, 44, "Dragon Slayer Sword");
    addMuseumItem(1983, 44, "Dragon Slayer Spear");
    addMuseumItem(1984, 44, "Dragon Slayer Axe");
    addMuseumItem(1985, 44, "Dragon Slayer Bow");
    addMuseumItem(1986, 44, "Dragon Slayer Gun");
    addMuseumItem(1987, 44, "Dragon Slayer Staff");
    addMuseumItem(1988, 44, "Dragon Slayer Claw");
    addMuseumArmorSet(1991, 44, "Dragon Slayer");
    addMuseumItem(2001, 66, "Demon Slayer Dagger");
    addMuseumItem(2002, 66, "Demon Slayer Sword");
    addMuseumItem(2003, 66, "Demon Slayer Spear");
    addMuseumItem(2004, 66, "Demon Slayer Axe");
    addMuseumItem(2005, 66, "Demon Slayer Bow");
    addMuseumItem(2006, 66, "Demon Slayer Gun");
    addMuseumItem(2007, 66, "Demon Slayer Staff");
    addMuseumItem(2008, 66, "Demon Slayer Claw");
    addMuseumItem(2009, 66, "Demon Slayer Stick");
    addMuseumArmorSet(2011, 66, "Demon Slayer");
    addMuseumArmorSet(2021, 10, "Fairy Godfather");
    addMuseumArmorSet(2031, 10, "Fairy Godmother");
    addMuseumItem(2036, 20, "Fairy Godmother Wand");
    addMuseumItem(2041, 1, "First Medal");
    addMuseumItem(2042, 1, "Newbie Fighter");
    addMuseumItem(2043, 2, "Fighter");
    addMuseumItem(2044, 2, "Veteran Fighter");
    addMuseumItem(2045, 3, "Heroic Fighter");
    addMuseumItem(2046, 3, "Elite Fighter");
    addMuseumItem(2047, 4, "Master Fighter");
    addMuseumItem(2048, 4, "Ultimate Fighter");
    addMuseumItem(2049, 5, "Arena Champion");
    addMuseumItem(2050, 1, "Combo King");
    addMuseumItem(2051, 2, "Bestiary Master");
    addMuseumItem(2052, 3, "Bestiary King");
    addMuseumItem(2053, 4, "Mad Scientist");
    addMuseumItem(2054, 5, "THE BESTiary");
    addMuseumItem(2055, 2, "Novice Tamer");
    addMuseumItem(2056, 3, "Veteran Tamer");
    addMuseumItem(2057, 4, "Master Tamer");
    addMuseumItem(2058, 5, "Legendary Tamer");
    addMuseumItem(2059, 2, "Novice Trainer");
    addMuseumItem(2060, 3, "Veteran Trainer");
    addMuseumItem(2061, 4, "Master Trainer");
    addMuseumItem(2062, 5, "Legendary Trainer");
    addMuseumItem(2063, 5, "Bottomless Bag");
    addMuseumItem(2064, 4, "Four-Leaf Clover");
    addMuseumItem(2065, 0, "Speed Runner");
    addMuseumItem(2071, 0, "Challenge #1 Participant");
    addMuseumItem(2072, 0, "Challenge #2 Participant");
    addMuseumItem(2073, 0, "Challenge #3 Participant");
    addMuseumItem(2074, 0, "Challenge #4 Participant");
    addMuseumItem(2075, 0, "Challenge #5 Participant");
    addMuseumItem(2076, 0, "Challenge #6 Participant");
    addMuseumItem(2081, 0, "Challenge #1 Master");
    addMuseumItem(2082, 0, "Challenge #2 Master");
    addMuseumItem(2083, 0, "Challenge #3 Master");
    addMuseumItem(2084, 0, "Challenge #4 Master");
    addMuseumItem(2085, 0, "Challenge #5 Master");
    addMuseumItem(2086, 0, "Challenge #6 Master");
    addMuseumItem(2091, 0, "This is NOT a Restaurant");
    addMuseumItem(2092, 0, "Defenseless Warrior");
    addMuseumItem(2093, 0, "Peaceful Player");
    addMuseumItem(2094, 0, "Time Traveler");
    addMuseumItem(2095, 0, "FCG Master");
    addMuseumItem(2096, 0, "Zombie");
    addMuseumArmorSet(2101, 0, "Pre-Explosion");
    addMuseumItem(2106, 0, "Pre-Explosion Trophy");
    addMuseumItem(2111, 0, "\'FIRST!!!\' Sword");
    addMuseumItem(2112, 0, "Newbie Stick");
    addMuseumArmorSet(2121, 0, "Halloween");
    addMuseumItem(2126, 0, "Ghostslayer");
    addMuseumArmorSet(2131, 0, "Elite Lovely");
    addMuseumArmorSet(2141, 0, "2nd Anniversary");
    addMuseumItem(2146, 0, "2nd Anniversary Medal");
    addMuseumItem(2151, 0, "4 Million Plays Event Sword");
    addMuseumItem(2161, 0, "Anniversary Hat");
    addMuseumItem(2162, 0, "Anniversary Hat");
    addMuseumItem(2171, 0, "Nerf Accepted!");
    addMuseumItem(2181, 0, "Earrings of Activity");
    addMuseumItem(2182, 0, "Earrings of Activity");
    addMuseumItem(2183, 0, "Earrings of Activity");
    addMuseumItem(2184, 0, "Earrings of Activity");
    addMuseumItem(2185, 0, "Earrings of Activity");
    addMuseumItem(2186, 0, "Earrings of Activity");
    addMuseumItem(2187, 0, "Earrings of Activity");
    addMuseumItem(2188, 0, "Earrings of Activity");
    addMuseumItem(2189, 0, "Earrings of Activity");
    addMuseumItem(2190, 0, "Final Earrings of Activity");
    addMuseumItem(2191, 0, "[Event] Mystery Enhancer Identifier");
    addMuseumItem(2192, 0, "[Event] Mega Bullets");
    addMuseumItem(2193, 0, "[Event] Weapon Mystery Rock Lv. 10");
    addMuseumItem(2194, 0, "Armor Cleansing Rock");
    addMuseumItem(2195, 0, "Relic");
    addMuseumItem(2196, 0, "Anti-Curse Potion");
    addMuseumItem(2201, 0, "Pendant of Experience");
    addMuseumItem(2202, 0, "Pendant of Treasure");
    addMuseumItem(2203, 0, "Pendant of Greed");
    addMuseumItem(2204, 0, "Pendant of Luck");
    addMuseumItem(2205, 0, "Pendant of Encounter");
    addMuseumItem(2206, 0, "Pendant of Epicness");
    addMuseumItem(2207, 0, "Pendant of Accuracy");
    addMuseumItem(2208, 0, "Pendant of Nimbleness");
    addMuseumItem(2209, 0, "Pendant of Quickness");
    addMuseumItem(2210, 0, "Pendant of Regeneration");
    addMuseumItem(2211, 0, "Premium Sword (1)");
    addMuseumItem(2212, 0, "Premium Sword (2)");
    addMuseumItem(2213, 0, "Premium Sword (3)");
    addMuseumItem(2214, 0, "Evil Sword");
    addMuseumItem(2215, 0, "Pyrabow");
    addMuseumItem(2221, 1, "Adventurer\'s Trophy");
    addMuseumItem(2222, 1, "Sword of Ascendant");
    addMuseumItem(2223, 3, "Pirate Sword");
    addMuseumItem(2224, 3, "Elite Grenades");
    addMuseumItem(2231, 1, "Transparent Earrings");
    addMuseumItem(2232, 1, "Yellow Skin");
    addMuseumItem(2233, 1, "Invisible Skin");
    addMuseumItem(2234, 3, "Invisible Weapon");
    addMuseumItem(2235, 3, "Invisible Projectiles");
    addMuseumItem(2236, 3, "Invisible Weapon and Projectiles");
    addMuseumItem(2241, 0, "Kana Warrior");
    addMuseumItem(2242, 0, "Kana King");
    addMuseumItem(2291, 1, "4D Infinity Cube");
    i = 2341;
    while (i <= 2400) {
        addMuseumItem(i, 0, "Perfect Attendance");
        i++;
    }
    addMuseumArmorSet(2401, 0, "Festive");
    addMuseumItem(2406, 0, "Technical Trophy #1");
    addMuseumArmorSet(2411, 0, "Choco");
    addMuseumItem(2416, 0, "Technical Trophy #2");
    addMuseumArmorSet(2421, 0, "Lantern");
    addMuseumItem(2426, 0, "Technical Trophy #3");
    addMuseumItem(2501, 1, "Poison Arrows");
    addMuseumItem(2502, 1, "Explosive Arrows");
    addMuseumItem(2503, 1, "Mega Bullets");
    addMuseumItem(2504, 1, "Master Shurikens");
    addMuseumItem(2511, 1, "Spell Scroll - Fire");
    addMuseumItem(2512, 1, "Spell Scroll - Ice");
    addMuseumItem(2513, 1, "Spell Scroll - Wind");
    addMuseumItem(2514, 1, "Spell Scroll - Earth");
    addMuseumItem(2515, 1, "Spell Scroll - Thunder");
    addMuseumItem(2516, 1, "Spell Scroll - Water");
    addMuseumItem(2517, 1, "Spell Scroll - Light");
    addMuseumItem(2518, 1, "Spell Scroll - Dark");
    addMuseumItem(2521, 2, "Fire Card");
    addMuseumItem(2522, 2, "Ice Card");
    addMuseumItem(2523, 2, "Wind Card");
    addMuseumItem(2524, 2, "Earth Card");
    addMuseumItem(2525, 2, "Thunder Card");
    addMuseumItem(2526, 2, "Water Card");
    addMuseumItem(2527, 2, "Light Card");
    addMuseumItem(2528, 2, "Dark Card");
    addMuseumItem(2531, 2, "Poison Arrows [+]");
    addMuseumItem(2532, 2, "Explosive Arrows [+]");
    addMuseumItem(2533, 2, "Mega Bullets [+]");
    addMuseumItem(2534, 2, "Master Shurikens [+]");
    addMuseumItem(2541, 2, "Spell Scroll - Fire [+]");
    addMuseumItem(2542, 2, "Spell Scroll - Ice [+]");
    addMuseumItem(2543, 2, "Spell Scroll - Wind [+]");
    addMuseumItem(2544, 2, "Spell Scroll - Earth [+]");
    addMuseumItem(2545, 2, "Spell Scroll - Thunder [+]");
    addMuseumItem(2546, 2, "Spell Scroll - Water [+]");
    addMuseumItem(2547, 2, "Spell Scroll - Light [+]");
    addMuseumItem(2548, 2, "Spell Scroll - Dark [+]");
    addMuseumItem(2551, 4, "Fire Card [+]");
    addMuseumItem(2552, 4, "Ice Card [+]");
    addMuseumItem(2553, 4, "Wind Card [+]");
    addMuseumItem(2554, 4, "Earth Card [+]");
    addMuseumItem(2555, 4, "Thunder Card [+]");
    addMuseumItem(2556, 4, "Water Card [+]");
    addMuseumItem(2557, 4, "Light Card [+]");
    addMuseumItem(2558, 4, "Dark Card [+]");
    addMuseumItem(2581, 123, "Tukkonium Dagger");
    addMuseumItem(2582, 123, "Tukkonium Sword");
    addMuseumItem(2583, 123, "Tukkonium Spear");
    addMuseumItem(2584, 123, "Tukkonium Axe");
    addMuseumItem(2585, 123, "Tukkonium Bow");
    addMuseumItem(2586, 123, "Tukkonium Gun");
    addMuseumItem(2587, 123, "Tukkonium Staff");
    addMuseumItem(2588, 123, "Tukkonium Claw");
    addMuseumItem(2589, 123, "Tukkonium Stick");
    addMuseumArmorSet(2591, 123, "Tukkonium");
    addMuseumItem(2596, 123, "Tukkonium Skin");
    console.log("MAX: " + _root.museumMaxValue + " CP (" + _root.museumMaxItem + " items)");
}

export function step4createAndUpgradeSave() {
    function addSaveVar(varName, varValue) {
        if (_root.save[varName] == undefined || isNaN(_root.save[varName]) && !isNaN(varValue) && _root.saveid != -1) {
            _root.save[varName] = varValue;
        }
    }
    _root.autoBanned = 0;
    _root.systemclock = new Date();
    _root.systemtimenow = _root.systemclock.getTime();
    _root.globalSetting = SharedObject.getLocal("ATG_Global", "/");
    _root.my_so = SharedObject.getLocal("antiIdle_file0", "/");
    _root.another_so = SharedObject.getLocal("antiIdle_temp", "/");
    if (isNaN(_root.saveid)) {
        _root.saveid = -1;
    }
    if (_root.saveid == 0) {
        _root.my_so = SharedObject.getLocal("antiIdle_file0", "/");
    }
    if (_root.saveid == 1) {
        _root.my_so = SharedObject.getLocal("antiIdle_file1", "/");
    }
    if (_root.saveid == 2) {
        _root.my_so = SharedObject.getLocal("antiIdle_file2", "/");
    }
    if (_root.saveid == 3) {
        _root.my_so = SharedObject.getLocal("antiIdle_file3", "/");
    }
    if (_root.saveid == 4) {
        _root.my_so = SharedObject.getLocal("antiIdle_file4", "/");
    }
    if (_root.saveid == 10) {
        _root.my_so = SharedObject.getLocal("antiIdle_file10", "/");
    }
    if (_root.saveid == 11) {
        _root.my_so = SharedObject.getLocal("antiIdle_file11", "/");
    }
    if (_root.saveid == 12) {
        _root.my_so = SharedObject.getLocal("antiIdle_file12", "/");
    }
    if (_root.saveid == 13) {
        _root.my_so = SharedObject.getLocal("antiIdle_file13", "/");
    }
    if (_root.saveid >= 20) {
        _root.my_so = SharedObject.getLocal("antiIdle_file" + _root.saveid, "/");
    }
    if (_root.craftTool == true) {
        _root.my_so = SharedObject.getLocal("tukkun_craftSim", "/");
    }
    var save = _root.my_so.data;
    var saveGlobal = _root.globalSetting.data;
    if (_root.saveGlobal.graphicQuality == undefined) {
        _root.saveGlobal.graphicQuality = "HIGH";
        _root.saveGlobal.keyboardLayout = "qwerty";
    }
    if (_root.saveGlobal.showTitle == undefined) {
        _root.saveGlobal.showTitle = true;
    }
    if (_root.saveGlobal.aurianMode == undefined) {
        _root.saveGlobal.aurianMode = false;
    }
    if (isNaN(_root.saveGlobal.latestVersion)) {
        _root.saveGlobal.latestVersion = 1380;
    }
    if (_root.saveGlobal.speedrunUnlock0 == undefined) {
        _root.saveGlobal.speedrunUnlock0 = false;
        _root.saveGlobal.speedrunUnlock1 = false;
        _root.saveGlobal.speedrunUnlock2 = false;
        _root.saveGlobal.speedrunUnlock3 = false;
    }
    if (_root.saveGlobal.challengePerfect == undefined) {
        _root.saveGlobal.challengeTime = new Array();
        _root.saveGlobal.challengeAttempted = new Array();
        _root.saveGlobal.challengePerfect = new Array();
    }
    if (_root.saveGlobal.breakTab1 == undefined) {
        _root.saveGlobal.breakTab1 = new Array();
        _root.saveGlobal.breakTab2 = new Array();
        _root.saveGlobal.breakTab3 = new Array();
        _root.saveGlobal.breakTab4 = new Array();
        _root.saveGlobal.breakAll = new Array();
        _root.saveGlobal.breakFeature = new Array();
        _root.saveGlobal.breakR = new Array();
        _root.saveGlobal.breakG = new Array();
        _root.saveGlobal.breakB = new Array();
    }
    if (_root.saveGlobal.adminMode == undefined) {
        _root.saveGlobal.adminMode = "";
    }
    if (_root.saveGlobal.defTab == undefined) {
        _root.saveGlobal.defTab = 2;
    }
    if (_root.saveGlobal.selectedSave == undefined) {
        _root.saveGlobal.selectedSave = 0;
        _root.saveGlobal.playTime = ["?", "?", "?", "?"];
        _root.saveGlobal.curLevel = ["", "", "", ""];
        _root.saveGlobal.ascCount = ["", "", "", ""];
    }
    if (_root.saveGlobal.skipMenu == undefined) {
        _root.saveGlobal.skipMenu = false;
    }
    if (_root.saveGlobal.keyArenaZ == undefined) {
        _root.saveGlobal.keyArenaZ = 90;
        _root.saveGlobal.keyArenaX = 88;
        _root.saveGlobal.keyArenaC = 67;
        _root.saveGlobal.keyArenaV = 86;
        _root.saveGlobal.keyArenaB = 66;
        _root.saveGlobal.keyArenaA = 65;
        _root.saveGlobal.keyArenaS = 83;
        _root.saveGlobal.keyArenaD = 68;
        _root.saveGlobal.keyArenaF = 70;
        _root.saveGlobal.keyArenaQ = 81;
        _root.saveGlobal.keyArenaW = 87;
        _root.saveGlobal.keyPongUp1 = 38;
        _root.saveGlobal.keyPongUp2 = 87;
        _root.saveGlobal.keyPongDown1 = 40;
        _root.saveGlobal.keyPongDown2 = 83;
        _root.saveGlobal.keyMmrLeft1 = 37;
        _root.saveGlobal.keyMmrLeft2 = 65;
        _root.saveGlobal.keyMmrDown1 = 40;
        _root.saveGlobal.keyMmrDown2 = 83;
        _root.saveGlobal.keyMmrRight1 = 39;
        _root.saveGlobal.keyMmrRight2 = 68;
        _root.saveGlobal.keyBalLeft1 = 37;
        _root.saveGlobal.keyBalLeft2 = 65;
        _root.saveGlobal.keyBalDown1 = 40;
        _root.saveGlobal.keyBalDown2 = 83;
        _root.saveGlobal.keyBalRight1 = 39;
        _root.saveGlobal.keyBalRight2 = 68;
    }
    if (_root.saveid <= 3) {
        if (_root.save.dbExp > 100 || _root.save.dbCoin > 100 || _root.save.dbGreenCoin > 100 || _root.save.dbBlueCoin > 100) {
            if (_root.save.safeHacking == false && _root.save.submitScore == true) {
                _root.my_so.clear();
                _root.gotoAndStop(1);
            }
        }
    }
    if (_root.saveid < 10 || _root.saveid >= 20) {
        addSaveVar("lockedFile", false);
    }
    else {
        addSaveVar("lockedFile", true);
    }
    addSaveVar("pleaseRead", "If you wish to hack, please turn Safe Hacking Mode on by changing the safeHacking variable to true (ticking the box in .sol Editor).");
    addSaveVar("safeHacking", false);
    if (_root.saveid < 20) {
        addSaveVar("submitScore", false);
        addSaveVar("submitScoreConfirm", false);
    }
    else {
        addSaveVar("submitScore", false);
        addSaveVar("submitScoreConfirm", true);
    }
    addSaveVar("refundReceived", false);
    addSaveVar("refundCooldown", 0);
    addSaveVar("refundTier", 0);
    addSaveVar("refundCode", 0);
    addSaveVar("noobMode", false);
    addSaveVar("noobMode2", false);
    addSaveVar("cheatEnabled", false);
    addSaveVar("offlineProgress", false);
    addSaveVar("offlineProgressFirst", false);
    addSaveVar("offlineProgressPromo", false);
    addSaveVar("gOldAscension", false);
    addSaveVar("gDifficulty", 1);
    addSaveVar("newbieSupport", 0);
    addSaveVar("bankCoin", 0);
    addSaveVar("bankGreenCoin", 0);
    addSaveVar("bankBlueCoin", 0);
    addSaveVar("bankGardenFruit", 0);
    addSaveVar("bankGardenPoint", 0);
    addSaveVar("bankArenaPixel", 0);
    addSaveVar("bankArenaCraft", 0);
    addSaveVar("dbExp", 100);
    addSaveVar("dbCoin", 100);
    addSaveVar("dbGreenCoin", 100);
    addSaveVar("dbBlueCoin", 100);
    addSaveVar("todayCode", 0);
    addSaveVar("consecutiveDays", 1);
    addSaveVar("maxConsecutiveDays", 1);
    addSaveVar("dailyPending", false);
    addSaveVar("restTime", 0);
    addSaveVar("restEfficiency", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("doubleExpTime", 0);
    addSaveVar("doubleCoinTime", 0);
    addSaveVar("rewardBotTime", 0);
    addSaveVar("autoHarvestTime", 0);
    addSaveVar("eliteButtonTime", 0);
    addSaveVar("batteryChargerTime", 0);
    addSaveVar("stadiumProTime", 0);
    addSaveVar("powerUserTime", 0);
    addSaveVar("demandMasterTime", 0);
    addSaveVar("quickAdventuresTime", 0);
    addSaveVar("eliteFisherTime", 0);
    addSaveVar("noAntsTime", 0);
    addSaveVar("doubleQuestTime", 0);
    addSaveVar("totalPlays", 0);
    addSaveVar("firstPlayed", _root.systemtimenow);
    addSaveVar("lastPlayed", _root.systemtimenow);
    addSaveVar("totalPlayTime", 0);
    addSaveVar("ascendPlayTime", 0);
    addSaveVar("longestSession", 0);
    addSaveVar("longestQuit", 0);
    addSaveVar("mainStatPage", 1);
    addSaveVar("challengeAttempted", [false]);
    addSaveVar("challengeClear", [false]);
    addSaveVar("challengePerfect", [false]);
    addSaveVar("expGraph", [0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("expGraph2", [0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("expSauce", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("coinSauce", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("expSauceAsc", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("viewStat", 0);
    addSaveVar("viewAchievement", 0);
    addSaveVar("viewEvent", 0);
    addSaveVar("viewQuest", 0);
    addSaveVar("viewOption", 0);
    addSaveVar("manualSave", 0);
    addSaveVar("totalMute", 0);
    addSaveVar("newbieProgress", 0);
    addSaveVar("maxAchievement", 0);
    addSaveVar("trackachnum", 0);
    addSaveVar("userTitle", "Welcome to Anti-Idle!");
    addSaveVar("achEarnTime", new Array());
    addSaveVar("mainQuestRank", new Array());
    addSaveVar("mainQuestC", 0);
    addSaveVar("mainQuestB", 0);
    addSaveVar("mainQuestA", 0);
    addSaveVar("mainQuestS", 0);
    addSaveVar("mainQuestCount", 0);
    addSaveVar("questDifficulty", 5);
    addSaveVar("questFeature", "Main");
    addSaveVar("questType", "Level Up");
    addSaveVar("questSubtype", "Any");
    addSaveVar("questNeed", 100);
    addSaveVar("questCurrent", 1);
    addSaveVar("questReward", "Legendary Box");
    addSaveVar("questRewardQuan", 1);
    addSaveVar("questRewardBlueCoin", 1000);
    addSaveVar("questRewardToken", 1000);
    addSaveVar("questBot", 0);
    addSaveVar("questCount", 0);
    addSaveVar("questRecord", 0);
    addSaveVar("questTotal", 0);
    addSaveVar("questToday", 0);
    addSaveVar("questSkipToday", 0);
    addSaveVar("questInstaToday", 0);
    addSaveVar("questStreak", 0);
    addSaveVar("questDescA", "Reach level");
    addSaveVar("questDescB", "to unlock other quests. An alternative way is to forfeit this quest.");
    addSaveVar("questTargetDiff", 15);
    addSaveVar("shinyToken", 0);
    addSaveVar("questToken", 0);
    addSaveVar("eventToken", 0);
    addSaveVar("eventTokenToday", 0);
    addSaveVar("hyperDay", [0, 0, 0]);
    addSaveVar("hyperDayDel", 2);
    addSaveVar("hyperDayRem", 3);
    addSaveVar("hyperDayCount", 0);
    addSaveVar("regretRem", 1);
    addSaveVar("arenaSampleCraft", 3);
    addSaveVar("specialShopVisit", 0);
    addSaveVar("featureSpecialShop", false);
    addSaveVar("specialStock", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("bestLevel", 1);
    addSaveVar("level", 1);
    addSaveVar("cursornum", 1);
    addSaveVar("bgNum", 8);
    addSaveVar("currentExp", 0);
    addSaveVar("totalExp", 0);
    addSaveVar("bestExp", 0);
    addSaveVar("expLag", 0);
    addSaveVar("coinLag", 0);
    addSaveVar("expFrame", 0);
    addSaveVar("coinFrame", 0);
    addSaveVar("greenCoinFrame", 0);
    addSaveVar("blueCoinFrame", 0);
    addSaveVar("dt", 0);
    addSaveVar("coin", 10000);
    addSaveVar("greenCoin", 0);
    addSaveVar("blueCoin", 0);
    addSaveVar("whiteCoin", 0);
    addSaveVar("whiteCoinRefund", 0);
    addSaveVar("whiteCoinRefundTotal", 0);
    addSaveVar("coinMax", 10000);
    addSaveVar("greenCoinMax", 0);
    addSaveVar("blueCoinMax", 0);
    addSaveVar("whiteCoinMax", 0);
    addSaveVar("coinOvercap", 0);
    addSaveVar("greenCoinOvercap", 0);
    addSaveVar("blueCoinOvercap", 0);
    addSaveVar("reforgingCoin", 0);
    addSaveVar("reforgingGreenCoin", 0);
    addSaveVar("reforgingBlueCoin", 0);
    addSaveVar("reforgingOrb1", 0);
    addSaveVar("reforgingOrb2", 0);
    addSaveVar("reforgingOrb3", 0);
    addSaveVar("reforgingOrbTotal1", 0);
    addSaveVar("reforgingOrbTotal2", 0);
    addSaveVar("reforgingOrbTotal3", 0);
    addSaveVar("autoAscendEnabled1", 0);
    addSaveVar("autoAscendEnabled2", 0);
    addSaveVar("autoAscendEnabled3", 0);
    addSaveVar("autoAscendCount1", 0);
    addSaveVar("autoAscendCount2", 0);
    addSaveVar("autoAscendCount3", 0);
    addSaveVar("autoAp", 0);
    addSaveVar("reforgeMode", 1);
    addSaveVar("redCoinSpent", 0);
    addSaveVar("wcDropToday", 0);
    addSaveVar("progFrag", 0);
    addSaveVar("rewardClaim", 0);
    addSaveVar("rewardClaimAuto", 0);
    addSaveVar("rewardClaimManual", 0);
    addSaveVar("progFirstRestock", false);
    addSaveVar("progTutorial", false);
    addSaveVar("restTutorial", false);
    addSaveVar("progSpeedAuto", 30);
    addSaveVar("progSpeedManual", 100);
    addSaveVar("progModuleName", ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]);
    addSaveVar("progModuleTier", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progModuleSize", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progModuleShiny", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progModuleType", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progModuleChance", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progModuleEffect", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progModuleCost", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progModuleScroll", 0);
    addSaveVar("progModuleSlot", 30);
    addSaveVar("progStore", 100);
    addSaveVar("megaBoostPotion", 0);
    addSaveVar("boostPotion", 0);
    addSaveVar("boostFreeze", 0);
    addSaveVar("boost", 100);
    addSaveVar("boostProg", 100);
    addSaveVar("boostExp", 100);
    addSaveVar("boostCoin", 100);
    addSaveVar("boostMax", 500);
    addSaveVar("boostMin", 100);
    addSaveVar("boostPremium", 0);
    addSaveVar("boostZebra", 0);
    addSaveVar("boostTemp", 0);
    addSaveVar("boostPurchased", 0);
    addSaveVar("ants", 100);
    addSaveVar("speedRun9001", 2147483647);
    addSaveVar("speedRun9002", 2147483647);
    addSaveVar("speedRunAscend", 2147483647);
    addSaveVar("speedRunAscendHard", 2147483647);
    addSaveVar("speedRunAscendImpossible", 2147483647);
    addSaveVar("count9002", 0);
    addSaveVar("speedRunMode1000", 2147483647);
    addSaveVar("speedRunMode2000", 2147483647);
    addSaveVar("speedRunMode3000", 2147483647);
    addSaveVar("speedRunMode4000", 2147483647);
    addSaveVar("speedRunMode5000", 2147483647);
    addSaveVar("speedRunMode6000", 2147483647);
    addSaveVar("speedRunMode7000", 2147483647);
    addSaveVar("speedRunMode8000", 2147483647);
    addSaveVar("speedRunMode9000", 2147483647);
    addSaveVar("speedRunMode9001", 2147483647);
    addSaveVar("speedRunClear", 0);
    addSaveVar("speedRunScore", 0);
    addSaveVar("speedRunCoin", 0);
    addSaveVar("speedRunTotalCoin", 0);
    addSaveVar("speedRunNextDay", 1440);
    addSaveVar("petExist", 0);
    addSaveVar("petName", "");
    addSaveVar("petBestLevel", 0);
    addSaveVar("petFullness", 0);
    addSaveVar("petHealth", 0);
    addSaveVar("petMana", 0);
    addSaveVar("petStat", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("petFullnessRestore", 1);
    addSaveVar("petHealthRestore", 1);
    addSaveVar("deadPetName", "");
    addSaveVar("deadPetStat", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("botLevel", 1);
    addSaveVar("botExp", 0);
    addSaveVar("botEnergy", 14400);
    addSaveVar("botPoint", 1000);
    addSaveVar("botOp", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("botTrain", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("botActive", false);
    addSaveVar("botCurrentOp", 0);
    addSaveVar("botCurrentOpNum", 0);
    addSaveVar("botCurrentOpMax", 0);
    addSaveVar("botCurrentOpTime", 0);
    addSaveVar("botPill", 0);
    addSaveVar("botPillCrafted", 0);
    addSaveVar("botPillUsed", 0);
    addSaveVar("botMaxTask", 0);
    addSaveVar("banned", 0);
    addSaveVar("bannedHard", 0);
    addSaveVar("bannedImpossible", 0);
    addSaveVar("banned1662", 0);
    addSaveVar("bannedB", 0);
    addSaveVar("idleMode", false);
    addSaveVar("boostAuto", false);
    addSaveVar("boostAuto2", false);
    addSaveVar("boostAutoPct", 100);
    addSaveVar("boostAutoCondition", 4);
    addSaveVar("boostAutoMax", 150);
    addSaveVar("boostAutoToday", 0);
    addSaveVar("newHouseStick", 0);
    addSaveVar("newHouseHead", 0);
    addSaveVar("newHouseEyes", 0);
    addSaveVar("newHouseMouth", 0);
    addSaveVar("newHouseHat", 0);
    addSaveVar("newHouseGlasses", 0);
    addSaveVar("newHouseShirt", 0);
    addSaveVar("newHouseLeftHand", 0);
    addSaveVar("newHouseRightHand", 0);
    addSaveVar("newHousePants", 0);
    addSaveVar("newHouseShoes", 0);
    addSaveVar("newHouseFloor", 0);
    addSaveVar("newHouseWall", 0);
    addSaveVar("newHouseWindow", 0);
    addSaveVar("newHouseWallObject", 0);
    addSaveVar("newHouseDesk", 0);
    addSaveVar("newHouseDeskObject", 0);
    addSaveVar("newHouseBackObject", 0);
    addSaveVar("newHouseFrontObject", 0);
    addSaveVar("newHousePet", 0);
    addSaveVar("newHouseCover", 0);
    addSaveVar("newHouseUStick", [1]);
    addSaveVar("newHouseUHead", [1]);
    addSaveVar("newHouseUEyes", [1]);
    addSaveVar("newHouseUMouth", [1]);
    addSaveVar("newHouseUHat", [1]);
    addSaveVar("newHouseUGlasses", [1]);
    addSaveVar("newHouseUShirt", [1]);
    addSaveVar("newHouseULeftHand", [1]);
    addSaveVar("newHouseURightHand", [1]);
    addSaveVar("newHouseUPants", [1]);
    addSaveVar("newHouseUShoes", [1]);
    addSaveVar("newHouseUFloor", [1]);
    addSaveVar("newHouseUWall", [1]);
    addSaveVar("newHouseUWindow", [1]);
    addSaveVar("newHouseUWallObject", [1]);
    addSaveVar("newHouseUDesk", [1]);
    addSaveVar("newHouseUDeskObject", [1]);
    addSaveVar("newHouseUBackObject", [1]);
    addSaveVar("newHouseUFrontObject", [1]);
    addSaveVar("newHouseUPet", [1]);
    addSaveVar("newHouseUCover", [1]);
    addSaveVar("newHouseXWindow", 220);
    addSaveVar("newHouseXWallObject", 400);
    addSaveVar("newHouseXDesk", 180);
    addSaveVar("newHouseXBackObject", 195);
    addSaveVar("newHouseXFrontObject", 0);
    addSaveVar("newHouseXPet", 350);
    addSaveVar("newHouseXStickman", 80);
    addSaveVar("newHouseFloor", 2);
    addSaveVar("blackHoleCoin", 0);
    addSaveVar("blackHoleGreenCoin", 0);
    addSaveVar("blackHoleBlueCoin", 0);
    addSaveVar("blackHoleWhiteCoin", 0);
    addSaveVar("blackHoleCoinRem", 0);
    addSaveVar("blackHoleGreenCoinRem", 0);
    addSaveVar("blackHoleBlueCoinRem", 0);
    addSaveVar("houseRoom1", false);
    addSaveVar("houseRoom2", false);
    addSaveVar("houseRoom3", false);
    addSaveVar("houseWood", 0);
    addSaveVar("houseBrick", 0);
    addSaveVar("houseNail", 0);
    addSaveVar("housePaint", 0);
    addSaveVar("houseMagicRock", 0);
    addSaveVar("houseWhiteCoin", 0);
    addSaveVar("houseWhiteCoinMax", 0);
    addSaveVar("houseActivityCrystal", 0);
    addSaveVar("houseActivityCrystalToday", 0);
    addSaveVar("houseActivityCrystalMax", 0);
    addSaveVar("houseAchievementCrystal", 0);
    addSaveVar("houseQuestCrystal", 0);
    addSaveVar("houseAscensionCrystal", 0);
    addSaveVar("houseFloorUnlocked", [0, 1]);
    addSaveVar("houseWallUnlocked", [0, 1]);
    addSaveVar("houseObjectUnlocked", [0, 1]);
    addSaveVar("houseSkinUnlocked", [0, 1]);
    addSaveVar("houseBorderUnlocked", [0, 1]);
    addSaveVar("houseHatUnlocked", [0, 1]);
    addSaveVar("houseLeftEyeUnlocked", [0, 1]);
    addSaveVar("houseRightEyeUnlocked", [0, 1]);
    addSaveVar("houseGlassesUnlocked", [0, 1]);
    addSaveVar("houseMouthUnlocked", [0, 1]);
    addSaveVar("houseShirtUnlocked", [0, 1]);
    addSaveVar("houseLeftHandUnlocked", [0, 1]);
    addSaveVar("houseRightHandUnlocked", [0, 1]);
    addSaveVar("housePantsUnlocked", [0, 1]);
    addSaveVar("houseLeftFootUnlocked", [0, 1]);
    addSaveVar("houseRightFootUnlocked", [0, 1]);
    addSaveVar("houseVer", 0);
    addSaveVar("houseFloor", 1);
    addSaveVar("houseWall", 1);
    addSaveVar("houseObject", 1);
    addSaveVar("houseSkin", 1);
    addSaveVar("houseBorder", 1);
    addSaveVar("houseHat", 1);
    addSaveVar("houseLeftEye", 1);
    addSaveVar("houseRightEye", 1);
    addSaveVar("houseGlasses", 1);
    addSaveVar("houseMouth", 1);
    addSaveVar("houseShirt", 1);
    addSaveVar("houseLeftHand", 1);
    addSaveVar("houseRightHand", 1);
    addSaveVar("housePants", 1);
    addSaveVar("houseLeftFoot", 1);
    addSaveVar("houseRightFoot", 1);
    addSaveVar("houseX1", 100);
    addSaveVar("houseY1", 60);
    addSaveVar("houseX2", 180);
    addSaveVar("houseY2", 280);
    addSaveVar("houseX3", 230);
    addSaveVar("houseY3", 250);
    addSaveVar("houseBestThrow1", 0);
    addSaveVar("houseBestThrow2", 0);
    addSaveVar("houseFurniture1", false);
    addSaveVar("houseFurniture2", false);
    addSaveVar("houseFurniture3", false);
    addSaveVar("houseFurniture4", false);
    addSaveVar("houseFurniture5", false);
    addSaveVar("houseFurniture6", false);
    addSaveVar("houseFurniture7", false);
    addSaveVar("houseFurniture8", false);
    addSaveVar("houseFurniture9", false);
    addSaveVar("houseFurniture10", false);
    addSaveVar("houseFurniture11", false);
    addSaveVar("featureIdleMode", false);
    addSaveVar("featureBoostGen", false);
    addSaveVar("featureBoostAuto", false);
    addSaveVar("featureGarden", false);
    addSaveVar("featureBattleArena", false);
    addSaveVar("featureButtonMachine", false);
    addSaveVar("featureMoneyPrinter", false);
    addSaveVar("featureMysteryShop", false);
    addSaveVar("featureArcade", false);
    addSaveVar("featureStadium", false);
    addSaveVar("featureAutoSprayer", false);
    addSaveVar("featureEpicLicense", false);
    addSaveVar("featureTukkunFCG", false);
    addSaveVar("featureLolMarket", false);
    addSaveVar("featureAwesomeAdventures", false);
    addSaveVar("featureFishing", false);
    addSaveVar("featureSeppuku", false);
    addSaveVar("featureInstantWin", false);
    addSaveVar("featureTechnicalLight", false);
    addSaveVar("featureMiniGarden", false);
    addSaveVar("featureBestiary", false);
    addSaveVar("featureTravelingTicket", false);
    addSaveVar("featureSuperBattery", false);
    addSaveVar("featureArcadePack", false);
    addSaveVar("featureManualSprayer", false);
    addSaveVar("featureSpecialSprayer", false);
    addSaveVar("featureDoomSprayer", false);
    addSaveVar("featureEnergyToolbar", false);
    addSaveVar("featureCardToolbar", false);
    addSaveVar("featurePetFeedBar", false);
    addSaveVar("featurePremiumSprayer", false);
    addSaveVar("featureTitleEditor", false);
    addSaveVar("featureSecretShop", false);
    addSaveVar("featureNewHouse", false);
    addSaveVar("featureFactory", false);
    addSaveVar("serviceOfflineGrind", false);
    addSaveVar("serviceRewardBot", false);
    addSaveVar("serviceAutoHarvest", false);
    addSaveVar("serviceEliteButton", false);
    addSaveVar("serviceBatteryCharger", false);
    addSaveVar("serviceStadiumPro", false);
    addSaveVar("serviceFCGPowerUser", false);
    addSaveVar("serviceDemandMaster", false);
    addSaveVar("serviceQuickAdventures", false);
    addSaveVar("serviceDoubleQuest", false);
    addSaveVar("serviceNoAnts", false);
    addSaveVar("bgred", 30);
    addSaveVar("bggreen", 25);
    addSaveVar("bgblue", 20);
    addSaveVar("titlered", 255);
    addSaveVar("titlegreen", 255);
    addSaveVar("titleblue", 255);
    addSaveVar("ripoffCard", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("aprilFoolsBest", 0);
    addSaveVar("progBoxCount", 0);
    addSaveVar("progBoxToday", 0);
    addSaveVar("legendaryBoxOpened", 0);
    addSaveVar("supplyCrateOpened", 0);
    addSaveVar("explosionCrateOpened", 0);
    addSaveVar("awesomeCrateOpened", 0);
    addSaveVar("chaosCrateOpened", 0);
    addSaveVar("apocalypseCrateOpened", 0);
    addSaveVar("pixelatedMysteryBoxOpened", 0);
    addSaveVar("mysteryBox", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("mysteryBoxCollect1", new Array());
    addSaveVar("mysteryBoxCollect2", new Array());
    addSaveVar("mysteryBoxCollect3", new Array());
    addSaveVar("mysteryBoxCollect4", new Array());
    addSaveVar("mysteryBoxCollect5", new Array());
    addSaveVar("mysteryBoxCollect6", new Array());
    addSaveVar("mysteryBoxCollect7", new Array());
    addSaveVar("mysteryBoxCollect8", new Array());
    addSaveVar("mysteryBoxCollect9", new Array());
    addSaveVar("mysteryBoxCollect10", new Array());
    addSaveVar("mysteryBoxCollect9001", new Array());
    addSaveVar("mysteryBoxBan1", new Array());
    addSaveVar("mysteryBoxBan2", new Array());
    addSaveVar("mysteryBoxBan3", new Array());
    addSaveVar("mysteryBoxBan4", new Array());
    addSaveVar("mysteryBoxBan5", new Array());
    addSaveVar("mysteryBoxBan6", new Array());
    addSaveVar("mysteryBoxBan7", new Array());
    addSaveVar("mysteryBoxBan8", new Array());
    addSaveVar("mysteryBoxBan9", new Array());
    addSaveVar("mysteryBoxBan10", new Array());
    addSaveVar("harvestCount", 0);
    addSaveVar("harvestCoin", 0);
    addSaveVar("harvestMillion", 0);
    addSaveVar("gardenFertilizer", 5);
    addSaveVar("gardenMegaFertilizer", 1);
    addSaveVar("gardenFertilizerAllow", 0);
    addSaveVar("gardenPoint", 0);
    addSaveVar("gardenPointMax", 0);
    addSaveVar("gardenCapacity", 1);
    addSaveVar("gardenEXP", 0);
    addSaveVar("gardenSlotEXP", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("gardenTrees", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("gardenMastery", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("gardenSeed", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("gardenSlotGrade", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("gardenGrade11", 0);
    addSaveVar("gardenGrade12", 0);
    addSaveVar("gardenAnotherHarvest", 0);
    addSaveVar("gardenAnotherMastery", 0);
    addSaveVar("aagStat1", 50);
    addSaveVar("aagStat2", 50);
    addSaveVar("aagStat3", 50);
    addSaveVar("aagStat4", 50);
    addSaveVar("gardenBreed0", 0);
    addSaveVar("gardenBreed1", 0);
    addSaveVar("gardenBreedReward", 0);
    addSaveVar("gardenBreedRewardC", 0);
    addSaveVar("gardenResearch", 0);
    addSaveVar("gardenBreedTotal", 0);
    addSaveVar("gardenFruit", 0);
    addSaveVar("gardenFruitMax", 0);
    addSaveVar("gardenFullness", 0);
    addSaveVar("gardenHarvestTime", new Array());
    addSaveVar("gardenRecentTime", new Array());
    addSaveVar("gardenExpiryTime", new Array());
    addSaveVar("gardenPurchaseTime", new Array());
    addSaveVar("gardenHarvestValue", new Array());
    addSaveVar("gardenTreeExp", new Array());
    addSaveVar("gardenTreeFertilize", new Array());
    addSaveVar("gardenTreeModuleProc", new Array());
    if (isNaN(_root.save.gardenSlotEXP[1])) {
        _root.save.gardenSlotEXP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    }
    if (isNaN(_root.save.gardenTrees[1])) {
        _root.save.gardenTrees = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    }
    if (isNaN(_root.save.gardenTrees[50])) {
        i = 26;
        while (i <= 50) {
            _root.save.gardenSlotEXP[i] = 0;
            _root.save.gardenTrees[i] = 0;
            i++;
        }
        i = 26;
        while (i <= 100) {
            _root.save.gardenMastery[i] = 0;
            i++;
        }
    }
    addSaveVar("arenaTutorial", 0);
    addSaveVar("arenaBonusPreference1", "None");
    addSaveVar("arenaBonusPreference2", "None");
    addSaveVar("arenaAbilityPreference1", "None");
    addSaveVar("arenaAbilityPreference2", "None");
    addSaveVar("arenaAbilityPreference3", "None");
    addSaveVar("arenaMoreBonusPreference1", "None");
    addSaveVar("arenaMoreBonusPreference2", "None");
    addSaveVar("filterPref1t", 1);
    addSaveVar("filterPref2t", 9999);
    addSaveVar("filterPref3t", 1);
    addSaveVar("filterPref4t", 9001);
    addSaveVar("filterPref5t", "Reward");
    addSaveVar("filterPref6t", "Attack: Regular");
    addSaveVar("filterPref7t", "Dummy");
    addSaveVar("filterPref8t", 0);
    addSaveVar("filterPref9t", 15);
    addSaveVar("filterPref1c", false);
    addSaveVar("filterPref2c", false);
    addSaveVar("filterPref3c", false);
    addSaveVar("filterPref4c", false);
    addSaveVar("filterPref5c", false);
    addSaveVar("filterPref6c", false);
    addSaveVar("filterPref7c", false);
    addSaveVar("filterPref8c", false);
    addSaveVar("filterPref9c", false);
    addSaveVar("filterPref10c", false);
    addSaveVar("filterPref11c", false);
    addSaveVar("filterPref12c", false);
    addSaveVar("filterPref13c", false);
    addSaveVar("collectionPoint", 0);
    addSaveVar("collectionPointMax", 0);
    addSaveVar("collectionPointTrophy", 0);
    addSaveVar("battlePoint", 0);
    addSaveVar("battleReward", 0);
    addSaveVar("battleDaily", false);
    addSaveVar("arenaLoot", 0);
    addSaveVar("arenaPixel", 0);
    addSaveVar("arenaPixelMax", 0);
    addSaveVar("arenaCraft", 0);
    addSaveVar("arenaCraftMax", 0);
    addSaveVar("arenaMaxDamage", 0);
    addSaveVar("arenaBacon", 0);
    addSaveVar("freeBacon1", 25);
    addSaveVar("freeBacon2", 50);
    addSaveVar("robaconLevel", 1);
    addSaveVar("robaconExp", 0);
    addSaveVar("robaconExpTotal", 0);
    addSaveVar("robaconSP", 0);
    addSaveVar("robaconBacon", 100);
    addSaveVar("vegetarianMode", false);
    addSaveVar("arenaBuffDuration", 0);
    addSaveVar("arenaBuffType", 0);
    addSaveVar("arenaRuneLevel", [0, 1, 1, 1, 1, 1, 1]);
    addSaveVar("arenaRuneAuto", [false, false, false, false, false, false, false]);
    addSaveVar("arenaRuneDuration", [0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaWeapon", 1);
    addSaveVar("arenaSubWeapon", 0);
    addSaveVar("arenaHat", 101);
    addSaveVar("arenaShirt", 102);
    addSaveVar("arenaGloves", 103);
    addSaveVar("arenaPants", 104);
    addSaveVar("arenaShoes", 105);
    addSaveVar("arenaMedal", 0);
    addSaveVar("arenaPendant", 0);
    addSaveVar("arenaEarring", 0);
    addSaveVar("arenaTrinket", 0);
    addSaveVar("arenaSkin", 0);
    addSaveVar("arenaOutfitHat", 0);
    addSaveVar("arenaOutfitShirt", 0);
    addSaveVar("arenaOutfitGloves", 0);
    addSaveVar("arenaOutfitPants", 0);
    addSaveVar("arenaOutfitShoes", 0);
    addSaveVar("arenaOutfitSkin", 0);
    addSaveVar("arenaOutfitEarring", 0);
    addSaveVar("arenaOutfitMedal", 0);
    addSaveVar("arenaOutfitWeapon", 0);
    addSaveVar("arenaRing", 0);
    addSaveVar("arenaRingOwned", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaCrystal1", 0);
    addSaveVar("arenaCrystal2", 0);
    addSaveVar("roflRing", 0);
    addSaveVar("roflPendant", 0);
    addSaveVar("medalColor", 3);
    addSaveVar("disableDrawing", false);
    addSaveVar("disableManaEffect", false);
    addSaveVar("visibleRing", true);
    addSaveVar("drawingBoardHex", new Array());
    addSaveVar("drawingBoardAlp", new Array());
    addSaveVar("arenaPotion", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaFilter", "Item Name 1,Item Name 2");
    addSaveVar("arenaEvent", 0);
    addSaveVar("arenaEventPoint", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaEventReward", new Array());
    addSaveVar("arenaEventKey", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaAuto", 0);
    addSaveVar("arenaAutoTime", 0);
    addSaveVar("arenaLevel", 1);
    addSaveVar("arenaExp", 0);
    addSaveVar("arenaExpTotal", 0);
    addSaveVar("arenaExpExcess", 0);
    addSaveVar("arenaSP", 20);
    addSaveVar("arenaUltimateSP", 0);
    addSaveVar("arenaSkill", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaSkillMax", [0, 30, 30, 30, 30, 10, 1, 1, 1, 10, 10, 20, 20, 30, 30, 30, 20, 0, 30, 10, 30, 10, 30, 30, 10, 30, 1, 10, 10, 20, 30, 10, 30, 30, 50, 50, 30, 10, 30, 10, 20, 10, 20, 10, 20, 30, 0, 0, 0, 1, 30, 10, 10, 30, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    if (isNaN(_root.save.arenaSkill[101])) {
        _root.save.arenaSkill[101] = 0;
        _root.save.arenaSkill[102] = 0;
        _root.save.arenaSkill[103] = 0;
    }
    if (isNaN(_root.save.arenaSkill[104])) {
        _root.save.arenaSkill[104] = 0;
        _root.save.arenaSkill[105] = 0;
        _root.save.arenaSkill[106] = 0;
    }
    addSaveVar("arenaTotalSkill", 0);
    addSaveVar("arenaTotalSP", 0);
    addSaveVar("arenaSkillBook", 0);
    addSaveVar("arenaHealth", 2500);
    addSaveVar("arenaMaxHealth", 2500);
    addSaveVar("arenaMana", 1000);
    addSaveVar("arenaMaxMana", 1000);
    addSaveVar("arenaSpirit", 0);
    addSaveVar("arenaFury", 0);
    addSaveVar("arenaAttack", 100);
    addSaveVar("arenaDefense", 100);
    addSaveVar("arenaAccuracy", 100);
    addSaveVar("arenaEvasion", 100);
    addSaveVar("arenaOxygenPenalty", 0);
    addSaveVar("arenaRage", 0);
    addSaveVar("arenaManaPower", false);
    addSaveVar("arenaMission", 0);
    addSaveVar("arenaKommanderProgress", 0);
    addSaveVar("arenaKommanderMonID", 2);
    addSaveVar("arenaKommanderMonCount", 5);
    addSaveVar("arenaKommanderProgBox", 5);
    addSaveVar("arenaKommanderPixBox", 5);
    addSaveVar("arenaKommanderProof", 5);
    addSaveVar("arenaKommanderSkip", 3);
    addSaveVar("arenaMaxEntry", 10);
    addSaveVar("arenaPyramidEntry", 10);
    addSaveVar("arenaMegabossEntry", 10);
    addSaveVar("arenaCorruptionEntry", 10);
    addSaveVar("arenaRevengeEntry", 10);
    addSaveVar("arenaEndlessEntry", 1);
    addSaveVar("arenaBonusChange", 100);
    addSaveVar("arenaKommanderComplete", 0);
    addSaveVar("arenaDefendComplete", 0);
    addSaveVar("arenaPrehistoricComplete", 0);
    addSaveVar("arenaDefendMega", 0);
    addSaveVar("arenaPrehistoricMega", 0);
    addSaveVar("arenaProofTraining", 0);
    addSaveVar("arenaProofMission", 0);
    addSaveVar("arenaSuperiorCraft", 0);
    addSaveVar("arenaUnobtainium", 0);
    addSaveVar("arenaTukkonium", 0);
    addSaveVar("arenaKill", 0);
    addSaveVar("arenaKillWhite", 0);
    addSaveVar("arenaKillRed", 0);
    addSaveVar("arenaKillPurple", 0);
    addSaveVar("arenaKillRare", 0);
    addSaveVar("arenaKillEpic", 0);
    addSaveVar("arenaDeath", 0);
    addSaveVar("arenaMaxEnhance", 0);
    addSaveVar("arenaFreeReset", 0);
    addSaveVar("arenaDiscoverAlley", false);
    addSaveVar("arenaDiscoverSmiley", false);
    addSaveVar("arenaDiscoverPokayman", false);
    addSaveVar("pokayCD", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("pokaystopCount", 0);
    addSaveVar("arenaCorruptScore", 0);
    addSaveVar("arenaCorruptDifficulty", 1);
    addSaveVar("arenaCorruptMaxDifficulty", 20);
    addSaveVar("arenaCorruptBestDifficulty", 0);
    addSaveVar("arenaCorruptWmDifficulty", 1);
    addSaveVar("arenaCorruptWmMaxDifficulty", 1);
    addSaveVar("arenaCorruptWmBestDifficulty", 0);
    addSaveVar("arenaCorruptToday", 0);
    addSaveVar("arenaCorruptHealth", 50);
    addSaveVar("arenaCorruptAttack", 50);
    addSaveVar("arenaCorruptDefense", 50);
    addSaveVar("arenaCorruptAccuracy", 50);
    addSaveVar("arenaCorruptEvasion", 50);
    addSaveVar("arenaZone", 0);
    addSaveVar("arenaZoneOrig", 0);
    addSaveVar("arenaMaxCombo", 0);
    addSaveVar("arenaBestiary", new Array());
    addSaveVar("arenaBestiaryExtra", new Array());
    addSaveVar("arenaBestiaryUlt1", new Array());
    addSaveVar("arenaBestiaryUlt2", new Array());
    addSaveVar("arenaBestiaryUlt3", new Array());
    addSaveVar("arenaBestiaryUlt1V", new Array());
    addSaveVar("arenaBestiaryUlt2V", new Array());
    addSaveVar("arenaBestiaryUlt3V", new Array());
    addSaveVar("arenaBestiaryUlt1F", new Array());
    addSaveVar("arenaBestiaryUlt2F", new Array());
    addSaveVar("arenaBestiaryUlt3F", new Array());
    addSaveVar("arenaZoneFound", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaZoneKill", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaZoneChallenge", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("arenaAllyEXP", new Array());
    addSaveVar("arenaAllyUpgrade", new Array());
    addSaveVar("arenaAllyFavorite", new Array());
    addSaveVar("arenaAlly", 0);
    addSaveVar("autoFight", false);
    addSaveVar("arenaHardcore", false);
    addSaveVar("arenaTurnBased", false);
    addSaveVar("arenaDisplayMonsterStats", true);
    addSaveVar("recipeLevel", 0);
    addSaveVar("secretRecipeLevel", 0);
    addSaveVar("arenaDeletedSlot", 801);
    addSaveVar("inventoryGuard", [false]);
    addSaveVar("inventoryExist", [0]);
    addSaveVar("inventorySet", [0]);
    addSaveVar("inventoryName", ["No Item"]);
    addSaveVar("inventoryDesc", [""]);
    addSaveVar("inventoryReqRank", [1]);
    addSaveVar("inventoryLevel", [1]);
    addSaveVar("inventoryMaxLevel", [1]);
    addSaveVar("inventoryExp", [0]);
    addSaveVar("inventoryExpTNL", [0]);
    addSaveVar("inventoryEnhance", [0]);
    addSaveVar("inventoryBonusPow", [0]);
    addSaveVar("inventoryType", ["Any"]);
    addSaveVar("inventorySubtype", ["Any"]);
    addSaveVar("inventoryFrame", [0]);
    addSaveVar("inventoryRange", [false]);
    addSaveVar("inventoryAttack", [0]);
    addSaveVar("inventorySpeed", [0]);
    addSaveVar("inventoryDefense", [0]);
    addSaveVar("inventoryBonus", [""]);
    addSaveVar("inventoryAbility", [""]);
    addSaveVar("inventoryMoreBonus", [""]);
    addSaveVar("inventorySell", [0]);
    addSaveVar("inventoryExpiry", [Infinity]);
    addSaveVar("inventoryObtainTime", [0]);
    addSaveVar("inventoryNoBonus", [false]);
    addSaveVar("inventoryNoRecycle", [false]);
    addSaveVar("inventoryNoFuse", [false]);
    addSaveVar("inventoryNoUnique", [false]);
    addSaveVar("inventorySpirit", [false]);
    addSaveVar("inventoryCrit", [0]);
    addSaveVar("inventoryDexterity", [0]);
    addSaveVar("inventoryHealth", [0]);
    addSaveVar("inventoryUnob", [0]);
    addSaveVar("buttonGrandpa", 0);
    addSaveVar("buttonGrandpaSpeed", 1);
    addSaveVar("buttonGrandpaAccuracy", 1);
    addSaveVar("buttonGrandpaDiscipline", 1);
    addSaveVar("buttonGrandpaPress", 0);
    addSaveVar("buttonPress", 0);
    addSaveVar("buttonPressToday", 0);
    addSaveVar("buttonBreak", 0);
    addSaveVar("buttonPerfect", 0);
    addSaveVar("buttonPurple", 0);
    addSaveVar("buttonMaxCombo", 0);
    addSaveVar("buttonBroken", false);
    addSaveVar("buttonBless", 0);
    addSaveVar("buttonBlessMode", 1);
    addSaveVar("buttonMultiplier", 0);
    addSaveVar("totalPrinterMoney", 0);
    addSaveVar("totalPrinterMillion", 0);
    addSaveVar("totalPrinterCharge", 0);
    addSaveVar("printerLevel", 1);
    addSaveVar("printerCharge", 80);
    addSaveVar("arcadeConfig1", true);
    addSaveVar("arcadeConfig2", true);
    addSaveVar("arcadeConfig3", true);
    addSaveVar("arcadeConfig4", false);
    addSaveVar("arcadeConfig5", true);
    addSaveVar("arcadeConfig6", false);
    addSaveVar("arcadeConfig7", false);
    addSaveVar("arcadeMmrNoteSkin", 0);
    addSaveVar("arcadeDifficulty", [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);
    addSaveVar("arcadeTodayPercent", 0);
    addSaveVar("arcadeHighPercent", 0);
    addSaveVar("arcadeHighTrade", 0);
    addSaveVar("arcadeTradeIn", false);
    addSaveVar("arcadeToken", 25);
    addSaveVar("arcadeBuyCount", 0);
    addSaveVar("arcade100kMedal", 0);
    addSaveVar("arcadeBless", 0);
    addSaveVar("arcadeBlessMode", 1);
    addSaveVar("arcadeRating", 0);
    addSaveVar("highRankedPong", [0, 0, 0]);
    addSaveVar("highRankedAvoidance", [0, 0, 0]);
    addSaveVar("highRankedMath", [0, 0, 0]);
    addSaveVar("highRankedWhack", [0, 0, 0]);
    addSaveVar("highRankedMind", [0, 0, 0]);
    addSaveVar("highRankedBalance", [0, 0, 0]);
    addSaveVar("highRankedCount", [0, 0, 0]);
    addSaveVar("highRankedMMRX", [0, 0, 0]);
    addSaveVar("highRankedPongDiff", [0, 0, 0]);
    addSaveVar("highRankedAvoidanceDiff", [0, 0, 0]);
    addSaveVar("highRankedMathDiff", [0, 0, 0]);
    addSaveVar("highRankedWhackDiff", [0, 0, 0]);
    addSaveVar("highRankedMindDiff", [0, 0, 0]);
    addSaveVar("highRankedBalanceDiff", [0, 0, 0]);
    addSaveVar("highRankedCountDiff", [0, 0, 0]);
    addSaveVar("highRankedMMRXDiff", [0, 0, 0]);
    addSaveVar("highPong", 0);
    addSaveVar("highAvoidance", 0);
    addSaveVar("highMath", 0);
    addSaveVar("highWhack", 0);
    addSaveVar("highMind", 0);
    addSaveVar("highBalance", 0);
    addSaveVar("highCount", 0);
    addSaveVar("highMMRX", 0);
    addSaveVar("rick", 0);
    addSaveVar("highMMR", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("highMMRSpecial", new Array());
    addSaveVar("fcMMRSpecial", new Array());
    addSaveVar("customSongStr", "MMR Song #1 (MMR X Arr.)|???|Tukkun|113|65|16|26|29|30|17D1_1_1_1_2N1i1i1i1i2D4N1i1i1i1i2X1s1s1s1s2X1X1N1D1_1_1_1_1_2N1i1i1i1i2D1_1_1_1_1_1_1_1_1_1_1_1_4X1X1N1D1_1_1_1_1_2N1i1i1i1i2D4N1i1i1i1i2X1s1s1s1s2X1X1N1D1_1_1_1_1_2N1i1i1i1i2D1_1_1_1_8D0N0X1D0N0X3D0N0X1D0N0X2D0N0X5D2D2N2N2N2D1_1_1_1_1_1_1_1_1_1_10D2D2N2N1i1i4D2X1s1s2X2N1i1i1i1i1i1i6D2D2N2N2D2N2X4N2N2D1_1_1_1_1_1_6D2D2N2N2N2D4N2N2N2X2N1i1i1i1i4D1_1_1_1_1_1_1_1_2N2X2D2N2N2N2X2N4D1_1_1_1_8D2N2X2D4N2X2N1i1i1i1i2D1D1N1D1X1s2X1s2N1i1i1i1i2D1D1N1D1N1i2N1i2D1_1_1_1_2D1D1N1D1N1i1i2X2N1i1i1i1D0i4D2X1s1s2N1i1i1i1i1i1i2D1D1N1D1X1s2X1s2N1i1i1i1i2D1D1N1D1X1s1s2D2N1i1i1i1i2D1D1N1D1N1i1i2X2N1i1i1i1i4D2X1s1s2N1i1i2D0N0X1D0N0X3D0N0X1D0N0X3D1_1_1_1_1_1_1_1_1_1_1_1_1_1_2X1s2X1s2N1i1i1i1i6D1_1_1_1_1_1_1_1_1_1_1_1_1_1_2X1s2X1s2N1i1i1i1i6D1_1_0N1_0N1_0X1_0N1_0X1_1_0N1_0N1_0X1_0N1_0X1_1_2X1s2X1s2N1i1i1i1i6D1_1_0N1_0N1_0X1_0N1_0X1_1_0N1_0N1_0X1_0N1_0X1_1_2X1s2X1s2N1i1i1i1i6D4X4D4X4D4X4D4X4D4X4D4X4N0X1i0s1i0s1i0s1i0s2D0N1_0i1_0i1_0i1_0i1_0i1_0i1_0i1_0i2D4X4D4X4D4X4D4X4D4X4D4X4N0X1i0s1i0s1i0s1i0s2D0N2X1X1X1X1X1X1X2D1_1_1_1_1_1_1_1_1_1_1_1_4N1i1i1i1i1i1i1i1i0X1i0s1i0s1i0s1i0s4X1s1s1s1s1s1s1s1s1s1s1s1s4N1i1i1i1i1i1i1i1i1i3D1D1N1D1X1s2X1s2N1i1i1i1i2D1D1N1D1N1i2N1i2D1_1_1_1_2D1D1N1D1N1i1i2X2N1i1i1i1D0i4D2X1s1s2N1i1i1i1i1i1i2D1D1N1D1X1s2X1s2N1i1i1i1i2D1D1N1D1X1s1s2D2N1i1i1i1i2D1D1N1D1N1i1i2X2N1i1i1i1i4D2X1s1s2N1i1i1i1i1i1i2D1D1N1D1X1s2X1s2N1i1i1i1i2D1D1N1D1N1i2N1i2D1_1_1_1_2D1D1N1D1N1i1i2X2N1i1i1i1D0i4D2X1s1s2N1i1i1i1i1i1i2D1D1N1D1X1s2X1s2N1i1i1i1i2D1D1N1D1X1s1s2D2N1i1i1i1i2D1D1N1D1N1i1i2X2N1i1i1i1i4D2X1s1s2N1i1i1i1i1i1i1i1i|7P1L2L1L1L1P1P1P1P1B0F1]0a1]0a1]0a1]0a2L0P1g0k1g0k1g0k1g0k2B4L0P1g0k1g0k1g0k1g0k2V0Z1q0u1q0u1q0u1q0u2V0Z1V0Z1L0P1B0F1]0a1]0a1]0a1]0a1]0a2L0P1g0k1g0k1g0k1g0k2B1]1]1]1]1]1]1]1]1]1]1]1]2B1B1V0Z1V0Z1L0P1B0F1]0a1]0a1]0a1]0a1]0a2L0P1g0k1g0k1g0k1g0k2B4L0P1g0k1g0k1g0k1g0k2V0Z1q0u1q0u1q0u1q0u2V0Z1V0Z1L0P1B0F1]0a1]0a1]0a1]0a1]0a2L0P1g0k1g0k1g0k1g0k2B1]1]1]1]1]1]1]1]1]1]2B0L0P0Z1B0L0P0Z3B0L0P0Z1B0L0P0Z2B0L0P0Z1V1q1q1q1q0F1q1q0F1q1q0P1q1q0P1q1q0P1q1q0F1a1L0a1g0a1g0a1g0a1g0a1g0a1g0a1g0a1g0a1g1g1g1g1g1g2V1q1q0F1q1q0F1q1q0P1q1q0P1q0k1q0k1q1q1q1q0F2V0Z1q0u1q0u1q1q0Z2L0P1g0k1g0k1g0k1g0k1g0k1g0k1g1g2V1q1q0F1q1q0F1q1q0P1q1q0P1q1q0F1q1q0P1q1q0Z2L1g1g0P1g1g0P1g1g0F1g0a1g0a1g0a1g0a1g0a1g0a1g1g2L0V1g0q1g0q0F1g0q1g0q0F1g0q1g0q0P1g0q1g0q0P1g0q1g0q0P1g0q1g0q0F1g0q1g0q1g0q1g0q0P2B0V0P1]0q1]0q0P2B0L0Z1]0g1]0g0P1k1B0V0k1]0q0k1]0q0k2B0L2L0F1g0a1g0a1g0a1g0a1g0a1g0a1g0a1g0a1g1g0P1g1g0Z1g1g0F2B0P1]1]0P1]1]0P1]1]0Z1]1]0P1]1]1]1]0F1]0a1]0a1a1L0a1g1g1g1g1g1g1g1g0F1g1g0P1g1g0Z1g1g0F2V2P1V1Z2L0P1k1k1k1B0k1B1L0F1V0F1P1F1B0Z1]0u1]1]0Z1]0u2L0P1g0k1g0k1g0k1g0k2B0F1F1P1F1L0P1g0k1g1g0P1g0k2V0F1q0a1q0a1q0a1q0a2V0F1V0F1L0P1B0F1]0P1]0k1]0k1]1]0Z2L0P1g0k1g0k1g0k1g0F0k2B1]1]0F1]1]0Z1]0u1]0u1]1]0P1]0k1]0k1]0k1]0k1k1k2V0F1V0F1L0P1B0F1]0Z1]0u1]1]0Z1]0u2L0P1g0k1g0k1g0k1g0k2B0F1F1P1F1L0P0Z1g0k0u1g0k0u1g1g0F2V0P1q0k1q0k1q0k1q0k2V0F1V0F1L0P1B0F1]0P1]0k1]0k1]1]0Z2L0P1g0k1g0k1g0k1g0k2B1]1]0F1]1]0Z1]0u1]0u1]1]0P1k1k2B0L0P0Z1B0L0P0Z3B0L0P0Z1B0L0P0Z3B1]1]1]1]1]1]1]1]1]1]1]1]1]1]2L0Z1g0u2L0Z1g0u2B0P1]0k1]0k1]0k1]0k6B1]1]1]1]1]1]1]1]1]1]1]1]1]1]2L0Z1g0u2L0Z1g0u2B0P1]0k1]0k1]0k1]0k6B1]1]0F1]0F1]0P1]0F1]0Z1]1]0F1]0F1]0P1]0F1]0Z1]1]2L0Z1g0u2L0Z1g0u2B0P1]0k1]0k1]0k1]0k6B1]1]0F1]0F1]0P1]0F1]0Z1]1]0F1]0F1]0P1]0F1]0Z1]1]2L0Z1g0u2L0Z1g0u2B0P1]0k1]0k1]0k1]0k8P2P2F2P2Z1u1u4P2P2F1a1a1a1a1a1a1a1a6P2P2P2Z2P2F1a1a2L0V1g0q1g0q0P0Z1g0q1g0q0P0Z2B0L0F0P1]0g0a0k1]0g0a0k1]0g1]0g0P0Z1]0g1]0g0F0Z1]0g1]0g0F0P4P2P2F2P2F2P2Z1u1u2P2P2F1a1a1a1a1a1a1a1a4P2P2P2Z2P2F4L0V1g0q1g0q0F0P1g0q1g0q0P0Z2B0L0P0Z1k0u1V0k0u1V1V0F0P1V0a0k1V0a0k1V1V2B0F1a1L0a1a1B0a1a1L0a1L0a1L0a2L0P2B0Z2L0F2B0P2L0P2B0P2L0Z1L1P2L2B0F1a1L0a1L0a1B0a2L2B2L1L1L0F2L0P2B0Z2L0F2B2L0P2B0Z2L0P1L0k1L0k1L0k1L0k1L1V0F1V0F1V0P1V0F1B0Z1]0u1]1]0Z1]0u2L0P1g0k1g0k1g0k1g0k2B0F1F1P1F1L0P1g0k1g1g0P1g0k2V0F1q0a1q0a1q0a1q0a2V0F1V0F1L0P1B0F1]0P1]0k1]0k1]1]0Z2L0P1g0k1g0k1g0k1g0F0k2B1]1]0F1]1]0Z1]0u1]0u1]1]0P1]0k1]0k1]0k1]0k1k1k2V0F1V0F1L0P1B0F1]0Z1]0u1]1]0Z1]0u2L0P1g0k1g0k1g0k1g0k2B0F1F1P1F1L0P0Z1g0k0u1g0k0u1g1g0F2V0P1q0k1q0k1q0k1q0k2V0F1V0F1L0P1B0F1]0P1]0k1]0k1]1]0Z2L0P1g0k1g0k1g0k1g0k2B1]1]0F1]1]0Z1]0u1]0u1]1]0P1k1k1k1B0L0k1B0L3B0L0F1B0L0F1P1F1B0Z1]0u1]1]0Z1]0u2L0P1g0k1g0k1g0k1g0k2B0F1F1P1F1L0P1g0k1g1g0P1g0k2V0F1q0a1q0a1q0a1q0a2V0F1V0F1L0P1B0F1]0P1]0k1]0k1]1]0Z2L0P1g0k1g0k1g0k1g0F0k2B1]1]0F1]1]0Z1]0u1]0u1]1]0P1]0k1]0k1]0k1]0k1k1k2V0F1V0F1L0P1B0F1]0Z1]0u1]1]0Z1]0u2L0P1g0k1g0k1g0k1g0k2B0F1F1P1F1L0P0Z1g0k0u1g0k0u1g1g0F2V0P1q0k1q0k1q0k1q0k2V0F1V0F1L0P1B0F1]0P1]0k1]0k1]1]0Z2L0P1g0k1g0k1g0k1g0k4B0F2V0Z1q0u1q0u2L0P1g0k1g0k1g0k1g0k1g0k1g0k1g0k1g0k|7N1N2N1N1N1N1N1N1N1A0G1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A4K0Q1f0l1f0l1f0l1f0l2U0[1p0v1p0v1p0v1p0v2U0[1U0[1K0Q1A0G1%0b1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A1%1%1%1%1%1%1%1%1%1%1%1%2K1K1[1[1Q1A0G1%0b1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A4K0Q1f0l1f0l1f0l1f0l2U0[1p0v1p0v1p0v1p0v2U0[1U0[1K0Q1A0G1%0b1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A1%1%1%1%1%1%1%1%1%1%2K0U0D0X0G0Q1K0U0D0X0G0Q3K0U0D0X0G0Q1K0U0D0X0G0Q2K0U0D0X0G0Q1U1p1p1p1p0G1p1p0G1p1p0Q1p1p0Q1p1p0Q1p1p0G1b1K0b1f0X0b1f0X1f0s1f0s1f0s1f0s1f0s1f0s1f1f1f1f1f1f2U1p1p0G1p1p0G1p1p0Q1p1p0Q1p0l1p0G0l1p0b1p0b1p1p0X2U0[1p0v1p0v1p1p0[1v1K0Q0v1f0l0v1f0l0v1f0l0v1f0l0v1f0l0v1f0l0v1f0l0v1f0l0v2U1p1p0G1p1p0G1p1p0Q1p1p0Q1p1p0G1p1p0Q1p1p0[2K1f1f0Q1f1f0Q1f1f0Q1f0l1f0G0l1f0b1f0b1f0b1f0b1f0b1f0b2U0N1p0i1p0i0G1p0i1p0i0G1p0i1p0i0Q1p0i1p0i0Q1p0i1p0i0Q1p0i1p0i0G1p0i1p0i1p0i1p0i0Q2U0D0Q1p0_1p0_0Q2K0D0[1f0_1f0_0Q1l1K0U0l1f0p0l1f0p0l2A0U2A0G1b1K0b1b1A0b1b1K0b1K0b1K0b2K0Q2A0[2K0G2A0Q2K0Q2A0Q2K0[1K1Q2K0G2A0G1b1K0b1K0b1A0b2K2A2K1K1K0G2K0Q2A0[2K0G2A2K0Q2A0[2K0Q1K0l1K0l1K0l1K0l1K1U0G1U0G1U0Q1U0G1A0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0G0[1f0b0v1f1f0G0[1f0b0v2U0G0Q1p0b0l1p0b0l1p0b0l1p0b0l2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1%0l1%0l1%0l1%0l1l1K0l1K1G1G1Q1A0G1%0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0Q0[1f0l0v1f0l0v1f1f0G0Q2U0G0[1p0b0v1p0b0v1p0b0v1p0b0v2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1l1l2K0U0D0X0G0Q1K0U0D0X0G0Q3K0U0D0X0G0Q1K0U0D0X0G0Q3N1i1i1i1i1i1i1i1i1i1i1i1i1i1D1U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1_0s0l1_0s0l1_0s0l2K1f1f1f1N1i1i1i1i1i1i1i1i1i1i1i1i1i1D1U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1_0s0l1_0s0l1_0s0l6N1i1A0i1A0i1K0i1A0i1U0i1i1A0i1A0i1K0i1A0i1U0i1i1D1U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1_0s0l1_0s0l1_0s0l6N1i1A0i1A0i1K0i1A0i1U0i1i1A0i1A0i1K0i1A0i1U0i1i1D1U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1_0s0l1_0s0l1_0s0l4X1X1D2X2D2X1X1X2X2D2X2D2X2D2X1X3X2D2X1X1D2X2D2X1X1X2X2D2X2D0Q0[1l0v1X0l0v1l0v1D0l0v2X0G0Q1X0b0l1b0l1b0l1X0b0l1b0l1D0b0l1b0l1X0b0l1X1D2X2D2X1X1X2X2D2X2D2X2D2X1X3X2D2X1X1D2X2D2X1X1X2X2D2X2D0Q0[1l0v1X0l0v1l0v1D0l0v2X0G0Q1X0b0l1D0b0l1D0b0l1D0b0l1D0b0l1D0b0l1D0b0l1D0b0l2G1b1K0b1b1b1K0b1b1K0b1b2K0Q2[1K1G1K1Q2K0Q2Q1K1[1K1Q1l1K0G0l2G1K0b1b1K0b1b2K3K2K1G2K0Q2[1K1G1K3K0Q2[1K1Q1K0l1l1l1K0l2G1G1Q1G1A0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0G0[1f0b0v1f1f0G0[1f0b0v2U0G0Q1p0b0l1p0b0l1p0b0l1p0b0l2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1%0l1%0l1%0l1%0l1l1K0l1K1G1G1Q1A0G1%0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0Q0[1f0l0v1f0l0v1f1f0G0Q2U0G0[1p0b0v1p0b0v1p0b0v1p0b0v2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1l1l2G0Q1G0Q1K1K1G1G1Q1A0G1A0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0G0[1f0b0v1f1f0G0[1f0b0v2U0G0Q1p0b0l1p0b0l1p0b0l1p0b0l2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1%0l1%0l1%0l1%0l1l1K0l1K1G1G1Q1A0G1%0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0Q0[1f0l0v1f0l0v1f1f0G0Q2U0G0[1p0b0v1p0b0v1p0b0v1p0b0v2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l4A0G2U0[1p0v1p0v2K0Q1f0l1f0l1f0l1f0l1f0l1f0l1f0l1f0l|7N0X1D0N2D0N1D0N1D0N1N0X1N0X1N0X1N0X1A0G1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A4K0Q1f0l1f0l1f0l1f0l2U0[1p0v1p0v1p0v1p0v2U0[1U0[1K0Q1A0G1%0b1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A1%1%1%1%0G1%0b1%0b1%0b1%0b1%1%0Q1%0l1%0l2K1K1K0U0[1K0U0[1Q1A0K0G1%0b1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A4K0Q1f0l1f0l1f0l1f0l2U0[1p0v1p0v1p0v1p0v2U0[1U0[1K0Q1A0G1%0b1%0b1%0b1%0b1%0b2K0Q1f0l1f0l1f0l1f0l2A1%1%1%1%0G1%0b1%0b1%0b1%0b1%0b1%0b2K0U0D0X0G0Q1K0U0D0X0G0Q3K0U0D0X0G0Q1K0U0D0X0G0Q2K0U0D0X0G0Q1U1p1p1p1p0G1p1p0G1p1p0Q1p1p0Q1p1p0Q1p1p0G1b1K0b1f0X0b1f0X1f0s1f0s1f0s1f0s1f0s1f0s1f1f1f1f1f1f2U1p1p0G1p1p0G1p1p0Q1p1p0Q1p0l1p0G0l1p0b1p0b1p1p0X2U0[1p0v1p0v1p1p0[1v1Q0v1l0v1X0l0v1s0l0v1N0s0l0v1i0s0l0v1U0i0s0l0v1p0i0s0l0v1K0p0i0s0l0v2U1p1p0G1p1p0G1p1p0Q1p1p0Q1p1p0G1p1p0Q1p1p0[2K1f1f0Q1f1f0Q1f1f0Q1f0l1f0G0l1f0b1f0b1f0b1f0b1f0b1f0b2U0N1p0i1p0i0G1p0i1p0i0G1p0i1p0i0Q1p0i1p0i0Q1p0i1p0i0Q1p0i1p0i0G1p0i1p0i1p0i1p0i0Q2U0D0Q1p0_1p0_0Q2K0D0[1f0_1f0_0Q1l1K0U0l1f0p0l1f0p0l2A0U2A0G1b1K0b1b1A0b1b1K0b1K0b1K0b2K0Q2A0[2K0G2A0Q2K0Q2A0Q2K0[1K1Q1l1K0G0l1l1A0G0l1b1K0b1K0b1A0b2K2A2K1K1K0G2K0Q2A0[2K0G2A2K0Q2A0[2K0Q1K0l1K0l1K0l1K0l1K1U0G1U0G1U0Q1U0G1A0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0G0[1f0b0v1f1f0G0[1f0b0v2U0G0Q1p0b0l1p0b0l1p0b0l1p0N0b0l2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1%0l1%0l1%0l1%0l1l1K0l1K1K0U0G1K0U0G1Q1A0K0G1%0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0Q0[1f0l0v1f0l0v1f1f0G0Q2U0G0[1p0b0v1p0b0v1p0b0v1p0N0b0v2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1l1l2K0U0D0X0G0Q1K0U0D0X0G0Q3K0U0D0X0G0Q1K0U0D0X0G0Q3A0N1%0i1%0i1A0i1%0i1%0i1A0i1%0i1A0i1%0i1%0i1A0i1%0i1%0i1A0D1%0U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1_0s0l1_0s0l1_0s0l2K1f1f1f1A0N1%0i1%0i1A0i1%0i1%0i1A0i1%0i1A0i1%0i1%0i1A0i1%0i1%0i1A0D1%0U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1_0s0l1_0s0l1_0s0l6N1i1A0i1A0i1K0i1A0i1U0i1i1A0i1A0i1K0i1A0i1U0i1i1D1U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1_0s0l1_0s0l1_0s0l6N1i1A0i1A0i1K0i1A0i1U0i1i1A0i1A0i1K0i1A0i1U0i1i1D1U1N0G0[1i0b0v2N0G0[1i0b0v2D0X0Q1_0s0l1N1N1N1N1N2X1X1D2X2D2X1X1X2X2D2X2D2X2D2X1X3X2D2X1X1D2X2D2X1X1X2X2D2X2D0Q0[1l0v1X0l0v1l0v1D0l0v2X0G0Q1X0b0l1b0l1b0l1X0b0l1b0l1D0b0l1b0l1X0b0l1X1D2X2D2X1X1X2X2D2X2D2X2D2X1X3X2D2X1X1D2X2D2X1X1X2X2D2X2D0Q0[1l0v1X0l0v1l0v1D0l0v2X0G0Q1X0b0l1D0N0b0l1D0N0b0l1D0N0b0l1D0N0b0l1D0N0b0l1D0N0b0l1D0N0b0l2G1b1K0U0b1b1b1K0U0b1b1K0U0b1b2K0U0Q2[1K0U1G1K0U1Q2K0U0Q2Q1K0U1[1K0U1Q1l1K0U0G0l2G1K0U0b1b1K0U0b1b2K0U3K0U2K0U1G2K0U0Q2[1K0U1G1K0U3K0U0Q2[1K0U1Q1K0U0l1l1l1A0K0l2A0U0G1K0U0G1Q1K0U0G1A0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0G0[1f0b0v1f1f0G0[1f0b0v2U0G0Q1p0b0l1p0b0l1p0b0l1p0N0b0l2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1%0l1%0l1%0l1%0l1l1K0l1K1K0U0G1K0U0G1Q1A0K0G1%0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0Q0[1f0l0v1f0l0v1f1f0G0Q2U0G0[1p0b0v1p0b0v1p0b0v1p0N0b0v2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1l1l2X0G0Q1X0G0Q1K1K1K0U0G1K0U0G1Q1A0K0G1A0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0G0[1f0b0v1f1f0G0[1f0b0v2U0G0Q1p0b0l1p0b0l1p0b0l1p0N0b0l2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l2A1%1%0G1%1%0[1%0v1%0v1%1%0Q1%0l1%0l1%0l1%0l1l1K0l1K1K0U0G1K0U0G1Q1A0K0G1%0Q0[1%0l0v1%1%0Q0[1%0l0v2K0G0[1f0b0v1f0b0v1f0b0v1f0b0v2A0G1G1Q1G1K0Q0[1f0l0v1f0l0v1f1f0G0Q2U0G0[1p0b0v1p0b0v1p0b0v1p0N0b0v2U0G1U0G1K0Q1A0G1%0Q1%0l1%0l1%1%0[2K0Q1f0l1f0l1f0l1f0G0l4A0G2U0[1p0v1p0v2K0Q1f0l1f0l1f0l1f0l1f0l1f0l1f0l1f0l|!");
    addSaveVar("rankedPong", 0);
    addSaveVar("rankedAvoidance", 0);
    addSaveVar("rankedMath", 0);
    addSaveVar("rankedWhack", 0);
    addSaveVar("rankedMind", 0);
    addSaveVar("rankedBalance", 0);
    addSaveVar("rankedCount", 0);
    addSaveVar("rankedMMRX", 0);
    addSaveVar("rankedMode", true);
    addSaveVar("unrankedPower", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("totalPong", 0);
    addSaveVar("totalAvoidance", 0);
    addSaveVar("totalMath", 0);
    addSaveVar("totalWhack", 0);
    addSaveVar("totalMind", 0);
    addSaveVar("totalBalance", 0);
    addSaveVar("totalCount", 0);
    addSaveVar("totalMMR", 0);
    addSaveVar("totalMMRX", 0);
    addSaveVar("todayHighPong", 0);
    addSaveVar("todayHighAvoidance", 0);
    addSaveVar("todayHighMath", 0);
    addSaveVar("todayHighWhack", 0);
    addSaveVar("todayHighMind", 0);
    addSaveVar("todayHighBalance", 0);
    addSaveVar("todayHighCount", 0);
    addSaveVar("todayHighMMRX", 0);
    addSaveVar("todayParPong", 1400000);
    addSaveVar("todayParAvoidance", 500000);
    addSaveVar("todayParMath", 1000000);
    addSaveVar("todayParWhack", 1500000);
    addSaveVar("todayParMind", 2000000);
    addSaveVar("todayParBalance", 2800000);
    addSaveVar("todayParCount", 6000000);
    addSaveVar("stadiumRunescape", 0);
    addSaveVar("stadiumToken", 0);
    addSaveVar("stadiumTokenMax", 0);
    addSaveVar("stadiumAbilityCost", 0);
    addSaveVar("stadiumRace", 0);
    addSaveVar("stadiumItem", 0);
    addSaveVar("stadiumDeathMatch", 0);
    addSaveVar("stadiumBestDeathMatch", 0);
    addSaveVar("stadiumTodayDeathMatch", 0);
    addSaveVar("stadiumBestTime", 999999);
    addSaveVar("stadiumBetCorrect", 0);
    addSaveVar("stadiumBetStreak", 0);
    addSaveVar("stadiumBetMaxStreak", 0);
    addSaveVar("stadiumBetWinningCoin", 0);
    addSaveVar("stadiumBetWinningToken", 0);
    addSaveVar("stadiumEnergy", 0);
    addSaveVar("stadiumAccel", 0);
    addSaveVar("stadiumMaxSpeed", 0);
    addSaveVar("stadiumStartSpeed", 0);
    addSaveVar("stadiumDash", 0);
    addSaveVar("stadiumJump", 0);
    addSaveVar("stadiumBoost", 0);
    addSaveVar("stadiumReward", 0);
    addSaveVar("stadiumFace", 2);
    addSaveVar("stadiumHat", 1);
    addSaveVar("stadiumHatOwned", [0, 0, 0, 0, 0, 0]);
    addSaveVar("stadiumBless", 0);
    addSaveVar("stadiumBlessMode", 1);
    addSaveVar("stadiumImpossibleRace", 0);
    addSaveVar("stadiumImpossibleItem", 0);
    addSaveVar("antsSprayed", 0);
    addSaveVar("epicSkill", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    if (isNaN(_root.save.epicSkill[1])) {
        _root.save.epicSkill = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    }
    addSaveVar("banPenalty", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    if (isNaN(_root.save.banPenalty[1])) {
        _root.save.banPenalty = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    }
    addSaveVar("totalStupidity", 0);
    addSaveVar("remStupidity", 0);
    addSaveVar("ascStupidity", 0);
    addSaveVar("ascMilestone", 0);
    addSaveVar("stupidity", 0);
    addSaveVar("permaStupidity", 0);
    addSaveVar("permaStupidityHard", 0);
    addSaveVar("permaStupidityImpossible", 0);
    addSaveVar("permaBanPenalty", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("permaBanMax", 0);
    addSaveVar("permaBanRes", 1);
    addSaveVar("curBanRefID", 201508);
    addSaveVar("curSheetID", 201507);
    addSaveVar("curDateID", 1);
    addSaveVar("curAttStamp", 0);
    addSaveVar("curAttMiss", 0);
    addSaveVar("curAttMedPend", 0);
    addSaveVar("lolConfig1", 1);
    addSaveVar("lolConfig2", 3);
    addSaveVar("lolConfig3", false);
    addSaveVar("lolCapacity", 50);
    addSaveVar("lolProfit", 0);
    addSaveVar("lolCooldown", 0);
    addSaveVar("lolMaxProfit", 0);
    if (_root.save.lolGems != undefined && isNaN(_root.save.lolGems[1])) {
        delete _root.save.lolGems;
    }
    addSaveVar("lolGems", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("lolDemand", [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);
    addSaveVar("lolPrice", [0, 1500, 3000, 4500, 6000, 7500, 9000, 10500, 12000, 13500, 15000]);
    addSaveVar("lolSpent", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fcgInitDeck", 0);
    addSaveVar("fcgSpeed", 10);
    addSaveVar("fcgLevel", 1);
    addSaveVar("fcgExp", 0);
    addSaveVar("fcgExpTotal", 0);
    addSaveVar("fcgCash", 1250);
    addSaveVar("fcgMaxCash", 1250);
    addSaveVar("fcgPlay", 0);
    addSaveVar("fcgWin", 0);
    addSaveVar("fcgLose", 0);
    addSaveVar("fcgStreak", 0);
    addSaveVar("fcgMaxStreak", 0);
    addSaveVar("fcgRandomDeck", false);
    addSaveVar("fcgReceiveChallenge", true);
    addSaveVar("fcgPowerActive", true);
    if (_root.save.fcgOwned != undefined && isNaN(_root.save.fcgOwned[1])) {
        delete _root.save.fcgOwned;
        delete _root.save.fcgDeck;
    }
    addSaveVar("fcgRewardedLevel", 1);
    addSaveVar("fcgMission", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fcgMissionScore", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fcgMissionGold", 0);
    addSaveVar("fcgBuff", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fcgPower", [false, false, false, false, false, false, false, false, false]);
    addSaveVar("fcgOwned", [0, 0, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fcgDeck", [0, 0, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    if (isNaN(_root.save.fcgOwned[400])) {
        _root.save.fcgOwned[400] = 0;
        _root.save.fcgDeck[400] = 0;
    }
    addSaveVar("fcgCurDiff", 0);
    addSaveVar("fcgLastDiff", 0);
    addSaveVar("fcgLevel0", 0);
    addSaveVar("fcgLevel1", 0);
    addSaveVar("fcgLevel2", 0);
    addSaveVar("fcgLevel3", 0);
    addSaveVar("fcgLevel4", 0);
    addSaveVar("fcgLevel5", 0);
    addSaveVar("fcgLevel6", 0);
    addSaveVar("fcgLevel7", 0);
    addSaveVar("fcgLevel8", 0);
    addSaveVar("fcgLevel9", 0);
    addSaveVar("fcgLevel10", 0);
    addSaveVar("fcgStreak0", 0);
    addSaveVar("fcgStreak1", 0);
    addSaveVar("fcgStreak2", 0);
    addSaveVar("fcgStreak3", 0);
    addSaveVar("fcgStreak4", 0);
    addSaveVar("fcgStreak5", 0);
    addSaveVar("fcgStreak6", 0);
    addSaveVar("fcgStreak7", 0);
    addSaveVar("fcgStreak8", 0);
    addSaveVar("fcgStreak9", 0);
    addSaveVar("fcgStreak10", 0);
    addSaveVar("fcgMaxStreak0", 0);
    addSaveVar("fcgMaxStreak1", 0);
    addSaveVar("fcgMaxStreak2", 0);
    addSaveVar("fcgMaxStreak3", 0);
    addSaveVar("fcgMaxStreak4", 0);
    addSaveVar("fcgMaxStreak5", 0);
    addSaveVar("fcgMaxStreak6", 0);
    addSaveVar("fcgMaxStreak7", 0);
    addSaveVar("fcgMaxStreak8", 0);
    addSaveVar("fcgMaxStreak9", 0);
    addSaveVar("fcgMaxStreak10", 0);
    addSaveVar("fcgLegendCount", 0);
    addSaveVar("fcgLegendDeck", 0);
    addSaveVar("fcgLegendLife", 0);
    addSaveVar("fcgSeriousDeck", 34 + random(35));
    addSaveVar("fcgTotalCards", 52);
    addSaveVar("fcgPack1", 1);
    addSaveVar("fcgPack1Cost", 0);
    addSaveVar("fcgPack2", 1);
    addSaveVar("fcgPack2Cost", 0);
    addSaveVar("fcgPack3", 1);
    addSaveVar("fcgPack3Cost", 0);
    addSaveVar("fcgPack4", 1);
    addSaveVar("fcgPack4Cost", 0);
    addSaveVar("fcgPack5", 1);
    addSaveVar("fcgPack5Cost", 0);
    addSaveVar("fcgCollection", 0);
    addSaveVar("awesomeBless", 250);
    addSaveVar("awesomeAuto", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("awesomeRedCoin", 0);
    addSaveVar("awesomeTotalRun", 0);
    addSaveVar("awesomeBestRun", 0);
    addSaveVar("awesomeBestRun1", 0);
    addSaveVar("awesomeBestRun2", 0);
    addSaveVar("awesomeBestRun3", 0);
    addSaveVar("awesomeBestRun4", 0);
    addSaveVar("awesomeTotalAdv", 0);
    addSaveVar("awesomeTotalAdv1", 0);
    addSaveVar("awesomeTotalAdv2", 0);
    addSaveVar("awesomeTotalAdv3", 0);
    addSaveVar("awesomeTotalAdv4", 0);
    addSaveVar("awesomeEnergy", 5);
    addSaveVar("awesomeMaxEnergy", 5);
    addSaveVar("awesomeReputation", 0);
    addSaveVar("awesomeMaxReputation", 0);
    addSaveVar("awesomeEnergyNext", 60);
    addSaveVar("awesomeRefill", 1);
    addSaveVar("grammarPill", 0);
    addSaveVar("specialPetFood", 0);
    addSaveVar("nextWizard", 0);
    addSaveVar("fishRod", 1);
    addSaveVar("fishCapacity", 2500);
    addSaveVar("fishRodUnlock", [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fishLevel", 1);
    addSaveVar("fishBestLevel", 1);
    addSaveVar("fishExamReduce", 0);
    addSaveVar("fishExamLeft", -1);
    addSaveVar("fishExamPerfect", 0);
    addSaveVar("fishExamStreak", 0);
    addSaveVar("fishExamPerfectReq", 0);
    addSaveVar("fishExamStreakReq", 0);
    addSaveVar("fishExamRod", -1);
    addSaveVar("fishShield", 0);
    addSaveVar("fishExp", 0);
    addSaveVar("fishTotalExp", 0);
    addSaveVar("fishFatigue", 0);
    addSaveVar("fishStreak", 0);
    addSaveVar("fishBestStreak", 0);
    addSaveVar("fishPerfect", 0);
    addSaveVar("fishTotal", 0);
    addSaveVar("fishScore", 0);
    addSaveVar("fishScoreToday", 0);
    addSaveVar("fishScoreRecord", 0);
    addSaveVar("fishMilestoneTotal", 0);
    addSaveVar("fishMilestoneToday", 0);
    addSaveVar("fishFound", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fishLeft", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("fishPetFishCooldown", 50);
    addSaveVar("fishPetFoodCooldown", 3);
    addSaveVar("fishFoodCooldown", 100);
    addSaveVar("fishDrinkCooldown", 3);
    addSaveVar("artifact", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("souvenir", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("raidPyramid", 0);
    addSaveVar("raidDefend", 0);
    addSaveVar("raidPrehistoric", 0);
    addSaveVar("raidMegaboss", 0);
    addSaveVar("raidTower", 0);
    addSaveVar("raidDungeon", 0);
    addSaveVar("raidEndless", 0);
    addSaveVar("raidEndlessSpeedrun", 2147483647);
    addSaveVar("raidEndlessSpeedrunHC", 2147483647);
    addSaveVar("raidEndlessWM", 0);
    addSaveVar("raidSpecial", 0);
    addSaveVar("arenaRevengeScore", 0);
    addSaveVar("arenaTriangleScore", 0);
    addSaveVar("arenaTriangleToday", 0);
    addSaveVar("apocSecretKill", 0);
    addSaveVar("strangeBoxKill", 0);
    addSaveVar("triangleLandKill", 0);
    addSaveVar("triangleShoot", 0);
    addSaveVar("arenaEnhancerFragment", 0);
    addSaveVar("arenaChaoticFragment", 0);
    addSaveVar("deathMatchEntry", 1);
    addSaveVar("dragonReward", 0);
    addSaveVar("feedToday", 0);
    addSaveVar("feedTotal", 0);
    addSaveVar("feedMeter", 0);
    addSaveVar("wisdomDiscovered", new Array());
    addSaveVar("arenaNerfGem", 0);
    addSaveVar("arenaNerfCount", 0);
    addSaveVar("arenaNerfNext", 1000);
    addSaveVar("arenaSpookyKey", false);
    addSaveVar("arenaSpookyScore", 0);
    addSaveVar("arenaSpookyToday", 0);
    addSaveVar("arenaCraftUsed", 0);
    addSaveVar("ripoffCardUsed", 0);
    addSaveVar("careerBoost", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("careerActive", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("careerLevel", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("careerEXP", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("careerPotion", 0);
    addSaveVar("megaCareerPotion", 0);
    addSaveVar("curBusiness", 0);
    addSaveVar("curBusinessOffline", 0);
    addSaveVar("curBusinessOnline", 0);
    addSaveVar("curBusinessActivity", 0);
    addSaveVar("businessHigh", 0);
    addSaveVar("businessTotal", 0);
    addSaveVar("businessEXP", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    addSaveVar("progBoxAsc", 0);
    addSaveVar("progBoxNext", 0);
    addSaveVar("refillAsc", 0);
    addSaveVar("refillNext", 0);
    addSaveVar("cheat", 0);
    addSaveVar("knowledge", 0);
    addSaveVar("theGame", 0);
    addSaveVar("mada", 0);
    addSaveVar("mbma", 0);
    addSaveVar("comboWaster", 0);
    addSaveVar("support", 0);
    addSaveVar("walkthru", 0);
    addSaveVar("escaped", 0);
    addSaveVar("pwned", 0);
    addSaveVar("petFeederBadge", 0);
    addSaveVar("revenger", 0);
    addSaveVar("ghostCount", 0);
    addSaveVar("hubertCount", 0);
    addSaveVar("seriousBusiness", 0);
    addSaveVar("survivor", 0);
    addSaveVar("forestDestroyer", 0);
    addSaveVar("curForestDestroyer", 0);
    addSaveVar("greed", 0);
    addSaveVar("lolBug", 0);
    addSaveVar("perfectionist", 0);
    addSaveVar("immortality", 0);
    addSaveVar("failproof", 0);
    addSaveVar("nightmare", 0);
    addSaveVar("artificialStupidity", 0);
    addSaveVar("moneySprayer", 0);
    addSaveVar("experienced", 0);
    addSaveVar("doingItWrong", 0);
    addSaveVar("curDoingItWrong", 0);
    addSaveVar("virtue", 0);
    addSaveVar("noHelp", 0);
    addSaveVar("randomGhost", 0);
    addSaveVar("nowUseless", 0);
    addSaveVar("chuckNorris", 0);
    addSaveVar("aceFinish", 0);
    addSaveVar("noDeath", 0);
    addSaveVar("pacifist", 0);
    addSaveVar("wakeUp", 0);
    addSaveVar("awesomeMineQuest", 0);
    addSaveVar("bestWpm", 0);
    addSaveVar("breakNewsMode", 1);
    addSaveVar("bouncyLoot", true);
    addSaveVar("rangeAnimate", true);
    addSaveVar("damageDisplay", true);
    addSaveVar("damageFullDisplay", true);
    addSaveVar("showBanner", true);
    addSaveVar("showGain", true);
    addSaveVar("showRobaconEXP", true);
    addSaveVar("enableTip", true);
    addSaveVar("activityLoot", false);
    addSaveVar("enableMilestone", true);
    addSaveVar("showProgBar", true);
    addSaveVar("noob", 0);
    addSaveVar("ver", 0);
    addSaveVar("au", 0);
    addSaveVar("arenaPyramidCraftT", 0);
    addSaveVar("arenaMegabossCraftT", 0);
    addSaveVar("arenaCorruptionCraftT", 0);
    addSaveVar("arenaRevengeCraftT", 0);
    addSaveVar("arenaEndlessCraftT", 0);
    addSaveVar("seppukuTime", 0);
    addSaveVar("seppukuTotal", 0);
    addSaveVar("seppukuAscension", 0);
    addSaveVar("seppukuEnd", 0);
    addSaveVar("seppukuReward", 0);
    addSaveVar("seppukuPenalty", 0);
    addSaveVar("arenaUniqueStock", 10);
    addSaveVar("arenaChaosLeft", 15);
    addSaveVar("arenaChaosMax", 15);
    addSaveVar("arenaStorage2", false);
    addSaveVar("arenaStorage3", false);
    addSaveVar("arenaStorage4", false);
    addSaveVar("shinyWeekCount", 0);
    addSaveVar("shinyWeekLast", 24);
    addSaveVar("shinyWeek2Count", 0);
    addSaveVar("shinyWeek2Last", 10);
    addSaveVar("tech1Program", "Disabled");
    addSaveVar("tech2Program", "Disabled");
    addSaveVar("tech3Program", "Disabled");
    addSaveVar("tech4Program", "Disabled");
    addSaveVar("tech5Program", "Disabled");
    addSaveVar("tech6Program", "Disabled");
    addSaveVar("tech7Program", "Disabled");
    addSaveVar("tech8Program", "Disabled");
    addSaveVar("tech9Program", "Disabled");
    addSaveVar("tech1Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech2Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech3Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech4Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech5Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech6Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech7Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech8Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech9Array", [false, false, false, false, false, false, false, false, false, false, false]);
    addSaveVar("tech1StringA", "");
    addSaveVar("tech2StringA", "");
    addSaveVar("tech3StringA", "");
    addSaveVar("tech4StringA", "");
    addSaveVar("tech5StringA", "");
    addSaveVar("tech6StringA", "");
    addSaveVar("tech7StringA", "");
    addSaveVar("tech8StringA", "");
    addSaveVar("tech9StringA", "");
    addSaveVar("tech1StringB", "");
    addSaveVar("tech2StringB", "");
    addSaveVar("tech3StringB", "");
    addSaveVar("tech4StringB", "");
    addSaveVar("tech5StringB", "");
    addSaveVar("tech6StringB", "");
    addSaveVar("tech7StringB", "");
    addSaveVar("tech8StringB", "");
    addSaveVar("tech9StringB", "");
    addSaveVar("tech1NumberA", 0);
    addSaveVar("tech2NumberA", 0);
    addSaveVar("tech3NumberA", 0);
    addSaveVar("tech4NumberA", 0);
    addSaveVar("tech5NumberA", 0);
    addSaveVar("tech6NumberA", 0);
    addSaveVar("tech7NumberA", 0);
    addSaveVar("tech8NumberA", 0);
    addSaveVar("tech9NumberA", 0);
    addSaveVar("tech1NumberB", 0);
    addSaveVar("tech2NumberB", 0);
    addSaveVar("tech3NumberB", 0);
    addSaveVar("tech4NumberB", 0);
    addSaveVar("tech5NumberB", 0);
    addSaveVar("tech6NumberB", 0);
    addSaveVar("tech7NumberB", 0);
    addSaveVar("tech8NumberB", 0);
    addSaveVar("tech9NumberB", 0);
    addSaveVar("tech1NumberC", 0);
    addSaveVar("tech2NumberC", 0);
    addSaveVar("tech3NumberC", 0);
    addSaveVar("tech4NumberC", 0);
    addSaveVar("tech5NumberC", 0);
    addSaveVar("tech6NumberC", 0);
    addSaveVar("tech7NumberC", 0);
    addSaveVar("tech8NumberC", 0);
    addSaveVar("tech9NumberC", 0);
    if (_root.save.ver < 1) {
        if (_root.save.boostMax > 1300) {
            _root.save.boostMax = 1300;
        }
        _root.save.ver = 1;
    }
    if (_root.save.event_explosionTour == 1 && _root.save.ver < 2) {
        _root.save.mysteryBox[4] += 4;
        _root.save.ver = 2;
    }
    if (_root.save.ver < 4) {
        if (_root.save.careerLevel[3] > 30) {
            _root.save.careerLevel[3] = 30;
        }
        _root.save.ver = 4;
    }
    if (_root.save.ver < 7) {
        if (_root.save.arcadeToken > 100) {
            _root.save.greenCoin += 1000 * (_root.save.arcadeToken - 100);
        }
        _root.save.arcadeToken = 25;
        _root.save.ver = 7;
    }
    if (_root.save.ver < 8) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryName[i] == "Pre-Explosion Trophy") {
                _root.save.inventoryExpiry[i] = 7776000000 + _root.systemtimenow;
            }
            i++;
        }
        i = 101;
        while (i <= 124) {
            if (_root.save.inventoryName[i] == "Pre-Explosion Hat" || _root.save.inventoryName[i] == "Pre-Explosion Shirt" || _root.save.inventoryName[i] == "Pre-Explosion Gloves" || _root.save.inventoryName[i] == "Pre-Explosion Pants" || _root.save.inventoryName[i] == "Pre-Explosion Shoes") {
                _root.save.inventoryExpiry[i] = 7776000000 + _root.systemtimenow;
            }
            i++;
        }
        _root.save.ver = 8;
    }
    if (_root.save.ver < 9) {
        let i = 101;
        while (i <= 124) {
            if (_root.save.inventoryName[i] == "Stripped Nurse Hat") {
                _root.save.inventoryName[i] = "Stripper Nurse Hat";
            }
            if (_root.save.inventoryName[i] == "Stripped Nurse Shirt") {
                _root.save.inventoryName[i] = "Stripper Nurse Shirt";
            }
            if (_root.save.inventoryName[i] == "Stripped Nurse Gloves") {
                _root.save.inventoryName[i] = "Stripper Nurse Gloves";
            }
            if (_root.save.inventoryName[i] == "Stripped Nurse Pants") {
                _root.save.inventoryName[i] = "Stripper Nurse Pants";
            }
            if (_root.save.inventoryName[i] == "Stripped Nurse Shoes") {
                _root.save.inventoryName[i] = "Stripper Nurse Shoes";
            }
            i++;
        }
        _root.save.ver = 9;
    }
    if (_root.save.ver < 10) {
        let i = 1;
        while (i <= 12) {
            if (_root.save.ripoffCard[i] > 5) {
                _root.save.ripoffCard[i] = 5;
                _root.save.blueCoin += 250;
            }
            i++;
        }
        _root.save.ver = 10;
    }
    if (_root.save.ver < 11) {
        if (_root.save.mysteryBox[4] > 100) {
            _root.save.mysteryBox[4] = 100;
        }
        _root.save.ver = 11;
    }
    if (_root.save.ver < 12) {
        let bcToRefund = 0;
        bcToRefund += _root.save.ripoffCard[5] * 2500;
        bcToRefund += _root.save.ripoffCard[6] * 2000;
        bcToRefund += _root.save.ripoffCard[7] * 1500;
        bcToRefund += _root.save.ripoffCard[8] * 1000;
        bcToRefund += _root.save.ripoffCard[9] * 750;
        bcToRefund += _root.save.ripoffCard[10] * 1250;
        bcToRefund += _root.save.ripoffCard[11] * 1750;
        bcToRefund += _root.save.ripoffCard[12] * 2250;
        if (bcToRefund < 0) {
            bcToRefund = 0;
        }
        if (bcToRefund > 100000) {
            bcToRefund = 100000;
        }
        _root.save.blueCoin += bcToRefund;
        let i = 5;
        while (i <= 12) {
            if (_root.save.ripoffCard[i] > 0) {
                _root.save.ripoffCard[i] = 0;
            }
            i++;
        }
        i = 1;
        while (i <= 24) {
            if (_root.save.inventoryName[i] == "Pre-Explosion Trophy" && _root.save.inventoryBonusPow[i] >= 175) {
                _root.save.inventoryAttack[i] -= 175;
                _root.save.inventoryBonusPow[i] -= 175;
                _root.save.inventoryEnhance[i] -= 1;
                _root.save.refund_relic = 1;
            }
            i++;
        }
        _root.save.ver = 12;
    }
    if (_root.save.ver < 13) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryName[i] == "Pre-Explosion Trophy" && _root.save.inventoryBonusPow[i] >= 100) {
                _root.save.inventoryAttack[i] -= _root.save.inventoryBonusPow[i];
                _root.save.inventoryEnhance[i] = 10;
            }
            i++;
        }
        _root.save.ver = 13;
    }
    if (_root.save.ver < 15) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryName[i] == "Pre-Explosion Trophy") {
                _root.save.inventoryAttack[i] += 150;
            }
            i++;
        }
        _root.save.ver = 15;
    }
    if (_root.save.ver < 16) {
        _root.save.ver = 16;
    }
    if (_root.save.ver < 17) {
        if (_root.save.stadiumBestTime < 7000) {
            _root.save.stadiumBestTime = 8000;
        }
        _root.save.ver = 17;
    }
    if (_root.save.ver < 18) {
        _root.save.arenaFreeReset += Math.floor(_root.save.arenaKommanderComplete / 10);
        _root.save.ver = 18;
    }
    if (_root.save.ver < 19) {
        if (_root.save.arenaLevel >= 180) {
            _root.save.arenaFreeReset += 1;
        }
        _root.save.mysteryBox[6] = 0;
        _root.save.mysteryBoxCollect6 = new Array();
        _root.save.ver = 19;
    }
    if (_root.save.ver < 20) {
        if (_root.save.arenaLevel >= 180) {
            _root.save.arenaSP += _root.save.arenaLevel - 180;
        }
        _root.save.ver = 20;
    }
    if (_root.save.ver < 21) {
        if (_root.save.arenaLevel > 250) {
            _root.save.arenaSP -= _root.save.arenaLevel - 250;
            if (_root.save.arenaSP < 0) {
                i = 1;
                while (i <= 100) {
                    if (_root.save.arenaSkill[i] > 0) {
                        _root.save.arenaSP += _root.save.arenaSkill[i];
                        _root.save.arenaSkill[i] = 0;
                    }
                    i++;
                }
            }
        }
        _root.save.ver = 21;
    }
    if (_root.save.ver < 23) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryName[i] == "Elite Grenades") {
                _root.save.inventorySpeed[i] = 2;
                _root.save.inventorySell[i] = 1000000;
            }
            i++;
        }
        _root.save.ver = 23;
    }
    if (_root.save.ver < 26) {
        _root.save.stupidity = _root.save.banned;
        _root.save.banPenalty = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        _root.save.ver = 26;
    }
    if (_root.save.ver < 28) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryName[i] == "Elite Grenades" || _root.save.inventoryName[i] == "Sword of Ascendant") {
                _root.save.inventoryNoLife[i] = true;
            }
            if (_root.save.inventoryName[i] == "Bronze Trophy" || _root.save.inventoryName[i] == "Silver Trophy" || _root.save.inventoryName[i] == "Gold Trophy" || _root.save.inventoryName[i] == "Bronze Endurance Trophy" || _root.save.inventoryName[i] == "Silver Endurance Trophy" || _root.save.inventoryName[i] == "Gold Endurance Trophy") {
                _root.save.inventoryNoLife[i] = true;
            }
            if (_root.save.inventoryBonusPow[i] > 1000) {
                _root.save.inventoryAttack[i] = 10;
            }
            i++;
        }
        i = 201;
        while (i <= 224) {
            if (_root.save.inventoryName[i] == "Weapon Alien Rock Lv. 1" || _root.save.inventoryName[i] == "Weapon Alien Rock Lv. 2" || _root.save.inventoryName[i] == "Weapon Alien Rock Lv. 3" || _root.save.inventoryName[i] == "Weapon Alien Rock Lv. 4" || _root.save.inventoryName[i] == "Weapon Alien Rock Lv. 5" || _root.save.inventoryName[i] == "Weapon Alien Rock Lv. 6" || _root.save.inventoryName[i] == "Weapon Alien Rock Lv. 7" || _root.save.inventoryName[i] == "Armor Alien Rock Lv. 1" || _root.save.inventoryName[i] == "Armor Alien Rock Lv. 2" || _root
                .save.inventoryName[i] == "Armor Alien Rock Lv. 3" || _root.save.inventoryName[i] == "Armor Alien Rock Lv. 4" || _root.save.inventoryName[i] == "Armor Alien Rock Lv. 5" || _root.save.inventoryName[i] == "Armor Alien Rock Lv. 6" || _root.save.inventoryName[i] == "Armor Alien Rock Lv. 7") {
                _root.save.inventoryAbility[i] = "";
                _root.save.inventorySell[i] = 4000;
            }
            i++;
        }
        _root.save.ver = 28;
    }
    if (_root.save.ver < 29) {
        _root.save.raidTower = 0;
        _root.save.ver = 29;
    }
    if (_root.save.ver < 31) {
        let i = 101;
        while (i <= 124) {
            if (_root.save.inventoryName[i] == "Anniversary Hat") {
                _root.save.inventoryFrame[i] = 13;
            }
            if (_root.save.inventoryName[i] == "Halloween Hat") {
                _root.save.inventoryFrame[i] = 12;
            }
            if (_root.save.inventoryName[i] == "Halloween Shirt") {
                _root.save.inventoryFrame[i] = 11;
            }
            if (_root.save.inventoryName[i] == "Halloween Gloves") {
                _root.save.inventoryFrame[i] = 10;
            }
            if (_root.save.inventoryName[i] == "Halloween Pants") {
                _root.save.inventoryFrame[i] = 10;
            }
            if (_root.save.inventoryName[i] == "Halloween Shoes") {
                _root.save.inventoryFrame[i] = 10;
            }
            i++;
        }
        _root.save.ver = 31;
    }
    if (_root.save.ver < 32) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryMaxLevel[i] > 22 && _root.save.inventoryMaxLevel[i] < 100) {
                _root.save.inventoryAttack[i] -= _root.save.inventoryMaxLevel[i] * 4;
                _root.save.inventoryEnhance[i] = 9;
                _root.save.inventoryBonusPow[i] -= _root.save.inventoryMaxLevel[i] * 4;
                _root.save.inventoryMaxLevel[i] = 1;
                _root.save.inventoryLevel[i] = 1;
            }
            i++;
        }
        _root.save.ver = 32;
    }
    if (_root.save.ver < 36) {
        _root.save.buttonPurple = _root.save.buttonPerfect;
        _root.save.totalMMR = _root.save.highMMR[1] + _root.save.highMMR[2] + _root.save.highMMR[3] + _root.save.highMMR[4];
        _root.save.arcade100kMedal = Math.floor((_root.save.totalPong + _root.save.totalAvoidance + _root.save.totalMath + _root.save.totalWhack + _root.save.totalMind + _root.save.totalMMR) / 133700);
        _root.save.ver = 36;
    }
    if (_root.save.ver < 37) {
        if (_root.save.petBestLevel > 0 && _root.save.petExist == 0) {
            _root.save.coinLag += 250000000;
        }
        _root.save.ver = 37;
    }
    if (_root.save.ver < 38) {
        if (_root.save.arenaZoneKill[49] > 0) {
            let i = 1;
            while (i <= 16) {
                _root.save.arenaRingOwned[i] = 1;
                i++;
            }
        }
        _root.save.ver = 38;
    }
    if (_root.save.ver < 39) {
        if (_root.save.petBestLevel > 0 && _root.save.petStat[1] + _root.save.petStat[2] + _root.save.petStat[3] + _root.save.petStat[4] + _root.save.petStat[5] + _root.save.petStat[6] + _root.save.petStat[7] + _root.save.petStat[8] < _root.save.petBestLevel * 8) {
            _root.save.petExist = 1;
            _root.save.petHealth = 100;
            _root.save.petFullness = 100;
            _root.save.petStat[1] = _root.save.petBestLevel;
            _root.save.petStat[2] = _root.save.petBestLevel;
            _root.save.petStat[3] = _root.save.petBestLevel;
            _root.save.petStat[4] = _root.save.petBestLevel;
            _root.save.petStat[5] = _root.save.petBestLevel;
            _root.save.petStat[6] = _root.save.petBestLevel;
            _root.save.petStat[7] = _root.save.petBestLevel;
            _root.save.petStat[8] = _root.save.petBestLevel;
            _root.save.coinLag += 1000000000;
            _root.save.blueCoin += 10000;
        }
        _root.save.ver = 39;
    }
    if (_root.save.ver < 41) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryNoRecycle[i] = false;
                _root.save.inventorySpirit[i] = false;
                _root.save.inventoryCrit[i] = 10;
                _root.save.inventoryDexterity[i] = 0;
                _root.save.inventoryHealth[i] = 0;
            }
            i++;
        }
        i = 101;
        while (i <= 124) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryNoRecycle[i] = false;
                _root.save.inventorySpirit[i] = false;
                _root.save.inventoryCrit[i] = 10;
                _root.save.inventoryDexterity[i] = 0;
                _root.save.inventoryHealth[i] = 0;
            }
            i++;
        }
        i = 201;
        while (i <= 224) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryNoRecycle[i] = false;
                _root.save.inventorySpirit[i] = false;
                _root.save.inventoryCrit[i] = 0;
                _root.save.inventoryDexterity[i] = 0;
                _root.save.inventoryHealth[i] = 0;
            }
            i++;
        }
        _root.save.ver = 41;
    }
    if (_root.save.ver < 42) {
        _root.save.lolProfit += Math.floor(_root.save.petStat[7] * (0.5 + _root.save.petStat[7] / 2) * _root.save.lolPrice[10] * 0.92);
        _root.save.ver = 42;
    }
    if (_root.save.ver < 43) {
        if (_root.save.expGraph[5] >= 210000000000 || _root.save.expGraph[6] >= 210000000000 || _root.save.expGraph[7] >= 210000000000 || _root.save.lolProfit >= 2500000000 || isNaN(_root.save.lolProfit)) {
            _root.save.currentExp -= _root.save.expGraph[5] + _root.save.expGraph[6] + _root.save.expGraph[7];
            if (_root.save.lolProfit > 200000000) {
                _root.save.lolProfit = 200000000;
            }
            if (_root.save.blueCoin > 100000) {
                _root.save.blueCoin = 100000;
            }
            _root.save.mysteryBox[6] += 1;
        }
        _root.save.greenCoin += Math.floor(_root.save.lolGems[10] * _root.save.lolPrice[10]);
        _root.save.lolProfit += Math.floor(_root.save.lolGems[10] * _root.save.lolPrice[10]);
        _root.save.lolSpent[10] = 0;
        _root.save.lolGems[10] = 0;
        if (_root.save.petExist == 1) {
            _root.save.petFullness += 24;
            _root.save.petHealth += 12;
        }
        _root.save.ver = 43;
    }
    if (_root.save.ver < 46) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryCrit[i] = 10;
                _root.save.inventoryDesc[i] = "";
                tempSS = _root.save.inventoryName[i].substr(1, 4);
                if (tempSS == "[O] ") {
                    _root.save.inventoryName[i] = _root.save.inventoryName[i].substr(5, _root.save.inventoryName[i].length);
                    _root.save.inventoryDesc[i] = "Item obtained before The Explosion update.";
                }
            }
            i++;
        }
        i = 101;
        while (i <= 124) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryCrit[i] = 10;
                _root.save.inventoryDesc[i] = "";
                tempSS = _root.save.inventoryName[i].substr(1, 4);
                if (tempSS == "[O] ") {
                    _root.save.inventoryName[i] = _root.save.inventoryName[i].substr(5, _root.save.inventoryName[i].length);
                    _root.save.inventoryDesc[i] = "Item obtained before The Explosion update.";
                }
            }
            i++;
        }
        i = 201;
        while (i <= 224) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryDesc[i] = "";
            }
            i++;
        }
        _root.save.ver = 46;
    }
    if (_root.save.ver < 47) {
        _root.save.ver = 47;
    }
    if (_root.save.ver < 48) {
        let i = 1;
        while (i <= 24) {
            if (_root.save.inventoryExist[i] == 1 && isNaN(_root.save.inventoryDexterity[i])) {
                _root.save.inventoryDexterity[i] = 0;
                _root.save.inventoryHealth[i] = 0;
            }
            i++;
        }
        i = 101;
        while (i <= 124) {
            if (_root.save.inventoryExist[i] == 1 && isNaN(_root.save.inventoryDexterity[i])) {
                _root.save.inventoryDexterity[i] = 0;
                _root.save.inventoryHealth[i] = 0;
            }
            i++;
        }
        i = 201;
        while (i <= 224) {
            if (_root.save.inventoryExist[i] == 1 && isNaN(_root.save.inventoryDexterity[i])) {
                _root.save.inventoryDexterity[i] = 0;
                _root.save.inventoryHealth[i] = 0;
            }
            i++;
        }
        _root.save.ver = 48;
    }
    if (_root.save.ver < 51) {
        let i = 101;
        while (i <= 124) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryCrit[i] = 10;
            }
            i++;
        }
        _root.save.ver = 51;
    }
    if (_root.save.ver < 101) {
        if (_root.save.arenaZoneKill[100] == undefined) {
            let i = 50;
            while (i <= 100) {
                _root.save.arenaZoneKill[i] = 0;
                i++;
            }
        }
        _root.save.arenaAttack += 60 * (_root.save.arenaLevel - 1);
        _root.save.arenaDefense += 60 * (_root.save.arenaLevel - 1);
        _root.save.arenaAccuracy += 6 * (_root.save.arenaLevel - 1);
        _root.save.arenaEvasion += 6 * (_root.save.arenaLevel - 1);
        let i = 201;
        while (i <= 224) {
            if (_root.save.inventoryFrame[i] >= 151 && _root.save.inventoryFrame[i] <= 170) {
                _root.save.inventoryFrame[i] += 50;
            }
            if (_root.save.inventoryFrame[i] >= 101 && _root.save.inventoryFrame[i] <= 106) {
                _root.save.inventoryFrame[i] += 200;
            }
            if (_root.save.inventoryFrame[i] >= 51 && _root.save.inventoryFrame[i] <= 100) {
                _root.save.inventoryFrame[i] += 50;
            }
            if (_root.save.inventoryFrame[i] >= 8 && _root.save.inventoryFrame[i] <= 9) {
                _root.save.inventoryFrame[i] += 43;
            }
            if (_root.save.inventoryFrame[i] >= 108 && _root.save.inventoryFrame[i] <= 109) {
                _root.save.inventoryFrame[i] += 43;
            }
            i++;
        }
        if (_root.save.mysteryBoxCollect == null) {
            _root.save.mysteryBoxCollect = [];
        }
        _root.save.mysteryBoxCollect[3] = new Array();
        _root.save.questCount = _root.save.bestLevel;
        if (!isNaN(_root.save.totalQuests)) {
            _root.save.questTotal = _root.save.totalQuests;
            _root.save.questToken += _root.save.questTotal * 5;
        }
        _root.save.ver = 101;
    }
    if (_root.save.ver < 104) {
        if (_root.save.fishLevel > 1 && _root.kongregate_username != undefined) {
            _root.my_so.clear();
            _root.gotoAndStop(1);
        }
        _root.save.ver = 104;
    }
    if (_root.save.ver < 106) {
        let resetPoint = 0;
        let i = 1;
        while (i <= 100) {
            if (_root.save.arenaSkill[i] > 0) {
                resetPoint += _root.save.arenaSkill[i];
            }
            i++;
        }
        _root.save.arenaSP += resetPoint;
        _root.save.arenaTotalSkill = 0;
        i = 1;
        while (i <= 100) {
            if (_root.save.arenaSkill[i] > 0) {
                _root.save.arenaSkill[i] = 0;
            }
            i++;
        }
        _root.save.ver = 106;
    }
    if (_root.save.ver < 107) {
        _root.save.ver = 107;
    }
    if (_root.save.ver < 108) {
        _root.save.ver = 108;
    }
    if (_root.save.ver < 110) {
        let i = 201;
        while (i <= 224) {
            if (_root.save.inventorySubtype[i] == "Enhancer Protection Enhancer") {
                _root.save.inventorySubtype[i] = "Enhancer Destruction Enhancer";
            }
            if (_root.save.inventoryName[i] == "Small Master Potion") {
                _root.save.inventoryFrame[i] = 6;
            }
            if (_root.save.inventoryName[i] == "Small Reward Potion") {
                _root.save.inventoryFrame[i] = 11;
            }
            if (_root.save.questSubtype == "Another Graden Tree") {
                _root.save.questSubtype = "Another Garden Tree";
            }
            i++;
        }
        if (_root.save.questSubtype == "Another Graden Tree") {
            _root.save.questSubtype = "Another Garden Tree";
        }
        _root.save.ver = 110;
    }
    if (_root.save.ver < 111) {
        _root.save.arenaPixel = _root.save.arenaPixelMax;
        _root.save.ver = 111;
    }
    if (_root.save.ver < 112) {
        if (_root.save.inventoryExist[_root.save.arenaPendant] == 0) {
            _root.save.arenaPendant = 0;
        }
        _root.save.ver = 112;
    }
    if (_root.save.ver < 113) {
        _root.save.arenaCraft = _root.save.arenaCraftMax;
        _root.save.ver = 113;
    }
    if (_root.save.ver < 114) {
        _root.save.ver = 114;
    }
    if (_root.save.ver < 115) {
        if (_root.save.stadiumToken < 0) {
            _root.save.stadiumToken = 0;
            _root.save.ver = 116;
        }
    }
    if (_root.save.ver < 116) {
        if (_root.save.inventoryExist[_root.save.arenaPendant] == 0) {
            _root.save.arenaPendant = 0;
        }
        _root.save.ver = 116;
    }
    if (_root.save.ver < 117) {
        _root.save.ver = 117;
    }
    if (_root.save.ver < 118) {
        if (_root.save.arenaMaxDamage > 700000000000) {
            _root.save.arenaMaxDamage = 0;
            _root.save.arenaWeakenAffected = 1;
        }
        _root.save.ver = 118;
    }
    if (_root.save.ver < 119) {
        if (_root.save.gDifficulty >= 2) {
            _root.save.achEarnTime[1800] = _root.systemtimenow;
            _root.save.achEarnTime[1801] = _root.systemtimenow;
            _root.save.achEarnTime[1802] = _root.systemtimenow;
            _root.save.achEarnTime[1803] = _root.systemtimenow;
            _root.save.achEarnTime[1850] = _root.systemtimenow;
            _root.save.achEarnTime[1851] = _root.systemtimenow;
            _root.save.achEarnTime[1852] = _root.systemtimenow;
            _root.save.achEarnTime[1900] = _root.systemtimenow;
            _root.save.achEarnTime[1901] = _root.systemtimenow;
            _root.save.achEarnTime[1902] = _root.systemtimenow;
            _root.save.achEarnTime[1903] = _root.systemtimenow;
            _root.save.achEarnTime[1904] = _root.systemtimenow;
            _root.save.achEarnTime[1905] = _root.systemtimenow;
            _root.save.achEarnTime[1906] = _root.systemtimenow;
            _root.save.achEarnTime[1907] = _root.systemtimenow;
            _root.save.achEarnTime[1950] = _root.systemtimenow;
            _root.save.achEarnTime[1951] = _root.systemtimenow;
            _root.save.achEarnTime[1952] = _root.systemtimenow;
            _root.save.achEarnTime[1953] = _root.systemtimenow;
            _root.save.achEarnTime[1954] = _root.systemtimenow;
            _root.save.achEarnTime[1955] = _root.systemtimenow;
        }
        if (_root.save.gDifficulty >= 3) {
            _root.save.achEarnTime[2300] = _root.systemtimenow;
            _root.save.achEarnTime[2301] = _root.systemtimenow;
            _root.save.achEarnTime[2302] = _root.systemtimenow;
            _root.save.achEarnTime[2303] = _root.systemtimenow;
            _root.save.achEarnTime[2304] = _root.systemtimenow;
            _root.save.achEarnTime[2305] = _root.systemtimenow;
            _root.save.achEarnTime[3200] = _root.systemtimenow;
            _root.save.achEarnTime[3201] = _root.systemtimenow;
            _root.save.achEarnTime[3202] = _root.systemtimenow;
            _root.save.achEarnTime[3203] = _root.systemtimenow;
            _root.save.achEarnTime[3204] = _root.systemtimenow;
            _root.save.achEarnTime[3205] = _root.systemtimenow;
            _root.save.achEarnTime[4900] = _root.systemtimenow;
            _root.save.achEarnTime[4910] = _root.systemtimenow;
            _root.save.achEarnTime[4920] = _root.systemtimenow;
            _root.save.achEarnTime[4930] = _root.systemtimenow;
            _root.save.achEarnTime[4940] = _root.systemtimenow;
            _root.save.achEarnTime[4950] = _root.systemtimenow;
            _root.save.achEarnTime[4960] = _root.systemtimenow;
            _root.save.achEarnTime[4970] = _root.systemtimenow;
        }
        _root.save.ver = 119;
    }
    if (_root.save.ver < 120) {
        let i = 1;
        while (i <= 30) {
            if (_root.save.inventoryDesc[i] == "Explosion Crate Reward" && _root.save.inventoryName[i] == "Elite Grenades") {
                _root.save.inventoryAttack[i] -= 500;
                _root.save.inventoryNoLife[i] = true;
            }
            i++;
        }
        _root.save.ver = 120;
    }
    if (_root.save.ver < 121) {
        let i = 201;
        while (i <= 224) {
            if (_root.save.inventorySubtype[i] == "Enhancer Protection Enhancer") {
                _root.save.inventorySubtype[i] = "Enhancer Destruction Enhancer";
            }
            i++;
        }
        _root.save.ver = 121;
    }
    if (_root.save.ver < 122) {
        let i = 1;
        while (i <= 430) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Burned Rope" || _root.save.inventoryName[i] == "Special Wand" || _root.save.inventoryName[i] == "Bronze Pickaxe") {
                    _root.save.inventoryNoFuse[i] = true;
                }
                else {
                    _root.save.inventoryNoFuse[i] = false;
                }
            }
            i++;
        }
        i = 401;
        while (i <= 430) {
            if (_root.save.inventoryName[i] == "Large Power Potion") {
                _root.save.inventoryFrame[i] = 3;
                _root.save.inventoryAttack[i] = 1800;
            }
            if (_root.save.inventoryName[i] == "Large Reward Potion") {
                _root.save.inventoryFrame[i] = 13;
                _root.save.inventoryAttack[i] = 1800;
            }
            i++;
        }
        _root.save.ver = 122;
    }
    if (_root.save.ver < 123) {
        let i = 1;
        while (i <= 30) {
            if (_root.save.inventoryNoFuse[i] == true) {
                if (_root.save.inventoryName[i] == "Silver Pickaxe") {
                    _root.save.inventorySpeed[i] = 6;
                    _root.save.inventoryLevel[i] = 2;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryMaxLevel[i] = 2;
                    _root.save.inventoryCrit[i] = 6;
                }
                if (_root.save.inventoryName[i] == "Golden Pickaxe") {
                    _root.save.inventorySpeed[i] = 7;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryMaxLevel[i] = 3;
                    _root.save.inventoryCrit[i] = 9;
                }
                if (_root.save.inventoryName[i] == "Diamond Pickaxe") {
                    _root.save.inventorySpeed[i] = 8;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryMaxLevel[i] = 3;
                    _root.save.inventoryCrit[i] = 12;
                }
                if (_root.save.inventoryName[i] == "Master\'s Pickaxe") {
                    _root.save.inventorySpeed[i] = 9;
                    _root.save.inventoryLevel[i] = 4;
                    _root.save.inventoryEnhance[i] = 10;
                    _root.save.inventoryMaxLevel[i] = 4;
                    _root.save.inventoryCrit[i] = 15;
                }
            }
            i++;
        }
        i = 301;
        while (i <= 330) {
            if (_root.save.inventoryNoFuse[i] == true) {
                if (_root.save.inventoryName[i] == "Silver Pickaxe") {
                    _root.save.inventorySpeed[i] = 6;
                    _root.save.inventoryLevel[i] = 2;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryLevel[i] = 2;
                    _root.save.inventoryMaxLevel[i] = 2;
                    _root.save.inventoryCrit[i] = 6;
                }
                if (_root.save.inventoryName[i] == "Golden Pickaxe") {
                    _root.save.inventorySpeed[i] = 7;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryMaxLevel[i] = 3;
                    _root.save.inventoryCrit[i] = 9;
                }
                if (_root.save.inventoryName[i] == "Diamond Pickaxe") {
                    _root.save.inventorySpeed[i] = 8;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryMaxLevel[i] = 3;
                    _root.save.inventoryCrit[i] = 12;
                }
                if (_root.save.inventoryName[i] == "Master\'s Pickaxe") {
                    _root.save.inventorySpeed[i] = 9;
                    _root.save.inventoryLevel[i] = 4;
                    _root.save.inventoryEnhance[i] = 10;
                    _root.save.inventoryLevel[i] = 4;
                    _root.save.inventoryMaxLevel[i] = 4;
                    _root.save.inventoryCrit[i] = 15;
                }
            }
            i++;
        }
        _root.save.ver = 123;
    }
    if (_root.save.ver < 124) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryNoFuse[i] == true) {
                if (_root.save.inventoryAttack[i] > 0) {
                    _root.save.inventoryAttack[i] = Math.floor(_root.save.inventoryAttack[i] * 0.9);
                    _root.save.inventorySpeed[i] = Math.floor(_root.save.inventorySpeed[i] * 0.9);
                    _root.save.inventoryDefense[i] = Math.floor(_root.save.inventoryDefense[i] * 0.9);
                    _root.save.inventoryCrit[i] = Math.floor(_root.save.inventoryCrit[i] * 0.9);
                    _root.save.inventoryDexterity[i] = Math.floor(_root.save.inventoryDexterity[i] * 0.9);
                }
                if (_root.save.inventoryName[i] == "Sword of Ascendant") {
                    _root.save.inventoryNoLife[i] = true;
                    _root.save.inventoryExpiry[i] = 0;
                }
            }
            i++;
        }
        _root.save.ver = 124;
    }
    if (_root.save.ver < 125) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryNoFuse[i] == true) {
                if (_root.save.inventoryName[i] == "Silver Pickaxe") {
                    _root.save.inventorySpeed[i] = 6;
                    _root.save.inventoryLevel[i] = 2;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryLevel[i] = 2;
                    _root.save.inventoryMaxLevel[i] = 2;
                    _root.save.inventoryCrit[i] = 6;
                }
                if (_root.save.inventoryName[i] == "Golden Pickaxe") {
                    _root.save.inventorySpeed[i] = 7;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryMaxLevel[i] = 3;
                    _root.save.inventoryCrit[i] = 9;
                }
                if (_root.save.inventoryName[i] == "Diamond Pickaxe") {
                    _root.save.inventorySpeed[i] = 8;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryEnhance[i] = 9;
                    _root.save.inventoryLevel[i] = 3;
                    _root.save.inventoryMaxLevel[i] = 3;
                    _root.save.inventoryCrit[i] = 12;
                }
                if (_root.save.inventoryName[i] == "Master\'s Pickaxe") {
                    _root.save.inventorySpeed[i] = 9;
                    _root.save.inventoryLevel[i] = 4;
                    _root.save.inventoryEnhance[i] = 10;
                    _root.save.inventoryLevel[i] = 4;
                    _root.save.inventoryMaxLevel[i] = 4;
                    _root.save.inventoryCrit[i] = 15;
                }
            }
            if (_root.save.inventorySubtype[i] == "Mining Tool") {
                _root.save.inventoryNoFuse[i] = true;
            }
            i++;
        }
        _root.save.ver = 125;
    }
    if (_root.save.ver < 126) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryNoFuse[i] == true) {
                if (_root.save.inventoryDesc[i].indexOf("Elite Grenades") != -1) {
                    _root.save.inventoryNoLife[i] = true;
                }
                if (_root.save.inventoryDesc[i].indexOf("Sword of Ascendant") != -1) {
                    _root.save.inventoryNoLife[i] = true;
                    _root.save.inventoryExpiry[i] = 0;
                }
                if (_root.save.inventoryDesc[i].indexOf("DOOOOOOM") != -1) {
                    _root.save.inventoryNoLife[i] = true;
                }
                if (_root.save.inventoryDesc[i].indexOf("Trophy") != -1) {
                    _root.save.inventoryNoLife[i] = true;
                }
                if (_root.save.inventoryDesc[i].indexOf("Alien") != -1) {
                    _root.save.inventoryNoLife[i] = true;
                }
            }
            i++;
        }
        _root.save.ver = 126;
    }
    if (_root.save.ver < 127) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Special Wand" && _root.save.inventoryNoLife[i] == true) {
                _root.save.inventoryNoLife[i] = false;
                _root.save.inventoryExpiry[i] = Infinity;
            }
            i++;
        }
        _root.save.ver = 127;
    }
    if (_root.save.ver < 128) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryDesc[i] == "Explosion Crate Reward" && _root.save.inventoryName[i] == "Elite Grenades") {
                _root.save.inventoryAttack[i] += 500;
            }
            if (_root.save.inventoryName[i] == "Elite Grenades") {
                if (_root.save.inventorySpeed[i] > 2) {
                    _root.save.inventoryAttack[i] += _root.save.inventorySpeed[i] * 5;
                    _root.save.inventorySpeed[i] = 2;
                }
            }
            i++;
        }
        _root.save.ver = 128;
    }
    if (_root.save.ver < 129) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Elite Grenades") {
                if (_root.save.inventorySpeed[i] > 2) {
                    _root.save.inventoryAttack[i] += _root.save.inventorySpeed[i] * 5;
                    _root.save.inventorySpeed[i] = 2;
                }
                _root.save.inventoryNoFuse[i] = true;
            }
            i++;
        }
        _root.save.ver = 129;
    }
    if (_root.save.ver < 131) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryNoFuse[i] == true) {
                if (_root.save.inventoryDesc[i].indexOf("Pickaxe") != -1 && _root.save.inventorySpeed[i] > 15) {
                    _root.save.inventorySpeed[i] = 7;
                }
            }
            if (_root.save.inventorySubtype[i] == "Mining Tool") {
                _root.save.inventoryNoFuse[i] = true;
            }
            i++;
        }
        _root.save.ver = 131;
    }
    if (_root.save.ver < 132) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Special Wand" && _root.save.inventorySpeed[i] < 8 + Math.floor(_root.save.inventoryBonusPow[i] / 10)) {
                _root.save.inventorySpeed[i] = 8 + Math.floor(_root.save.inventoryBonusPow[i] / 10);
            }
            i++;
        }
        _root.save.ver = 132;
    }
    if (_root.save.ver < 133) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Burned Rope" && _root.save.inventoryNoLife[i] == true) {
                _root.save.inventoryNoLife[i] = false;
                _root.save.inventoryExpiry[i] = Infinity;
            }
            i++;
        }
        _root.save.ver = 133;
    }
    if (_root.save.ver < 134) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Special Wand" && _root.save.inventorySpeed[i] > 9 + Math.floor(_root.save.inventoryBonusPow[i] / 20 - _root.save.inventoryCrit[i] / 10 - _root.save.inventoryDexterity[i] / 10 - _root.save.inventoryHealth[i] / 10)) {
                _root.save.inventorySpeed[i] = 9 + Math.floor(_root.save.inventoryBonusPow[i] / 20 - _root.save.inventoryCrit[i] / 10 - _root.save.inventoryDexterity[i] / 10 - _root.save.inventoryHealth[i] / 10);
            }
            i++;
        }
        _root.save.ver = 134;
    }
    if (_root.save.ver < 135) {
        _root.save.ver = 135;
    }
    if (_root.save.ver < 136) {
        _root.save.fishScore = Math.floor(_root.save.fishScore / 5) * 5;
        _root.save.fishScoreToday = Math.floor(_root.save.fishScoreToday / 5) * 5;
        _root.save.fishScoreRecord = Math.floor(_root.save.fishScoreRecord / 5) * 5;
        _root.save.ver = 136;
    }
    if (_root.save.ver < 137) {
        let i = 201;
        while (i <= 224) {
            if (_root.save.inventorySubtype[i] == "Enhancer Protection Enhancer") {
                _root.save.inventorySubtype[i] = "Enhancer Destruction Enhancer";
            }
            i++;
        }
        i = 301;
        while (i <= 324) {
            if (_root.save.inventorySubtype[i] == "Enhancer Protection Enhancer") {
                _root.save.inventorySubtype[i] = "Enhancer Destruction Enhancer";
            }
            i++;
        }
        _root.save.ver = 137;
    }
    if (_root.save.ver < 139) {
        _root.save.arenaSpookyPenalty = _root.save.arenaZoneKill[52];
        _root.save.ver = 139;
    }
    if (_root.save.ver < 201) {
        _root.save.arenaSpookyPenalty = 0;
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryLevel[i] > 1 && _root.save.inventorySubtype[i] != "Pendant") {
                if (_root.save.inventoryType[i] == "Weapon") {
                    _root.save.inventoryDefense[i] += Math.floor(_root.save.inventoryLevel[i] / 2) * 2;
                    _root.save.inventoryBonusPow[i] += Math.floor(_root.save.inventoryLevel[i] / 2) * 4;
                }
                if (_root.save.inventoryType[i] == "Armor") {
                    _root.save.inventoryAttack[i] += Math.floor(_root.save.inventoryLevel[i] / 2) * 1;
                    _root.save.inventoryBonusPow[i] += Math.floor(_root.save.inventoryLevel[i] / 2) * 4;
                }
                _root.save.inventoryDexterity[i] += Math.floor(_root.save.inventoryLevel[i] / 3) * 1;
                _root.save.inventoryBonusPow[i] += Math.floor(_root.save.inventoryLevel[i] / 3) * 10;
                _root.save.inventoryHealth[i] += Math.floor(_root.save.inventoryLevel[i] / 4) * 1;
                _root.save.inventoryBonusPow[i] += Math.floor(_root.save.inventoryLevel[i] / 4) * 10;
                _root.save.inventoryCrit[i] += Math.floor(_root.save.inventoryLevel[i] / 5) * 1;
                _root.save.inventoryBonusPow[i] += Math.floor(_root.save.inventoryLevel[i] / 5) * 10;
            }
            i++;
        }
        _root.save.ver = 201;
    }
    if (_root.save.ver < 202) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Epic Fire Staff" || _root.save.inventoryName[i] == "Epic Ice Staff" || _root.save.inventoryName[i] == "Epic Wind Staff" || _root.save.inventoryName[i] == "Epic Earth Staff" || _root.save.inventoryName[i] == "Epic Thunder Staff" || _root.save.inventoryName[i] == "Epic Water Staff" || _root.save.inventoryName[i] == "Light Glaive" || _root.save.inventoryName[i] == "Dark Glaive") {
                if (_root.save.inventoryNoFuse[i] == true) {
                    _root.save.inventoryAttack[i] = 675;
                    _root.save.inventoryBonusPow[i] = 0;
                    _root.save.inventoryEnhance[i] = 0;
                }
                _root.save.inventoryMaxLevel[i] = 60;
                _root.save.inventoryNoFuse[i] = true;
            }
            i++;
        }
        _root.save.ver = 202;
    }
    if (_root.save.ver < 203) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Glaive of Smiting" || _root.save.inventoryName[i] == "Darkglaive of Smiting") {
                _root.save.inventoryRange[i] = true;
            }
            i++;
        }
        _root.save.ver = 203;
    }
    if (_root.save.ver < 301) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Epic Fire Staff" || _root.save.inventoryName[i] == "Epic Ice Staff" || _root.save.inventoryName[i] == "Epic Wind Staff" || _root.save.inventoryName[i] == "Epic Earth Staff" || _root.save.inventoryName[i] == "Epic Thunder Staff" || _root.save.inventoryName[i] == "Epic Water Staff" || _root.save.inventoryName[i] == "Light Glaive" || _root.save.inventoryName[i] == "Dark Glaive") {
                _root.save.inventoryAttack[i] = 750;
                _root.save.inventorySpeed[i] = 6;
                _root.save.inventoryDefense[i] = 0;
                _root.save.inventoryCrit[i] = 0;
                _root.save.inventoryDexterity[i] = 0;
                _root.save.inventoryHealth[i] = 0;
                _root.save.inventoryBonusPow[i] = 100;
                _root.save.inventoryEnhance[i] = 0;
                _root.save.inventoryMaxLevel[i] = 60;
                _root.save.inventoryNoFuse[i] = true;
            }
            if (_root.save.inventoryName[i] == "Glaive of Smiting") {
                _root.save.inventoryDesc[i] = "When equipped with Holy Glory Armor (5 pieces): Damage +350%, Spawn Rate +20%\nShoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Darkglaive of Smiting") {
                _root.save.inventoryDesc[i] = "When equipped with Dark Angel Armor (5 pieces): Damage +350%, Spawn Rate +25%\nShoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Fiend Glaive") {
                _root.save.inventoryDesc[i] = "When equipped with Chaos Armor (5 pieces): Damage +350%, Spawn Rate +35%\n\nCannot be enhanced with Attack enhancers.";
            }
            i++;
        }
        _root.save.ver = 301;
    }
    if (_root.save.ver < 401) {
        let i = 1;
        while (i <= 330) {
            if (_root.save.inventoryName[i] == "Ultimate Lightning Sword") {
                _root.save.inventoryFrame[i] = 246;
            }
            if (_root.save.inventoryName[i] == "Ultimate Lightning Spear") {
                _root.save.inventoryFrame[i] = 247;
            }
            if (_root.save.inventoryName[i] == "Ultimate Lightning Polearm") {
                _root.save.inventoryFrame[i] = 248;
            }
            i++;
        }
        _root.save.ver = 401;
    }
    if (_root.save.ver < 402) {
        if (_root.save.bestLevel >= 200) {
            _root.save.eventToken += 3000;
        }
        _root.save.ver = 402;
    }
    if (_root.save.ver < 404) {
        _root.save.arenaRingOwned[16] = 1;
        _root.save.ver = 404;
    }
    if (_root.save.ver < 405) {
        if (_root.save.activeDeal1 == true) {
            _root.save.eventToken += 1000;
        }
        _root.save.ver = 405;
    }
    if (_root.save.ver < 406) {
        let i = 1;
        while (i <= 400) {
            _root.save.inventoryNoUnique[i] = false;
            i++;
        }
        _root.save.ver = 406;
    }
    if (_root.save.ver < 407) {
        _root.save.speedRunAscend = 2147483647;
        _root.save.speedRunAscendHard = 2147483647;
        _root.save.speedRunAscendImpossible = 2147483647;
        _root.save.speedRun9001 = 2147483647;
        _root.save.ver = 407;
    }
    if (_root.save.ver < 409) {
        let i = 17;
        while (i <= 22) {
            _root.save.arenaRingOwned[i] = 0;
            i++;
        }
        _root.save.ver = 409;
    }
    if (_root.save.ver < 411) {
        let k = 1;
        while (k <= 500) {
            if (_root.save.inventoryName[k] != null && _root.save.inventoryName[k].indexOf("Meteoric") != -1) {
                _root.save.inventoryNoUnique[k] = true;
            }
            else if (_root.save.inventoryNoUnique[k] == true) {
                _root.save.inventoryNoUnique[k] = false;
            }
            k++;
        }
        _root.save.ver = 411;
    }
    if (_root.save.ver < 412) {
        let k = 1;
        while (k <= 500) {
            if (_root.save.inventoryName[k] != null && _root.save.inventoryName[k].indexOf("Censor") != -1) {
                _root.save.inventoryExpiry[k] = Infinity;
                _root.save.inventoryEnhance[k] -= 3;
            }
            k++;
        }
        _root.save.ver = 412;
    }
    if (_root.save.ver < 413) {
        if (_root.save.bestLevel > 1) {
            if (_root.save.inventoryExist[_root.save.arenaHat] != 1) {
                _root.save.arenaHat = 0;
            }
            if (_root.save.inventoryExist[_root.save.arenaShirt] != 1) {
                _root.save.arenaShirt = 0;
            }
            if (_root.save.inventoryExist[_root.save.arenaGloves] != 1) {
                _root.save.arenaGloves = 0;
            }
            if (_root.save.inventoryExist[_root.save.arenaPants] != 1) {
                _root.save.arenaPants = 0;
            }
            if (_root.save.inventoryExist[_root.save.arenaShoes] != 1) {
                _root.save.arenaShoes = 0;
            }
        }
        _root.save.ver = 413;
    }
    if (_root.save.ver < 415) {
        _root.save.permaStupidity = _root.save.banned;
        _root.save.permaStupidityHard = _root.save.bannedHard;
        _root.save.permaStupidityImpossible = _root.save.bannedImpossible;
        _root.save.ver = 415;
    }
    if (_root.save.ver < 418) {
        _root.save.fcgExp += _root.save.fcgWin * 20;
        _root.save.fcgExp += _root.save.fcgLevel6 * 10;
        _root.save.fcgExp += _root.save.fcgLevel7 * 20;
        _root.save.fcgExp += _root.save.fcgLevel8 * 30;
        _root.save.fcgCash += _root.save.fcgWin * 30;
        _root.save.fcgCash += _root.save.fcgLevel6 * 15;
        _root.save.fcgCash += _root.save.fcgLevel7 * 30;
        _root.save.fcgCash += _root.save.fcgLevel8 * 45;
        _root.save.fcgLevel8 = 0;
        _root.save.ver = 418;
    }
    if (_root.save.ver < 419) {
        _root.save.fcgLegendDeck = 13 + Math.floor(_root.systemtimenow / 86400000 % 21);
        _root.save.fcgLegendLife = 10;
        _root.save.ver = 419;
    }
    if (_root.save.ver < 424) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryName[i] == "2nd Anniversary Medal") {
                _root.save.inventoryFrame[i] = 4;
            }
            i++;
        }
        _root.save.ver = 424;
    }
    if (_root.save.ver < 425) {
        _root.save.fcgStreak8 = 0;
        _root.save.fcgMaxStreak8 = 0;
        _root.save.ver = 425;
    }
    if (_root.save.ver < 426) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryName[i] == "First Medal" || _root.save.inventoryName[i] == "Arena Champion") {
                _root.save.inventoryNoUnique[i] = false;
            }
            i++;
        }
        _root.save.ver = 426;
    }
    if (_root.save.ver < 427) {
        if (_root.save.gDifficulty >= 3 && _root.save.level < 9000) {
            _root.save.bankGardenFruit = Math.floor(_root.save.gardenFruit * 0.95);
            _root.save.gardenFruit = Math.ceil(_root.save.gardenFruit * 0.05);
        }
        _root.save.robaconBacon += Math.floor(_root.save.arenaCraft / 50000);
        if (_root.save.robaconBacon > 2000) {
            _root.save.robaconBacon = 2000;
        }
        _root.save.ver = 427;
    }
    if (_root.save.ver < 429) {
        if (_root.save.arenaLevel >= 50 && _root.save.totalPlayTime >= 300000) {
            _root.save.arenaTutorial = 2;
        }
    }
    if (_root.save.ver < 436) {
        let k = 1;
        while (k <= 500) {
            if (_root.save.inventoryName[k] != null && _root.save.inventoryName[k].indexOf("Meteoric") != -1) {
                _root.save.inventoryNoUnique[k] = true;
                if (_root.save.inventoryAttack[k] > 550) {
                    _root.save.inventoryAttack[k] = 550;
                }
            }
            else if (_root.save.inventoryNoUnique[k] == true) {
                _root.save.inventoryNoUnique[k] = false;
            }
            if (_root.save.inventoryName[k] == "Dark Ruler") {
                _root.save.inventoryEnhance[k] = 2005;
            }
            k++;
        }
        _root.save.ver = 436;
    }
    if (_root.save.ver < 457) {
        _root.save.arenaSP = 1 + _root.save.arenaLevel * 15 + _root.save.arenaUltimateSP * 10;
        let i = 1;
        while (i <= 80) {
            _root.save.arenaSkill[i] = 0;
            i++;
        }
        _root.save.arenaTotalSkill = 0;
        _root.save.arenaSkillMax = [0, 30, 30, 30, 30, 10, 0, 0, 0, 10, 10, 20, 20, 30, 30, 30, 20, 0, 30, 10, 30, 10, 30, 30, 10, 30, 1, 10, 10, 20, 30, 10, 30, 30, 50, 50, 30, 10, 30, 10, 20, 10, 20, 10, 20, 30, 0, 0, 0, 1, 30, 10, 10, 30, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        i = 26;
        while (i <= 100) {
            if (i != 26 && i != 51 && i != 76) {
                _root.save.gardenBreedTotal += Math.floor(_root.save.gardenSeed[i] * 1.2 + _root.save.gardenMastery[i]);
            }
            i++;
        }
        _root.save.arenaKillEpic += _root.save.arenaUnobtainium;
        i = 1;
        while (i <= 600) {
            if (_root.save.inventoryName[i] == "Loot Magnet") {
                _root.save.arenaKillEpic += 2500;
            }
            if (_root.save.inventoryName[i] == "Unobtainium Pickaxe") {
                if (_root.save.inventoryExpiry[i] != Infinity || _root.save.inventoryCrit[i] == 21) {
                    _root.save.arenaKillEpic += 1500;
                }
                else {
                    _root.save.arenaKillEpic += 7500;
                }
            }
            i++;
        }
        _root.save.boostAutoMax = 150;
        _root.save.ver = 457;
    }
    if (_root.save.ver < 460) {
        if (_root.save.level >= 9000 || _root.save.gDifficulty != 3) {
            _root.save.arenaPixel += Math.floor(_root.save.arenaPixelMax * 0.2);
            _root.save.arenaCraft += Math.floor(_root.save.arenaCraftMax * 0.45);
        }
        else {
            _root.save.bankArenaPixel += Math.floor(_root.save.arenaPixelMax * 0.25);
            _root.save.bankArenaCraft += Math.floor(_root.save.arenaCraftMax * 0.55);
        }
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryUnob[i] = 0;
                if (_root.save.inventoryName[i] == "Glaive-Glaive-Glaive-Guisarme-Glaive") {
                    _root.save.inventoryCrit[i] += 10;
                    _root.save.inventoryDexterity[i] += 10;
                    _root.save.inventoryAttack[i] += 40;
                    _root.save.inventoryBonusPow[i] += 40;
                }
                if (_root.save.inventoryName[i] == "Greatsword") {
                    _root.save.inventoryCrit[i] += 15;
                    _root.save.inventoryDexterity[i] += 15;
                    _root.save.inventoryAttack[i] += 50;
                    _root.save.inventoryBonusPow[i] += 50;
                }
                if (_root.save.inventoryName[i] == "Greatersword") {
                    _root.save.inventoryCrit[i] += 20;
                    _root.save.inventoryDexterity[i] += 20;
                    _root.save.inventoryAttack[i] += 60;
                    _root.save.inventoryBonusPow[i] += 60;
                }
                if (_root.save.inventoryName[i] == "Gold Cannon") {
                    _root.save.inventoryAttack[i] += 100;
                    _root.save.inventoryBonusPow[i] += 100;
                }
                if (_root.save.inventoryName[i].indexOf("Berserker") != -1) {
                    _root.save.inventoryCrit[i] += 7;
                }
                if (_root.save.inventoryName[i].indexOf("Defensive") != -1) {
                    _root.save.inventoryCrit[i] += 8;
                }
                if (_root.save.inventoryName[i].indexOf("Pure Darkness") != -1) {
                    _root.save.inventoryCrit[i] += 9;
                }
                if (_root.save.inventoryName[i].indexOf("Crimson") != -1) {
                    _root.save.inventoryCrit[i] += 10;
                }
                if (_root.save.inventoryName[i].indexOf("Meteoric") != -1) {
                    _root.save.inventoryUnob[i] = 10;
                    _root.save.inventoryBonusPow[i] += 500;
                }
                if (_root.save.inventoryName[i] == "Cursed Sword") {
                    _root.save.inventoryEnhance[i] -= 6;
                }
                if (_root.save.inventoryName[i] == "Unobtainium Pickaxe") {
                    _root.save.inventoryUnob[i] = 10;
                    _root.save.inventoryBonusPow[i] += 500;
                }
                if (_root.save.inventoryName[i] == "Loot Magnet") {
                    _root.save.inventoryBonusPow[i] += 156;
                }
                if (_root.save.inventoryName[i] == "Arena Champion") {
                    _root.save.inventoryBonusPow[i] += 156;
                }
                if (_root.save.inventoryName[i] == "Censor Sword") {
                    _root.save.inventoryAttack[i] += 100;
                }
                if (_root.save.inventoryName[i] == "Rain Bow") {
                    _root.save.inventoryAttack[i] += 100;
                    _root.save.inventoryMoreBonus[i] = "Accuracy";
                }
                if (_root.save.inventoryName[i] == "Ultimate Fire Sword") {
                    _root.save.inventoryAttack[i] += 150;
                    _root.save.inventoryAbility[i] = "Poison Damage";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Fire Spear") {
                    _root.save.inventoryAttack[i] += 100;
                    _root.save.inventoryAbility[i] = "Poison Damage";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Fire Polearm") {
                    _root.save.inventoryAttack[i] += 50;
                    _root.save.inventoryAbility[i] = "Poison Damage";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Ice Sword") {
                    _root.save.inventoryAttack[i] += 150;
                    _root.save.inventoryAbility[i] = "Weaken Effect";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Ice Spear") {
                    _root.save.inventoryAttack[i] += 100;
                    _root.save.inventoryAbility[i] = "Weaken Effect";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Ice Polearm") {
                    _root.save.inventoryAttack[i] += 50;
                    _root.save.inventoryAbility[i] = "Weaken Effect";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Lightning Sword") {
                    _root.save.inventoryAttack[i] += 150;
                    _root.save.inventoryAbility[i] = "Blind Effect";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Lightning Spear") {
                    _root.save.inventoryAttack[i] += 100;
                    _root.save.inventoryAbility[i] = "Blind Effect";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
                if (_root.save.inventoryName[i] == "Ultimate Lightning Polearm") {
                    _root.save.inventoryAttack[i] += 50;
                    _root.save.inventoryAbility[i] = "Blind Effect";
                    _root.save.inventoryMoreBonus[i] = "MaxMP";
                }
            }
            i++;
        }
        _root.save.arenaZone = 0;
        _root.save.ver = 460;
    }
    if (_root.save.ver < 461) {
        let i = 1;
        while (i <= 60) {
            if (_root.save.arenaZoneKill[i] > 0) {
                _root.save.arenaZoneFound[i] = 1;
            }
            i++;
        }
        _root.save.ver = 461;
    }
    if (_root.save.ver < 462) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryMoreBonus[i] = "";
                if (_root.save.inventoryDesc[i] == undefined) {
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
        _root.save.ver = 462;
    }
    if (_root.save.ver < 465) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryName[i] == "Glaive of Smiting") {
                _root.save.inventoryDesc[i] = "When equipped with Holy Glory Armor (5 pieces): Damage +200%, Spawn Rate +20%\nShoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Darkglaive of Smiting") {
                _root.save.inventoryDesc[i] = "When equipped with Dark Angel Armor (5 pieces): Damage +225%, Spawn Rate +25%\nShoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Fiend Glaive") {
                _root.save.inventoryDesc[i] = "When equipped with Chaos Armor (5 pieces): Damage +250%, Spawn Rate +35%\n\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Pendant of Selectivity") {
                _root.save.inventoryName[i] = "Pendant of Epicness";
            }
            i++;
        }
        _root.save.breakignore9002 = true;
        if (_root.kongregate_username == "Tukkun" || _root.kongregate_username == undefined || _root.saveid == 4) {
            _root.save.breakignore9002 = false;
        }
        _root.save.mysteryBoxCollect3 = new Array();
        _root.save.mysteryBox[2] = Math.ceil(_root.save.mysteryBox[2] * 0.1);
        i = 1;
        while (i <= 12) {
            if (!isNaN(_root.save.mysteryBoxCollect4[i])) {
                _root.save.legendaryBoxOpened += _root.save.mysteryBoxCollect4[i];
            }
            i++;
        }
        _root.save.ver = 465;
    }
    if (_root.save.ver < 466) {
        _root.save.highCount = 0;
        _root.save.totalCount = 0;
        if (_root.save.bestLevel >= 500) {
            _root.save.mysteryBox[8] += 3;
        }
        _root.save.ver = 466;
    }
    if (_root.save.ver < 470) {
        if (_root.save.gDifficulty >= 3 && _root.save.level >= 9000) {
            _root.save.stadiumAbilityCost = 400;
        }
        _root.save.arenaEnhancerFragment += _root.save.bestLevel;
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryDesc[i] != null && _root.save.inventoryDesc[i].indexOf("Well, it WAS immortal") != -1) {
                _root.save.inventoryExpiry[i] = _root.systemtimenow + 604800000;
            }
            if (_root.save.inventoryDesc[i] != null && _root.save.inventoryDesc[i].indexOf("The more you use it,") != -1) {
                _root.save.inventoryExpiry[i] = _root.systemtimenow + 2592000000;
            }
            i++;
        }
        _root.save.ver = 470;
    }
    if (_root.save.ver < 471) {
        _root.save.stadiumAbilityCost = _root.save.stadiumEnergy + _root.save.stadiumAccel + _root.save.stadiumMaxSpeed + _root.save.stadiumStartSpeed + _root.save.stadiumDash + _root.save.stadiumJump + _root.save.stadiumBoost + _root.save.stadiumReward;
        _root.save.ver = 471;
    }
    if (_root.save.ver < 472) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryDesc[i] == undefined) {
                    _root.save.inventoryDesc[i] = "";
                    _root.save.inventoryExpiry[i] = Infinity;
                }
            }
            i++;
        }
        _root.save.ver = 472;
    }
    if (_root.save.ver < 473) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Ultimate Thunder Sword") {
                    _root.save.inventoryName[i] = "Ultimate Lightning Sword";
                }
                if (_root.save.inventoryName[i] == "Ultimate Thunder Spear") {
                    _root.save.inventoryName[i] = "Ultimate Lightning Spear";
                }
                if (_root.save.inventoryName[i] == "Ultimate Thunder Polearm") {
                    _root.save.inventoryName[i] = "Ultimate Lightning Polearm";
                }
                if (_root.save.inventoryName[i] == "Ultimate Fire Sword") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Fire Spear") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Fire Polearm") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Ice Sword") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Ice Spear") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Ice Polearm") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Lightning Sword") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Lightning Spear") {
                    _root.save.inventoryAttack[i] += 150;
                }
                if (_root.save.inventoryName[i] == "Ultimate Lightning Polearm") {
                    _root.save.inventoryAttack[i] += 150;
                }
            }
            i++;
        }
        _root.save.ver = 473;
    }
    if (_root.save.ver < 475) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryBonus[i] == "Enhancer Filter" || _root.save.inventoryBonus[i] == "Enhancer Level" || _root.save.inventoryBonus[i] == "Enhancer Rarity") {
                _root.save.inventoryBonus[i] = "Epic Monster Rate";
            }
            _root.save.ver = 475;
            i++;
        }
    }
    if (_root.save.ver < 476) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryNoFuse[i] == false && _root.save.inventoryDesc[i].indexOf("Fused Item") != -1) {
                _root.save.inventoryNoFuse[i] = true;
                TFP = _root.save.inventoryAttack[i] + _root.save.inventoryDefense[i] * 1.6 - _root.save.inventoryEnhance[i] * 50;
                if (TFP >= 600) {
                    _root.save.inventorySell[i] = Math.floor(_root.save.inventorySell[i] * 5);
                    _root.save.inventoryNoLife[i] = true;
                    _root.save.inventoryExpiry[i] = 0;
                    _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                }
            }
            i++;
        }
        _root.save.ver = 476;
    }
    if (_root.save.ver < 480) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryName[i] == "Triangle Gem") {
                _root.save.inventorySpirit[i] = false;
                _root.save.inventoryEnhance[i] = 0;
            }
            i++;
        }
        _root.save.ver = 480;
    }
    if (_root.save.ver < 482) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryName[i] == "Immortal Pendant") {
                _root.save.inventoryNoBonus[i] = false;
            }
            i++;
        }
        _root.save.ver = 482;
    }
    if (_root.save.ver < 486) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Fairy Godmother Wand") {
                    _root.save.inventoryAttack[i] += 25;
                    _root.save.inventoryUnob[i] = 10;
                    _root.save.inventoryDesc[i] = "When equipped: Magic Resist +15%, Negate Effect Chance +15%\n\nWhen equipped with Fairy Godmother Armor (5 pieces): Potion Efficiency +500%, Spawn Rate +30%";
                }
                if (_root.save.inventoryBonusPow[i] >= 7000 || _root.save.inventoryAttack[i] >= 3100 || _root.save.inventoryDefense[i] >= 1900 || _root.save.inventoryCrit[i] >= 250 || _root.save.inventoryDexterity[i] >= 250 || _root.save.inventoryHealth[i] >= 250) {
                    _root.save.inventoryNoLife[i] = true;
                    _root.save.inventoryExpiry[i] = 0;
                    _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                }
                if (_root.save.inventoryType[i] == "Enhancer") {
                    if (_root.save.inventorySubtype[i] == "Weapon Attack Enhancer" && _root.save.inventoryAttack[i] >= 56 && _root.save.inventoryName[i] != "Relic") {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Attack Enhancer" && _root.save.inventoryAttack[i] >= 23) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Weapon Speed Enhancer" && _root.save.inventoryAttack[i] >= 4) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Speed Enhancer" && _root.save.inventoryAttack[i] >= 4) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Weapon Defense Enhancer" && _root.save.inventoryAttack[i] >= 100) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Defense Enhancer" && _root.save.inventoryAttack[i] >= 34) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Weapon Critical Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Critical Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Weapon Dexterity Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Dexterity Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Weapon Health Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Health Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Weapon Mystery Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Mystery Enhancer" && _root.save.inventoryAttack[i] >= 12) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Weapon Unique Enhancer" && _root.save.inventoryAttack[i] >= 101) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Armor Unique Enhancer" && _root.save.inventoryAttack[i] >= 101) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                    if (_root.save.inventorySubtype[i] == "Accessory Unique Enhancer" && _root.save.inventoryAttack[i] >= 101) {
                        _root.save.inventoryNoLife[i] = true;
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryDesc[i] += "\n\nThis item is blocked to be further investigated. If you believe your item is wrongfully blocked, please post in the forum thread.";
                    }
                }
            }
            i++;
        }
        _root.save.ver = 486;
    }
    if (_root.save.ver < 487) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Alien Core") {
                    _root.save.inventoryNoLife[i] = false;
                    _root.save.inventoryExpiry[i] = Infinity;
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
        _root.save.ver = 487;
    }
    if (_root.save.ver < 489) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Fairy Godmother Wand") {
                    _root.save.inventoryAttack[i] += 25;
                    _root.save.inventoryDesc[i] = "When equipped: Magic Resist +15%, Negate Effect Chance +15%\n\nWhen equipped with Fairy Godmother Armor (5 pieces): Potion Efficiency +500%, Spawn Rate +40%";
                }
                if (_root.save.inventoryName[i].indexOf("Crimson") != -1) {
                    _root.save.inventoryDefense[i] += 15;
                    _root.save.inventoryBonusPow[i] += 30;
                }
            }
            i++;
        }
        _root.save.ver = 489;
    }
    if (_root.save.ver < 489) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Pure Darkness Hat") {
                    _root.save.inventoryHealth[i] += 6;
                    _root.save.inventoryDefense[i] += 40;
                }
                else if (_root.save.inventoryName[i] == "Crimson Hat") {
                    _root.save.inventorySpeed[i] += 1;
                    _root.save.inventoryHealth[i] += 15;
                    _root.save.inventoryDefense[i] += 80;
                }
                else if (_root.save.inventoryName[i] == "Pure Darkness Shoes") {
                    _root.save.inventoryDexterity[i] += 6;
                    _root.save.inventoryDefense[i] += 40;
                }
                else if (_root.save.inventoryName[i] == "Crimson Shoes") {
                    _root.save.inventorySpeed[i] += 1;
                    _root.save.inventoryDexterity[i] += 15;
                    _root.save.inventoryDefense[i] += 80;
                }
                else if (_root.save.inventoryName[i].indexOf("Pure Darkness") != -1) {
                    _root.save.inventoryCrit[i] += 6;
                    _root.save.inventoryDefense[i] += 40;
                }
                else if (_root.save.inventoryName[i].indexOf("Crimson") != -1) {
                    _root.save.inventorySpeed[i] += 1;
                    _root.save.inventoryCrit[i] += 15;
                    _root.save.inventoryDefense[i] += 80;
                }
                else if (_root.save.inventoryName[i].indexOf("Berserker") != -1) {
                    _root.save.inventoryDefense[i] += 10;
                }
            }
            i++;
        }
        _root.save.ver = 490;
    }
    if (_root.save.ver < 491) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i].indexOf("Defensive") != -1) {
                    _root.save.inventoryDefense[i] += 20;
                }
                else if (_root.save.inventoryName[i].indexOf("Epic") != -1 && _root.save.inventoryName[i].indexOf("Staff") != -1 && _root.save.inventoryReqRank[i] < 500) {
                    _root.save.inventoryReqRank[i] = (_root.save.inventoryReqRank[i] - 200) * 10 + 200;
                }
            }
            i++;
        }
        _root.save.ver = 491;
    }
    if (_root.save.ver < 492) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i].indexOf("Defensive") != -1) {
                    _root.save.inventoryDefense[i] += 20;
                }
                else if (_root.save.inventoryName[i] == "Light Glaive" || _root.save.inventoryName[i] == "Dark Glaive") {
                    if (_root.save.inventoryReqRank[i] < 500) {
                        _root.save.inventoryReqRank[i] = (_root.save.inventoryReqRank[i] - 200) * 10 + 200;
                    }
                }
            }
            i++;
        }
        _root.save.ver = 492;
    }
    if (_root.save.ver < 493) {
        let i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryReqRank[i] > 500) {
                    _root.save.inventoryReqRank[i] = 500;
                }
            }
            i++;
        }
        _root.save.ver = 493;
    }
    let i;
    if (_root.save.ver < 494) {
        i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i].indexOf("Epic") != -1 && _root.save.inventoryName[i].indexOf("Staff") != -1) {
                    if (_root.save.inventoryReqRank[i] > _root.save.arenaLevel) {
                        _root.save.inventoryReqRank[i] = _root.save.arenaLevel;
                    }
                }
                else if (_root.save.inventoryName[i] == "Light Glaive" || _root.save.inventoryName[i] == "Dark Glaive") {
                    if (_root.save.inventoryReqRank[i] > _root.save.arenaLevel) {
                        _root.save.inventoryReqRank[i] = _root.save.arenaLevel;
                    }
                }
            }
            i++;
        }
        _root.save.ver = 494;
    }
    if (_root.save.ver < 495) {
        i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Special Loot Magnet") {
                    _root.save.inventoryExpiry[i] = Infinity;
                    _root.save.inventoryNoLife[i] = false;
                    _root.save.inventoryDesc[i] = "A one-of-a-kind Loot Magnet awarded for winning an auction. Now to place it in the Storage and never use it.";
                }
            }
            i++;
        }
        _root.save.ver = 495;
    }
    if (_root.save.ver < 497) {
        i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Dark Ruler") {
                    _root.save.inventoryAttack[i] += 1705;
                    if (_root.save.inventoryAttack[i] > 3000) {
                        _root.save.inventoryAttack[i] = 3000;
                    }
                }
            }
            i++;
        }
        _root.save.ver = 497;
    }
    if (_root.save.ver < 499) {
        i = 1;
        while (i <= 600) {
            if (_root.save.inventoryExist[i] != 1) {
                delete _root.save.inventoryExpiry[i];
            }
            i++;
        }
        _root.save.ver = 499;
    }
    if (_root.save.ver < 500) {
        i = 1;
        while (i <= 600) {
            if (_root.save.inventoryReqRank[i] < 0 && !isNaN(_root.save.inventoryReqRank[i])) {
                _root.save.inventoryReqRank[i] = 1;
            }
            i++;
        }
        _root.save.ver = 500;
    }
    if (_root.save.ver < 502) {
        _root.save.dominatorBonus = 0;
        i = 1;
        while (i <= 1337) {
            _root.save.inventorySell[i] = Math.floor(_root.save.inventorySell[i] * 4);
            if (_root.save.inventoryReqRank[i] < 0 && !isNaN(_root.save.inventoryReqRank[i])) {
                _root.save.inventoryReqRank[i] = 1;
            }
            if (_root.save.inventoryMoreBonus[i] == "Pixel / Loot" || _root.save.inventoryMoreBonus[i] == "Material / Loot") {
                _root.save.inventoryMoreBonus[i] = "EXP / Rare Kill";
            }
            if (_root.save.inventoryName[i] == "Dominator Gem") {
                _root.save.inventoryEnhance[i] = 0;
                _root.save.inventorySpirit[i] = false;
                if (g2ku != true) {
                    g2ku = true;
                    _root.save.arenaUnobtainium += 2000;
                }
            }
            if (_root.save.inventoryName[i] == "Dominator Gem" && _root.save.inventoryDefense[i] > 81) {
                _root.save.dominatorBonus += _root.save.inventoryDefense[i] - 81;
                _root.save.inventoryDefense[i] = 81;
            }
            if (_root.save.inventoryExist[i] != 1) {
                delete _root.save.inventoryExpiry[i];
            }
            if (_root.save.inventoryName[i] == "Hero Sword") {
                _root.save.inventoryBonusPow[i] -= 50;
            }
            if (_root.save.inventoryName[i] == "Triangle Sword") {
                _root.save.inventoryBonusPow[i] -= 100;
            }
            if (_root.save.inventoryName[i] == "Legendary Sword") {
                _root.save.inventoryBonusPow[i] -= 150;
            }
            if (_root.save.inventoryName[i] == "Spirit Sword") {
                _root.save.inventoryBonusPow[i] -= 500;
            }
            if (_root.save.inventoryName[i] == "Advanced Fire Gun") {
                _root.save.inventoryBonusPow[i] -= 100;
            }
            if (_root.save.inventoryName[i] == "Advanced Water Gun") {
                _root.save.inventoryBonusPow[i] -= 100;
            }
            if (_root.save.inventoryName[i] == "Glaive") {
                _root.save.inventoryBonusPow[i] -= 10;
            }
            if (_root.save.inventoryName[i] == "Guisarme") {
                _root.save.inventoryBonusPow[i] -= 20;
            }
            if (_root.save.inventoryName[i] == "Longspear") {
                _root.save.inventoryBonusPow[i] -= 30;
            }
            if (_root.save.inventoryName[i] == "Lucerne Hammer") {
                _root.save.inventoryBonusPow[i] -= 40;
            }
            if (_root.save.inventoryName[i] == "Glaive-Guisarme") {
                _root.save.inventoryBonusPow[i] -= 50;
            }
            if (_root.save.inventoryName[i] == "Guisarme-Glaive") {
                _root.save.inventoryBonusPow[i] -= 60;
            }
            if (_root.save.inventoryName[i] == "Glaive-Guisarme-Glaive") {
                _root.save.inventoryBonusPow[i] -= 70;
            }
            if (_root.save.inventoryName[i] == "Glaive-Glaive-Glaive-Guisarme-Glaive") {
                _root.save.inventoryBonusPow[i] -= 80;
            }
            if (_root.save.inventoryName[i] == "Greatsword") {
                _root.save.inventoryBonusPow[i] -= 90;
                _root.save.inventoryAttack[i] += 30;
            }
            if (_root.save.inventoryName[i] == "Greatersword") {
                _root.save.inventoryBonusPow[i] -= 100;
                _root.save.inventoryAttack[i] += 30;
            }
            if (_root.save.inventoryName[i] == "Mystic Bow") {
                _root.save.inventoryBonusPow[i] -= 100;
            }
            if (_root.save.inventoryName[i] == "Mystic Crossbow") {
                _root.save.inventoryBonusPow[i] -= 110;
            }
            if (_root.save.inventoryName[i] == "Slingshot") {
                _root.save.inventoryBonusPow[i] -= 120;
            }
            if (_root.save.inventoryName[i] == "Oversized Slingshot") {
                _root.save.inventoryBonusPow[i] -= 130;
            }
            if (_root.save.inventoryName[i] == "Cannon") {
                _root.save.inventoryBonusPow[i] -= 140;
            }
            if (_root.save.inventoryName[i] == "Gold Cannon") {
                _root.save.inventoryBonusPow[i] -= 150;
            }
            if (_root.save.inventoryName[i] == "Premium Sword (1)" || _root.save.inventoryName[i] == "Premium Sword (2)" || _root.save.inventoryName[i] == "Premium Sword (3)" || _root.save.inventoryName[i] == "Cursed Sword (1)" || _root.save.inventoryName[i] == "Cursed Sword (2)" || _root.save.inventoryName[i] == "Cursed Sword (3)") {
                _root.save.inventoryBonusPow[i] -= 66;
            }
            if (_root.save.inventoryName[i] == "Elite Hat" || _root.save.inventoryName[i] == "Elite Shirt" || _root.save.inventoryName[i] == "Elite Gloves" || _root.save.inventoryName[i] == "Elite Pants" || _root.save.inventoryName[i] == "Elite Shoes") {
                _root.save.inventoryBonusPow[i] -= 60;
            }
            if (_root.save.inventoryName[i] == "Defensive Hat" || _root.save.inventoryName[i] == "Defensive Shirt" || _root.save.inventoryName[i] == "Defensive Gloves" || _root.save.inventoryName[i] == "Defensive Pants" || _root.save.inventoryName[i] == "Defensive Shoes") {
                _root.save.inventoryBonusPow[i] -= 30;
                _root.save.inventoryDefense[i] += 10;
            }
            if (_root.save.inventoryName[i] == "Pure Darkness Hat" || _root.save.inventoryName[i] == "Pure Darkness Shirt" || _root.save.inventoryName[i] == "Pure Darkness Gloves" || _root.save.inventoryName[i] == "Pure Darkness Pants" || _root.save.inventoryName[i] == "Pure Darkness Shoes") {
                _root.save.inventoryBonusPow[i] -= 60;
                _root.save.inventoryDefense[i] += 20;
            }
            if (_root.save.inventoryName[i] == "Crimson Hat" || _root.save.inventoryName[i] == "Crimson Shirt" || _root.save.inventoryName[i] == "Crimson Gloves" || _root.save.inventoryName[i] == "Crimson Pants" || _root.save.inventoryName[i] == "Crimson Shoes") {
                _root.save.inventoryBonusPow[i] -= 120;
                _root.save.inventoryDefense[i] += 40;
            }
            if (_root.save.inventoryName[i] == "Unobtainium Pickaxe") {
                _root.save.inventoryEnhance[i] -= 1;
            }
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Meteoric") != -1 && _root.save.inventoryType[i] == "Weapon") {
                _root.save.inventoryUnob[i] = 20;
                _root.save.inventoryDesc[i] = "When equipped with Meteoric Armor (5 pieces): Spawn Rate +70%";
            }
            i++;
        }
        if (_root.save.dominatorBonus > 1800) {
            _root.save.dominatorBonus = 1800;
        }
        _root.save.ver = 502;
    }
    if (_root.save.ver < 503) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Meteoric") != -1 && _root.save.inventoryType[i] == "Weapon") {
                _root.save.inventoryUnob[i] = 20;
                _root.save.inventoryDesc[i] = "When equipped with Meteoric Armor (5 pieces): Spawn Rate +70%";
            }
            i++;
        }
        _root.save.ver = 503;
    }
    if (_root.save.ver < 504) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Newbie Shirt") {
                _root.save.inventorySubtype[i] = "Shirt";
            }
            if (_root.save.inventoryName[i] == "Newbie Gloves") {
                _root.save.inventorySubtype[i] = "Gloves";
            }
            if (_root.save.inventoryName[i] == "Newbie Pants") {
                _root.save.inventorySubtype[i] = "Pants";
            }
            if (_root.save.inventoryName[i] == "Newbie Shoes") {
                _root.save.inventorySubtype[i] = "Shoes";
            }
            i++;
        }
        _root.save.ver = 504;
    }
    if (_root.save.ver < 505) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Dominator Gem") {
                _root.save.inventoryEnhance[i] = 0;
                _root.save.inventorySpirit[i] = false;
                if (_root.save.inventoryDefense[i] > 81) {
                    _root.save.dominatorBonus += _root.save.inventoryDefense[i] - 81;
                    _root.save.inventoryDefense[i] = 81;
                }
            }
            i++;
        }
        _root.save.ver = 505;
    }
    if (_root.save.ver < 506) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Gem of Constancy") {
                _root.save.inventoryExpTNL[i] = 25000;
            }
            i++;
        }
        _root.save.ver = 506;
    }
    if (_root.save.ver < 509) {
        _root.save.rankedPong = _root.save.highPong;
        _root.save.rankedAvoidance = _root.save.highAvoidance;
        _root.save.rankedMath = _root.save.highMath;
        _root.save.rankedWhack = _root.save.highWhack;
        _root.save.rankedMind = _root.save.highMind;
        _root.save.rankedBalance = _root.save.highBalance;
        _root.save.rankedCount = _root.save.highCount;
        i = 1;
        while (i <= 40) {
            _root.save.unrankedPower[i] = 0;
            i++;
        }
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Meteoric Axe") {
                _root.save.inventoryAttack[i] += 25;
                _root.save.inventoryCrit[i] += 12;
            }
            if (_root.save.inventoryName[i] == "Meteoric Sword") {
                _root.save.inventoryCrit[i] += 10;
                _root.save.inventoryDexterity[i] += 10;
            }
            if (_root.save.inventoryName[i] == "Meteoric Cleaver") {
                _root.save.inventorySpeed[i] += 2;
                _root.save.inventoryCrit[i] += 7;
                _root.save.inventoryDexterity[i] += 15;
            }
            if (_root.save.inventoryName[i] == "Meteoric Glaive") {
                _root.save.inventoryAttack[i] += 50;
                _root.save.inventoryCrit[i] += 10;
            }
            if (_root.save.inventoryName[i] == "Meteoric Scythe") {
                _root.save.inventoryAttack[i] += 25;
                _root.save.inventoryHealth[i] += 20;
            }
            if (_root.save.inventoryName[i] == "Meteoric Voulge") {
                _root.save.inventoryAttack[i] += 25;
            }
            if (_root.save.inventoryName[i] == "Glaive of Smiting") {
                _root.save.inventoryDesc[i] = "When equipped with Holy Glory Armor (5 pieces): Damage +200%, Spawn Rate +10%\nShoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Darkglaive of Smiting") {
                _root.save.inventoryDesc[i] = "When equipped with Dark Angel Armor (5 pieces): Damage +225%, Spawn Rate +15%\nShoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Fiend Glaive") {
                _root.save.inventoryDesc[i] = "When equipped with Chaos Armor (5 pieces): Damage +250%, Spawn Rate +25%\n\nCannot be enhanced with Attack enhancers.";
            }
            if (_root.save.inventoryName[i] == "Pirate Sword") {
                _root.save.inventoryDesc[i] = "A Pirate Sword. It allows you to get extra Coins and Pixels as you damage the monsters - the higher level the Pirate Sword gets, the more Coins and Pixels you get. The worst part is that before you attack, you must shout the skill name in pirate language. That\'s why you attack so slowly with this.";
                if (_root.save.inventoryLevel[i] == 300) {
                    _root.save.inventorySpeed[i] += 3;
                    _root.save.inventoryDesc[i] = "Congratulations! You have mastered the pirate language (for this particular sword, at least), and as a result, you can attack twice as fast with this Pirate Sword equipped!";
                }
            }
            if (_root.save.inventorySubtype[i] == "Trinket" && _root.save.inventoryMaxLevel[i] == 500) {
                _root.save.inventoryBonusPow[i] += _root.save.inventoryReqRank[i] - 1;
                if (_root.save.inventoryReqRank[i] == 500) {
                    _root.save.inventoryBonusPow[i] += 250;
                }
            }
            i++;
        }
        _root.save.ver = 509;
    }
    if (_root.save.ver < 511) {
        if (_root.save.arenaLevel >= 3) {
            i = 2;
            while (i <= _root.save.arenaLevel) {
                _root.save.arenaPixel += 100 * i * i;
                _root.save.arenaCraft += 10 * i * i;
                i++;
            }
        }
        _root.save.ver = 511;
    }
    if (_root.save.ver < 512) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Glaive of Smiting") {
                _root.save.inventoryEnhance[i] -= 5;
            }
            if (_root.save.inventoryName[i] == "Darkglaive of Smiting") {
                _root.save.inventoryEnhance[i] -= 5;
            }
            if (_root.save.inventoryName[i] == "Fiend Glaive") {
                _root.save.inventoryEnhance[i] -= 5;
            }
            if (_root.save.inventoryExist[i] == 1) {
                _root.save.inventoryGuard[i] = false;
            }
            if (_root.save.inventoryName[i] == "Gem of Constancy") {
                _root.save.inventoryDesc[i] = "This gem gets more and more powerful as you fight with it equipped, but whenever you equip or unequip an item (including the Gem of Constancy itself), it will go back to its original state. Rumor says that something will happen when it reaches level 500...\n\nSpawn Rate +5% per piece of Finalized equipment equipped.";
            }
            i++;
        }
        _root.save.ver = 512;
    }
    if (_root.save.ver < 513) {
        if (_root.save.fcgLevel > 200) {
            _root.save.fcgLevel = 200;
        }
        _root.save.ver = 513;
    }
    if (_root.save.ver < 514) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "(MYSTERIOUS ITEM)") {
                _root.save.inventoryEnhance[i] = 10;
                if (_root.save.inventoryNoFuse[i] == true) {
                    _root.save.inventoryExpiry[i] = 0;
                }
                else {
                    _root.save.inventoryNoFuse[i] = true;
                }
            }
            i++;
        }
        _root.save.ver = 514;
    }
    if (_root.save.ver < 515) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "(MYSTERIOUS ITEM)" || _root.save.inventoryName[i] == "CHAOS GLOVES") {
                _root.save.inventoryDexterity[i] += 50;
            }
            i++;
        }
        _root.save.ver = 515;
    }
    if (_root.save.ver < 517) {
        _root.save.arenaSpookyScore = 0;
        _root.save.arenaSpookyToday = 0;
        _root.save.ver = 517;
    }
    if (_root.save.ver < 518) {
        if (_root.save.eventToken < 0) {
            _root.save.eventToken += 500;
        }
        _root.save.ver = 518;
    }
    if (_root.save.ver < 519) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Ghost Shoes" && _root.save.inventoryEnhance[i] > 0) {
                _root.save.inventoryAttack[i] = 27;
                _root.save.inventorySpeed[i] = 7;
                _root.save.inventoryDefense[i] = 900;
                _root.save.inventoryCrit[i] = 10;
                _root.save.inventoryDexterity[i] = 100;
                _root.save.inventoryHealth[i] = 0;
                _root.save.inventoryEnhance[i] = 11;
                _root.save.inventoryBonusPow[i] = 114;
                _root.save.inventorySpirit[i] = true;
            }
            i++;
        }
        _root.save.ver = 519;
    }
    if (_root.save.ver < 520) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Humblebee") != -1) {
                _root.save.inventoryExpTNL[i] = 90000000;
            }
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Ghost") != -1 && _root.save.inventoryType[i] == "Armor") {
                _root.save.inventoryDefense[i] += 200;
            }
            if (_root.save.inventoryName[i] == "Empowering Gem") {
                _root.save.inventoryDesc[i] += "This gem allows you to deal extra damage to monsters. The more you use it, the better it becomes!\n\nWhen equipped with a Rank 200+ weapon: Damage +50%";
            }
            i++;
        }
        _root.save.ver = 520;
    }
    if (_root.save.ver < 521) {
        _root.save.arenaSkillMax[6] = 1;
        _root.save.arenaSkillMax[7] = 1;
        _root.save.arenaSkillMax[8] = 1;
        _root.save.ver = 521;
    }
    if (_root.save.ver < 522) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Empowering Gem") {
                _root.save.inventoryDesc[i] = "This gem allows you to deal extra damage to monsters. The more you use it, the better it becomes!\n\nWhen equipped with a Rank 200+ weapon: Damage +50%";
            }
            i++;
        }
        _root.save.ver = 522;
    }
    if (_root.save.ver < 523) {
        if (_root.save.anniversary3Deal2 == true) {
            _root.save.mysteryBox[6] += 3;
        }
        _root.save.ver = 523;
    }
    if (_root.save.ver < 524) {
        if (_root.save.mainQuestRank[520] == 4) {
            _root.save.mainQuestS -= 1;
            _root.save.mainQuestA -= 1;
            _root.save.mainQuestB -= 1;
            _root.save.mainQuestC -= 1;
        }
        else if (_root.save.mainQuestRank[520] == 3) {
            _root.save.mainQuestA -= 1;
            _root.save.mainQuestB -= 1;
            _root.save.mainQuestC -= 1;
        }
        else if (_root.save.mainQuestRank[520] == 2) {
            _root.save.mainQuestB -= 1;
            _root.save.mainQuestC -= 1;
        }
        else if (_root.save.mainQuestRank[520] == 1) {
            _root.save.mainQuestC -= 1;
        }
        _root.save.ver = 524;
    }
    if (_root.save.ver < 525) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryType[i] == "Armor" && _root.save.inventoryReqRank[i] >= 450) {
                if (_root.save.inventorySell[i] == "" || _root.save.inventoryName[i].length <= 2) {
                    _root.save.inventorySell[i] = _root.save.inventoryExpiry[i];
                    if (isNaN(_root.save.inventorySell[i])) {
                        _root.save.inventorySell[i] = 4000000;
                    }
                    _root.save.inventoryExpiry[i] = _root.save.inventoryNoBonus[i];
                    if (isNaN(_root.save.inventoryExpiry[i])) {
                        _root.save.inventoryExpiry[i] = Infinity;
                    }
                    _root.save.inventoryNoBonus[i] = _root.save.inventoryNoLife[i];
                    _root.save.inventoryNoLife[i] = _root.save.inventoryNoFuse[i];
                    _root.save.inventoryNoFuse[i] = false;
                    _root.save.inventoryNoUnique[i] = false;
                    _root.save.inventorySpirit[i] = false;
                    _root.save.inventoryUnob[i] = _root.save.inventoryName[i];
                    if (isNaN(_root.save.inventoryUnob[i])) {
                        _root.save.inventoryUnob[i] = 0;
                    }
                    if (_root.save.inventoryReqRank[i] >= 550) {
                        tempName = "Dress";
                    }
                    else {
                        tempName = "Samurai";
                    }
                    _root.save.inventoryName[i] = tempName + " " + _root.save.inventorySubtype[i];
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
        _root.save.ver = 525;
    }
    if (_root.save.ver < 526) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Samurai") != -1 || _root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Dress") != -1) {
                _root.save.inventorySell[i] = 5000000;
            }
            i++;
        }
        _root.save.ver = 526;
    }
    if (_root.save.ver < 527) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryType[i] == "Armor" && _root.save.inventorySubtype[i] == "Shoes" && _root.save.inventoryFrame[i] == 150) {
                if (_root.save.inventorySell[i] == "" || _root.save.inventoryName[i].length <= 2) {
                    _root.save.inventorySell[i] = 0;
                    _root.save.inventoryExpiry[i] = Infinity;
                    _root.save.inventoryNoBonus[i] = _root.save.inventoryNoLife[i];
                    _root.save.inventoryNoLife[i] = _root.save.inventoryNoFuse[i];
                    if (_root.save.inventoryNoFuse[i] == true) {
                        _root.save.inventoryExpiry[i] = 0;
                        _root.save.inventoryNoLife[i] = false;
                    }
                    _root.save.inventoryNoFuse[i] = false;
                    _root.save.inventoryNoUnique[i] = false;
                    _root.save.inventorySpirit[i] = false;
                    _root.save.inventoryUnob[i] = _root.save.inventoryName[i];
                    if (isNaN(_root.save.inventoryUnob[i])) {
                        _root.save.inventoryUnob[i] = 0;
                    }
                    _root.save.inventoryName[i] = "Knightmare Shoes";
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
        _root.save.ver = 527;
    }
    if (_root.save.ver < 528) {
        if (_root.save.printerCharge > 400) {
            if (_root.save.printerCharge > 5000000) {
                _root.save.printerCharge = 5000000;
            }
            _root.save.mysteryBox[4] += Math.floor(_root.save.printerCharge / 10000);
            _root.save.printerCharge = 400;
        }
        _root.save.ver = 528;
    }
    if (_root.save.ver < 529) {
        _root.save.arcade100kMedal = Math.ceil(_root.save.arcade100kMedal / 2);
        _root.save.ver = 529;
    }
    if (_root.save.ver < 530) {
        _root.save.pirateSwordPenalty = 0;
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Pirate Sword" && _root.save.inventoryLevel[i] == 9999) {
                _root.save.pirateSwordPenalty += _root.save.inventoryExp[i] * 10;
            }
            i++;
        }
        if (_root.save.pirateSwordPenalty > 6500000000) {
            _root.save.pirateSwordPenalty = 6500000000;
        }
        _root.save.ver = 530;
    }
    if (_root.save.ver < 533) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Crystal ") != -1) {
                _root.save.inventoryDefense[i] += _root.save.inventoryReqRank[i] - 400;
                _root.save.inventoryBonusPow[i] += _root.save.inventoryReqRank[i] * 2 - 1000;
            }
            i++;
        }
        _root.save.ver = 533;
    }
    if (_root.save.ver < 535) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Crystal ") != -1) {
                if (_root.save.inventoryLevel[i] == 9999) {
                    _root.save.inventoryCrit[i] -= 24;
                    _root.save.inventoryDexterity[i] -= 24;
                    _root.save.inventoryHealth[i] -= 24;
                    _root.save.inventoryDefense[i] -= 120;
                }
                else {
                    _root.save.inventoryCrit[i] -= 20;
                    _root.save.inventoryDexterity[i] -= 20;
                    _root.save.inventoryHealth[i] -= 20;
                    _root.save.inventoryDefense[i] -= 100;
                }
                _root.save.inventoryDesc[i] = "When equipped with a Mining Tool: Drop Rate +50%, Spawn Rate +15%\n\nDropped by: Secret Crystal";
            }
            if (_root.save.inventoryName[i] == "Nerf Accepted!") {
                _root.save.inventoryEnhance[i] = 1;
                _root.save.inventoryCrit[i] = 5;
                _root.save.inventoryDexterity[i] = 5;
                _root.save.inventoryHealth[i] = 5;
                _root.save.inventoryReqRank[i] = 10;
                _root.save.inventoryBonusPow[i] -= 600;
            }
            i++;
        }
        _root.save.ver = 535;
    }
    if (_root.save.ver < 537) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Yellow Madness Gem") {
                _root.save.inventoryDesc[i] = "With this, you no longer suffer a 10% EXP penalty when fighting yellow-named monsters! It also increases your EXP gain rate and makes rare monsters more likely to appear! Isn\'t it awesome?";
            }
            if (_root.save.inventoryType[i] == "Outfit") {
                if (_root.save.inventoryName[i] == "Transparent Earrings" || _root.save.inventoryName[i] == "Yellow Skin" || _root.save.inventoryName[i] == "Invisible Skin") {
                    _root.save.inventoryBonusPow[i] = 16;
                }
                else {
                    _root.save.inventoryBonusPow[i] = 706;
                }
            }
            i++;
        }
        _root.save.ver = 537;
    }
    if (_root.save.ver < 539) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Ghost Hat" || _root.save.inventoryName[i] == "Ghost Shirt" || _root.save.inventoryName[i] == "Ghost Gloves" || _root.save.inventoryName[i] == "Ghost Pants" || _root.save.inventoryName[i] == "Ghost Shoes") {
                _root.save.inventoryAttack[i] += 60;
                _root.save.inventorySpeed[i] += 3;
                _root.save.inventoryCrit[i] += 20;
                _root.save.inventoryDexterity[i] += 20;
                _root.save.inventoryHealth[i] += 20;
            }
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Elm") != -1) {
                _root.save.inventoryEnhance[i] -= 1;
            }
            i++;
        }
        _root.save.ver = 539;
    }
    if (_root.save.ver < 543) {
        _root.save.ripoffCard[1] += _root.save.ripoffCard[2] * 3;
        _root.save.ripoffCard[3] += _root.save.ripoffCard[4] * 3;
        _root.save.ripoffCard[4] = 0;
        let speedrunRefund = _root.save.speedRunCoin * 10;
        if (speedrunRefund > 200000) {
            speedrunRefund = 200000;
        }
        if (isNaN(speedrunRefund) || speedrunRefund < 0) {
            speedrunRefund = 0;
        }
        _root.save.eventToken += speedrunRefund;
        _root.save.ver = 543;
    }
    if (_root.save.ver < 544) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventorySubtype[i] == "Enhancer Success Enhancer" || _root.save.inventorySubtype[i] == "Enhancer Destruction Enhancer") {
                _root.save.eventToken += 100;
            }
            i++;
        }
        _root.save.ver = 544;
    }
    if (_root.save.ver < 545) {
        if (_root.save.serviceRewardBot == true) {
            _root.save.ripoffCard[5] += 1;
        }
        if (_root.save.serviceAutoHarvest == true) {
            _root.save.ripoffCard[6] += 1;
        }
        if (_root.save.serviceDemandMaster == true) {
            _root.save.ripoffCard[11] += 1;
        }
        if (_root.save.serviceQuickAdventures == true) {
            _root.save.ripoffCard[12] += 1;
        }
        _root.save.ver = 545;
    }
    if (_root.save.ver < 546) {
        if (_root.save.serviceBatteryCharger == true) {
            _root.save.ripoffCard[8] += 1;
        }
        _root.save.ver = 546;
    }
    if (_root.save.ver < 547) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Worst Moon Gem" && _root.save.inventoryNoLife[i] == false) {
                _root.save.inventoryExpiry[i] = Infinity;
            }
            i++;
        }
        _root.save.ver = 547;
    }
    if (_root.save.ver < 548) {
        _root.save.mysteryBox[3] += _root.save.arenaFreeReset;
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryLevel[i] < 9999 && _root.save.inventoryNoLife[i] == false) {
                _root.save.inventoryExpiry[i] = Infinity;
            }
            if (_root.save.inventoryNoLife != null && _root.save.inventoryNoLife[i] != undefined) {
                delete _root.save.inventoryNoLife[i];
            }
            if (_root.save.inventoryExist[i] == undefined || _root.save.inventoryExist[i] != 1 || _root.save.inventoryName[i] == undefined || _root.save.inventorySubtype[i] == "Weapon Lifespan Extender" || _root.save.inventorySubtype[i] == "Armor Lifespan Extender" || _root.save.inventorySubtype[i] == "Accessory Lifespan Extender" || _root.save.inventorySubtype[i] == "Enhancer Success Enhancer" || _root.save.inventorySubtype[i] == "Enhancer Destruction Enhancer") {
                if (_root.save.inventoryExist[i] != undefined) {
                    _root.save.inventoryExist[i] = 0;
                }
                delete _root.save.inventoryName[i];
                delete _root.save.inventoryReqRank[i];
                delete _root.save.inventoryType[i];
                delete _root.save.inventorySubtype[i];
                delete _root.save.inventoryFrame[i];
                delete _root.save.inventoryRange[i];
                delete _root.save.inventoryAttack[i];
                delete _root.save.inventorySpeed[i];
                delete _root.save.inventoryDefense[i];
                delete _root.save.inventoryBonus[i];
                delete _root.save.inventoryAbility[i];
                delete _root.save.inventoryMoreBonus[i];
                delete _root.save.inventoryLevel[i];
                delete _root.save.inventoryMaxLevel[i];
                delete _root.save.inventoryExp[i];
                delete _root.save.inventoryExpTNL[i];
                delete _root.save.inventoryEnhance[i];
                delete _root.save.inventoryBonusPow[i];
                delete _root.save.inventorySell[i];
                delete _root.save.inventoryExpiry[i];
                delete _root.save.inventoryObtainTime[i];
                delete _root.save.inventoryNoBonus[i];
                delete _root.save.inventoryNoRecycle[i];
                delete _root.save.inventoryNoFuse[i];
                delete _root.save.inventoryNoUnique[i];
                delete _root.save.inventoryUnob[i];
                delete _root.save.inventorySpirit[i];
                delete _root.save.inventoryCrit[i];
                delete _root.save.inventoryDexterity[i];
                delete _root.save.inventoryHealth[i];
                delete _root.save.inventoryDesc[i];
                delete _root.save.inventoryGuard[i];
            }
            i++;
        }
        _root.save.ver = 548;
    }
    if (_root.save.ver < 550) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Nerf Accepted!" && _root.save.inventoryEnhance[i] > 5) {
                _root.save.inventoryEnhance[i] = 5;
                _root.save.inventoryLevel[i] = 5;
                _root.save.inventoryMaxLevel[i] = 5;
                _root.save.inventoryCrit[i] = 25;
                _root.save.inventoryDexterity[i] = 25;
                _root.save.inventoryHealth[i] = 25;
            }
            if (_root.save.inventoryName[i] == "Anti-Nerfer") {
                if (_root.save.inventoryExist[i] != undefined) {
                    _root.save.inventoryExist[i] = 0;
                }
                delete _root.save.inventoryName[i];
                delete _root.save.inventoryReqRank[i];
                delete _root.save.inventoryType[i];
                delete _root.save.inventorySubtype[i];
                delete _root.save.inventoryFrame[i];
                delete _root.save.inventoryRange[i];
                delete _root.save.inventoryAttack[i];
                delete _root.save.inventorySpeed[i];
                delete _root.save.inventoryDefense[i];
                delete _root.save.inventoryBonus[i];
                delete _root.save.inventoryAbility[i];
                delete _root.save.inventoryMoreBonus[i];
                delete _root.save.inventoryLevel[i];
                delete _root.save.inventoryMaxLevel[i];
                delete _root.save.inventoryExp[i];
                delete _root.save.inventoryExpTNL[i];
                delete _root.save.inventoryEnhance[i];
                delete _root.save.inventoryBonusPow[i];
                delete _root.save.inventorySell[i];
                delete _root.save.inventoryExpiry[i];
                delete _root.save.inventoryObtainTime[i];
                delete _root.save.inventoryNoBonus[i];
                delete _root.save.inventoryNoRecycle[i];
                delete _root.save.inventoryNoFuse[i];
                delete _root.save.inventoryNoUnique[i];
                delete _root.save.inventoryUnob[i];
                delete _root.save.inventorySpirit[i];
                delete _root.save.inventoryCrit[i];
                delete _root.save.inventoryDexterity[i];
                delete _root.save.inventoryHealth[i];
                delete _root.save.inventoryDesc[i];
                delete _root.save.inventoryGuard[i];
            }
            i++;
        }
        _root.save.ver = 550;
    }
    if (_root.save.ver < 551) {
        i = 0;
        while (i <= 66) {
            if (isNaN(_root.save.arenaSkill[i])) {
                _root.save.arenaSkill[i] = 0;
            }
            i++;
        }
        _root.save.ver = 551;
    }
    if (_root.save.ver < 552) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Nerf Accepted!") {
                _root.save.inventoryReqRank[i] = _root.save.inventoryEnhance[i] * 10;
            }
            i++;
        }
        _root.save.ver = 552;
    }
    if (_root.save.ver < 553) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Loot Magnet") {
                _root.save.inventoryAttack[i] = 1200;
            }
            i++;
        }
        _root.save.ver = 553;
    }
    if (_root.save.ver < 554) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Neon Skin" && _root.save.inventoryUnob[i] == 6) {
                _root.save.inventoryUnob[i] = 7;
            }
            i++;
        }
        _root.save.ver = 554;
    }
    if (_root.save.ver < 555) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Meteoric") != -1) {
                _root.save.inventoryUnob[i] = 20;
            }
            i++;
        }
        _root.save.ver = 555;
    }
    if (_root.save.ver < 556) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Meteoric") != -1) {
                _root.save.inventoryUnob[i] = 20;
            }
            i++;
        }
        _root.save.ver = 556;
    }
    if (_root.save.ver < 557) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Newbie Fighter") {
                _root.save.inventoryAttack[i] = 5;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Fighter") {
                _root.save.inventoryAttack[i] = 10;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Veteran Fighter") {
                _root.save.inventoryAttack[i] = 15;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Heroic Fighter") {
                _root.save.inventoryAttack[i] = 20;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Elite Fighter") {
                _root.save.inventoryAttack[i] = 25;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Master Fighter") {
                _root.save.inventoryAttack[i] = 30;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Ultimate Fighter") {
                _root.save.inventoryAttack[i] = 35;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Arena Champion") {
                _root.save.inventoryAttack[i] = 40;
                _root.save.inventoryBonus[i] = "EXP";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Combo King") {
                _root.save.inventoryBonus[i] = "";
                _root.save.inventoryAbility[i] = "Double Hit Chance";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Bestiary Master") {
                _root.save.inventoryDexterity[i] = 10;
                _root.save.inventoryHealth[i] = 10;
                _root.save.inventoryBonus[i] = "Spawn Rate";
                _root.save.inventoryAbility[i] = "Instant Kill";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Bestiary King") {
                _root.save.inventoryDexterity[i] = 15;
                _root.save.inventoryHealth[i] = 15;
                _root.save.inventoryBonus[i] = "Spawn Rate";
                _root.save.inventoryAbility[i] = "Instant Kill";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Mad Scientist") {
                _root.save.inventoryDexterity[i] = 20;
                _root.save.inventoryHealth[i] = 20;
                _root.save.inventoryBonus[i] = "Spawn Rate";
                _root.save.inventoryAbility[i] = "Instant Kill";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "THE BESTiary") {
                _root.save.inventoryDexterity[i] = 25;
                _root.save.inventoryHealth[i] = 25;
                _root.save.inventoryBonus[i] = "Spawn Rate";
                _root.save.inventoryAbility[i] = "Instant Kill";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Bottomless Bag") {
                _root.save.inventoryHealth[i] = 30;
                _root.save.inventoryBonus[i] = "Drop Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "";
            }
            if (_root.save.inventoryName[i] == "Novice Tamer") {
                _root.save.inventoryCrit[i] = 10;
                _root.save.inventoryBonus[i] = "Rare Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Rare Kill";
            }
            if (_root.save.inventoryName[i] == "Veteran Tamer") {
                _root.save.inventoryCrit[i] = 15;
                _root.save.inventoryBonus[i] = "Rare Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Rare Kill";
            }
            if (_root.save.inventoryName[i] == "Master Tamer") {
                _root.save.inventoryCrit[i] = 20;
                _root.save.inventoryBonus[i] = "Rare Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Rare Kill";
            }
            if (_root.save.inventoryName[i] == "Legendary Tamer") {
                _root.save.inventoryCrit[i] = 25;
                _root.save.inventoryBonus[i] = "Rare Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Rare Kill";
            }
            if (_root.save.inventoryName[i] == "Novice Trainer") {
                _root.save.inventoryCrit[i] = 10;
                _root.save.inventoryHealth[i] = 10;
                _root.save.inventoryBonus[i] = "Epic Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Epic Kill";
            }
            if (_root.save.inventoryName[i] == "Veteran Trainer") {
                _root.save.inventoryCrit[i] = 15;
                _root.save.inventoryHealth[i] = 15;
                _root.save.inventoryBonus[i] = "Epic Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Epic Kill";
            }
            if (_root.save.inventoryName[i] == "Master Trainer") {
                _root.save.inventoryCrit[i] = 20;
                _root.save.inventoryHealth[i] = 20;
                _root.save.inventoryBonus[i] = "Epic Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Epic Kill";
            }
            if (_root.save.inventoryName[i] == "Legendary Trainer") {
                _root.save.inventoryCrit[i] = 25;
                _root.save.inventoryHealth[i] = 25;
                _root.save.inventoryBonus[i] = "Epic Monster Rate";
                _root.save.inventoryAbility[i] = "";
                _root.save.inventoryMoreBonus[i] = "EXP / Epic Kill";
            }
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("of Loot") == true) {
                if (_root.save.inventoryLevel[i] == 9999) {
                    _root.save.inventoryCrit[i] -= 6;
                    _root.save.inventoryDexterity[i] -= 6;
                    _root.save.inventoryHealth[i] -= 6;
                }
                else {
                    _root.save.inventoryCrit[i] -= 5;
                    _root.save.inventoryDexterity[i] -= 5;
                    _root.save.inventoryHealth[i] -= 5;
                }
            }
            i++;
        }
        _root.save.ver = 557;
    }
    if (_root.save.ver < 558) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == undefined) {
                delete _root.save.inventoryName[i];
                delete _root.save.inventoryReqRank[i];
                delete _root.save.inventoryType[i];
                delete _root.save.inventorySubtype[i];
                delete _root.save.inventoryFrame[i];
                delete _root.save.inventoryRange[i];
                delete _root.save.inventoryAttack[i];
                delete _root.save.inventorySpeed[i];
                delete _root.save.inventoryDefense[i];
                delete _root.save.inventoryBonus[i];
                delete _root.save.inventoryAbility[i];
                delete _root.save.inventoryMoreBonus[i];
                delete _root.save.inventoryLevel[i];
                delete _root.save.inventoryMaxLevel[i];
                delete _root.save.inventoryExp[i];
                delete _root.save.inventoryExpTNL[i];
                delete _root.save.inventoryEnhance[i];
                delete _root.save.inventoryBonusPow[i];
                delete _root.save.inventorySell[i];
                delete _root.save.inventoryExpiry[i];
                delete _root.save.inventoryObtainTime[i];
                delete _root.save.inventoryNoBonus[i];
                delete _root.save.inventoryNoRecycle[i];
                delete _root.save.inventoryNoFuse[i];
                delete _root.save.inventoryNoUnique[i];
                delete _root.save.inventoryUnob[i];
                delete _root.save.inventorySpirit[i];
                delete _root.save.inventoryCrit[i];
                delete _root.save.inventoryDexterity[i];
                delete _root.save.inventoryHealth[i];
                delete _root.save.inventoryDesc[i];
                delete _root.save.inventoryGuard[i];
            }
            i++;
        }
        _root.save.ver = 558;
    }
    if (_root.save.ver < 559) {
        _root.save.raidPyramid = 0;
        _root.save.raidDefend = 0;
        _root.save.ver = 559;
    }
    if (_root.save.ver < 560) {
        _root.save.raidPyramid = 0;
        _root.save.raidDefend = 0;
        _root.save.ver = 560;
    }
    if (_root.save.ver < 561) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryType[i] == "Armor") {
                if (_root.save.inventoryName[i].indexOf("Ghost") != -1) {
                    _root.save.inventoryEnhance[i] -= 1;
                    if (_root.save.inventoryLevel[i] == 9999) {
                        _root.save.inventoryAttack[i] += 24;
                        _root.save.inventoryCrit[i] += 24;
                        _root.save.inventoryDexterity[i] += 24;
                        _root.save.inventoryHealth[i] += 24;
                    }
                    else {
                        _root.save.inventoryAttack[i] += 20;
                        _root.save.inventoryCrit[i] += 20;
                        _root.save.inventoryDexterity[i] += 20;
                        _root.save.inventoryHealth[i] += 20;
                    }
                }
            }
            i++;
        }
        _root.save.ver = 561;
    }
    if (_root.save.ver < 562) {
        if (_root.save.gDifficulty >= 3) {
            _root.save.arenaAttack = 90000;
            _root.save.arenaDefense = 90000;
            _root.save.arenaMaxHealth = 900000;
            _root.save.arenaMaxMana = 360000;
            _root.save.arenaAccuracy = 18000;
            _root.save.arenaEvasion = 18000;
            _root.save.arenaPixel += _root.save.bankArenaPixel;
            _root.save.arenaCraft += _root.save.bankArenaCraft;
        }
        _root.save.ver = 562;
    }
    if (_root.save.ver < 563) {
        let hadHB = false;
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Humblebee") != -1) {
                hadHB = true;
            }
            i++;
        }
        if (hadHB == true) {
            _root.save.arenaPixel += 20000000000;
            _root.save.arenaCraft += 4000000000;
        }
        _root.save.ver = 563;
    }
    if (_root.save.ver < 564) {
        let hadHB = false;
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Humblebee") != -1 && _root.save.inventoryExist[i] == 1) {
                hadHB = true;
            }
            i++;
        }
        if (hadHB == false) {
            _root.save.arenaPixel -= 20000000000;
            _root.save.arenaCraft -= 4000000000;
        }
        if (_root.save.arenaPixel < 0) {
            _root.save.arenaPixel *= 4;
        }
        if (_root.save.arenaCraft < 0) {
            _root.save.arenaCraft *= 4;
        }
        _root.save.ver = 564;
    }
    if (_root.save.ver < 566) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Collector\'s Pendant") {
                _root.save.inventoryEnhance[i] = 10;
            }
            i++;
        }
        _root.save.ver = 566;
    }
    if (_root.save.ver < 570) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Glaive of Smiting") {
                _root.save.inventoryReqRank[i] = 258;
            }
            if (_root.save.inventoryName[i] == "Darkglaive of Smiting") {
                _root.save.inventoryReqRank[i] = 278;
            }
            if (_root.save.inventoryName[i] == "Fiend Glaive") {
                _root.save.inventoryReqRank[i] = 298;
            }
            i++;
        }
        if (_root.save.arenaPixel < 0) {
            _root.save.arenaCraft += Math.floor(_root.save.arenaPixel / 20);
            _root.save.arenaPixel = 0;
        }
        _root.save.ver = 570;
    }
    if (_root.save.ver < 571) {
        if (_root.save.bestLevel >= 2) {
            _root.save.eventToken += 1500;
        }
        _root.save.ver = 571;
    }
    if (_root.save.ver < 572) {
        if (_root.save.inventorySubtype[i] == "Enhancer Destruction Enhancer") {
            if (_root.save.inventoryExist[i] != undefined) {
                _root.save.inventoryExist[i] = 0;
            }
            delete _root.save.inventoryName[i];
            delete _root.save.inventoryReqRank[i];
            delete _root.save.inventoryType[i];
            delete _root.save.inventorySubtype[i];
            delete _root.save.inventoryFrame[i];
            delete _root.save.inventoryRange[i];
            delete _root.save.inventoryAttack[i];
            delete _root.save.inventorySpeed[i];
            delete _root.save.inventoryDefense[i];
            delete _root.save.inventoryBonus[i];
            delete _root.save.inventoryAbility[i];
            delete _root.save.inventoryMoreBonus[i];
            delete _root.save.inventoryLevel[i];
            delete _root.save.inventoryMaxLevel[i];
            delete _root.save.inventoryExp[i];
            delete _root.save.inventoryExpTNL[i];
            delete _root.save.inventoryEnhance[i];
            delete _root.save.inventoryBonusPow[i];
            delete _root.save.inventorySell[i];
            delete _root.save.inventoryExpiry[i];
            delete _root.save.inventoryObtainTime[i];
            delete _root.save.inventoryNoBonus[i];
            delete _root.save.inventoryNoRecycle[i];
            delete _root.save.inventoryNoFuse[i];
            delete _root.save.inventoryNoUnique[i];
            delete _root.save.inventoryUnob[i];
            delete _root.save.inventorySpirit[i];
            delete _root.save.inventoryCrit[i];
            delete _root.save.inventoryDexterity[i];
            delete _root.save.inventoryHealth[i];
            delete _root.save.inventoryDesc[i];
            delete _root.save.inventoryGuard[i];
        }
        _root.save.ver = 572;
    }
    if (_root.save.ver < 574) {
        _root.save.battlePoint += Math.floor(_root.save.arenaExp / 100000000);
        _root.save.arenaExp -= _root.save.battlePoint * 100000000;
        _root.save.battlePoint += _root.save.arenaLevel;
        if (_root.save.gDifficulty >= 3) {
            _root.save.stadiumEnergy = 50;
            _root.save.stadiumAccel = 50;
            _root.save.stadiumMaxSpeed = 50;
            _root.save.stadiumStartSpeed = 50;
            _root.save.stadiumDash = 50;
            _root.save.stadiumJump = 50;
            _root.save.stadiumBoost = 50;
            _root.save.stadiumReward = 50;
            _root.save.stadiumAbilityCost = 400;
            _root.save.stadiumToken += _root.save.bankStadiumToken;
        }
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventorySubtype[i] == "Trinket" && _root.save.inventoryMaxLevel[i] == 500) {
                _root.save.inventoryReqRank[i] = 1;
                _root.save.inventoryUnob[i] = Math.floor(_root.save.inventoryLevel[i] / 10) + 10;
                if (_root.save.inventoryUnob[i] < 0) {
                    _root.save.inventoryUnob[i] = 0;
                }
                if (_root.save.inventoryLevel[i] == 500) {
                    _root.save.inventoryUnob[i] = 99;
                }
            }
            i++;
        }
        _root.save.arenaSpookyScore = 0;
        _root.save.ver = 574;
    }
    if (_root.save.ver < 575) {
        _root.save.arenaExpExcess = _root.save.battlePoint - _root.save.arenaLevel - _root.save.bannedB * 1000;
        _root.save.ver = 575;
    }
    if (_root.save.ver < 578) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Nerf Accepted!" && _root.save.inventoryEnhance[i] > 7) {
                _root.save.inventoryEnhance[i] = 7;
                _root.save.inventoryLevel[i] = 7;
                _root.save.inventoryMaxLevel[i] = 7;
                _root.save.inventoryCrit[i] = 35;
                _root.save.inventoryDexterity[i] = 35;
                _root.save.inventoryHealth[i] = 35;
            }
            if (_root.save.inventoryName[i] == "Anti-Nerfer") {
                _root.save.inventoryExpiry[i] = 0;
            }
            i++;
        }
        _root.save.ver = 578;
    }
    if (_root.save.ver < 580) {
        if (_root.save.printerLevel >= 25) {
            _root.save.coinLag += 250000 * _root.save.bestLevel;
        }
        _root.save.ver = 580;
    }
    if (_root.save.ver < 581) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventorySubtype[i] == "Trinket" && _root.save.inventoryMaxLevel[i] == 500) {
                _root.save.inventoryReqRank[i] = 400;
                _root.save.inventoryUnob[i] = Math.floor(_root.save.inventoryLevel[i] / 10) + 10;
            }
            i++;
        }
        _root.save.arenaSpookyScore = 0;
        _root.save.ver = 581;
    }
    if (_root.save.ver < 582) {
        if (_root.save.arenaLevel < _root.save.inventoryReqRank[_root.save.arenaTrinket]) {
            _root.save.arenaTrinket = 0;
        }
        _root.save.ver = 582;
    }
    if (_root.save.ver < 583) {
        if (_root.save.bestLevel < 25 || _root.save.arenaAccuracy < 50) {
            _root.save.arenaMaxHealth = 500;
            _root.save.arenaMaxMana = 300;
            _root.save.arenaAttack = 100;
            _root.save.arenaDefense = 100;
            _root.save.arenaAccuracy = 50;
            _root.save.arenaEvasion = 50;
        }
        _root.save.ver = 583;
    }
    if (_root.save.ver < 585) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryType[i] == "Outfit") {
                _root.save.inventoryReqRank[i] = 1;
            }
            if (_root.save.inventoryName[i] == "Fighter") {
                _root.save.inventoryAttack[i] = 15;
                _root.save.inventoryDefense[i] = 15;
            }
            if (_root.save.inventoryName[i] == "Veteran Fighter") {
                _root.save.inventoryAttack[i] = 30;
                _root.save.inventoryDefense[i] = 30;
            }
            if (_root.save.inventoryName[i] == "Heroic Fighter") {
                _root.save.inventoryAttack[i] = 50;
                _root.save.inventoryDefense[i] = 50;
            }
            if (_root.save.inventoryName[i] == "Elite Fighter") {
                _root.save.inventoryAttack[i] = 75;
                _root.save.inventoryDefense[i] = 75;
            }
            if (_root.save.inventoryName[i] == "Master Fighter") {
                _root.save.inventoryAttack[i] = 105;
                _root.save.inventoryDefense[i] = 105;
            }
            if (_root.save.inventoryName[i] == "Ultimate Fighter") {
                _root.save.inventoryAttack[i] = 140;
                _root.save.inventoryDefense[i] = 140;
            }
            if (_root.save.inventoryName[i] == "Arena Champion") {
                _root.save.inventoryAttack[i] = 180;
                _root.save.inventoryDefense[i] = 180;
            }
            if (_root.save.inventoryName[i] == "Combo King") {
                _root.save.inventorySpeed[i] = 5;
            }
            if (_root.save.inventoryName[i] == "Bestiary King") {
                _root.save.inventoryDexterity[i] = 25;
                _root.save.inventoryHealth[i] = 25;
            }
            if (_root.save.inventoryName[i] == "Mad Scientist") {
                _root.save.inventoryDexterity[i] = 50;
                _root.save.inventoryHealth[i] = 50;
            }
            if (_root.save.inventoryName[i] == "THE BESTiary") {
                _root.save.inventoryDexterity[i] = 100;
                _root.save.inventoryHealth[i] = 100;
            }
            if (_root.save.inventoryName[i] == "Bottomless Bag") {
                _root.save.inventoryHealth[i] = 150;
            }
            if (_root.save.inventoryName[i] == "Veteran Tamer") {
                _root.save.inventoryCrit[i] = 25;
            }
            if (_root.save.inventoryName[i] == "Master Tamer") {
                _root.save.inventoryCrit[i] = 50;
            }
            if (_root.save.inventoryName[i] == "Legendary Tamer") {
                _root.save.inventoryCrit[i] = 100;
            }
            if (_root.save.inventoryName[i] == "Veteran Trainer") {
                _root.save.inventoryCrit[i] = 25;
                _root.save.inventoryHealth[i] = 25;
            }
            if (_root.save.inventoryName[i] == "Master Trainer") {
                _root.save.inventoryCrit[i] = 50;
                _root.save.inventoryHealth[i] = 50;
            }
            if (_root.save.inventoryName[i] == "Legendary Trainer") {
                _root.save.inventoryCrit[i] = 100;
                _root.save.inventoryHealth[i] = 100;
            }
            i++;
        }
        _root.save.ver = 585;
    }
    if (_root.save.ver < 586) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Fairy Godmother Wand") {
                _root.save.inventoryReqRank[i] = 300;
            }
            i++;
        }
        _root.save.ver = 586;
    }
    if (_root.save.ver < 587) {
        _root.save.ver = 587;
    }
    if (_root.save.ver < 589) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Nerf Accepted!") {
                _root.save.inventoryReqRank[i] = _root.save.inventoryEnhance[i] * 10;
                if (_root.save.inventoryReqRank[i] > 100) {
                    _root.save.inventoryReqRank[i] = 100;
                }
            }
            i++;
        }
        _root.save.ver = 589;
    }
    if (_root.save.ver < 591) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Fairy Godmother Wand") {
                    _root.save.inventoryDesc[i] = "When equipped: Magic Resist +15%, Negate Effect Chance +15%";
                }
                if (_root.save.inventoryName[i] == "Pure Darkness Claw") {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i] == "Crimson Bow") {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i] == "Censor Sword") {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i] == "Glaive of Smiting") {
                    _root.save.inventoryDesc[i] = "Shoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
                }
                if (_root.save.inventoryName[i] == "Darkglaive of Smiting") {
                    _root.save.inventoryDesc[i] = "Shoots invisible projectiles!\nCannot be enhanced with Attack enhancers.";
                }
                if (_root.save.inventoryName[i] == "Fiend Glaive") {
                    _root.save.inventoryDesc[i] = "Cannot be enhanced with Attack enhancers.";
                }
                if (_root.save.inventoryName[i].indexOf("Meteoric") != -1) {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i].indexOf("DOOOOOOM") != -1) {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i].indexOf("Crystal") != -1) {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i].indexOf("Hat of Loot") != -1) {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i].indexOf("Ultimate") != -1) {
                    _root.save.inventoryDesc[i] = "";
                }
                if (_root.save.inventoryName[i] == "Ultimate Weapon") {
                    _root.save.inventoryDesc[i] = "Also shoots projectiles at monsters from a far distance!";
                }
                if (_root.save.inventoryName[i] == "Gem of Constancy") {
                    _root.save.inventoryDesc[i] = "This gem gets more and more powerful as you fight with it equipped, but whenever you unequip it, it goes back to its original state. Also, you cannot change equipment when Gem of Constancy is equipped!";
                }
                if (_root.save.inventoryName[i] == "Empowering Gem") {
                    _root.save.inventoryDesc[i] = "This gem allows you to deal extra damage to monsters. The more you use it, the better it becomes!";
                }
            }
            i++;
        }
        _root.save.ver = 591;
    }
    if (_root.save.ver < 593) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i].indexOf("Crystal") != -1) {
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
        _root.save.ver = 593;
    }
    if (_root.save.ver < 594) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i].indexOf("Humblebee") != -1 && _root.save.inventoryName[i] != "Humblebee Armor Upgrade") {
                    if (_root.save.inventoryLevel[i] == 9999) {
                        _root.save.inventoryCrit[i] += 12;
                        _root.save.inventoryDexterity[i] += 12;
                        _root.save.inventoryHealth[i] += 12;
                    }
                    else {
                        _root.save.inventoryCrit[i] += 10;
                        _root.save.inventoryDexterity[i] += 10;
                        _root.save.inventoryHealth[i] += 10;
                    }
                }
                if (_root.save.inventoryName[i].indexOf("Ghost") != -1) {
                    if (_root.save.inventoryLevel[i] == 9999) {
                        _root.save.inventoryCrit[i] += 24;
                        _root.save.inventoryDexterity[i] += 24;
                        _root.save.inventoryHealth[i] += 24;
                    }
                    else {
                        _root.save.inventoryCrit[i] += 20;
                        _root.save.inventoryDexterity[i] += 20;
                        _root.save.inventoryHealth[i] += 20;
                    }
                }
            }
            i++;
        }
        _root.save.ver = 594;
    }
    if (_root.save.ver < 595) {
        if (!isNaN(_root.save.bankStadiumToken)) {
            _root.save.stadiumToken += _root.save.bankStadiumToken;
        }
        if (_root.save.bannedImpossible >= 1 && !isNaN(_root.save.stadiumTokenMax) && _root.save.stadiumToken < _root.save.stadiumTokenMax) {
            _root.save.stadiumToken = _root.save.stadiumTokenMax;
        }
        _root.save.ver = 595;
    }
    if (_root.save.ver < 596) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i].indexOf("Humblebee") != -1 && _root.save.inventoryName[i] != "Humblebee Armor Upgrade") {
                    if (_root.save.inventoryLevel[i] == 9999) {
                        _root.save.inventoryCrit[i] -= 12;
                        _root.save.inventoryDexterity[i] -= 12;
                        _root.save.inventoryHealth[i] -= 12;
                    }
                    else {
                        _root.save.inventoryCrit[i] -= 10;
                        _root.save.inventoryDexterity[i] -= 10;
                        _root.save.inventoryHealth[i] -= 10;
                    }
                    if (_root.save.inventoryMaxLevel[i] >= 84 && _root.save.inventoryMaxLevel[i] < 184) {
                        _root.save.inventoryEnhance[i] -= 1;
                    }
                    else if (_root.save.inventoryMaxLevel[i] == 9999) {
                        _root.save.inventoryDefense[i] += 300;
                        if (_root.save.inventoryDefense[i] > 2160) {
                            _root.save.inventoryDefense[i] = 2160;
                        }
                        _root.save.inventoryAttack[i] += 60;
                        _root.save.inventoryDexterity[i] += 40;
                        _root.save.inventoryHealth[i] += 30;
                        _root.save.inventoryCrit[i] += 24;
                    }
                    else if (_root.save.inventoryMaxLevel[i] >= 184) {
                        _root.save.inventoryMaxLevel[i] += 100;
                    }
                }
                if (_root.save.inventoryName[i].indexOf("Ghost") != -1) {
                    _root.save.inventoryUnob[i] = 5;
                }
            }
            i++;
        }
        _root.save.ver = 596;
    }
    if (_root.save.ver < 597) {
        if (isNaN(_root.save.inventoryExp[_root.save.arenaSkin])) {
            _root.save.inventoryExp[_root.save.arenaSkin] = 0;
        }
        _root.save.ver = 597;
    }
    if (_root.save.ver < 599) {
        _root.save.boostAuto = false;
        _root.save.boostMax = Math.round((_root.save.boostMax + _root.save.boostMin * 0.2) / 50) * 50;
        if (_root.save.mainQuestRank[152] == 4) {
            _root.save.mainQuestS -= 1;
            _root.save.mainQuestA -= 1;
            _root.save.mainQuestB -= 1;
            _root.save.mainQuestC -= 1;
        }
        else if (_root.save.mainQuestRank[152] == 3) {
            _root.save.mainQuestA -= 1;
            _root.save.mainQuestB -= 1;
            _root.save.mainQuestC -= 1;
        }
        else if (_root.save.mainQuestRank[152] == 2) {
            _root.save.mainQuestB -= 1;
            _root.save.mainQuestC -= 1;
        }
        else if (_root.save.mainQuestRank[152] == 1) {
            _root.save.mainQuestC -= 1;
        }
        _root.save.ver = 599;
    }
    if (_root.save.ver < 604) {
        _root.save.ver = 604;
    }
    if (_root.save.ver < 605) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventorySubtype[i] == "Secondary Weapon") {
                    _root.save.inventoryUnob[i] = 30;
                }
            }
            i++;
        }
        _root.save.ver = 605;
    }
    if (_root.save.ver < 606) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventorySubtype[i] == "Secondary Weapon") {
                    _root.save.inventoryNoBonus[i] = true;
                    if (_root.save.inventoryName[i] == "Poison Arrows") {
                        _root.save.inventoryAbility[i] = "Poison Chance";
                        _root.save.inventoryMoreBonus[i] = "Equipment Attack";
                    }
                    if (_root.save.inventoryName[i] == "Explosive Arrows") {
                        _root.save.inventoryAbility[i] = "Stun Chance";
                        _root.save.inventoryMoreBonus[i] = "Equipment Attack";
                    }
                    if (_root.save.inventoryName[i] == "Mega Bullets" || _root.save.inventoryName[i] == "[Event] Mega Bullets") {
                        _root.save.inventoryAbility[i] = "Double Hit Chance";
                        _root.save.inventoryMoreBonus[i] = "Equipment Attack";
                    }
                    if (_root.save.inventoryName[i] == "Master Shurikens") {
                        _root.save.inventoryAbility[i] = "Mastery";
                        _root.save.inventoryMoreBonus[i] = "Equipment Attack";
                    }
                    if (_root.save.inventoryName[i] == "Fire Card") {
                        _root.save.inventoryBonus[i] = "Fire Element";
                        _root.save.inventoryAbility[i] = "Poison Chance";
                    }
                    if (_root.save.inventoryName[i] == "Ice Card") {
                        _root.save.inventoryBonus[i] = "Ice Element";
                        _root.save.inventoryAbility[i] = "Stun Chance";
                    }
                    if (_root.save.inventoryName[i] == "Wind Card") {
                        _root.save.inventoryBonus[i] = "Wind Element";
                        _root.save.inventoryAbility[i] = "Weaken Chance";
                    }
                    if (_root.save.inventoryName[i] == "Earth Card") {
                        _root.save.inventoryBonus[i] = "Earth Element";
                        _root.save.inventoryAbility[i] = "Weaken Chance";
                    }
                    if (_root.save.inventoryName[i] == "Thunder Card") {
                        _root.save.inventoryBonus[i] = "Thunder Element";
                        _root.save.inventoryAbility[i] = "Stun Chance";
                    }
                    if (_root.save.inventoryName[i] == "Water Card") {
                        _root.save.inventoryBonus[i] = "Water Element";
                        _root.save.inventoryAbility[i] = "Poison Chance";
                    }
                    if (_root.save.inventoryName[i] == "Light Card") {
                        _root.save.inventoryBonus[i] = "Light Element";
                        _root.save.inventoryAbility[i] = "Blind Chance";
                    }
                    if (_root.save.inventoryName[i] == "Dark Card") {
                        _root.save.inventoryBonus[i] = "Dark Element";
                        _root.save.inventoryAbility[i] = "Blind Chance";
                    }
                }
            }
            i++;
        }
        _root.save.ver = 606;
    }
    if (_root.save.ver < 607) {
        _root.save.deathMatchEntry = 1;
        _root.save.ver = 607;
    }
    if (_root.save.ver < 608) {
        if (_root.saveid >= 20) {
            i = 1;
            while (i <= 34) {
                if (_root.save.specialStock[i] < 5) {
                    _root.save.specialStock[i] += 3;
                }
                _root.save.specialStock[1] = 1;
                _root.save.specialStock[2] = 5;
                _root.save.specialStock[27] = 1;
                _root.save.specialStock[28] = 1;
                _root.save.specialStock[29] = 1;
                _root.save.specialStock[30] = 1;
                i++;
            }
        }
        _root.save.ver = 608;
    }
    if (_root.save.ver < 609) {
        _root.save.permaBanPenalty = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        _root.save.permaStupidity = _root.save.banned;
        _root.save.permaStupidityHard = _root.save.bannedHard;
        _root.save.permaStupidityImpossible = _root.save.bannedImpossible;
        _root.save.ver = 609;
    }
    if (_root.save.ver < 613) {
        if (_root.save.speedRunMode9001 != 2147483647 && _root.save.speedRunMode9001 > 0) {
            _root.saveGlobal.challengeTime[0] = _root.save.speedRunMode9001 * 60;
            _root.saveGlobal.challengeAttempted[0] = true;
            _root.saveGlobal.challengePerfect[0] = true;
        }
        if (_root.save.fishLevel >= 30) {
            _root.save.fishLevel = 30;
            _root.save.fishScore += _root.save.fishExp * 50;
            _root.save.fishExpTotal += _root.save.fishExp;
            _root.save.fishExp = 0;
        }
        if (_root.save.gDifficulty == 3) {
            _root.save.currentExp = Math.floor(_root.save.currentExp * 2);
            _root.save.totalExp = Math.floor(_root.save.totalExp * 2);
        }
        if (_root.save.gDifficulty == 2) {
            _root.save.currentExp = Math.floor(_root.save.currentExp * 4 / 3);
            _root.save.totalExp = Math.floor(_root.save.totalExp * 4 / 3);
        }
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Gem of Eternal Rage") {
                _root.save.inventoryDesc[i] = "With this, you will gain 0.5% Rage every second and ignore all forms of rage depletion!";
            }
            i++;
        }
        _root.save.ver = 613;
    }
    if (_root.save.ver < 614) {
        _root.save.whiteCoin += Math.floor(_root.save.totalPlayTime / 720);
        _root.save.ver = 614;
    }
    if (_root.save.ver < 615) {
        _root.save.arenaMaxDamage = 0;
        _root.save.raidPyramid = 0;
        _root.save.raidDefend = 0;
        _root.save.raidPrehistoric = 0;
        _root.save.raidMegaboss = 0;
        _root.save.raidTower = 0;
        _root.save.raidDungeon = 0;
        _root.save.raidEndless = 0;
        _root.save.arenaRevengeScore = 0;
        _root.save.arenaTriangleScore = 0;
        _root.save.arenaTriangleToday = 0;
        _root.save.arenaSpookyScore = 0;
        _root.save.arenaSpookyToday = 0;
        _root.save.ver = 615;
    }
    if (_root.save.ver < 616) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Chaos Hat" || _root.save.inventoryName[i] == "Chaos Shirt" || _root.save.inventoryName[i] == "Chaos Gloves" || _root.save.inventoryName[i] == "Chaos Pants" || _root.save.inventoryName[i] == "Chaos Shoes" || _root.save.inventoryName[i] == "CHAOS HAT" || _root.save.inventoryName[i] == "CHAOS SHIRT" || _root.save.inventoryName[i] == "CHAOS GLOVES" || _root.save.inventoryName[i] == "(MYSTERIOUS ITEM)" || _root.save.inventoryName[i] == "CHAOS PANTS" || _root.save.inventoryName[i] == "CHAOS SHOES" || _root
                .save.inventoryName[i] == "Dragon Slayer Hat" || _root.save.inventoryName[i] == "Dragon Slayer Shirt" || _root.save.inventoryName[i] == "Dragon Slayer Gloves" || _root.save.inventoryName[i] == "Dragon Slayer Pants" || _root.save.inventoryName[i] == "Dragon Slayer Shoes" || _root.save.inventoryName[i] == "Demon Slayer Hat" || _root.save.inventoryName[i] == "Demon Slayer Shirt" || _root.save.inventoryName[i] == "Demon Slayer Gloves" || _root.save.inventoryName[i] == "Demon Slayer Pants" || _root
                    .save.inventoryName[i] == "Demon Slayer Shoes") {
                if (_root.save.inventoryObtainTime[i] > 1385823600000) {
                    _root.save.inventoryExpiry[i] = 0;
                    _root.save.inventoryDesc[i] = "This item has been blocked in an attempt to wipe out exploited items. If you believe your item was wrongfully blocked, please post a screenshot of the item in the forum.\n\nCODE: " + random(999999999);
                }
            }
            i++;
        }
        _root.save.ver = 616;
    }
    if (_root.save.ver < 617) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Chaos Hat" || _root.save.inventoryName[i] == "Chaos Shirt" || _root.save.inventoryName[i] == "Chaos Gloves" || _root.save.inventoryName[i] == "Chaos Pants" || _root.save.inventoryName[i] == "Chaos Shoes" || _root.save.inventoryName[i] == "CHAOS HAT" || _root.save.inventoryName[i] == "CHAOS SHIRT" || _root.save.inventoryName[i] == "CHAOS GLOVES" || _root.save.inventoryName[i] == "(MYSTERIOUS ITEM)" || _root.save.inventoryName[i] == "CHAOS PANTS" || _root.save.inventoryName[i] == "CHAOS SHOES" || _root
                .save.inventoryName[i] == "Dragon Slayer Hat" || _root.save.inventoryName[i] == "Dragon Slayer Shirt" || _root.save.inventoryName[i] == "Dragon Slayer Gloves" || _root.save.inventoryName[i] == "Dragon Slayer Pants" || _root.save.inventoryName[i] == "Dragon Slayer Shoes" || _root.save.inventoryName[i] == "Demon Slayer Hat" || _root.save.inventoryName[i] == "Demon Slayer Shirt" || _root.save.inventoryName[i] == "Demon Slayer Gloves" || _root.save.inventoryName[i] == "Demon Slayer Pants" || _root
                    .save.inventoryName[i] == "Demon Slayer Shoes") {
                if (_root.save.inventoryObtainTime[i] > 1385823600000) {
                    _root.save.inventoryExpiry[i] = 0;
                    _root.save.inventoryDesc[i] = "This item has been blocked in an attempt to wipe out exploited items. If you believe your item was wrongfully blocked, please post a screenshot of the item in the forum.\n\nCODE: " + random(999999999);
                }
            }
            i++;
        }
        _root.save.ver = 617;
    }
    if (_root.save.ver < 619) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExpiry[i] == 0 && _root.save.inventoryObtainTime[i] > 1385823600000 && _root.save.inventoryDesc[i] != "" && _root.save.inventoryDesc[i].indexOf("exploited") != -1) {
                if (_root.save.inventoryDesc[i].indexOf("617523110") != -1 || _root.save.inventoryDesc[i].indexOf("673811149") != -1 || _root.save.inventoryDesc[i].indexOf("253011004") != -1 || _root.save.inventoryDesc[i].indexOf("536365965") != -1 || _root.save.inventoryDesc[i].indexOf("479591647") != -1 || _root.save.inventoryDesc[i].indexOf("71140877") != -1 || _root.save.inventoryDesc[i].indexOf("59063432") != -1 || _root.save.inventoryDesc[i].indexOf("70380326") != -1 || _root.save.inventoryDesc[i].indexOf("761205567") != -1 || _root
                    .save.inventoryDesc[i].indexOf("663902970") != -1) {
                    if (_root.save.inventoryNoLife[i] == false) {
                        _root.save.inventoryExpiry[i] = Infinity;
                    }
                    else {
                        _root.save.inventoryExpiry[i] = 1388583420000;
                    }
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
        _root.save.ver = 619;
    }
    if (_root.save.ver < 620) {
        _root.save.fishBestLevel = _root.save.fishLevel;
        _root.save.ver = 620;
    }
    if (_root.save.ver < 621) {
        if (_root.save.speedRunMode9001 != 2147483647 && _root.save.speedRunMode9001 > 0) {
            _root.saveGlobal.challengeTime[0] = _root.save.speedRunMode9001 * 60;
            _root.saveGlobal.challengeAttempted[0] = true;
            _root.saveGlobal.challengePerfect[0] = true;
        }
        else {
            delete _root.saveGlobal.challengeTime[0];
            delete _root.saveGlobal.challengeAttempted[0];
            delete _root.saveGlobal.challengePerfect[0];
        }
        _root.save.ver = 621;
    }
    if (_root.save.ver < 622) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Gem of Eternal Rage") {
                _root.save.inventoryDesc[i] = "With this, you will gain 0.5% Rage every second and ignore all forms of rage depletion! It also multiplies your Rage Attack by 1.2x.";
            }
            if (_root.save.inventoryName[i] == "Immortal Pendant" || _root.save.inventoryName[i] == "Roflhunter\'s Pendant" || _root.save.inventoryName[i] == "Dominator\'s Gem" || _root.save.inventoryName[i] == "Mega Triangle Gem") {
                _root.save.inventoryBonusPow[i] += _root.save.inventoryAttack[i] + _root.save.inventoryCrit[i] * 5 + _root.save.inventoryDexterity[i] * 5 + _root.save.inventoryHealth[i] * 5;
                _root.save.inventoryAttack[i] = Math.floor(_root.save.inventoryAttack[i] * 2);
                _root.save.inventoryCrit[i] = Math.floor(_root.save.inventoryCrit[i] * 2);
                _root.save.inventoryDexterity[i] = Math.floor(_root.save.inventoryDexterity[i] * 2);
                _root.save.inventoryHealth[i] = Math.floor(_root.save.inventoryHealth[i] * 2);
            }
            i++;
        }
        i = 1;
        while (i <= 2) {
            if (_root.save.restEfficiency[i] > 0) {
                _root.save.whiteCoin += 2000 * _root.save.restEfficiency[i] * _root.save.restEfficiency[i];
            }
            i++;
        }
        i = 3;
        while (i <= 5) {
            if (_root.save.restEfficiency[i] > 0) {
                _root.save.whiteCoin += 2250 * _root.save.restEfficiency[i] * _root.save.restEfficiency[i];
            }
            i++;
        }
        i = 6;
        while (i <= 10) {
            if (_root.save.restEfficiency[i] > 0) {
                _root.save.whiteCoin += 900 * _root.save.restEfficiency[i] * _root.save.restEfficiency[i];
            }
            i++;
        }
        if (!isNaN(_root.save.achEarnTime[1000])) {
            _root.save.newbieProgress = 15;
        }
        _root.save.ver = 622;
    }
    if (_root.save.ver < 623) {
        if (_root.save.banned >= 100) {
            _root.save.whiteCoin += 10000;
            _root.save.eventToken += 10000;
            _root.save.permaBanPenalty = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            _root.save.permaStupidity = _root.save.banned;
            _root.save.permaStupidityHard = _root.save.bannedHard;
            _root.save.permaStupidityImpossible = _root.save.bannedImpossible;
        }
        _root.save.ver = 623;
    }
    if (_root.save.ver < 624) {
        if (_root.saveid == 24) {
            c4Cheated = false;
            i = 1;
            while (i <= 200) {
                if (_root.save.inventoryEnhance[i] > 0 && _root.save.inventorySubtype[i] != "Skin" && _root.save.inventoryReqRank[i] < 100) {
                    c4Cheated = true;
                    _root.save.arenaPixel += _root.save.inventorySell[i] * 8;
                }
                i++;
            }
            if (_root.save.arenaMedal != 0) {
                c4Cheated = true;
                _root.save.arenaMedal = 0;
            }
            if (_root.save.arenaPendant != 0) {
                c4Cheated = true;
                _root.save.arenaPendant = 0;
            }
            if (_root.save.arenaEarring != 0) {
                c4Cheated = true;
                _root.save.arenaEarring = 0;
            }
            if (_root.save.arenaTrinket != 0) {
                c4Cheated = true;
                _root.save.arenaTrinket = 0;
            }
            if (c4Cheated == true) {
                _root.save.ascendPlayTime += 10800;
            }
        }
        _root.save.ver = 624;
    }
    if (_root.save.ver < 625) {
        if (_root.save.gDifficulty >= 3) {
            _root.save.gardenCapacity = 50;
        }
        _root.save.ver = 625;
    }
    if (_root.save.ver < 626) {
        if (_root.saveid == 24) {
            _root.save.arenaPixel = _root.save.arenaPixelMax;
        }
        _root.save.ver = 626;
    }
    if (_root.save.ver < 627) {
        if (_root.saveid == 24) {
            _root.save.ascendPlayTime = Math.ceil(_root.save.ascendPlayTime * 0.85);
        }
        _root.save.ver = 627;
    }
    if (_root.save.ver < 629) {
        if (!isNaN(_root.save.bankGardenFruit) && _root.save.bankGardenFruit > 0) {
            _root.save.gardenPoint = _root.save.gardenPointMax;
            _root.save.gardenFruit = _root.save.gardenFruitMax;
        }
        _root.save.ver = 629;
    }
    if (_root.save.ver < 630) {
        if (_root.save.banned > 100 && _root.save.bannedImpossible > 25) {
            _root.save.banned1662 = Math.floor(_root.save.bannedImpossible / 20 - 1);
            if (isNaN(_root.save.banned1662) || _root.save.banned1662 > 10) {
                _root.save.banned1662 = 10;
            }
            _root.save.banned += _root.save.banned1662;
            _root.save.bannedHard += _root.save.banned1662;
            _root.save.bannedImpossible += _root.save.banned1662;
            _root.save.stupidity += _root.save.banned1662 * 7;
            _root.save.permaStupidity += _root.save.banned1662;
            _root.save.permaStupidityHard += _root.save.banned1662;
            _root.save.permaStupidityImpossible += _root.save.banned1662;
        }
        _root.save.ver = 630;
    }
    if (_root.save.ver < 634) {
        if (_root.save.arenaAllyUpgrade[1] != undefined) {
            _root.save.noobMode = true;
        }
        _root.save.mysteryBox[10] += _root.save.bannedB;
        _root.save.arenaSpookyScore = Math.ceil(_root.save.arenaSpookyScore / 5);
        _root.save.arenaSpookyToday = 0;
        _root.save.raidPyramid = Math.floor(_root.save.raidPyramid / 100);
        _root.save.rewardClaimAuto = _root.save.rewardClaim - _root.save.rewardClaimManual;
        i = 1;
        while (i <= 12) {
            if (_root.save.careerLevel[i] >= 100) {
                _root.save.careerPotion += Math.floor(_root.save.careerEXP[i] / 200000);
            }
            _root.save.careerEXP[i] = Math.floor(_root.save.careerEXP[i] * 0.1);
            i++;
        }
        if (_root.save.careerLevel[1] >= 100) {
            _root.save.careerEXP[1] += Math.max(_root.save.rewardClaimAuto - 1000000, 0);
        }
        if (_root.save.careerLevel[2] >= 100) {
            _root.save.careerEXP[2] += Math.max(_root.save.gardenEXP - 1000000, 0);
        }
        if (_root.save.careerLevel[3] >= 100) {
            _root.save.careerEXP[3] += Math.max(_root.save.arenaKillWhite / 2 + _root.save.arenaKillRed / 2 + _root.save.battlePoint * 500 - 1000000, 0);
        }
        if (_root.save.careerLevel[4] >= 100) {
            _root.save.careerEXP[4] += Math.max(_root.save.arenaLoot / 10 - 1000000, 0);
        }
        if (_root.save.careerLevel[5] >= 100) {
            _root.save.careerEXP[5] += Math.max(_root.save.buttonPress * 2 + _root.save.buttonPerfect * 20 - 1000000, 0);
        }
        if (_root.save.careerLevel[6] >= 100) {
            _root.save.careerEXP[6] += Math.max(_root.save.totalPong / 1000 + _root.save.totalAvoidance / 1000 + _root.save.totalMath / 2500 + _root.save.totalWhack / 2000 + _root.save.totalMind / 500 + _root.save.totalBalance / 2500 + _root.save.totalCount / 2000 - 1000000, 0);
        }
        if (_root.save.careerLevel[7] >= 100) {
            _root.save.careerEXP[7] += Math.max(_root.save.stadiumRace * 250 + _root.save.stadiumImpossibleRace * 250 + _root.save.stadiumItem * 300 + _root.save.stadiumImpossibleItem * 300 + _root.save.stadiumDeathMatch * 5000 - 1000000, 0);
        }
        if (_root.save.careerLevel[8] >= 100) {
            _root.save.careerEXP[8] += Math.max(_root.save.fcgExpTotal * 4 - 1000000, 0);
        }
        if (_root.save.careerLevel[9] >= 100) {
            _root.save.careerEXP[9] += Math.max(_root.save.lolProfit / 500 - 1000000, 0);
        }
        if (_root.save.careerLevel[10] >= 100) {
            _root.save.careerEXP[10] += Math.max(_root.save.awesomeTotalAdv * 50 - 1000000, 0);
        }
        if (_root.save.careerLevel[12] >= 100) {
            _root.save.careerEXP[12] += Math.max(_root.save.fishExp + _root.save.fishTotalExp - 1000000, 0);
        }
        i = 1;
        while (i <= 500) {
            if (!isNaN(_root.save.arenaAllyEXP[i])) {
                _root.save.arenaAllyUpgrade[i] = 0;
            }
            i++;
        }
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Auto Buff Gem") {
                _root.save.inventoryMoreBonus[i] = "MaxHP";
            }
            if (_root.save.inventoryName[i] == "Bronze Pendant") {
                _root.save.inventoryAttack[i] += 20;
                _root.save.inventoryCrit[i] += 5;
                _root.save.inventoryDexterity[i] += 5;
                _root.save.inventoryHealth[i] += 5;
            }
            if (_root.save.inventoryName[i] == "Silver Pendant") {
                _root.save.inventoryAttack[i] += 60;
                _root.save.inventoryCrit[i] += 15;
                _root.save.inventoryDexterity[i] += 15;
                _root.save.inventoryHealth[i] += 15;
            }
            if (_root.save.inventoryName[i] == "Gold Pendant") {
                _root.save.inventoryAttack[i] += 100;
                _root.save.inventoryCrit[i] += 25;
                _root.save.inventoryDexterity[i] += 25;
                _root.save.inventoryHealth[i] += 25;
            }
            if (_root.save.inventoryName[i] == "Platinum Pendant") {
                _root.save.inventoryAttack[i] += 140;
                _root.save.inventoryCrit[i] += 35;
                _root.save.inventoryDexterity[i] += 35;
                _root.save.inventoryHealth[i] += 35;
            }
            if (_root.save.inventoryName[i] == "Unobtainium Pendant") {
                _root.save.inventoryAttack[i] += 180;
                _root.save.inventoryCrit[i] += 45;
                _root.save.inventoryDexterity[i] += 45;
                _root.save.inventoryHealth[i] += 45;
            }
            i++;
        }
        _root.save.ver = 634;
    }
    if (_root.save.ver < 635) {
        _root.save.raidPyramid = Math.floor(_root.save.raidPyramid / 4);
        _root.save.ver = 635;
    }
    if (_root.save.ver < 637) {
        _root.save.raidPyramid = 0;
        _root.save.ver = 637;
    }
    if (_root.save.ver < 638) {
        if (_root.save.careerLevel[6] >= 100) {
            _root.save.careerEXP[6] += Math.max(_root.save.totalPong / 1000 + _root.save.totalAvoidance / 1000 + _root.save.totalMath / 2500 + _root.save.totalWhack / 2000 + _root.save.totalMind / 500 + _root.save.totalBalance / 2500 + _root.save.totalCount / 2000 - 500000, 0);
        }
        if (_root.save.careerLevel[7] >= 100) {
            _root.save.careerEXP[7] += Math.max(_root.save.stadiumRace * 250 + _root.save.stadiumImpossibleRace * 250 + _root.save.stadiumItem * 300 + _root.save.stadiumImpossibleItem * 300 + _root.save.stadiumDeathMatch * 5000 - 500000, 0);
        }
        if (_root.save.careerLevel[8] >= 100) {
            _root.save.careerEXP[8] += Math.max(_root.save.fcgExpTotal * 16 - 500000, 0);
        }
        if (_root.save.careerLevel[12] >= 100) {
            _root.save.careerEXP[12] += Math.max((_root.save.fishExp + _root.save.fishTotalExp) * 2 - 500000, 0);
        }
        _root.save.ver = 638;
    }
    if (_root.save.ver < 639) {
        if (_root.save.arenaAccuracy < 100 || _root.save.arenaLevel > 1 && _root.save.arenaLevel < 40) {
            _root.save.arenaAccuracy += 50;
            _root.save.arenaEvasion += 50;
            _root.save.arenaMaxHealth += 1500;
            _root.save.arenaMaxMana += 500;
        }
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] == "Auto Buff Gem") {
                if (_root.save.inventoryBonus[i] != "" && _root.save.inventoryBonus[i].indexOf("Auto Buff") == -1) {
                    _root.save.inventoryBonus[i] = "";
                }
            }
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i] != "" && _root.save.inventoryName[i].indexOf("Auto Buff") != -1) {
                if (_root.save.inventoryBonus[i] != "" && _root.save.inventoryBonus[i].indexOf("Auto Buff") == -1) {
                    _root.save.inventoryBonus[i] = "";
                }
            }
            if (_root.save.inventoryExpiry[i] == 0 && _root.save.inventoryObtainTime[i] > 1385823600000 && _root.save.inventoryDesc[i] != "" && _root.save.inventoryDesc[i].indexOf("exploited") != -1) {
                if (_root.save.inventoryDesc[i].indexOf("84663214") != -1 && _root.save.inventoryDesc[i].indexOf("993776406") != -1 && _root.save.inventoryDesc[i].indexOf("336567214") != -1 && _root.save.inventoryDesc[i].indexOf("957022263") != -1 && _root.save.inventoryDesc[i].indexOf("366154706") != -1 && _root.save.inventoryDesc[i].indexOf("993776406") != -1 && _root.save.inventoryDesc[i].indexOf("545318181") != -1) {
                    if (_root.save.inventoryNoLife[i] == false) {
                        _root.save.inventoryExpiry[i] = Infinity;
                    }
                    else {
                        _root.save.inventoryExpiry[i] = 1388583420000;
                    }
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
        i = 51;
        while (i <= 75) {
            _root.save.gardenSlotEXP[i] = 0;
            _root.save.gardenTrees[i] = 0;
            i++;
        }
        i = 1;
        while (i <= 75) {
            if (_root.save.gardenTrees[i] != 0 && !isNaN(_root.save.gardenTrees[i])) {
                _root.save.gardenTreeExp[i] = 50;
                _root.save.gardenTreeFertilize[i] = 20;
            }
            i++;
        }
        _root.save.ver = 639;
    }
    if (_root.save.ver < 642) {
        if (!isNaN(_root.save.mysteryBoxCollect10[1])) {
            _root.save.boostPotion += _root.save.mysteryBoxCollect10[1] * 2;
            _root.save.whiteCoin += _root.save.mysteryBoxCollect10[1] * 10;
        }
        if (!isNaN(_root.save.mysteryBoxCollect10[2])) {
            _root.save.boostPotion += _root.save.mysteryBoxCollect10[2] * 2;
            _root.save.whiteCoin += _root.save.mysteryBoxCollect10[2] * 10;
        }
        if (!isNaN(_root.save.mysteryBoxCollect10[3])) {
            _root.save.boostPotion += _root.save.mysteryBoxCollect10[3] * 2;
            _root.save.whiteCoin += _root.save.mysteryBoxCollect10[3] * 10;
        }
        if (!isNaN(_root.save.mysteryBoxCollect10[4])) {
            _root.save.boostPotion += _root.save.mysteryBoxCollect10[4] * 2;
            _root.save.whiteCoin += _root.save.mysteryBoxCollect10[4] * 10;
        }
        if (!isNaN(_root.save.mysteryBoxCollect10[5])) {
            _root.save.boostPotion += _root.save.mysteryBoxCollect10[5] * 2;
            _root.save.whiteCoin += _root.save.mysteryBoxCollect10[5] * 10;
        }
        if (!isNaN(_root.save.mysteryBoxCollect10[6])) {
            _root.save.boostPotion += _root.save.mysteryBoxCollect10[6] * 2;
            _root.save.whiteCoin += _root.save.mysteryBoxCollect10[6] * 10;
        }
        if (_root.saveid < 4) {
            if (_root.save.firstPlayed >= 1385769600000 && _root.save.firstPlayed <= 1420070400000) {
                _root.save.mysteryBox[10] += 40;
            }
            if (_root.save.bestLevel >= 150) {
                _root.save.mysteryBox[10] += 1;
            }
            if (_root.save.battlePoint >= 500) {
                _root.save.mysteryBox[10] += 9;
            }
        }
        _root.save.raidPyramid = 0;
        _root.save.raidDefend = 0;
        _root.save.raidPrehistoric = 0;
        _root.save.raidMegaboss = 0;
        _root.save.raidTower = 0;
        _root.save.raidDungeon = 0;
        _root.save.raidEndless = 0;
        _root.save.arenaRevengeScore = 0;
        _root.save.arenaTriangleScore = 0;
        _root.save.arenaTriangleToday = 0;
        _root.save.arenaSpookyScore = 0;
        _root.save.arenaSpookyToday = 0;
        _root.save.fcgSeriousDeck = 34 + random(35);
        _root.save.fcgExp += _root.save.fcgWin * Math.ceil(15 + _root.save.fcgLevel / 3) + _root.save.fcgLevel5 * 25 + _root.save.fcgLevel6 * 50 + _root.save.fcgLevel7 * 75 + _root.save.fcgLevel8 * 100 + _root.save.fcgLevel9 * 125 + _root.save.fcgLevel10 * 150;
        if (_root.save.careerLevel[8] >= 50) {
            _root.save.careerEXP[8] += (_root.save.fcgWin * Math.ceil(15 + _root.save.fcgLevel / 3) + _root.save.fcgLevel5 * 25 + _root.save.fcgLevel6 * 50 + _root.save.fcgLevel7 * 75 + _root.save.fcgLevel8 * 100 + _root.save.fcgLevel9 * 125 + _root.save.fcgLevel10 * 150) * 10;
        }
        _root.save.ver = 642;
    }
    if (_root.save.ver < 643) {
        i = 1;
        while (i <= 500) {
            if (_root.save.arenaAllyUpgrade[i] == 15) {
                if (i == 275 || i == 295 || i >= 332 && i <= 349 || i == 356 || i >= 367 && i <= 376 || i >= 377 && i <= 432 || i >= 438 && i <= 440 || i >= 448 && i <= 485) {
                    _root.save.arenaAllyUpgrade[i] = 10;
                    _root.save.arenaUnobtainium += 500;
                    _root.save.whiteCoin += 200;
                    _root.save.mysteryBox[10] += 2;
                }
            }
            if (!isNaN(_root.save.arenaBestiaryUlt1[i])) {
                _root.save.arenaBestiaryUlt1V[i] = 1664;
            }
            if (!isNaN(_root.save.arenaBestiaryUlt2[i])) {
                _root.save.arenaBestiaryUlt2V[i] = 1664;
            }
            if (!isNaN(_root.save.arenaBestiaryUlt3[i])) {
                _root.save.arenaBestiaryUlt3V[i] = 1664;
            }
            i++;
        }
        _root.save.ver = 643;
    }
    if (_root.save.ver < 644) {
        if (_root.save.speedRunAscendImpossible < 1440) {
            _root.save.speedRunAscendImpossible = 1440;
        }
        _root.save.battlePoint += _root.save.arenaExpExcess * 4 + _root.save.bannedB * 1500;
        _root.save.ver = 644;
    }
    if (_root.save.ver < 645) {
        if (_root.save.houseVer > 172800 && _root.save.banned < 90) {
            _root.save.houseVer = 172800;
        }
        if (_root.save.banned >= 5) {
            _root.save.progSpeedAuto = 200;
            _root.save.progSpeedManual = 400;
        }
        _root.save.fcgCash += _root.save.fcgBuff[1] * 500;
        _root.save.fcgCash += _root.save.fcgBuff[2] * 1500;
        _root.save.fcgCash += _root.save.fcgBuff[3] * 3000;
        _root.save.fcgCash += _root.save.fcgBuff[4] * 5000;
        _root.save.fcgCash += _root.save.fcgBuff[5] * 8000;
        _root.save.fcgCash += _root.save.fcgBuff[6] * 12000;
        _root.save.fcgCash += _root.save.fcgBuff[7] * 2000;
        _root.save.fcgCash += _root.save.fcgBuff[8] * 250;
        _root.save.stupidity += _root.save.bannedImpossible * 2;
        _root.save.banned1665 = Math.floor(_root.save.mysteryBox[8] / 30000);
        if (_root.save.banned1665 > 5) {
            _root.save.banned1665 = 5;
        }
        if (_root.save.banned1665 < 0) {
            _root.save.banned1665 = 0;
        }
        _root.save.banned += _root.save.banned1665;
        _root.save.bannedHard += _root.save.banned1665;
        _root.save.bannedImpossible += _root.save.banned1665;
        _root.save.stupidity += _root.save.banned1665 * 9;
        _root.save.permaStupidity += _root.save.banned1665;
        _root.save.permaStupidityHard += _root.save.banned1665;
        _root.save.permaStupidityImpossible += _root.save.banned1665;
        _root.save.ver = 645;
    }
    if (_root.save.ver < 646) {
        i = 1;
        while (i <= 70) {
            if (_root.save.progModuleType[i] >= 30 && _root.save.progModuleType[i] <= 39) {
                _root.save.progModuleChance[i] = Math.floor(_root.save.progModuleChance[i] / 2);
            }
            i++;
        }
        _root.save.ver = 646;
    }
    if (_root.save.ver < 651) {
        _root.save.arenaSP += _root.save.arenaLevel * 5 - 1;
        _root.save.ver = 651;
    }
    if (_root.save.ver < 652) {
        if (_root.save.arenaUltimateSP > 150 + Math.floor(_root.save.battlePoint / 10000)) {
            _root.save.arenaUltimateSP = 150 + Math.floor(_root.save.battlePoint / 10000);
            _root.save.arenaSP = _root.save.arenaLevel * 20 + _root.save.arenaUltimateSP * 10;
            _root.save.arenaTotalSkill = 0;
            _root.save.arenaTotalSP = 0;
            i = 1;
            while (i <= 66) {
                if (_root.save.arenaSkill[i] > 0) {
                    _root.save.arenaSkill[i] = 0;
                }
                i++;
            }
        }
        _root.save.ver = 652;
    }
    if (_root.save.ver < 653) {
        if (_root.save.bannedHard >= 1) {
            _root.save.whiteCoin += 1000;
        }
        if (_root.save.bannedImpossible >= 1) {
            _root.save.whiteCoin += 2000;
        }
        _root.save.ver = 653;
    }
    if (_root.save.ver < 654) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryDesc[i] != "" && _root.save.inventoryDesc[i].indexOf("exploited") != -1) {
                if (_root.save.inventoryDesc[i].indexOf("84663214") != -1 || _root.save.inventoryDesc[i].indexOf("993776406") != -1 || _root.save.inventoryDesc[i].indexOf("336567214") != -1 || _root.save.inventoryDesc[i].indexOf("957022263") != -1 || _root.save.inventoryDesc[i].indexOf("366154706") != -1 || _root.save.inventoryDesc[i].indexOf("993776406") != -1 || _root.save.inventoryDesc[i].indexOf("545318181") != -1) {
                    if (_root.save.inventoryNoLife[i] == false) {
                        _root.save.inventoryExpiry[i] = Infinity;
                    }
                    else {
                        _root.save.inventoryExpiry[i] = 1388583420000;
                    }
                    _root.save.inventoryDesc[i] = "";
                }
            }
            i++;
        }
    }
    if (_root.save.ver < 655) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryExpiry[i] == 1388583420000) {
                _root.save.inventoryExpiry[i] = Infinity;
            }
            i++;
        }
        _root.save.ver = 655;
    }
    if (_root.save.ver < 656) {
        i = 1;
        while (i <= 70) {
            if (_root.save.progModuleType[i] == 5) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 40;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 7) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(50 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                }
            }
            if (_root.save.progModuleType[i] == 30) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 40;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] >= 31 && _root.save.progModuleType[i] <= 32) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 60;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(15 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] >= 33 && _root.save.progModuleType[i] <= 35) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 80;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(20 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] >= 36 && _root.save.progModuleType[i] <= 39) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(25 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 42) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 500;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                }
            }
            i++;
        }
        _root.save.ver = 656;
    }
    if (_root.save.ver < 657) {
        _root.save.raidSpecial = 0;
        _root.save.ver = 657;
    }
    if (_root.save.ver < 659) {
        i = 1;
        while (i <= 70) {
            if (_root.save.progModuleType[i] == 7) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(50 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                }
            }
            i++;
        }
        _root.save.ver = 659;
    }
    if (_root.save.ver < 663) {
        if (_root.save.fcgCash == - Infinity || isNaN(_root.save.fcgCash) || _root.save.fcgCash < 0) {
            delete _root.save.fcgCash;
            if (isNaN(_root.save.fcgMaxCash) || _root.save.fcgMaxCash > 1000000000 || _root.save.fcgMaxCash < 0) {
                _root.save.fcgMaxCash = 0;
            }
            _root.save.fcgCash = _root.save.fcgMaxCash;
        }
        i = 1;
        while (i <= 70) {
            if (_root.save.progModuleType[i] == 26) {
                _root.save.progModuleName[i] = "Career EXP Module";
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                }
            }
            if (_root.save.progModuleType[i] == 40) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2.5);
                }
            }
            i++;
        }
        _root.save.ver = 663;
    }
    if (_root.save.ver < 664) {
        i = 1;
        while (i <= 500) {
            if (!isNaN(_root.save.arenaAllyEXP[i]) && isNaN(_root.save.arenaAllyUpgrade[i])) {
                _root.save.arenaAllyUpgrade[i] = 0;
            }
            if (!isNaN(_root.save.arenaBestiaryUlt1V[i])) {
                _root.save.arenaAllyUpgrade[i] = 15;
                if (i == 275 || i == 295 || i >= 332 && i <= 349 || i == 356 || i >= 367 && i <= 376 || i >= 377 && i <= 432 || i >= 438 && i <= 440 || i >= 448 && i <= 485) {
                    if (_root.save.arenaBestiaryUlt1V[i] < 1665) {
                        _root.save.arenaAllyUpgrade[i] = 10;
                    }
                }
            }
            if (!isNaN(_root.save.arenaBestiaryExtra[i]) && _root.save.arenaBestiaryExtra[i] > 0 && _root.save.arenaAllyUpgrade[i] < 10) {
                _root.save.arenaAllyUpgrade[i] = 10;
                if (_root.enemyList[i].allyPassive3 == "") {
                    _root.save.arenaAllyUpgrade[i] = 15;
                }
            }
            i++;
        }
        _root.save.ver = 664;
    }
    if (_root.save.ver < 666) {
        i = 1;
        while (i <= 70) {
            if (_root.save.progModuleType[i] == 40) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 10) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleEffect[i] = 100;
                }
                else {
                    _root.save.progModuleEffect[i] = Math.floor(50 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 666;
    }
    if (_root.save.ver < 667) {
        let tmul = Math.floor(Math.pow(_root.save.bestLevel, 0.6)) / 5 + 1;
        if (_root.save.bestLevel >= 9000) {
            tmul += 2;
        }
        i = 1;
        while (i <= 75) {
            if (!isNaN(_root.save.gardenHarvestValue[i])) {
                _root.save.gardenHarvestValue[i] = Math.ceil(_root.save.gardenHarvestValue[i] / tmul);
            }
            i++;
        }
        _root.save.ver = 667;
    }
    if (_root.save.ver < 668) {
        i = 1;
        while (i <= 70) {
            if (_root.save.progModuleType[i] == 26) {
                _root.save.progModuleName[i] = "Career EXP Module";
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 20;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 668;
    }
    if (_root.save.ver < 669) {
        i = 1;
        while (i <= 75) {
            if (_root.save.gardenTrees[i] != 0 && !isNaN(_root.save.gardenTrees[i])) {
                _root.save.gardenTreeModuleProc[i] = 0;
            }
            i++;
        }
        _root.save.ver = 669;
    }
    if (_root.save.ver < 670) {
        if (_root.save.bestLevel >= 150) {
            _root.save.whiteCoin += 1000;
        }
        _root.save.ver = 670;
    }
    if (_root.save.ver < 672) {
        _root.save.consecutiveDays = _root.save.maxConsecutiveDays;
        i = 71;
        while (i <= 141) {
            _root.deleteModulePiece(i);
            i++;
        }
        i = 41;
        while (i <= 70) {
            _root.copyModulePiece(i, i + 70);
            _root.deleteModulePiece(i);
            i++;
        }
        _root.save.ver = 672;
    }
    if (_root.save.ver < 675) {
        _root.save.totalStupidity = _root.save.banned + _root.save.bannedHard * 2 + _root.save.bannedImpossible * 6;
        if (_root.save.gDifficulty == 3) {
            _root.save.totalStupidity += 8;
        }
        else if (_root.save.gDifficulty == 2) {
            _root.save.totalStupidity += 2;
        }
        _root.save.remStupidity = _root.save.totalStupidity;
        _root.save.questToken += 2000 * _root.save.stupidity;
        _root.save.ver = 675;
        _root.save.banPenalty = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        _root.save.arenaSubWeapon = 0;
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 14) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 4000;
                    _root.save.progModuleEffect[i] = 80;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(40 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 15) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 4000;
                    _root.save.progModuleEffect[i] = 80;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(40 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 3) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                    _root.save.progModuleEffect[i] = 500;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(1000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 4) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 6) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 500;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 16) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 500;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 17) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 4000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 18) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 400;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 26) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(50 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 21) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 200;
                    _root.save.progModuleEffect[i] = 20;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(100 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 28 || _root.save.progModuleType == 29) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 40;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(20 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 19 || _root.save.progModuleType[i] == 22 || _root.save.progModuleType[i] == 23) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 13 || _root.save.progModuleType[i] == 20 || _root.save.progModuleType[i] == 24 || _root.save.progModuleType[i] == 25 || _root.save.progModuleType[i] == 27 || _root.save.progModuleType[i] == 41) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 800;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            i++;
        }
    }
    if (_root.save.ver < 677) {
        _root.save.ver = 677;
        _root.save.mysteryBox[8] = Math.ceil(_root.save.mysteryBox[8] * 0.1);
        if (_root.save.fcgLevel >= 20) {
            _root.save.fcgInitDeck = 6;
            _root.save.fcgCash += 10000;
        }
        _root.save.whiteCoinRefund = Math.floor(_root.save.banned * 500 * (1 + _root.save.banned / 200));
        if (_root.save.banned > 100) {
            _root.save.whiteCoinRefund -= (_root.save.banned - 100) * 500;
        }
        _root.save.whiteCoinRefund = Math.floor(_root.save.whiteCoinRefund * 0.5);
        _root.save.whiteCoinRefundTotal = _root.save.whiteCoinRefund;
    }
    if (_root.save.ver < 678) {
        _root.save.ver = 678;
        if (_root.save.bestLevel >= 100 && _root.saveid <= 3) {
            _root.save.mysteryBox[10] += 10;
        }
    }
    if (_root.save.ver < 680) {
        _root.save.ver = 680;
        if (_root.save.banned > 100) {
            _root.save.totalStupidity += _root.save.banned - 100;
            _root.save.remStupidity += _root.save.banned - 100;
        }
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 40) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 14) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 4000;
                    _root.save.progModuleEffect[i] = 80;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(40 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 15) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 4000;
                    _root.save.progModuleEffect[i] = 80;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(40 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 3) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                    _root.save.progModuleEffect[i] = 500;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(1000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 4) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 6) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 500;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 16) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 500;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 17) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 4000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 18) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 400;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 26) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(50 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 21) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 200;
                    _root.save.progModuleEffect[i] = 20;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(100 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 28 || _root.save.progModuleType == 29) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 40;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(20 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 19 || _root.save.progModuleType[i] == 22 || _root.save.progModuleType[i] == 23) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 13 || _root.save.progModuleType[i] == 20 || _root.save.progModuleType[i] == 24 || _root.save.progModuleType[i] == 25 || _root.save.progModuleType[i] == 27 || _root.save.progModuleType[i] == 41) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 800;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            i++;
        }
    }
    if (_root.save.ver < 683) {
        _root.save.ver = 683;
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryDesc[i] == "Thank you for your donation and your continuous support!") {
                _root.save.inventoryDesc[i] = "Thank you for your donation and your continued support!";
            }
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("(Cursed)") != -1 && _root.save.inventoryExist[i] == 1) {
                _root.save.inventoryName[i] = _root.save.inventoryName[i].substr(0, _root.save.inventoryName[i].length - 9);
            }
            i++;
        }
    }
    if (_root.save.ver < 684) {
        if (_root.saveid == 0 && _root.kongregate_username == "FireShard") {
            _root.save.totalStupidity += 2;
            _root.save.remStupidity += 2;
        }
        _root.save.ver = 684;
    }
    if (_root.save.ver < 694) {
        _root.save.ver = 694;
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 14) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 4000;
                    _root.save.progModuleEffect[i] = 50;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(25 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 15) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 4000;
                    _root.save.progModuleEffect[i] = 50;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(2000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(25 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 23) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 400;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(100 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 24) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(25 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 7) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 100;
                    _root.save.progModuleEffect[i] = 10;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(50 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(5 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 41) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 40) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 500;
                    _root.save.progModuleEffect[i] = 6;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(3 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
    }
    if (_root.save.ver < 695) {
        _root.save.ver = 695;
        if (_root.saveid <= 3 && _root.save.bestLevel >= 150) {
            _root.save.shinyToken += 10;
        }
    }
    if (_root.save.ver < 696) {
        _root.save.ver = 696;
        i = 1;
        while (i <= 500) {
            if (_root.save.arenaBestiaryUlt1V[i] == 1736 || _root.save.arenaBestiaryUlt1V[i] == 1737) {
                delete _root.save.arenaBestiaryUlt1V[i];
                delete _root.save.arenaBestiaryUlt1[i];
                if (_root.save.arenaAllyUpgrade[i] == 15) {
                    _root.save.arenaAllyUpgrade[i] = 10;
                }
            }
            if (_root.save.arenaBestiaryUlt2V[i] == 1736 || _root.save.arenaBestiaryUlt2V[i] == 1737) {
                delete _root.save.arenaBestiaryUlt2V[i];
                delete _root.save.arenaBestiaryUlt2[i];
            }
            if (_root.save.arenaBestiaryUlt3V[i] == 1736 || _root.save.arenaBestiaryUlt3V[i] == 1737) {
                delete _root.save.arenaBestiaryUlt3V[i];
                delete _root.save.arenaBestiaryUlt3[i];
            }
            i++;
        }
    }
    if (_root.save.ver < 698) {
        _root.save.ver = 698;
        i = 1;
        while (i <= 500) {
            if (_root.save.arenaBestiaryUlt1F[i] != undefined && _root.save.arenaAllyUpgrade[i] == 10) {
                if (_root.save.arenaBestiaryUlt1F[i].indexOf("2015-10-1") == -1) {
                    _root.save.arenaBestiaryUlt1[i] = 1;
                    _root.save.arenaBestiaryUlt1V[i] = 1735;
                    _root.save.arenaAllyUpgrade[i] = 15;
                }
            }
            i++;
        }
    }
    if (_root.save.ver < 699) {
        _root.save.ver = 699;
        i = 1;
        while (i <= 500) {
            if (_root.save.arenaBestiaryUlt2F[i] != undefined && _root.save.arenaBestiaryUlt2[i] == undefined) {
                if (_root.save.arenaBestiaryUlt2F[i].indexOf("2015-10-1") == -1) {
                    _root.save.arenaBestiaryUlt2[i] = 1;
                    _root.save.arenaBestiaryUlt2V[i] = 1735;
                }
            }
            i++;
        }
    }
    if (_root.save.ver < 700) {
        _root.save.ver = 700;
        _root.save.wisdomDiscovered = new Array();
    }
    if (_root.save.ver < 701) {
        _root.save.ver = 701;
        i = 1;
        while (i <= 500) {
            if (_root.save.arenaAllyUpgrade[i] == 15 && _root.enemyList[i].allyPassive3 == "" && !isNaN(_root.save.arenaBestiaryExtra[i])) {
                _root.save.arenaBestiary[i] += _root.save.arenaBestiaryExtra[i] * 4;
                _root.save.arenaBestiaryExtra[i] += _root.save.arenaBestiaryExtra[i] * 4;
            }
            i++;
        }
    }
    if (_root.save.ver < 702) {
        if (_root.save.petFullness > 2000) {
            _root.save.pam = true;
        }
        if (_root.save.petFullness > 1000) {
            _root.save.petFullness = 1000;
        }
        _root.save.ver = 702;
    }
    if (_root.save.ver < 704) {
        if (_root.save.petFullness > 2000) {
            _root.save.pam = true;
        }
        if (_root.save.petFullness > 1000) {
            _root.save.petFullness = 1000;
        }
        if (!isNaN(_root.save.mysteryBoxCollect10[1]) && !isNaN(_root.save.mysteryBoxCollect10[2]) && !isNaN(_root.save.mysteryBoxCollect10[3]) && !isNaN(_root.save.mysteryBoxCollect10[4]) && !isNaN(_root.save.mysteryBoxCollect10[5]) && !isNaN(_root.save.mysteryBoxCollect10[6])) {
            tmp = _root.save.mysteryBox[10] + _root.save.mysteryBoxCollect10[1] + _root.save.mysteryBoxCollect10[2] + _root.save.mysteryBoxCollect10[3] + _root.save.mysteryBoxCollect10[4] + _root.save.mysteryBoxCollect10[5] + _root.save.mysteryBoxCollect10[6];
            if (tmp > 19876) {
                _root.save.pam = true;
            }
        }
        _root.save.ver = 704;
    }
    if (_root.save.ver < 705) {
        if (_root.save.botExp < 0) {
            _root.save.botExp = 0;
        }
        _root.save.ver = 705;
    }
    if (_root.save.ver < 706) {
        if (_root.kongregate_username == "Mnchngrngs" && _root.save.careerLevel[13] == 100) {
            _root.save.careerLevel[13] = 0;
            _root.save.careerLevel[14] = 0;
            _root.save.careerLevel[15] = 0;
            _root.save.careerLevel[16] = 0;
            _root.save.arenaKommanderComplete = 12;
            _root.save.arenaSkillBook = 1240;
        }
    }
    if (_root.save.ver < 707) {
        i = 0;
        while (i <= 899) {
            _root.save.drawingBoardHex[i] = "000000";
            _root.save.drawingBoardAlp[i] = 0;
            i++;
        }
        _root.save.ver = 707;
    }
    if (_root.save.ver < 708) {
        i = 900;
        while (i <= 1199) {
            _root.save.drawingBoardHex[i] = "000000";
            _root.save.drawingBoardAlp[i] = 0;
            i++;
        }
        _root.save.ver = 708;
    }
    if (_root.save.ver < 711) {
        if (_root.save.arenaEventPoint[1] > 40000) {
            _root.save.arenaEventPoint[1] = Math.floor((_root.save.arenaEventPoint[1] - 40000) * 0.5) + 40000;
        }
        _root.save.ver = 711;
    }
    if (_root.save.ver < 712) {
        _root.save.buttonMultiplier *= 2;
        _root.save.ver = 712;
    }
    if (_root.save.ver < 713) {
        _root.save.collectionPointMax = _root.save.collectionPoint;
        _root.save.ver = 713;
    }
    if (_root.save.ver < 715) {
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 17) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 2000;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(1000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 18) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 200;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(100 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 10) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 200;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(100 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 715;
    }
    if (_root.save.ver < 716) {
        if (_root.save.progStore > 1000) {
            _root.save.progStore = 100;
        }
        let tmpProgStore = _root.save.progStore;
        let tmpProgStoreB = 100;
        _root.save.progStore = 100;
        while (tmpProgStoreB < tmpProgStore) {
            tmpProgStoreB += Math.ceil((1000 - tmpProgStoreB) / 10);
            _root.save.progStore += 100;
        }
        _root.save.ver = 716;
    }
    if (_root.save.ver < 717) {
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 6) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 500;
                    _root.save.progModuleEffect[i] = 4;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(250 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(2 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 41) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 400;
                    _root.save.progModuleEffect[i] = 10;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(5 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 717;
    }
    if (_root.save.ver < 718) {
        if (_root.save.bestLevel >= 1250) {
            _root.save.botPill += 2;
        }
        _root.save.ver = 718;
    }
    if (_root.save.ver < 721) {
        _root.save.bugExp = 0;
        if (_root.save.level == 9001) {
            _root.save.bugExp = Math.floor(_root.save.currentExp * 0.99);
            _root.save.expLag += Math.floor(_root.save.currentExp * 0.99);
        }
        _root.save.ver = 721;
    }
    if (_root.save.ver < 726) {
        if (_root.save.fishCapacity == 1337) {
            _root.save.fishCapacity = 2500;
        }
        else if (_root.save.fishCapacity == 1837) {
            _root.save.fishCapacity = 5000;
        }
        else if (_root.save.fishCapacity == 2524) {
            _root.save.fishCapacity = 7500;
        }
        else if (_root.save.fishCapacity == 3468) {
            _root.save.fishCapacity = 10000;
        }
        else if (_root.save.fishCapacity == 4766) {
            _root.save.fishCapacity = 12500;
        }
        else if (_root.save.fishCapacity == 6550) {
            _root.save.fishCapacity = 15000;
        }
        else if (_root.save.fishCapacity == 9001) {
            _root.save.fishCapacity = 17500;
        }
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 1) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                    _root.save.progModuleEffect[i] = 30;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(1000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(15 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 2) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                    _root.save.progModuleEffect[i] = 30;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(1000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(15 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 11) {
                _root.save.progModuleName[i] = "Pet Mana Module";
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(25 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 13) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 400;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(100 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 40) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 400;
                    _root.save.progModuleEffect[i] = 4;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(2 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 726;
    }
    if (_root.save.ver < 728) {
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 1) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                    _root.save.progModuleEffect[i] = 30;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(1000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(15 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 2) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 2000;
                    _root.save.progModuleEffect[i] = 30;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(1000 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(15 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            if (_root.save.progModuleType[i] == 11) {
                _root.save.progModuleName[i] = "Pet Mana Module";
                _root.save.progModuleEffect[i] = 1;
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 200;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(50 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 13) {
                _root.save.progModuleEffect[i] = 1;
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 400;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(100 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 40) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 400;
                    _root.save.progModuleEffect[i] = 4;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(2 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 728;
    }
    if (_root.save.ver < 730) {
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 22) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 800;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(200 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 30) {
                _root.save.progModuleEffect[i] = 1;
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 40;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 31 || _root.save.progModuleType[i] == 32) {
                _root.save.progModuleEffect[i] = 1;
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 60;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(15 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] >= 33 && _root.save.progModuleType[i] <= 35) {
                _root.save.progModuleEffect[i] = 1;
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 80;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(20 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] >= 36 && _root.save.progModuleType[i] <= 39) {
                _root.save.progModuleEffect[i] = 1;
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 100;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(25 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] == 41) {
                _root.save.progModuleEffect[i] = 1;
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1600;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(400 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            i++;
        }
        _root.save.ver = 730;
    }
    if (_root.save.ver < 731) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventoryType[i] == "Potion") {
                if (_root.save.inventoryName[i] == "Small Power Potion") {
                    _root.save.inventoryAttack[i] = 600;
                }
                if (_root.save.inventoryName[i] == "Small Master Potion") {
                    _root.save.inventoryAttack[i] = 600;
                }
                if (_root.save.inventoryName[i] == "Small Reward Potion") {
                    _root.save.inventoryAttack[i] = 600;
                }
                if (_root.save.inventoryName[i] == "Medium Power Potion") {
                    _root.save.inventoryAttack[i] = 1800;
                }
                if (_root.save.inventoryName[i] == "Medium Master Potion") {
                    _root.save.inventoryAttack[i] = 1800;
                }
                if (_root.save.inventoryName[i] == "Medium Reward Potion") {
                    _root.save.inventoryAttack[i] = 1800;
                }
                if (_root.save.inventoryName[i] == "Large Power Potion") {
                    _root.save.inventoryAttack[i] = 5400;
                }
                if (_root.save.inventoryName[i] == "Large Master Potion") {
                    _root.save.inventoryAttack[i] = 5400;
                }
                if (_root.save.inventoryName[i] == "Large Reward Potion") {
                    _root.save.inventoryAttack[i] = 5400;
                }
                if (_root.save.inventoryName[i] == "Power Crystal") {
                    _root.save.inventoryAttack[i] = 1800;
                }
                if (_root.save.inventoryName[i] == "Master Crystal") {
                    _root.save.inventoryAttack[i] = 1800;
                }
                if (_root.save.inventoryName[i] == "Reward Crystal") {
                    _root.save.inventoryAttack[i] = 1800;
                }
                if (_root.save.inventoryName[i] == "Special Power Crystal") {
                    _root.save.inventoryAttack[i] = 5400;
                }
                if (_root.save.inventoryName[i] == "Special Master Crystal") {
                    _root.save.inventoryAttack[i] = 5400;
                }
                if (_root.save.inventoryName[i] == "Special Reward Crystal") {
                    _root.save.inventoryAttack[i] = 5400;
                }
                if (_root.save.inventoryName[i] == "Loot Magnet") {
                    _root.save.inventoryAttack[i] = 3600;
                }
                if (_root.save.inventoryName[i] == "Monster Magnet") {
                    _root.save.inventoryAttack[i] = 3600;
                }
                if (_root.save.inventoryName[i] == "Air Bubble") {
                    _root.save.inventoryAttack[i] = 1800;
                }
            }
            i++;
        }
        _root.save.ver = 731;
    }
    if (_root.saveGlobal.latestVersion == 1787) {
        _root.saveGlobal.pl7 = true;
        _root.saveGlobal.pl8 = true;
    }
    if (_root.save.ver < 732) {
        _root.save.arenaChaosLeft = 15;
        _root.save.arenaChaosMax = 15;
        _root.save.ver = 732;
    }
    if (_root.save.ver < 733) {
        _root.save.mh = false;
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventorySubtype[i] == "Medal" && _root.save.inventoryEnhance[i] > 0) {
                if (_root.save.inventoryDesc[i] == "Thank you for your donation and your continued support!") {
                    _root.save.inventoryAttack[i] = 0;
                    _root.save.mh = true;
                }
                if (_root.save.inventoryDesc[i] == "This medal\'s name depends on your Anti-Idle title when you craft it. More medal designs are available as special gifts for those who wish to support the game. Check the \'Donate!\' page in the main menu for details!") {
                    _root.save.inventoryAttack[i] = 0;
                    _root.save.mh = true;
                }
            }
            i++;
        }
        _root.save.ver = 733;
    }
    if (_root.save.ver < 735) {
        i = 1;
        while (i <= 1337) {
            if (_root.save.inventorySubtype[i] == "Pendant" && _root.save.inventoryName[i] == "GIGA PENDANT") {
                _root.save.inventoryAttack[i] += _root.save.inventoryEnhance[i] * 75;
            }
            if (_root.save.inventorySubtype[i] == "Earring" && _root.save.inventoryName[i] == "GIGA EARRINGS") {
                _root.save.inventoryAttack[i] += _root.save.inventoryEnhance[i] * 75;
                j = 5000;
                while (j <= 7000) {
                    if (_root.save.inventoryDesc[i].indexOf(withComma(j)) != -1) {
                        _root.save.inventoryAttack[i] -= Math.floor(j - 5000) / 5;
                        _root.save.inventoryAttack[i] += Math.floor(j - 5000) / 2;
                        j = 7001;
                    }
                    j++;
                }
            }
            if (_root.save.inventoryType[i] == "Enhancer" && _root.save.inventoryName[i] == "GIGA ENHANCER") {
                _root.save.inventoryAttack[i] = 125;
            }
            if (_root.save.inventoryType[i] == "Enhancer" && _root.save.inventoryName[i] == "GIGA ENHANCER EX") {
                _root.save.inventoryAttack[i] = 150;
            }
            if (_root.save.inventoryType[i] == "Enhancer" && _root.save.inventoryName[i] == "GIGA LIFE ROCK") {
                _root.save.inventoryAttack[i] = 2;
            }
            i++;
        }
        if (_root.save.raidDungeon >= 4500) {
            _root.save.arenaChaosLeft += 7;
        }
        _root.save.ver = 735;
    }
    if (_root.save.ver < 736) {
        if (_root.save.bannedB >= 1) {
            if (_root.save.arenaAttack < 65000) {
                _root.save.arenaAttack = 65000;
            }
            if (_root.save.arenaDefense < 65000) {
                _root.save.arenaDefense = 65000;
            }
            if (_root.save.arenaMaxHealth < 650000) {
                _root.save.arenaMaxHealth = 650000;
            }
            if (_root.save.arenaMaxMana < 130000) {
                _root.save.arenaMaxMana = 130000;
            }
            if (_root.save.arenaAccuracy < 13000) {
                _root.save.arenaAccuracy = 13000;
            }
            if (_root.save.arenaEvasion < 13000) {
                _root.save.arenaEvasion = 13000;
            }
        }
    }
    if (_root.save.ver < 737) {
        if (_root.save.regretRem > 1) {
            _root.save.regretRem = 1;
        }
        _root.save.ver = 737;
    }
    if (_root.save.ver < 739) {
        if (_root.save.regretRem == 0) {
            _root.save.robaconExp += 10000000000;
        }
        _root.save.ver = 739;
    }
    if (_root.save.ver < 740) {
        i = 26;
        while (i <= 50) {
            _root.save.gardenSlotEXP[i] *= 2;
            i++;
        }
        _root.save.ver = 740;
    }
    if (_root.save.ver < 741) {
        if (_root.saveid < 10 && _root.save.bestLevel >= 1250) {
            _root.save.botPill += 2;
        }
        _root.save.ver = 741;
    }
    if (_root.save.ver < 742) {
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 4) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 4;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(2 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 742;
    }
    if (_root.save.ver < 743) {
        i = 1;
        while (i <= 2500) {
            if (_root.save.inventoryType[i] == "Armor" && _root.save.inventoryName[i] == "Ultimate Hat" && _root.save.inventoryAbility[i] == "Damage") {
                _root.save.inventoryAbility[i] = "Attack";
            }
            if (_root.save.inventoryType[i] == "Armor" && _root.save.inventoryName[i] == "Ultimate Shirt" && _root.save.inventoryAbility[i] == "Damage") {
                _root.save.inventoryAbility[i] = "Attack";
            }
            if (_root.save.inventoryType[i] == "Armor" && _root.save.inventoryName[i] == "Ultimate Gloves" && _root.save.inventoryAbility[i] == "Damage") {
                _root.save.inventoryAbility[i] = "Attack";
            }
            if (_root.save.inventoryType[i] == "Armor" && _root.save.inventoryName[i] == "Ultimate Pants" && _root.save.inventoryAbility[i] == "Damage") {
                _root.save.inventoryAbility[i] = "Attack";
            }
            if (_root.save.inventoryType[i] == "Armor" && _root.save.inventoryName[i] == "Ultimate Shoes" && _root.save.inventoryAbility[i] == "Damage") {
                _root.save.inventoryAbility[i] = "Attack";
            }
            i++;
        }
        _root.save.ver = 743;
    }
    if (_root.save.ver < 744) {
        if (_root.save.lolProfit > 0) {
            _root.save.lolCapacity = _root.save.lolCapacity * 5 - 5;
        }
        if (_root.save.lolCapacity < 50) {
            _root.save.lolCapacity = 50;
        }
        if (_root.save.lolCapacity > 5000) {
            _root.save.lolCapacity = 5000;
        }
        _root.save.ver = 744;
    }
    if (_root.save.ver < 745) {
        i = 1;
        while (i <= 10) {
            if (_root.save.lolGems[i] >= 2000) {
                _root.save.lolProfit -= Math.ceil(_root.save.lolGems[i] * 750 * i);
                _root.save.lolGems[i] = Math.ceil(_root.save.lolGems[i] * 1.5);
            }
            i++;
        }
        _root.save.ver = 745;
    }
    if (_root.save.ver < 746) {
        _root.save.arenaKommanderProgress = 0;
        _root.save.ver = 746;
    }
    if (_root.save.ver < 747) {
        _root.save.arenaChaosLeft = _root.save.arenaChaosMax;
        _root.save.ver = 747;
    }
    if (_root.save.ver < 748) {
        if (_root.save.banned < 1 && _root.save.bannedB < 1 && _root.save.arenaKommanderMonID >= 448) {
            _root.save.arenaKommanderSkip += 1;
        }
        _root.save.ver = 748;
    }
    if (_root.save.ver < 749) {
        if (_root.save.arenaLevel < 500 && _root.save.arenaKommanderMonID >= 443 && _root.save.arenaKommanderMonID <= 447) {
            _root.save.arenaKommanderSkip += 1;
        }
        _root.save.ver = 749;
    }
    if (_root.save.ver < 750) {
        _root.save.botPoint = Math.floor(_root.save.botPoint * 1.5);
        _root.save.ver = 750;
    }
    if (_root.save.ver < 761) {
        _root.save.arenaKommanderSkip = 3;
        _root.save.ver = 761;
    }
    if (_root.save.ver < 762) {
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] >= 31 && _root.save.progModuleType[i] <= 32) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 40;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] >= 33 && _root.save.progModuleType[i] <= 35) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 60;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(15 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            if (_root.save.progModuleType[i] >= 36 && _root.save.progModuleType[i] <= 39) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 80;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(20 * (1 + (_root.save.progModuleTier[i] - 1) / 10) * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 5);
                }
            }
            i++;
        }
        _root.save.ver = 762;
    }
    if (_root.save.ver < 763) {
        i = 1;
        while (i <= 2500) {
            if (_root.save.inventoryName[i] != null && _root.save.inventoryName[i].indexOf("Humblebee") != -1) {
                _root.save.inventoryExpTNL[i] = 60000000;
            }
            i++;
        }
        _root.save.ver = 763;
    }
    if (_root.save.ver < 764) {
        if (_root.save.fishLevel >= 51 && _root.save.fishLevel <= 60) {
            _root.save.fishBestLevel = _root.save.fishLevel;
        }
        _root.save.ver = 764;
    }
    if (_root.save.ver < 773) {
        _root.save.progFrag = _root.save.rewardClaim;
        if (_root.save.progFrag > 10000000) {
            _root.save.progFrag = 10000000;
        }
        _root.save.awesomeAuto[12] = 0;
        _root.save.ver = 773;
    }
    if (_root.save.ver < 774) {
        i = 1;
        while (i <= 2500) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryName[i] == "Yellow Madness Gem") {
                    _root.save.inventoryDesc[i] = "With this, you will no longer suffer a 10% EXP penalty when fighting yellow-named monsters! It also increases your EXP gain rate and makes rare monsters more likely to appear! Also, Coins will fall from the sky! Isn\'t it awesome?";
                }
                if (_root.save.inventoryName[i] == "Auto Buff Gem") {
                    _root.save.inventoryDesc[i] = "When you equip this gem, you will receive random buffs if you don\'t already have one! You can also cancel your current buff to receive a new one.\n\nPossible buffs: Power, Master, Reward, Enrage, Elemental Boost\n\nAlso, you will get +0.5% Boost whenever you kill a monster and 1 Insta-Progress whenever you kill a boss.";
                }
                if (_root.save.inventoryType[i] == "Armor") {
                    if (_root.save.inventoryMaxLevel[i] == 0) {
                        _root.save.inventoryMaxLevel[i] = 1;
                    }
                }
            }
            i++;
        }
        _root.save.ver = 774;
    }
    if (_root.save.ver < 775) {
        i = 1;
        while (i <= 2500) {
            if (_root.save.inventoryExist[i] == 1) {
                if (_root.save.inventoryDesc[i] == "This medal\'s name depends on your Anti-Idle title when you craft it. More medal designs are available as special gifts for those who wish to support the game. Check the \'Donate!\' page in the main menu for details!") {
                    _root.save.inventoryDesc[i] = "This medal\'s name depends on your Anti-Idle title when you craft it. Don\'t ask how that works.";
                }
            }
            i++;
        }
        i = 1;
        while (i <= 110) {
            if (_root.save.progModuleType[i] >= 14 && _root.save.progModuleType[i] <= 16) {
                _root.save.progModuleChance[i] = 0;
                _root.save.progModuleCost[i] *= 2;
                _root.save.shinyToken += 50;
            }
            i++;
        }
        i = 111;
        while (i <= 140) {
            if (_root.save.progModuleType[i] >= 14 && _root.save.progModuleType[i] <= 16) {
                _root.save.progModuleChance[i] = 0;
                _root.save.progModuleCost[i] = 0;
            }
            i++;
        }
        _root.save.ver = 775;
    }
    if (_root.save.ver < 776) {
        i = 1;
        while (i <= 140) {
            if (_root.save.progModuleType[i] == 21) {
                if (_root.save.progModuleTier[i] == 9) {
                    _root.save.progModuleChance[i] = 1000;
                    _root.save.progModuleEffect[i] = 20;
                }
                else {
                    _root.save.progModuleChance[i] = Math.round(500 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                    _root.save.progModuleEffect[i] = Math.floor(10 * (1 + (_root.save.progModuleTier[i] - 1) / 10));
                }
                if (_root.save.progModuleShiny[i] == 1) {
                    _root.save.progModuleChance[i] = Math.ceil(_root.save.progModuleChance[i] * 2.5);
                    _root.save.progModuleEffect[i] = Math.ceil(_root.save.progModuleEffect[i] * 2);
                }
            }
            i++;
        }
        _root.save.ver = 776;
    }
    if (_root.save.ver < 777) {
        if (_root.save.arenaAlly > 500) {
            _root.save.arenaAlly = 0;
        }
        _root.save.ver = 777;
    }
    if (_root.save.ver < 778) {
        if (_root.save.arenaCorruptBestDifficulty > 50) {
            _root.save.arenaCorruptBestDifficulty = 50;
            _root.save.arenaCorruptMaxDifficulty = 51;
        }
        _root.save.ver = 778;
    }
    if (_root.save.ver < 779) {
        if (_root.save.arenaCorruptBestDifficulty > 100) {
            _root.save.arenaCorruptBestDifficulty = 100;
            _root.save.arenaCorruptMaxDifficulty = 101;
        }
        if (_root.save.arenaCorruptDifficulty > 50 && _root.save.arenaCorruptDifficulty > _root.save.arenaCorruptMaxDifficulty) {
            _root.save.arenaCorruptDifficulty = _root.save.arenaCorruptMaxDifficulty;
        }
        _root.save.ver = 779;
    }
    if (_root.save.ver < 780) {
        _root.save.highRankedPong[0] = _root.save.rankedPong;
        _root.save.highRankedAvoidance[0] = _root.save.rankedAvoidance;
        _root.save.highRankedMath[0] = _root.save.rankedMath;
        _root.save.highRankedWhack[0] = _root.save.rankedWhack;
        _root.save.highRankedMind[0] = _root.save.rankedMind;
        _root.save.highRankedBalance[0] = _root.save.rankedBalance;
        _root.save.highRankedCount[0] = _root.save.rankedCount;
        if (_root.save.totalStupidity >= 150) {
            _root.save.specialStock[30] = 1;
        }
        else {
            _root.save.specialStock[30] = 0;
        }
        _root.save.ver = 780;
    }
    if (_root.save.ver < 784) {
        _root.save.minVersion = 1833;
        if (_root.save.ver == 782) {
            _root.save.noobMode = true;
            _root.save.noobMode2 = true;
            _root.save.cheatEnabled = true;
        }
        if (_root.save.botCurrentOp == 11) {
            _root.save.botCurrentOp = 0;
            _root.save.botActive = true;
            _root.save.botCurrentOpTime = 0;
            _root.save.botCurrentOpNum = 1;
            _root.save.botCurrentOpMax = 1;
        }
        _root.save.botOp[12] += _root.save.botOp[11];
        _root.save.botOp[11] = 0;
        _root.save.ver = 784;
    }
    if (_root.save.ver < 785) {
        _root.save.displayName = "????";
        _root.save.ver = 785;
    }
    if (_root.save.ver < 789) {
        if (_root.save.totalStupidity < 150) {
            _root.save.specialStock[30] = 0;
            let itm = 1;
            while (itm <= 2500) {
                if (_root.save.inventoryName[itm] == "Ultimate Weapon" || _root.save.inventoryName[itm] == "Ultimate Hat" || _root.save.inventoryName[itm] == "Ultimate Shirt" || _root.save.inventoryName[itm] == "Ultimate Gloves" || _root.save.inventoryName[itm] == "Ultimate Pants" || _root.save.inventoryName[itm] == "Ultimate Shoes" || _root.save.inventoryName[itm] == "Ultimate Pendant" || _root.save.inventoryName[itm] == "Ultimate Trinket" || _root.save.inventoryName[itm] == "Ultimate Earrings") {
                    _root.deleteArenaItem(itm);
                }
                itm++;
            }
        }
        if (_root.save.raidEndlessSpeedrun < 2000000000) {
            _root.save.arenaTukkonium += 3;
        }
        if (_root.save.raidEndlessSpeedrunHC < 2000000000) {
            _root.save.arenaTukkonium += 25;
        }
        _root.save.ver = 789;
    }
    if (_root.save.ver < 791) {
        _root.save.minVersion = 1834;
        _root.save.ver = 791;
    }
    if (_root.save.ver < 794) {
        _root.save.minVersion = 1836;
        _root.save.highMind *= 2;
        _root.save.totalMind *= 2;
        _root.save.highRankedMind[0] *= 2;
        _root.save.highRankedMind[1] *= 2;
        _root.save.highRankedMind[2] *= 2;
        if (isNaN(_root.save.highRankedMind[0])) {
            _root.save.highRankedMind[0] = 0;
        }
        if (isNaN(_root.save.highRankedMind[1])) {
            _root.save.highRankedMind[1] = 0;
        }
        if (isNaN(_root.save.highRankedMind[2])) {
            _root.save.highRankedMind[2] = 0;
        }
        _root.save.ver = 794;
    }
    if (_root.save.ver < 795) {
        _root.save.minVersion = 1838;
        let itm = 1;
        while (itm <= 2500) {
            if (_root.save.inventoryName[itm] == "Monster Chip R-0" || _root.save.inventoryName[itm] == "Monster Chip E-0" || _root.save.inventoryName[itm] == "Monster Chip U-0") {
                _root.deleteArenaItem(itm);
            }
            itm++;
        }
        _root.save.ver = 795;
    }
    if (_root.save.ver < 800) {
        _root.save.minVersion = 1843;
        if (_root.save.arenaCorruptWmBestDifficulty > 20) {
            _root.save.arenaCorruptWmBestDifficulty = 20;
            _root.save.arenaCorruptWmMaxDifficulty = 21;
            if (_root.save.arenaCorruptWmDifficulty > 21) {
                _root.save.arenaCorruptWmDifficulty = 21;
            }
        }
        _root.save.ver = 800;
    }
    if (_root.save.ver < 803) {
        _root.save.minVersion = 1846;
        i = 0;
        while (i <= 2) {
            if (_root.save.highRankedPong[i] > 0) {
                _root.save.highRankedPongDiff[i] = 2;
            }
            if (_root.save.highRankedAvoidance[i] > 0) {
                _root.save.highRankedAvoidanceDiff[i] = 2;
            }
            if (_root.save.highRankedMath[i] > 0) {
                _root.save.highRankedMathDiff[i] = 2;
            }
            if (_root.save.highRankedWhack[i] > 0) {
                _root.save.highRankedWhackDiff[i] = 2;
            }
            if (_root.save.highRankedMind[i] > 0) {
                _root.save.highRankedMindDiff[i] = 2;
            }
            if (_root.save.highRankedBalance[i] > 0) {
                _root.save.highRankedBalanceDiff[i] = 2;
            }
            if (_root.save.highRankedCount[i] > 0) {
                _root.save.highRankedCountDiff[i] = 2;
            }
            if (_root.save.highRankedMMRX[i] > 0) {
                _root.save.highRankedMMRXDiff[i] = 2;
            }
            i++;
        }
        _root.save.ver = 803;
    }
    if (_root.save.ver < 804) {
        _root.save.minVersion = 1847;
        i = 0;
        while (i <= 2) {
            if (_root.save.highRankedPong[i] > 6000000) {
                _root.save.highRankedPong[i] = 6000000 + Math.floor((_root.save.highRankedPong[i] - 6000000) * 2 / 3 / 500) * 50;
            }
            if (_root.save.highRankedMind[i] > 18000000) {
                _root.save.highRankedMind[i] = 18000000 + Math.floor((_root.save.highRankedMind[i] - 18000000) * 1 / 4 / 500) * 50;
            }
            i++;
        }
        _root.save.ver = 804;
    }
    if (_root.save.ver < 806) {
        _root.save.minVersion = 1848;
        _root.save.ver = 806;
    }
    if (_root.save.ver < 807) {
        _root.save.minVersion = 1849;
        _root.save.ver = 807;
    }
    if (_root.save.ver < 809) {
        if (_root.save.highCount > 15000000 + _root.save.highRankedCount[0] / 5) {
            _root.save.highCount = 15000000 + _root.save.highRankedCount[0] / 5;
            if (_root.save.highCount < _root.save.highRankedCount[0]) {
                _root.save.highCount = _root.save.highRankedCount[0];
            }
        }
        _root.save.minVersion = 1850;
        _root.save.ver = 809;
    }
    if (_root.save.ver < 810) {
        _root.save.highCount = Math.floor(_root.save.highCount);
        _root.save.ver = 810;
    }
    if (_root.save.ver < 819) {
        _root.save.minVersion = 1860;
        _root.save.ver = 819;
    }
}

export function step5News() {
    function addNewsType(typeID, feature, defaultImportance, defaultColor, sauceName) {
        _root.newsCount += 1;
        _root.newsID[_root.newsCount] = typeID;
        _root.newsFeature[typeID] = feature;
        _root.newsSauceName[_root.newsCount] = sauceName;
        if (typeID != 0 && isNaN(_root.saveGlobal.breakR[typeID])) {
            if (defaultImportance == 4) {
                _root.saveGlobal.breakTab1[typeID] = true;
                _root.saveGlobal.breakTab2[typeID] = true;
                _root.saveGlobal.breakTab3[typeID] = true;
                _root.saveGlobal.breakTab4[typeID] = true;
                _root.saveGlobal.breakAll[typeID] = true;
                _root.saveGlobal.breakFeature[typeID] = true;
            }
            else if (defaultImportance == 3) {
                _root.saveGlobal.breakTab1[typeID] = true;
                _root.saveGlobal.breakTab2[typeID] = true;
                _root.saveGlobal.breakTab3[typeID] = true;
                _root.saveGlobal.breakTab4[typeID] = false;
                _root.saveGlobal.breakAll[typeID] = false;
                _root.saveGlobal.breakFeature[typeID] = true;
            }
            else if (defaultImportance == 2) {
                _root.saveGlobal.breakTab1[typeID] = true;
                _root.saveGlobal.breakTab2[typeID] = true;
                _root.saveGlobal.breakTab3[typeID] = false;
                _root.saveGlobal.breakTab4[typeID] = false;
                _root.saveGlobal.breakAll[typeID] = false;
                _root.saveGlobal.breakFeature[typeID] = true;
            }
            else if (defaultImportance == 1) {
                _root.saveGlobal.breakTab1[typeID] = true;
                _root.saveGlobal.breakTab2[typeID] = false;
                _root.saveGlobal.breakTab3[typeID] = false;
                _root.saveGlobal.breakTab4[typeID] = false;
                _root.saveGlobal.breakAll[typeID] = false;
                _root.saveGlobal.breakFeature[typeID] = false;
            }
            else {
                _root.saveGlobal.breakTab1[typeID] = false;
                _root.saveGlobal.breakTab2[typeID] = false;
                _root.saveGlobal.breakTab3[typeID] = false;
                _root.saveGlobal.breakTab4[typeID] = false;
                _root.saveGlobal.breakAll[typeID] = false;
                _root.saveGlobal.breakFeature[typeID] = false;
            }
            if (feature == 0) {
                _root.saveGlobal.breakFeature[typeID] = false;
            }
            _root.saveGlobal.breakR[typeID] = Math.floor(defaultColor / 65536);
            _root.saveGlobal.breakG[typeID] = Math.floor((defaultColor - _root.saveGlobal.breakR[typeID] * 65536) / 256);
            _root.saveGlobal.breakB[typeID] = Math.floor(defaultColor - _root.saveGlobal.breakR[typeID] * 65536 - _root.saveGlobal.breakG[typeID] * 256);
        }
    }
    _root.newsCount = 0;
    _root.newsID = new Array();
    _root.newsFeature = new Array();
    _root.newsSauceName = new Array();
    addNewsType(0, 0, 0, 0, "GENERAL");
    addNewsType(1, 0, 4, 16711680, "System messages (recommended)");
    addNewsType(167, 0, 4, 10092441, "EXP bar information");
    addNewsType(163, 0, 3, 16777215, "When I gain White Coins");
    addNewsType(159, 0, 3, 13434624, "Speedrun / Challenge Mode information");
    addNewsType(2, 0, 3, 16776960, "When I level up");
    addNewsType(3, 0, 3, 16776960, "When I earn an achievement");
    addNewsType(155, 0, 3, 13434879, "When I gain Event Tokens");
    addNewsType(0, 0, 0, 0, "PROGRESS BAR");
    addNewsType(4, 0, 1, 16768460, "When I claim a reward");
    addNewsType(5, 0, 1, 16768460, "When I claim multiple rewards");
    addNewsType(6, 0, 1, 16768460, "When I gain free Boost");
    addNewsType(7, 0, 1, 16768460, "When I gain additional login rewards");
    addNewsType(8, 0, 1, 16768460, "When Epic Skill \'Double Progress\' activates");
    addNewsType(9, 0, 1, 16768460, "When Epic Skill \'Boost Charger\' activates");
    addNewsType(10, 0, 1, 16768460, "When Epic Skill \'Coin Collector\' activates");
    addNewsType(11, 0, 1, 16768460, "When Epic Skill \'Battery Booster\' activates");
    addNewsType(12, 0, 1, 16768460, "When Epic Skill \'Fanatical Fisher\' activates");
    addNewsType(13, 0, 1, 16768460, "When Epic Skill \'Module Master\' activates");
    addNewsType(184, 0, 1, 16768460, "When Epic Skill \'Cyborg Charger\' activates");
    addNewsType(15, 0, 2, 16776960, "When I upgrade my Progress Bar Speed");
    addNewsType(0, 0, 0, 0, "FEATURE SHOP");
    addNewsType(14, 0, 2, 16776960, "When I buy a new feature");
    addNewsType(0, 0, 0, 0, "GARDEN");
    addNewsType(18, 6, 2, 10092441, "When I plant new trees");
    addNewsType(19, 6, 3, 10092441, "When I harvest my trees");
    addNewsType(20, 6, 4, 16711680, "When my trees expire");
    addNewsType(21, 6, 2, 10092441, "When I find Randomfruit");
    addNewsType(22, 6, 2, 10092441, "When I find seeds for Another Garden");
    addNewsType(23, 6, 2, 10092441, "When I use (Mega) Fertilizers");
    addNewsType(172, 6, 2, 10092441, "When I eat or sell Randomfruit");
    addNewsType(24, 6, 2, 16711680, "When I expand my Garden");
    addNewsType(0, 0, 0, 0, "BATTLE ARENA");
    addNewsType(25, 7, 3, 16776960, "When my Rank increases");
    addNewsType(26, 7, 3, 16776960, "When Robacon / Robroccoli\'s Rank increases");
    addNewsType(27, 7, 1, 16751001, "When a non-boss monster appears");
    addNewsType(28, 7, 2, 16751103, "When a boss monster appears");
    addNewsType(29, 7, 2, 16751001, "When a monster is defeated");
    addNewsType(30, 7, 2, 16751001, "When I receive Bestiary bonus");
    addNewsType(31, 7, 2, 16751001, "When I receive Invisible Ally bonus");
    addNewsType(32, 7, 3, 16776960, "When a Bestiary entry levels up");
    addNewsType(33, 7, 2, 13421772, "When my Invisible Ally gains EXP");
    addNewsType(34, 7, 3, 16776960, "When my Invisible Ally is mastered");
    addNewsType(35, 7, 3, 16776960, "When I tame an Invisible Ally");
    addNewsType(36, 7, 2, 16764057, "When I loot Superior Crafting Material");
    addNewsType(37, 7, 2, 16764057, "When I loot Unobtainium");
    addNewsType(185, 7, 2, 16777215, "When I loot Tukkonium");
    addNewsType(38, 7, 2, 16764057, "When I loot Enhancer Fragments");
    addNewsType(39, 7, 2, 16764057, "When I loot Chaotic Fragments of Chaos");
    addNewsType(40, 7, 2, 16764057, "When I loot To-be-Nerfed Gems");
    addNewsType(41, 7, 2, 16764057, "When I loot Bacon / Broccoli");
    addNewsType(42, 7, 2, 16764057, "When I loot Crystals of Rarity");
    addNewsType(43, 7, 2, 16764057, "When I loot Crystals of Ultimate Rarity");
    addNewsType(181, 7, 2, 16764057, "When I loot Regular Boost Potions");
    addNewsType(182, 7, 2, 16764057, "When I loot Mega Boost Potions");
    addNewsType(44, 7, 3, 16776960, "When I loot a new Ring");
    addNewsType(45, 7, 2, 16764057, "When I loot a Ring (replaced with Pixels)");
    addNewsType(46, 7, 3, 16776960, "When I loot a Recipe");
    addNewsType(47, 7, 3, 16776960, "When I loot a Skill Scroll or extra SP");
    addNewsType(48, 7, 3, 16776960, "When I loot a Skill Book");
    addNewsType(49, 7, 3, 14535680, "When I get a Weapon");
    addNewsType(50, 7, 3, 14535680, "When I get an Armor");
    addNewsType(51, 7, 3, 14535680, "When I get an Accessory");
    addNewsType(52, 7, 3, 14535680, "When I get an Enhancer");
    addNewsType(53, 7, 3, 14535680, "When I get a Potion");
    addNewsType(54, 7, 3, 14535680, "When I get an Outfit");
    addNewsType(170, 7, 3, 14535680, "When I get a Chip");
    addNewsType(55, 7, 3, 16711680, "When a Weapon is deleted due to full inventory");
    addNewsType(56, 7, 3, 16711680, "When an Armor is deleted due to full inventory");
    addNewsType(57, 7, 3, 16711680, "When an Accessory is deleted due to full inventory");
    addNewsType(58, 7, 3, 16711680, "When an Enhancer is deleted due to full inventory");
    addNewsType(59, 7, 3, 16711680, "When a Potion is deleted due to full inventory");
    addNewsType(60, 7, 3, 16711680, "When an Outfit is deleted due to full inventory");
    addNewsType(171, 7, 3, 16711680, "When a Chip is deleted due to full inventory");
    addNewsType(61, 7, 2, 13434624, "When I enhance an item");
    addNewsType(62, 7, 2, 13434624, "When my equipment levels up");
    addNewsType(63, 7, 3, 16711680, "When my equipment expires");
    addNewsType(64, 7, 2, 16776960, "When I purchase additional raid entries");
    addNewsType(65, 7, 3, 16711680, "When I get killed");
    addNewsType(168, 7, 3, 65535, "When I throw To-be-Nerfed Gems");
    addNewsType(66, 7, 3, 65535, "Other Battle Arena messages (recommended)");
    addNewsType(0, 0, 0, 0, "BUTTON MACHINE");
    addNewsType(67, 8, 2, 13421721, "When I get a Perfect click");
    addNewsType(68, 8, 2, 13421721, "When the button breaks");
    addNewsType(69, 8, 3, 16776960, "When I get an Explosion Crate from the Button");
    addNewsType(70, 8, 3, 16776960, "When I get an Awesome Crate from the Button");
    addNewsType(71, 8, 3, 16776960, "When I get a Chaos Crate from the Button");
    addNewsType(72, 8, 3, 16776960, "When I get a Legendary Box from the Button");
    addNewsType(73, 8, 2, 13421721, "When I repair the button");
    addNewsType(74, 8, 2, 16776960, "When I buy items from the Button Machine Shop");
    addNewsType(0, 0, 0, 0, "MONEY PRINTER");
    addNewsType(75, 9, 2, 16777164, "When some Coins are printed");
    addNewsType(76, 9, 2, 65280, "When some Green Coins are printed");
    addNewsType(77, 9, 2, 16776960, "When I upgrade the Money Printer");
    addNewsType(156, 9, 3, 16711680, "When Battery is low");
    addNewsType(157, 9, 4, 16711680, "When Battery runs out");
    addNewsType(0, 0, 0, 0, "ARCADE");
    addNewsType(78, 10, 2, 13421772, "[Pong] Hit");
    addNewsType(79, 10, 2, 15658734, "[Pong] Goal");
    addNewsType(80, 10, 2, 13421772, "[Avoidance] Avoided");
    addNewsType(81, 10, 2, 13421772, "[Math] Correct");
    addNewsType(82, 10, 2, 14540253, "[Math] Nice");
    addNewsType(83, 10, 2, 15658734, "[Math] Excellent");
    addNewsType(84, 10, 2, 13421772, "[Whack] Good");
    addNewsType(85, 10, 2, 14540253, "[Whack] Great");
    addNewsType(86, 10, 2, 15658734, "[Whack] Perfect");
    addNewsType(87, 10, 2, 15658734, "[Whack] Awesome");
    addNewsType(89, 10, 2, 15658734, "[Mind] Goal found");
    addNewsType(90, 10, 2, 13421772, "[Balance] Blocks destroyed");
    addNewsType(91, 10, 2, 14540253, "[Count] Stage cleared");
    addNewsType(92, 10, 2, 15658734, "[Count] Confidence bonus");
    addNewsType(97, 10, 3, 16777215, "Final result");
    addNewsType(161, 10, 3, 13382400, "When I gain Arcade 100k Medals");
    addNewsType(98, 10, 2, 16776960, "When I buy items from the Arcade shop");
    addNewsType(0, 0, 0, 0, "STADIUM");
    addNewsType(99, 11, 2, 10079487, "When I use items");
    addNewsType(100, 11, 2, 8961006, "When opponents use items");
    addNewsType(101, 11, 3, 13434879, "When I KO opponent in Death Match");
    addNewsType(102, 11, 3, 12316398, "When opponent KOs me in Death Match");
    addNewsType(103, 11, 3, 13434879, "Final result");
    addNewsType(104, 11, 2, 16776960, "When I buy items from the Stadium shop");
    addNewsType(0, 0, 0, 0, "TUKKUNFCG");
    addNewsType(105, 12, 3, 65535, "Final result");
    addNewsType(106, 12, 3, 16776960, "When my FCG Level increases");
    addNewsType(0, 0, 0, 0, "LOLMARKET");
    addNewsType(107, 13, 1, 16777113, "When prices change");
    addNewsType(108, 13, 2, 16777113, "When I purchase gems");
    addNewsType(109, 13, 2, 16777113, "When I sell gems");
    addNewsType(110, 13, 3, 16776960, "When LolMarket capacity increases");
    addNewsType(0, 0, 0, 0, "AWESOME ADVENTURES");
    addNewsType(111, 14, 2, 65535, "When I adventure");
    addNewsType(112, 14, 3, 65535, "When I gain Energy");
    addNewsType(113, 14, 2, 65535, "When my Reputation changes");
    addNewsType(114, 14, 2, 16776960, "When I buy items from the Awesome Shop");
    addNewsType(0, 0, 0, 0, "FISHING");
    addNewsType(115, 22, 2, 153, "When I fail to catch something");
    addNewsType(116, 22, 2, 3355596, "When I get a non-perfect catch");
    addNewsType(117, 22, 2, 6711039, "When I get a perfect catch");
    addNewsType(162, 22, 3, 13369599, "When I gain bonus LEGEND EXP");
    addNewsType(118, 22, 2, 10066431, "When I gain Mastery");
    addNewsType(119, 22, 3, 16776960, "When I open Treasure Boxes");
    addNewsType(120, 22, 2, 16776960, "When I raise Skill or Bucket Capacity");
    addNewsType(0, 0, 0, 0, "DRAGON OF WISDOM");
    addNewsType(121, 19, 1, 11184810, "When I feed the Dragon of Wisdom");
    addNewsType(122, 19, 3, 16776960, "When I receive Dragon Feeding Reward");
    addNewsType(123, 19, 3, 16776960, "When I claim Level Up Reward");
    addNewsType(0, 0, 0, 0, "MYSTERY BOXES");
    addNewsType(124, 17, 1, 10066329, "When I open empty Gambler\'s Boxes or get a refund");
    addNewsType(164, 17, 3, 13421568, "When I open Legendary Boxes");
    addNewsType(165, 17, 3, 13421568, "When I open Attendance Boxes");
    addNewsType(166, 17, 3, 13421568, "When I open Supply Crates");
    addNewsType(125, 17, 2, 16776960, "When I receive a Common prize");
    addNewsType(126, 17, 3, 15658496, "When I receive an Uncommon prize");
    addNewsType(127, 17, 3, 13421568, "When I receive a Rare prize");
    addNewsType(183, 17, 3, 13369599, "When I receive a Mega Boost Potion from Progress Boxes");
    addNewsType(0, 0, 0, 0, "CARDS");
    addNewsType(128, 18, 2, 14548736, "When I activate a Card");
    addNewsType(129, 18, 4, 16711680, "When a Card is deactivated");
    addNewsType(130, 18, 2, 14548736, "When I trade a Card for Supply Crates");
    addNewsType(0, 0, 0, 0, "CAREER");
    addNewsType(131, 0, 2, 39423, "When I gain \'Idler\' Career EXP");
    addNewsType(132, 6, 2, 39423, "When I gain \'Gardener\' Career EXP");
    addNewsType(133, 7, 2, 39423, "When I gain \'Fighter\' Career EXP");
    addNewsType(134, 7, 2, 39423, "When I gain \'Item Maker\' Career EXP");
    addNewsType(135, 8, 2, 39423, "When I gain \'Button Basher\' Career EXP");
    addNewsType(136, 10, 2, 39423, "When I gain \'Arcade Player\' Career EXP");
    addNewsType(137, 11, 2, 39423, "When I gain \'Racer\' Career EXP");
    addNewsType(138, 12, 2, 39423, "When I gain \'Card Player\' Career EXP");
    addNewsType(139, 13, 2, 39423, "When I gain \'Gem Trader\' Career EXP");
    addNewsType(140, 14, 2, 39423, "When I gain \'Adventurer\' Career EXP");
    addNewsType(141, 0, 2, 39423, "When I gain \'Pet Trainer\' Career EXP");
    addNewsType(142, 22, 2, 39423, "When I gain \'Fisher\' Career EXP");
    addNewsType(143, 0, 1, 39423, "When I receive Blessing Bonus");
    addNewsType(144, 0, 3, 16776960, "When a Career levels up");
    addNewsType(145, 0, 4, 16711680, "When a Career is deactivated");
    addNewsType(158, 0, 4, 16711680, "When a Career runs out of blessing time");
    addNewsType(0, 0, 0, 0, "PET");
    addNewsType(146, 0, 2, 16737792, "When my Pet gains Fullness");
    addNewsType(147, 0, 2, 16737792, "When my Pet gains Health");
    addNewsType(148, 0, 2, 16737792, "When my Pet gains Mana");
    addNewsType(149, 0, 3, 13382400, "When my Pet loses Fullness");
    addNewsType(150, 0, 3, 13382400, "When my Pet loses Health");
    addNewsType(151, 0, 3, 16711680, "When my Pet\'s Fullness is low");
    addNewsType(152, 0, 4, 16711680, "When my Pet\'s Health is low");
    addNewsType(153, 0, 4, 16711680, "When my Pet dies");
    addNewsType(154, 0, 3, 16776960, "When I use my Pet\'s Mad Skillz");
    addNewsType(173, 0, 2, 16711680, "Overfeeding warning");
    addNewsType(0, 0, 0, 0, "SIMULATION CYBORG");
    addNewsType(174, 0, 3, 12303359, "When you gain Cyborg Points");
    addNewsType(175, 0, 3, 12303359, "When Cyborg finishes an action");
    addNewsType(176, 0, 4, 16711680, "When Simulation Cyborg is paused");
    addNewsType(177, 0, 4, 16776960, "When Simulation Cyborg continues working");
    addNewsType(178, 0, 4, 16711680, "When Simulation Cyborg finishes working");
    addNewsType(179, 0, 2, 12303359, "When Simulation Cyborg gains EXP");
    addNewsType(180, 0, 3, 16776960, "When Simulation Cyborg levels up");
    addNewsType(0, 0, 0, 0, "TECHNICAL LIGHTS");
    addNewsType(160, 0, 4, 13421823, "Variable Tracking");
}

export function step6Events() {
    function verif(username, saveID, refCode) {
        if (_root.kongregate_username == username) {
            _root.verifyA = saveID;
            _root.verifyB = refCode;
        }
    }
    function addEvent(rating, year, month, date, eventName) {
        _root.eventRating[year][month][date] += rating;
        _root.eventList[year][month][date][0] += 1;
        _root.eventList[year][month][date].push(eventName);
    }
    function overrideEvent(year, month, date) {
        _root.eventRating[year][month][date] = 0;
        _root.eventList[year][month][date] = new Array();
        _root.eventList[year][month][date][0] = 0;
    }
    function displayEvent(year, month, date) {
        temp = "";
        i = 1;
        while (i <= _root.eventList[year][month][date][0]) {
            temp += "* " + _root.eventList[year][month][date][i] + "\n";
            i++;
        }
        return temp;
    }
    function addRedCoin(user, amount, reason) {
        if (_root.kongregate_username == user) {
            _root.contributorRC += amount;
            _root.rcEarnLog += "\n" + amount + " Red Coins / Reason: " + reason;
        }
    }
    function banhammer(user, reason) {
        if (_root.kongregate_username == user || user == "[everyone]") {
            _root.canPlay = false;
            _root.banReason += reason + "\n";
        }
    }
    _root.verifyA = -1;
    _root.verifyB = -1;
    verif("Enyoeris", 0, 114858107);
    verif("Rndom_Gy_159", 0, 186111787);
    verif("Stormseeker71", 0, 156434967);
    verif("Vidkid88", 0, 90837367);
    verif("Cyrenics", 0, 115905707);
    verif("DeamonElementia", 0, 102627127);
    verif("ExSane", 2, 193916967);
    verif("IlPadrino72", 0, 204503747);
    verif("Wikke", 0, 85040647);
    verif("Truzyxx", 1, 111615707);
    verif("lolepolman", 0, 92694807);
    verif("Mebbo", 1, 120636787);
    verif("emokid69", 0, 133339037);
    verif("BTlover", 0, 138602047);
    verif("topher556", 0, 154085287);
    verif("DJxJDx", 1, 121236617);
    verif("Preebs", 0, 124711627);
    verif("DragonJareth", 0, 146844287);
    verif("irainsupreme", 0, 149346127);
    verif("RebirthofJimmy", 0, 181795207);
    verif("Youryou", 0, 153239457);
    verif("Xfrogman43", 0, 199206707);
    verif("nafia1", 0, 154947397);
    verif("ildfugl", 1, 140313007);
    verif("Xomps", 0, 166238527);
    verif("ZahazaI", 0, 156945237);
    verif("ladyunicornejg", 1, 158455887);
    verif("GianniB5", 0, 143325487);
    verif("Kibs", 3, 168976207);
    verif("Sionyx", 1, 123011357);
    verif("tohrik", 0, 165595367);
    verif("Adamqs", 1, 186518557);
    verif("falcorn", 0, 153593447);
    verif("Dxb105", 0, 213443167);
    verif("Karl7772000", 0, 177078337);
    verif("b0terham", 0, 132152587);
    verif("kasisu1910", 0, 141733357);
    verif("figweb", 1, 166157747);
    verif("Hyssop", 0, 125042187);
    verif("cabbage42", 0, 153991087);
    verif("IlPadrino72", 3, 204503747);
    verif("adyman", 0, 225303557);
    verif("Thedem", 1, 168316967);
    verif("alberik", 0, 224303287);
    verif("Nageki", 3, 165638207);
    verif("ChampionofAiur", 0, 221247607);
    verif("Dragunlord13", 0, 238917757);
    verif("baaata", 0, 186818107);
    verif("Connor98master", 0, 239298087);
    verif("Kibs", 0, 168976207);
    verif("laguna4ever", 0, 254923207);
    verif("ForTexi", 0, 167817587);
    verif("Mfgdjyb", 0, 193387207);
    verif("MustardFTW", 0, 188922727);
    verif("Dave1004", 0, 179597327);
    verif("Jacob54321", 0, 199766707);
    verif("diegowned", 0, 209723107);
    verif("hawkcannon", 0, 238254567);
    verif("minttheman", 0, 246965127);
    verif("sprwalsh", 0, 184062067);
    verif("Di684haha", 3, 238437127);
    verif("Tuhats", 0, 167590507);
    verif("123x1111", 0, 192953607);
    verif("miller", 0, 213657537);
    verif("AirSalad", 0, 178724567);
    verif("johnlajoie", 1, 239823847);
    verif("Mrmoocowman", 0, 201012707);
    verif("ZahazaI", 1, 172824547);
    verif("Cify", 1, 157972507);
    verif("janvar", 0, 171371627);
    verif("lokodoko", 0, 193187557);
    verif("McGilroy", 1, 174030367);
    verif("stingrayjayz", 0, 223386667);
    verif("Soul_Reaper_25", 0, 223013287);
    verif("cgrain", 1, 165638207);
    verif("7g569d", 0, 227411387);
    verif("kloip", 0, 207798657);
    verif("paladari", 0, 220804487);
    verif("JohnRipper", 0, 217450357);
    verif("VTGames", 1, 229483347);
    verif("Dragunlord13", 1, 238917757);
    verif("ULTRAMAN21", 0, 235212327);
    verif("hipersonic999", 0, 220914687);
    verif("About84Waffles", 1, 230429227);
    verif("Delekahni", 0, 224903687);
    verif("soratti", 0, 206787527);
    verif("TheTyfoon", 0, 198321907);
    verif("DORGANN", 0, 211978447);
    _root.eventList = new Array();
    _root.eventRating = new Array();
    let i = 0;
    while (i <= 9) {
        _root.eventList[i] = new Array();
        _root.eventRating[i] = new Array();
        let j = 1;
        while (j <= 12) {
            _root.eventList[i][j] = new Array();
            _root.eventRating[i][j] = new Array();
            let k = 1;
            while (k <= 31) {
                _root.eventList[i][j][k] = new Array();
                _root.eventRating[i][j][k] = 0;
                _root.eventList[i][j][k][0] = 1;
                _root.eventList[i][j][k][1] = "Receive 10 Event Tokens every 5 minutes you play";
                k++;
            }
            j++;
        }
        i++;
    }
    i = 0;
    while (i <= 9) {
        addEvent(3, i, 1, 1, "Gain 100% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(3, i, 1, 2, "Gain 100% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 2, 14, "Gain 50% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(2, i, 2, 14, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(4, i, 5, 7, "Gain 200% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(4, i, 5, 8, "Gain 200% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 20, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 21, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 22, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 23, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(4, i, 12, 24, "Gain 200% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(4, i, 12, 25, "Gain 200% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 26, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 27, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 28, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 29, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 30, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(3, i, 12, 31, "Gain 100% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
        addEvent(2, i, 12, 20, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 21, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 22, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 23, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 24, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 25, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 26, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 27, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 28, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 29, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 30, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(2, i, 12, 31, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
        addEvent(4, i, 1, 23, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 1, 31, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 2, 21, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 3, 19, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 3, 29, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 4, 17, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 4, 28, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 5, 15, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 5, 27, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 6, 13, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 6, 26, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 7, 11, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 7, 25, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 8, 9, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 8, 24, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 9, 7, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 9, 23, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 10, 5, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 10, 22, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 11, 3, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 11, 21, "2x Drop Rate in Battle Arena");
        addEvent(2, i, 12, 1, "1.5x Drop Rate in Battle Arena");
        addEvent(4, i, 12, 24, "2x Drop Rate in Battle Arena");
        addEvent(4, i, 2, 1, "4x Superior Crafting Material from loot drops in Battle Arena");
        addEvent(4, i, 3, 1, "4x Unobtainium from loot drops in Battle Arena");
        addEvent(4, i, 5, 1, "1.5x Career EXP gain");
        addEvent(4, i, 6, 1, "2.5x Drop Rate in Battle Arena");
        addEvent(4, i, 7, 1, "4x Green Coin from loot drops in Battle Arena");
        addEvent(4, i, 8, 1, "4x Blue Coin from loot drops in Battle Arena");
        addEvent(4, i, 9, 1, "4x Enhancer Fragment from loot drops in Battle Arena");
        addEvent(4, i, 10, 1, "4x Pixel from loot drops in Battle Arena");
        addEvent(4, i, 11, 1, "4x Crafting Material from loot drops in Battle Arena");
        addEvent(1, i, 1, 1, "Receive Event Tokens by claiming rewards");
        addEvent(3, i, 1, 1, "Daily Event Token limit is increased by 800");
        addEvent(1, i, 2, 14, "Receive Event Tokens by killing boss monsters");
        addEvent(3, i, 2, 14, "Daily Event Token limit is increased by 800");
        addEvent(1, i, 5, 7, "Receive Event Tokens by claiming rewards");
        addEvent(3, i, 5, 7, "Daily Event Token limit is increased by 800");
        addEvent(1, i, 5, 8, "Receive Event Tokens by claiming rewards");
        addEvent(3, i, 5, 8, "Daily Event Token limit is increased by 800");
        addEvent(1, i, 10, 30, "Receive Event Tokens by killing undead monsters");
        addEvent(1, i, 10, 30, "Daily Event Token limit is increased by 300");
        addEvent(1, i, 10, 31, "Receive Event Tokens by killing undead monsters");
        addEvent(1, i, 10, 31, "Daily Event Token limit is increased by 300");
        let j = 1;
        while (j <= 12) {
            addEvent(1, i, j, 3, "Progress Bar fills at full speed, even when Idle Mode is on");
            addEvent(1, i, j, 6, "Wait time to harvest trees in Garden is reduced by 25%");
            addEvent(1, i, j, 6, "Receive Event Tokens by harvesting trees");
            addEvent(1, i, j, 6, "Daily Event Token limit is increased by 300");
            addEvent(1, i, j, 8, "Gain 1.5x EXP from TukkunFCG");
            addEvent(1, i, j, 8, "Receive Event Tokens by winning in TukkunFCG");
            addEvent(1, i, j, 8, "Daily Event Token limit is increased by 300");
            addEvent(1, i, j, 12, "Gain 1.5x EXP from Stadium");
            addEvent(1, i, j, 12, "Receive Event Tokens by winning in Stadium");
            addEvent(1, i, j, 12, "Daily Event Token limit is increased by 300");
            addEvent(1, i, j, 14, "Gain 1.5x EXP from Fishing");
            addEvent(1, i, j, 14, "Receive Event Tokens by fishing");
            addEvent(1, i, j, 14, "Daily Event Token limit is increased by 300");
            addEvent(1, i, j, 20, "Gain 1.5x EXP from Arcade");
            addEvent(1, i, j, 20, "Receive Event Tokens by playing games in Arcade");
            addEvent(1, i, j, 20, "Daily Event Token limit is increased by 300");
            addEvent(1, i, j, 24, "Gain 1.5x EXP from Button Machine");
            addEvent(1, i, j, 24, "Receive Event Tokens by pressing the Button Machine");
            addEvent(1, i, j, 24, "Daily Event Token limit is increased by 300");
            addEvent(1, i, j, 28, "Wait time for Adventure Energy is reduced by 25%");
            addEvent(1, i, j, 28, "Receive Event Tokens by adventuring in Awesome Adventures");
            addEvent(1, i, j, 28, "Daily Event Token limit is increased by 300");
            let k = 1;
            while (k <= 31) {
                if ((i + j + k) % 16 == 2) {
                    addEvent(1, i, j, k, "Gain 1.5x EXP from Secret Dungeon area in Battle Arena");
                }
                if ((i + j + k) % 16 == 6) {
                    addEvent(1, i, j, k, "Gain 1.5x EXP from The Corruption area in Battle Arena");
                }
                if ((i + j + k) % 16 == 10) {
                    addEvent(1, i, j, k, "Gain 1.5x EXP from Endless Dungeon area in Battle Arena");
                }
                if ((i + j + k) % 16 == 14) {
                    addEvent(1, i, j, k, "Gain 1.5x EXP from The Corruption area in Battle Arena");
                }
                if (_root.eventRating[i][j][k] == 0) {
                    if ((i + j + k) % 8 <= 4) {
                        addEvent(1, i, j, k, "Gain 25% more EXP from all sources except the Progress Bar, LolMarket and Awesome Adventures");
                    }
                    else {
                        addEvent(1, i, j, k, "Gain 25% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
                    }
                }
                k++;
            }
            j++;
        }
        i++;
    }
    addEvent(10, 7, 6, 5, "2.5x Drop Rate in Battle Arena");
    addEvent(10, 7, 6, 6, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
    addEvent(10, 7, 6, 7, "2.5x Drop Rate in Battle Arena");
    addEvent(10, 7, 6, 8, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
    addEvent(10, 7, 6, 9, "2.5x Drop Rate in Battle Arena");
    addEvent(10, 7, 6, 10, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
    addEvent(10, 7, 6, 11, "2.5x Drop Rate in Battle Arena");
    addEvent(10, 7, 6, 11, "Gain 50% more Coins from all sources except the Progress Bar, Garden, LolMarket and Fishing");
    _root.todayEvent = 0;
    _root.autoUpdateTime = [0, 1354114800000, 1356034320000, Infinity];
    _root.challengeTime = [0, 1374788220000, 1390685820000, 1393364220000, 1398461820000, 1427319420000, 1469482620000, Infinity];
    _root.eventStartTime = [0, 1450810800000, 1458154800000, 1477335600000, Infinity];
    _root.eventEndTime = [0, 1451628000000, 1459404000000, 1478930400000, Infinity];
    _root.eventArmorName = ["", "Festive", "Choco", "Lantern", ""];
    _root.eventArmorFrame = [0, 178, 179, 180, 0];
    _root.contributorRC = 0;
    _root.rcEarnLog = _root.kongregate_username + "\'s Red Coin earning log:";
    _root.banReason = "";
    _root.canPlay = true;
    banhammer("liooi", "Using a bot to click the Button Machine way too much and destroying leaderboards - nearly 70% perfect clicks out of 15 million clicks.");
    banhammer("1000deathz", "Ascending 19 times in 11 days and getting too much EXP and destroying leaderboards.");
    banhammer("baba1029", "Having 225 million Garden EXP with less than 500 trees harvested and destroying leaderboards.");
    banhammer("pingpong1", "Unreasonable EXP gain rate.");
    banhammer("emmett050", "Unreasonable EXP gain rate.");
    banhammer("hho1", "Totally legitimate scores... no.");
    banhammer("jksthe2nd", "Reaching level 181 in TukkunFCG.");
    banhammer("fabiogunit", "Reaching level 200 in TukkunFCG.");
    banhammer("lonestar1313", "Destroying leaderboards. Many of them.");
    banhammer("darkaos", "Clicking the Button Machine way too much.");
    banhammer("LODgunther", "Ascending 1000 times.");
    banhammer("sharkyscape", "Getting way too much EXP.");
    banhammer("Sallokin", "Getting way too much EXP.");
    banhammer("soonzzx", "Getting way too much EXP.");
    banhammer("J13H", "Getting way too much EXP.");
    banhammer("maxxox", "Getting way too much EXP.");
    banhammer("Gnomish", "Getting way too much EXP.");
    banhammer("cifaela", "Getting way too much EXP.");
    banhammer("kokokids", "Getting way too much EXP.");
    banhammer("draster", "Getting way too much Garden EXP.");
    banhammer("sharkyscape", "Getting way too much Garden EXP.");
    banhammer("Sallokin", "Getting way too much Garden EXP.");
    banhammer("Scithen", "Getting way too much Garden EXP.");
    banhammer("Jiby", "Leaderboard hacking.");
    banhammer("aetherdrom", "Leaderboard hacking.");
    banhammer("LLSF", "Leaderboard hacking.");
    banhammer("maredin", "Leaderboard hacking.");
    banhammer("edgefei", "Leaderboard hacking.");
    banhammer("RealFaker", "Leaderboard hacking.");
    banhammer("bazke", "Leaderboard hacking.");
    banhammer("celestior", "Leaderboard hacking.");
    banhammer("draster", "Killing way too many monsters.");
    banhammer("twiggy7711", "Killing way too many monsters.");
    banhammer("MagicChopstick", "Killing 41 million monsters, over 90% of which are bosses, while looting only 1 million items. Seriously, it\'s not funny.");
    banhammer("mikedp1", "Impossible Arcade score.");
    banhammer("chksec", "Impossible Arcade score.");
    banhammer("ZeoNFrosT", "Impossible Arcade score.");
    banhammer("Sansuki", "Reaching level 200 in TukkunFCG.");
    banhammer("masterzgar", "Getting way too much LolMarket profit.");
    banhammer("SweeneyTodd91", "Hacking to get impossible raid scores.");
    banhammer("mastermind_3000", "Excessive hacking.");
    banhammer("tmls12", "Rebirthing 243 million times.");
    banhammer("donkey4", "Hacking.");
    banhammer("CristianFarF", "Hacking.");
    addRedCoin("daf520", 2000, "Completing Survey");
    addRedCoin("Techwarrior", 2000, "Completing Survey");
    addRedCoin("holyvyse", 2000, "Completing Survey");
    addRedCoin("Mattgo90", 2000, "Completing Survey");
    addRedCoin("VuleJr", 2000, "Completing Survey");
    addRedCoin("sblabla", 2000, "Completing Survey");
    addRedCoin("meshwire", 2000, "Completing Survey");
    addRedCoin("galonski64", 2000, "Completing Survey");
    addRedCoin("Bench", 2000, "Completing Survey");
    addRedCoin("Trickymist98", 2000, "Completing Survey");
    addRedCoin("r6a3nky", 2000, "Completing Survey");
    addRedCoin("Thysiazo", 2000, "Completing Survey");
    addRedCoin("Toa_of_Pi", 2000, "Completing Survey");
    addRedCoin("baseballin", 2000, "Completing Survey");
    addRedCoin("Zorae", 2000, "Completing Survey");
    addRedCoin("aguspal", 2000, "Completing Survey");
    addRedCoin("tiktik", 2000, "Completing Survey");
    addRedCoin("Skyt", 2000, "Completing Survey");
    addRedCoin("alexwoody", 2000, "Completing Survey");
    addRedCoin("TFG50", 2000, "Completing Survey");
    addRedCoin("Hao368", 2000, "Completing Survey");
    addRedCoin("Darkranboria", 2000, "Completing Survey");
    addRedCoin("Aax5", 2000, "Completing Survey");
    addRedCoin("Ketchupyoshi", 2000, "Completing Survey");
    addRedCoin("Redjar978", 2000, "Completing Survey");
    addRedCoin("jefeesdios", 2000, "Completing Survey");
    addRedCoin("Aethereal", 2000, "Completing Survey");
    addRedCoin("mrkeki1", 2000, "Completing Survey");
    addRedCoin("Mephistic", 2000, "Completing Survey");
    addRedCoin("frae2", 2000, "Completing Survey");
    addRedCoin("EsotericaVirtue", 2000, "Completing Survey");
    addRedCoin("scarp", 2000, "Completing Survey");
    addRedCoin("Deathwing11", 2000, "Completing Survey");
    addRedCoin("Gramexer", 2000, "Completing Survey");
    addRedCoin("Feb2", 2000, "Completing Survey");
    addRedCoin("Jip137", 2000, "Completing Survey");
    addRedCoin("camperdave", 2000, "Completing Survey");
    addRedCoin("Kralis", 2000, "Completing Survey");
    addRedCoin("Luigi03", 2000, "Completing Survey");
    addRedCoin("Picklebreath", 2000, "Completing Survey");
    addRedCoin("slogsdon", 2000, "Completing Survey");
    addRedCoin("Barbaleki", 2000, "Completing Survey");
    addRedCoin("Xx1Zero1xX", 2000, "Completing Survey");
    addRedCoin("a1choi", 2000, "Completing Survey");
    addRedCoin("Huntragon", 2000, "Completing Survey");
    addRedCoin("Midknight226", 2000, "Completing Survey");
    addRedCoin("Enderjmu", 2000, "Completing Survey");
    addRedCoin("Finnis21", 2000, "Completing Survey");
    addRedCoin("Pokerhappy", 2000, "Completing Survey");
    addRedCoin("Uoteau", 2000, "Completing Survey");
    addRedCoin("Vigi", 2000, "Completing Survey");
    addRedCoin("Tigerh318", 2000, "Completing Survey");
    addRedCoin("Coolica", 2000, "Completing Survey");
    addRedCoin("heWhoPwns", 2000, "Completing Survey");
    addRedCoin("systempain", 2000, "Completing Survey");
    addRedCoin("Tramp_Boy_2", 2000, "Completing Survey");
    addRedCoin("mike2103", 2000, "Completing Survey");
    addRedCoin("linusn", 2000, "Completing Survey");
    addRedCoin("Bowshewicz", 2000, "Completing Survey");
    addRedCoin("MrPidgey", 2000, "Completing Survey");
    addRedCoin("xplodingpen3", 2000, "Completing Survey");
    addRedCoin("Darthlord", 2000, "Completing Survey");
    addRedCoin("Everyl", 2000, "Completing Survey");
    addRedCoin("CoCollect", 2000, "Completing Survey");
    addRedCoin("qlordz", 2000, "Completing Survey");
    addRedCoin("Caps_Lock", 2000, "Completing Survey");
    addRedCoin("Tonza0508", 2000, "Completing Survey");
    addRedCoin("ChioreanTudor", 2000, "Completing Survey");
    addRedCoin("Juski", 2000, "Completing Survey");
    addRedCoin("richardlycn013", 2000, "Completing Survey");
    addRedCoin("Pika2346", 2000, "Completing Survey");
    addRedCoin("TrinityX", 2000, "Completing Survey");
    addRedCoin("Bluji", 2000, "Completing Survey");
    addRedCoin("Pimgd", 2000, "Completing Survey");
    addRedCoin("Lordakin22", 2000, "Completing Survey");
    addRedCoin("dch247", 2000, "Completing Survey");
    addRedCoin("omoinoiadam", 2000, "Completing Survey");
    addRedCoin("Salvator", 2000, "Completing Survey");
    addRedCoin("Mebomb", 1400, "Event Reward: Achievement Ideas");
    addRedCoin("skykingcst", 600, "Event Reward: Achievement Ideas");
    addRedCoin("TheBeast88", 800, "Event Reward: Achievement Ideas");
    addRedCoin("Huntragon", 400, "Event Reward: Achievement Ideas");
    addRedCoin("MiniMissile", 600, "Event Reward: Achievement Ideas");
    addRedCoin("arrggg", 400, "Event Reward: Achievement Ideas");
    addRedCoin("Xx1Zero1xX", 600, "Event Reward: Achievement Ideas");
    addRedCoin("TotalMaverik", 1200, "Event Reward: Achievement Ideas");
    addRedCoin("CoCollect", 800, "Event Reward: Achievement Ideas");
    addRedCoin("JohnSteel", 600, "Event Reward: Achievement Ideas");
    addRedCoin("bladezor", 400, "Event Reward: Achievement Ideas");
    addRedCoin("tuqui", 600, "Event Reward: Achievement Ideas");
    addRedCoin("Yipiyuk", 600, "Event Reward: Achievement Ideas");
    addRedCoin("Toudou1620", 600, "Event Reward: Achievement Ideas");
    addRedCoin("logon", 1000, "Event Reward: Achievement Ideas");
    addRedCoin("Midknight226", 600, "Event Reward: Achievement Ideas");
    addRedCoin("Jerot", 600, "Event Reward: Achievement Ideas");
    addRedCoin("Skyt", 1000, "Event Reward: Achievement Ideas");
    addRedCoin("Ketchupyoshi", 3200, "Event Reward: Achievement Ideas");
    addRedCoin("MegaLamb", 1000, "Event Reward: Achievement Ideas");
    addRedCoin("Gabeee", 600, "Event Reward: Achievement Ideas");
    addRedCoin("Lordakin22", 400, "Event Reward: Achievement Ideas");
    addRedCoin("coco3366az", 600, "Event Reward: Achievement Ideas");
    addRedCoin("Darkruler2005", 1000, "Event Reward: Achievement Ideas");
    addRedCoin("dragonewyn", 59000, "Being awesome.");
    addRedCoin("SumYungGai", 500, "Being awesome.");
    addRedCoin("Salvator", 1000, "Being awesome.");
    addRedCoin("HeroicHero", 1500, "Being awesome.");
    addRedCoin("Postronicman", 300, "Being awesome.");
    addRedCoin("kirdaiht", 2000, "Being awesome.");
    addRedCoin("ChioreanTudor", 2000, "Being awesome.");
    addRedCoin("Toudou1620", 2000, "Being awesome.");
    addRedCoin("Ryo_Sangnoir", 1500, "Being awesome.");
    addRedCoin("Randomthought31", 2000, "Being awesome.");
    addRedCoin("CTSG", 2000, "Being awesome.");
    addRedCoin("truefire", 3000, "Being awesome.");
    addRedCoin("Darkranboria", 2000, "Being awesome.");
    addRedCoin("lobstershow", 30000, "Being awesome.");
    addRedCoin("CoCollect", 40000, "Being awesome.");
    addRedCoin("skykingcst", 2000, "Being awesome.");
    addRedCoin("Dzonis", 800, "Being awesome.");
    addRedCoin("SumYungGai", 4000, "Art Contribution");
    addRedCoin("Johannus", 6000, "Art Contribution");
    addRedCoin("Mike1108", 5000, "Art Contribution");
    addRedCoin("meshwire", 4000, "Art Contribution");
    addRedCoin("Dragonayzer", 3000, "Art Contribution");
    addRedCoin("FkidsPR", 2000, "Art Contribution");
    addRedCoin("mikemage", 2000, "Refund for Maximum Boost bug");
    addRedCoin("happyman12", 2000, "Refund for Maximum Boost bug");
    addRedCoin("MrManner", 2000, "Refund for Maximum Boost bug");
    addRedCoin("fa20", 2000, "Refund for Maximum Boost bug");
    addRedCoin("thaicoconut", 2000, "Refund for Maximum Boost bug");
    addRedCoin("ZAchaPi", 2000, "Refund for Maximum Boost bug");
    addRedCoin("The_BBoH", 2000, "Refund for Maximum Boost bug");
    addRedCoin("happyman12", 2000, "Refund for Maximum Boost bug");
    addRedCoin("tornado", 2000, "Refund for Maximum Boost bug");
    addRedCoin("Torgar", 2000, "Refund for Maximum Boost bug");
    addRedCoin("tiktik", 2000, "Refund for Maximum Boost bug");
    addRedCoin("Natamora", 2000, "Refund for Maximum Boost bug");
    addRedCoin("clanfish", 2000, "Refund for Maximum Boost bug");
    addRedCoin("commendertrent", 2000, "Refund for Maximum Boost bug");
    addRedCoin("KittehLover", 4000, "Bug Report: Dropping Max Boost");
    addRedCoin("Skyt", 5000, "Bug Report: Infinity Boost");
    addRedCoin("Darkruler2005", 3000, "Bug Report: Infinity Boost");
    addRedCoin("CoCollect", 4500, "Useful suggestion");
    addRedCoin("Bluji", 3000, "Bug Report: Undefined reward");
    addRedCoin("coldkick", 3000, "Bug Report: Super Battery exploit");
    addRedCoin("liosfan", 700, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("jew4life520", 700, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("PokerHappy", 1000, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("SpectralFlame", 1000, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("Bench", 1000, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("7smartone7", 700, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("Meepoo", 700, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("KittehLover", 1000, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("RikuFrost", 1000, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("aguspal", 1000, "Completing Survey: v1300 - Battle Arena / Arcade balancing");
    addRedCoin("badgecrasher", 1000, "Never gonna give you up...");
    addRedCoin("Balrogon", 1000, "Never gonna give you up...");
    addRedCoin("XJoschYZ", 1000, "Never gonna give you up...");
    addRedCoin("HeroicHero", 3500, "Art Contribution");
    addRedCoin("gameinsky", 5500, "Technical Help");
    addRedCoin("macseber", 2500, "Bug Report: False monster encounter");
    addRedCoin("player2010abc", 2000, "Bug Report: False monster encounter");
    addRedCoin("masterman229", 2000, "Bug Report: False monster encounter");
    addRedCoin("Ligarius", 3500, "Bug Report: Cannot purchase Stadium");
    addRedCoin("marina32121", 2000, "Bug Report: Unable to change title");
    addRedCoin("cyclops398", 2000, "Bug Report: Unable to kill Grinning Colossus");
    addRedCoin("SpectralFlame", 1500, "Bug Report: False \'No Knockback\' upgrades.");
    addRedCoin("Skyt", 1500, "derp derp derp");
    addRedCoin("SpectralFlame", 1500, "derp derp derp");
    addRedCoin("loli_slayer", 700, "Bug Report: False skill book display");
    addRedCoin("gem85", 700, "Bug Report: False monster name");
    addRedCoin("Makilio", 1500, "Bug Report: False skill book drop");
    addRedCoin("Toa_of_Pi", 1500, "Bug Report: Unlimited oxygen");
    addRedCoin("zamble", 1500, "Useful suggestion");
    addRedCoin("SpectralFlame", 1500, "Useful suggestion");
    addRedCoin("zamble", 1500, "Useful suggestion");
    addRedCoin("loli_slayer", 1500, "Useful suggestion");
    addRedCoin("SlasherX", 1500, "Useful suggestion");
    addRedCoin("RebornStupidity", 1500, "Account switching (SlasherX)");
    addRedCoin("SpectralFlame", 500, "Blah.");
    addRedCoin("freist", 2000, "Bug Report: Epic Skills can be upgraded over max level");
    addRedCoin("fooods", 1000, "Useful suggestion");
    addRedCoin("Skyt", 1000, "Useful suggestion");
    addRedCoin("marina32121", 500, "Bug Report: Test Pet feed display");
    addRedCoin("sabbut", 900, "[Test Version] Bug Report: Typo in item description");
    addRedCoin("KittehLover", 900, "[Test Version] Bug Report: Konami Code not working");
    addRedCoin("Meepoo", 600, "Event Reward: Naming Contest #3");
    addRedCoin("elchesko", 900, "Event Reward: Naming Contest #3");
    addRedCoin("Piscataway44", 700, "Event Reward: Naming Contest #3");
    addRedCoin("MrManner", 800, "Event Reward: Naming Contest #3");
    addRedCoin("pewbe", 500, "Event Reward: Naming Contest #3");
    addRedCoin("Pimgd", 500, "Event Reward: Naming Contest #3");
    addRedCoin("wecl0me12", 500, "Event Reward: Naming Contest #3");
    addRedCoin("Toa_of_Pi", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Laxaria", 700, "Event Reward: Naming Contest #3");
    addRedCoin("Mebomb", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Bench", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Bluji", 400, "Event Reward: Naming Contest #3");
    addRedCoin("Norhede", 700, "Event Reward: Naming Contest #3");
    addRedCoin("SpectralFlame", 700, "Event Reward: Naming Contest #3");
    addRedCoin("Thystonius", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Blauw", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Vara", 600, "Event Reward: Naming Contest #3");
    addRedCoin("gem85", 600, "Event Reward: Naming Contest #3");
    addRedCoin("freist", 700, "Event Reward: Naming Contest #3");
    addRedCoin("cuspcham", 500, "Event Reward: Naming Contest #3");
    addRedCoin("SirStopp", 600, "Event Reward: Naming Contest #3");
    addRedCoin("PlayerPimp", 600, "Event Reward: Naming Contest #3");
    addRedCoin("zeo123200", 700, "Event Reward: Naming Contest #3");
    addRedCoin("DuncmanG", 700, "Event Reward: Naming Contest #3");
    addRedCoin("awein999", 600, "Event Reward: Naming Contest #3");
    addRedCoin("sabbut", 800, "Event Reward: Naming Contest #3");
    addRedCoin("Pokerhappy", 700, "Event Reward: Naming Contest #3");
    addRedCoin("liosfan", 600, "Event Reward: Naming Contest #3");
    addRedCoin("soultaker7777", 600, "Event Reward: Naming Contest #3");
    addRedCoin("missingno", 700, "Event Reward: Naming Contest #3");
    addRedCoin("marina32121", 600, "Event Reward: Naming Contest #3");
    addRedCoin("pinkluver296", 600, "Event Reward: Naming Contest #3");
    addRedCoin("highscore", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Angried", 700, "Event Reward: Naming Contest #3");
    addRedCoin("Terichan", 700, "Event Reward: Naming Contest #3");
    addRedCoin("RikuFrost", 600, "Event Reward: Naming Contest #3");
    addRedCoin("XenorBlight", 600, "Event Reward: Naming Contest #3");
    addRedCoin("durfat", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Toudou1620", 600, "Event Reward: Naming Contest #3");
    addRedCoin("azurebalmung", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Postronicman", 600, "Event Reward: Naming Contest #3");
    addRedCoin("Stompy40", 600, "Event Reward: Naming Contest #3");
    addRedCoin("phyroxx", 600, "Event Reward: Naming Contest #3");
    addRedCoin("lennonluiz0907", 400, "Event Reward: Naming Contest #3");
    addRedCoin("fooods", 1000, "Bug report: Mega Rampage doesn\'t work with ranged weapons");
    addRedCoin("loli_slayer", 1000, "Bug report: Negative healing");
    addRedCoin("DuncmanG", 1000, "Bug report: Monsters drop weapons on Easy Mode.");
    addRedCoin("lennonluiz0907", 500, "Bug report: Cannot have 0 Pixels remaining");
    addRedCoin("Pimgd", 500, "Bug report: False Battle Arena color display");
    addRedCoin("loli_slayer", 1000, "Bug report: Idle Mode doesn\'t reward. [Bug fixed, was a rare bug which was caused by the bar having exactly 224.00 pixels in width.]");
    addRedCoin("Tukkun", 100000, "Testing purposes.");
    addRedCoin("burningpee123", 1000, "[Test Version] Bug Report: Shop doesn\'t refresh");
    addRedCoin("Yamiro", 1000, "[Test Version] Bug Report: False Megaboss killcount");
    addRedCoin("Makilio", 1000, "[Test Version] Bug Report: \'Earn X achievements\' achievements don\'t work");
    addRedCoin("Richirdo", 500, "[Test Version] Bug Report: Cursor is invisible in pause screen.");
    addRedCoin("Bluji", 1000, "[Test Version] Bug Report: Broken pet hunger.");
    addRedCoin("7smartone7", 500, "[Test Version] Bug Report: False TukkunFCG display");
    addRedCoin("loli_slayer", 500, "[Test Version] Bug Report: NaN level for untouched savefiles");
    addRedCoin("Mebomb", 500, "[Test Version] Bug Report: Potion display");
    addRedCoin("loli_slayer", 500, "[Test Version] Bug Report: Cannot view certain shop items");
    addRedCoin("Makilio", 1000, "[Test Version] Bug Report: Shops in the Battle Arena cannot be seen.");
    addRedCoin("SpectralFlame", 2000, "[Test Version] Bug Report: Free access to Secret Lab");
    addRedCoin("Toa_of_Pi", 500, "[Test Version] Bug Report: Ability to access page 2 of Bonus Shop");
    addRedCoin("ForceofLight", 2000, "[Test Version] Bug Report: Undefined FCG card");
    addRedCoin("wecl0me12", 500, "[Test Version] Bug Report: TukkunFCG is a blank screen");
    addRedCoin("loli_slayer", 500, "[Test Version] Bug Report: Cannot access Money Printer");
    addRedCoin("gem85", 1000, "[Test Version] Bug Report: (Minor display bugs)");
    addRedCoin("SpectralFlame", 2000, "[Test Version] Bug Report: Free access to Time Machine");
    addRedCoin("SpectralFlame", 500, "[Test Version] Bug Report: False adventure event");
    addRedCoin("Bench", 1000, "[Test Version] Bug Report: Time Machine doesn\'t work");
    addRedCoin("XxCradx", 1000, "[Test Version] Bug Report: False popup in the TukkunFCG");
    addRedCoin("Darkranboria", 2000, "Area Design: The Desert");
    addRedCoin("Freak40808", 2000, "Area Design: Binary Battlefield");
    addRedCoin("Freak40808", 2000, "Area Design: Safe Zone");
    addRedCoin("Freak40808", 2000, "Area Design: Pirate Ship");
    addRedCoin("Freak40808", 2000, "Area Design: Night Forest");
    addRedCoin("Gama11", 2750, "Area Design: Ropeless Room");
    addRedCoin("Gama11", 2750, "Area Design: Dark Portal");
    addRedCoin("hpmons", 2000, "Area Design: Secret Beach");
    addRedCoin("megooshnish", 2000, "Area Design: Prehistoric Area");
    addRedCoin("meshwire", 2000, "Area Design: Volcano Peak");
    addRedCoin("meshwire", 2000, "Area Design: Frosty Zone");
    addRedCoin("Mike1108", 7000, "Area Design: 2012");
    addRedCoin("Skyt", 2000, "Area Design: Dark Pyramid");
    addRedCoin("TARDIS", 2000, "Area Design: The Sky");
    addRedCoin("TheSullen", 2000, "Area Design: Training Zone");
    addRedCoin("TheSullen", 2000, "Area Design: Deadlands");
    addRedCoin("TheSullen", 2000, "Area Design: Mystic Forest");
    addRedCoin("TheSullen", 2000, "Area Design: Dragon Cave");
    addRedCoin("Toudou1620", 2000, "Area Design: Pirate Ship Interior");
    addRedCoin("UpsetFisherMAN", 3250, "Area Design: The Beach");
    addRedCoin("WolfWarhead", 2000, "Area Design: Scary Graveyard");
    addRedCoin("WolfWarhead", 2000, "Area Design: Mystic Path");
    addRedCoin("napadan", 2000, "Art Contribution");
    addRedCoin("Terichan", 1500, "Useful suggestion");
    addRedCoin("Thegreywarden", 500, "Useful suggestion");
    addRedCoin("Darcouth", 500, "Useful suggestion");
    addRedCoin("Jesto", 1700, "Event Reward: Create Your Own Adventure!");
    addRedCoin("Bluji", 500, "Event Reward: Create Your Own Adventure!");
    addRedCoin("daf420", 400, "Event Reward: Create Your Own Adventure!");
    addRedCoin("sabbut", 500, "Event Reward: Create Your Own Adventure!");
    addRedCoin("Huntragon", 500, "Event Reward: Create Your Own Adventure!");
    addRedCoin("loli_slayer", 200, "Event Reward: Create Your Own Adventure!");
    addRedCoin("DragonArcherZ", 600, "Event Reward: Create Your Own Adventure!");
    addRedCoin("Mebomb", 400, "Event Reward: Create Your Own Adventure!");
    addRedCoin("wecl0me12", 500, "Event Reward: Create Your Own Adventure!");
    addRedCoin("Skyt", 700, "Bug report: \'undefined\' loot items");
    addRedCoin("ABlindOrphan", 1500, "Art Contribution");
    addRedCoin("ABlindOrphan", 1500, "Art Contribution");
    addRedCoin("TwoPlusTwo", 1500, "Bug report: \'Attack Removal\' card works falsely");
    addRedCoin("felipe970421", 1500, "Exploit report: Tab + Enter abuse to charge battery");
    addRedCoin("EinAnderer", 700, "Bug report: Boost bars provide no info");
    addRedCoin("Boligao", 1500, "Bug report: Invisible cursor in main menu");
    addRedCoin("a20365354", 1500, "Bug report: TukkunFCG layer issue");
    addRedCoin("Prongs", 2000, "Bug report: Save slot 3 is broken");
    addRedCoin("iwongames99", 2000, "Bug report: Save slot 3 is broken");
    addRedCoin("max192", 1500, "Bug report: Insta-Progress costs nothing");
    addRedCoin("Jesto", 3500, "Exploit report: Free Insta-Progress and Insta-EXP");
    addRedCoin("Zelja", 3500, "Exploit report: Pixel Bonus abuse in Dimensional Room");
    addRedCoin("ABlindOrphan", 3000, "Area Design: Smiley Island");
    addRedCoin("aznpanda890", 2500, "Bug report: NaN Pixel gain");
    addRedCoin("MerrimanLyon", 2000, "Bug report: NaN Pixel gain");
    addRedCoin("tenco1", 700, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Smaland47", 700, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Kenaron", 700, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Sturmfeder", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("justinkal", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("missingno", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("ChaosII7", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Motztante", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Vexsloth", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("jakxkidney", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("DragonArcherZ", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("figter2000", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("39kk9t", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("soultaker7777", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("SaintSpirit", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Tsunoflare", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("vincenthi135799", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Gamer4124", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Piscataway44", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Aurian", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("destroyer57345", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Rieffu", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("timhessel", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("39kk9t", 600, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("jurrin", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Purgexcross", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("straymaverick", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("adrian206", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("DavidMadsen", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("balrok", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("duudez", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("frae2", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Yupei", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("huadianz", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Hakaisha", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("iamevilman", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("shinki12345", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("nightmaren00", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Gamerdude247", 500, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Alamand", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("lackinglack1", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Killerkarnickel", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("epseudoo", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("aznpanda890", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Tigerbladedn", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("elkid", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("ManXl", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("zeo123200", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("LokiGodOfFire", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("xdarkcodex", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Fasalrod", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("crazyphysicist", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("C4po", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("zerotg90", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("RikuFrost", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("rocxror", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Abinmorth", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("dahp", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Nator", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Sephirothfan", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("metax11", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("opex51", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("arklegru", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Mirodian", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("pika393", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Odenezen", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("hithere", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Qwertyuiopas", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Mindtruster", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("trofffim", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("JohnSmithBalls", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("drakethatsme", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("nickthemenace", 400, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("torcherboy10", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("iamnoone", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("person2348", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Quaznar", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("sh00td3ad", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Simpoink", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("abc12367659", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Olobaid", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("GregLazlo", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("spyrolvr96", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("AogT666", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Arcanmster", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("jeff7871", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("mmKALLL", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("cheese9999", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("pagboy", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("blakzer", 300, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("isomanic", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Woon1957", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("florian887", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("codyman1234", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("levak2", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Bluji", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("HolyFang", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Ryo_Sangnoir", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Squigglet", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("vjeff93", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("isomanic", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("ddelorenzo", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("starhaunter", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("florrat", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("gagataz", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("kwek", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("logo2462", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("hyperhippy92", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("antibarba", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("sabbut", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("CANNONBALL56", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Althaleus", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("ktrout42", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("xAngelx", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("ddueber", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("James1011R", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("fakeandfailure", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("jakxkidney", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("ForceofLight", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("MrSlap", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("kenneth2830", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("SFgame", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("shinki12345", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("not4u", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Bowshewicz", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("killaofgames280", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("zieger", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("jpalange", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("chippi", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("ildfugl", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("simpman", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Galanor", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("bunjun", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("HowlingHatake", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("mulquist", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Grungeking", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Flamerai", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Enderless", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Bench", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("accordingleaf", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("mentalman284", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("tsjak", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Lazarus", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("gshowfan199", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Kakerlake", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("deathangel20", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("TwoPlusTwo", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("Beeshrine09", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("seabird500", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("xxhenleaxx", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("xLightx", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("figter2000", 200, "Event Reward: Submit Your TukkunFCG Decks!");
    addRedCoin("SW1134", 50, "LOL");
    addRedCoin("Blackwaltz002", 3300, "TukkunFCG Card Design");
    addRedCoin("James1011R", 1100, "Bug Report: Negative damage causing weird ability (Note: Don\'t talk on the forums about this)");
    addRedCoin("pika393", 1100, "Bug Report: TukkunFCG opponents giving wrong rewards");
    addRedCoin("Yupei", 200, "Activity #1 Winner");
    addRedCoin("glfootballmlb21", 200, "Activity #1 Winner");
    addRedCoin("Angried", 200, "Activity #1 Winner");
    addRedCoin("Sorvius", -15000, "Item \'Design\'");
    addRedCoin("Sallygwizz37", -60000, "Item \'Design\'");
    addRedCoin("Sallygwizz37", -30000, "Spamming in the forum");
    addRedCoin("OnlineHackers", -2000000, "Misspelling \'subscribe\'");
    addRedCoin("TukkunIsLame", -4000000, "Not remembering to hide the leaderboards in a certain Youtube video.");
    addRedCoin("skagkiller56", -1000000, "Hacking promotion");
    addRedCoin("zammy99", -1000000, "Hacking promotion");
    addRedCoin("pick_pocket_689", -1000000, "Hacking promotion");
    addRedCoin("gr2mm", -1000000, "Hacking promotion");
    addRedCoin("failure2d", -100000, "Epic failure");
    addRedCoin("GigaDramon", -100000000, "Epic failure");
    addRedCoin("i_am_king_2", -100000, "Epic failure");
    addRedCoin("klipimong", -100000, "Epic failure");
    addRedCoin("clickytaco", -100000, "Epic failure");
    addRedCoin("supermario007", -100000, "Epic failure");
    addRedCoin("gavin_rox_3", -100000, "Epic failure");
    addRedCoin("BLOOD300", -10000000, "Epic failure");
    addRedCoin("zildaa", -100000, "Epic failure");
    addRedCoin("THE_BEST_HACKER", -100000, "Epic failure");
    addRedCoin("osm70", -10000000, "");
    addRedCoin("epictrull", -10000000, "");
    addRedCoin("NobsiA", -10000000, "Hacking and bragging about it in the forum");
    addRedCoin("Gama11", 2000, "Area Design: Area 51");
    addRedCoin("Squigglet", 3000, "Area Design: Coral Reef");
    addRedCoin("Axianamos", 4000, "Area Design: Dark Pyramid");
    addRedCoin("zwander", 2000, "Area Design: Dark Pyramid (+)");
    addRedCoin("Squigglet", 3000, "Area Design: Deserted Alley");
    addRedCoin("uberuber22", 3000, "Area Design: Destroyed Battlefield");
    addRedCoin("Randomthought31", 3000, "Area Design: Dragon Cave");
    addRedCoin("DistinctEvil", 3000, "Area Design: Evil Forest");
    addRedCoin("ManaMiyavi", 3000, "Area Design: Exotic Canopy");
    addRedCoin("Timurlenk", 4000, "Area Design: ???");
    addRedCoin("UpsetFisherMAN", 3000, "Area Design: Forbidden Fortress");
    addRedCoin("DistinctEvil", 3000, "Area Design: Gold Mine");
    addRedCoin("UpsetFisherMAN", 3000, "Area Design: Hell");
    addRedCoin("BorisFreaman", 3000, "Area Design: Modern Graveyard");
    addRedCoin("Randomthought31", 3000, "Area Design: Mono Town");
    addRedCoin("Randomthought31", 3000, "Area Design: Mystic Forest");
    addRedCoin("maadneet", 3000, "Area Design: Near The \'??? Generator\'");
    addRedCoin("Randomthought31", 2000, "Area Design: Night Forest");
    addRedCoin("ChaosII7", 4000, "Area Design: Not Copyright Infringement");
    addRedCoin("MaxDragon", 3000, "Area Design: Old Ruins");
    addRedCoin("Richirdo", 3000, "Area Design: Old Ruins Entrance");
    addRedCoin("Gama11", 3000, "Area Design: Pirate Ship Interior");
    addRedCoin("BIGTIPPER", 3000, "Area Design: Polluted Sky");
    addRedCoin("ChaosII7", 4000, "Area Design: Secret Lab");
    addRedCoin("AirSalad", 3000, "Area Design: Sonic");
    addRedCoin("Squigglet", 3000, "Area Design: Spooky Crypt");
    addRedCoin("Randomthought31", 2000, "Area Design: Swamp Hop");
    addRedCoin("Randomthought31", 3000, "Area Design: The Desert");
    addRedCoin("ChaosII7", 4000, "Area Design: The Sky");
    addRedCoin("Randomthought31", 3000, "Area Design: Whale Beach");
    addRedCoin("MaxDragon", 4000, "Area Design: Ye Olde Pub");
    addRedCoin("zwander", 3000, "Area Design: 3001 Wasteland");
    addRedCoin("Bluji", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("0Crapknocker0", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("sabbut", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("lyghtcrye", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("BIGTIPPER", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("InfernalSilence", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Andiiboi", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Wgurgh", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("LucasBurgel", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("hamstercrap", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Duckboii", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Piscataway44", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("metax11", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("xstinkweedx", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Psycroth", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("SvartRuskTroll", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Darkruler2005", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("jjjuu", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("dariofg", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("koozkie", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("nickthemenace", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("ChaosII7", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Eniamar", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Cerbius", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Arch_Gremlin", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Benzopyrene", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Mebomb", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Aurian", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("maadneet", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("macseber", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Rappoman", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Toa_of_Pi", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("TREZAtreza", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("zuton97", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("murgatroid99", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("TwoPlusTwo", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Asrial", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Odenezen", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("James1011R", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Angried", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("chevalerie94", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("richardlycn013", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Gama11", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Barrak", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("DarkDespair5", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("MiniMissile", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("eXoDoX", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("DistinctEvil", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("f1pokerspeed", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("TheGuardianAngel", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("starhaunter", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Spire115", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Sparloki", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("weslleyend", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("YYZ133", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Silencing", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("zandroid", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("IiroOnPerse", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("ManaMiyavi", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("MushroomHermit", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("rcktzr", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Deathborn668", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("markboy11", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("helloAAAAA", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Jojhy", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Sturmfeder", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Majildian", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Huntragon", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("tenco1", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Zox457", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("theyareclose", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Cakeofdoom", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("soultaker7777", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("slogsdon", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("wecl0me12", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("wiifreak20", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("destroyer57345", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("iopghj", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Truub", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("milleraus10", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Pika2346", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("JimmyTheSqealer", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Shorgun", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("tony526", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("hotdog911", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("bonecrusher1022", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Prongs", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("fireballzsss", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Motters", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("niky45", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("UpsetFisherMAN", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Keap12", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Miguelin1317", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("MadSniper", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("jonaxan", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("etmoonshade", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Supereert", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Mindtruster", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("evilnerd", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Yupei", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("felipe970421", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("michael222", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("somethingggg", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("duudez", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("simplymac", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("joel_d", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Puyoyoshi", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("pinguin333", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("santifrey", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Dataman", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("missingno", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("juckter", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Ligarius", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Ryo_Sangnoir", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("TheToaOfTaKoro", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("some123", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("CANNONBALL56", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("reedc1", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Fleet_Feet", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("KingKenzo", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("rankored", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Zerryie", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("XRRRX7331", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("sirmaiden", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Picklebreath", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Schivnorr", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("sorrydie10", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("celo747", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Sabin7", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("XxCradx", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Killerkarnickel", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("noobguy123456789", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("indy5000", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("as820802", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("iamnoone", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("gregjo", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("calvinjliao", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("sammy_dude10", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Kotose", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Backernater", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Hua9801", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("DarkJak92", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("PbookR", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Bowshewicz", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("jjw17", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("7smartone7", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("ElijahBeaudoin", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("ArcticTrident", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Squigglet", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Apathist", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("killaofgames280", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("tobykatt", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("mattl99", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("TheLostSoul622", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("accordingleaf", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("middaystars", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("redtom7", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("EsotericaVirtue", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("panikingdisco", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Randomthought31", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Thystonius", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("baloonatic", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Woon1957", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("Gems", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("toshikitsy", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("civilde", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("PersonOfInterest", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("frae2", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("bobertlyer", 200, "Completing Survey: Arena Enhancement System");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: Pre-explosion Armors are all hats");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: Gambler’s box display error");
    addRedCoin("zieger", 500, "[Test Version] Bug Report: Can’t add cards to FCG");
    addRedCoin("wecl0me12", 500, "[Test Version] Bug Report: Healing a zombie duck after it dies still damages it");
    addRedCoin("peleg97", 500, "[Test Version] Bug Report: Bonus rocks always work");
    addRedCoin("peleg97", 500, "[Test Version] Bug Report: In death match enemies are released from stun earlier than you");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: Title do not auto-upgrade");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: Data transfer broken");
    addRedCoin("peleg97", 500, "[Test Version] Bug Report: Epic skills show double cost");
    addRedCoin("Psycroth", 500, "[Test Version] Bug Report: Rewards listed in Bestiary");
    addRedCoin("Arcanmster", 500, "[Test Version] Bug Report: Savefile transfer system freezes midway");
    addRedCoin("Zox457", 500, "[Test Version] Bug Report: Garden – Wrong expire time");
    addRedCoin("rcktzr", 500, "[Test Version] Bug Report: The quality settings all make it low quality.");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: Max Boosts not decreasing properly");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: No way to remove bestiary bonus msg in breaking news");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: No Adventurer’s Trophy");
    addRedCoin("Arcanmster", 500, "[Test Version] Bug Report: Cannot attack with mouse in BA (Linux)");
    addRedCoin("gregjo", 500, "[Test Version] Bug Report: Mystery Shop Scrolling");
    addRedCoin("UpsetFisherMAN", 500, "[Test Version] Bug Report: Cannot purchase ranged weapons");
    addRedCoin("Slain087", 500, "[Test Version] Bug Report: Auto-Harvest card does not work");
    addRedCoin("RyGuy5357", 500, "[Test Version] Bug Report: bug report bug");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: Monster doesn’t spawn after finishing the Pyramid Battle");
    addRedCoin("Majildian", 500, "[Test Version] Bug Report: Quick Attack ignores weapon range");
    addRedCoin("mariomaster5", 500, "[Test Version] Bug Report: Teleporting stadium charecters?");
    addRedCoin("ShadyKnight", 500, "[Test Version] Bug Report: Cannnot exit Dark Pyramid");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: Dark Portal kill achievement");
    addRedCoin("peleg97", 500, "[Test Version] Bug Report: Minor breaking news bug");
    addRedCoin("destroyer57345", 500, "[Test Version] Bug Report: No warning for 9001 pathz.");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Spelling when getting a reward from dragon");
    addRedCoin("RyGuy5357", 500, "[Test Version] Bug Report: Switching weapons");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Blood Claw special");
    addRedCoin("firecat6666", 500, "[Test Version] Bug Report: “tukkun fcg champion” quest bugged, also ant spray");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: Rickroll’d does not transfer");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: Achievement tracking that doesn’t transfer");
    addRedCoin("missingno", 500, "[Test Version] Bug Report: Nonworking armor bonus adder");
    addRedCoin("jerenator", 500, "[Test Version] Bug Report: Min. boosts half price");
    addRedCoin("Oddity", 500, "[Test Version] Bug Report: Pong: Extreme Wind expiring at wrong time causes slow ball");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Enhancing like crazy");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: Dark portal kill achievement error");
    addRedCoin("gregjo", 500, "[Test Version] Bug Report: Cheater Achievement Reporting");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Breaking News, pixelated box");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Two Lolmarket master?");
    addRedCoin("dingetje50", 500, "[Test Version] Bug Report: Consecutive day bonus");
    addRedCoin("Arcanmster", 500, "[Test Version] Bug Report: FCG remaining cards counter goes negative");
    addRedCoin("gregjo", 500, "[Test Version] Bug Report: Boost Depletion Speed In Breaking News");
    addRedCoin("duudez", 500, "[Test Version] Bug Report: Movement of bombs");
    addRedCoin("duudez", 500, "[Test Version] Bug Report: Prehistoric mission");
    addRedCoin("peleg97", 500, "[Test Version] Bug Report: Stadium item fight wins on impossible aceivement not reporting");
    addRedCoin("peleg97", 500, "[Test Version] Bug Report: Tutorial Typing Error");
    addRedCoin("tenco1", 500, "[Test Version] Bug Report: Minor detail bug");
    addRedCoin("tenco1", 500, "[Test Version] Bug Report: (Another) minor detail bug");
    addRedCoin("Glooble", 500, "[Test Version] Bug Report: Cannot equip/unequip items");
    addRedCoin("ThinkInvisible", 500, "[Test Version] Bug Report: Careers button not working");
    addRedCoin("Krazycarn", 500, "[Test Version] Bug Report: Unable to Switch Equipment During Combat… without Combat!");
    addRedCoin("Arcanmster", 500, "[Test Version] Bug Report: Prehistoric time counter bug");
    addRedCoin("morfinista", 500, "[Test Version] Bug Report: BA: gear changing bug");
    addRedCoin("Uauf3000", 500, "[Test Version] Bug Report: TukkunFCG “???” Does not give cards");
    addRedCoin("gregjo", 500, "[Test Version] Bug Report: Can’t get out of Special Arena Mob Mission");
    addRedCoin("gergjo", 500, "[Test Version] Bug Report: BA Skill Reset Pixel Penalty");
    addRedCoin("wpolly", 500, "[Test Version] Bug Report: Souvenir transfer error");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Prehistoric Mision (I haven’t typed it wrong, you typed it.)");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Negative time? In awesome adventure.");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Sudden Death in Secret Lab?");
    addRedCoin("Arcanmster", 500, "[Test Version] Bug Report: Defend the generator mission / Secret lab DoT");
    addRedCoin("Bluji", 500, "[Test Version] Bug Report: ‘Crafting’ quest doesn’t work");
    addRedCoin("Sephirothfan", 500, "[Test Version] Bug Report: Tukkun FCG Deck Out?");
    addRedCoin("duudez", 500, "[Test Version] Bug Report: Cannot enter defend mission");
    addRedCoin("duudez", 500, "[Test Version] Bug Report: Pixle throw skill");
    addRedCoin("gregjo", 500, "[Test Version] Bug Report: Combo Breaking out of Pyramid");
    addRedCoin("duudez", 500, "[Test Version] Bug Report: RHK not working properly");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: Spraying ants by clicking on number doesn’t count for achievement");
    addRedCoin("duudez", 500, "[Test Version] Bug Report: Careres and enhancing");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: Adventure energy timer bug");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Rofltrainer’s Secret?");
    addRedCoin("peleg97", 500, "[Test Version] Bug Report: Weaken, poison, blind and maybe stun skills bug");
    addRedCoin("Arcanmster", 500, "[Test Version] Bug Report: [Arena] Att/Def/HP/MP upgrade with pixels (minor)");
    addRedCoin("scarymania", 500, "[Test Version] Bug Report: prehistoric mission bug");
    addRedCoin("wecl0me12", 500, "[Test Version] Bug Report: secret lab kills me instantly");
    addRedCoin("UnlimitedBlades", 500, "[Test Version] Bug Report: Awesome Adventures Typo");
    addRedCoin("Aurian", 500, "[Test Version] Bug Report: Plot exp transfer incorrect");
    addRedCoin("Worst_master", 500, "[Test Version] Bug Report: Mutiple Premium Sprayer ");
    addRedCoin("Sturmfeder", 500, "[Test Version] Bug Report: Spelling Error in Options Menu");
    addRedCoin("Sturmfeder", 500, "[Test Version] Bug Report: Special Wand Attack Power");
    addRedCoin("gentleben24", 500, "[Test Version] Bug Report: Careers types give coins");
    addRedCoin("YukaTakeuchiFan", 500, "Bug Report: Om Nom Nom cost");
    addRedCoin("qlordz", 500, "Bug Report: No rings after version 1382");
    addRedCoin("silverknite1", 500, "Bug Report: Cannot purchase explosion crate");
    addRedCoin("towerman100", 500, "Bug Report: grinning colosus burning rope transfer");
    addRedCoin("ChaosII7", 1000, "Bug Report: RoflTrainer’s Secret reward bug");
    addRedCoin("Thomadin", 1000, "Bug Report: Blue Coins -> Pixels with Burned Rope");
    addRedCoin("wpolly", 500, "Bug Report: FCG result screen bug");
    addRedCoin("joel_d", 1000, "Bug Report: Join Kongregate screen");
    addRedCoin("Ryo_Sangnoir", 500, "Bug Report: Bug sprayer lacks Breaking News");
    addRedCoin("pinguin333", 500, "Bug Report: Typing smiley island password costs pixels");
    addRedCoin("qlordz", 500, "Bug Report: Your item has been destroyed!undefined");
    addRedCoin("Arcanmster", 500, "Bug Report: Achievement progress tracker graphical bug");
    addRedCoin("Sphoofle", 500, "Bug Report: Added 1k Event Tokens Not Added");
    addRedCoin("silverknite1", 500, "Bug Report: Gambler’s Box Gives… Undefined?");
    addRedCoin("Silencing", 500, "Bug Report: Game Completion Time Displayed Incorrectly");
    addRedCoin("Silencing", 500, "Bug Report: Scores Not Being Sent");
    addRedCoin("James1011R", 500, "Bug Report: LOLMarket “both buy and sell values grayed out” Bug");
    addRedCoin("etmoonshade", 500, "Bug Report: Battle Arena Dark Mage Wand Incorrect Type");
    addRedCoin("gregjo", 500, "Bug Report: Title Editing (Minor)");
    addRedCoin("SynthesisAlpha", 1000, "Bug Report: Switching files alters garden tree values.");
    addRedCoin("stingrayjayz", 500, "Bug Report: Boxes quantity undefined.");
    addRedCoin("jetz0r", 500, "Bug Report: Not Getting Crafting EXP for every enchant.");
    addRedCoin("Zakhep2", 1000, "Bug Report: Safe hacking won’t work");
    addRedCoin("pinguin333", 500, "Bug Report: smiley island now sets mana to 1");
    addRedCoin("Sturmfeder", 500, "Bug Report: Buy/Sell All Information");
    addRedCoin("Sonic303", 500, "Bug Report: pyramid area glitch");
    addRedCoin("DuncmanG", 500, "Bug Report: LOLMarket Max Numbers don’t all update");
    addRedCoin("ManaMiyavi", 500, "Bug Report: Auto-Harvest card");
    addRedCoin("YYZ133", 500, "Bug Report: “MP Boost” Tier 4 skill incorrect description/effects");
    addRedCoin("Isfan", 500, "Bug Report: Idlebot & Autohide backfire");
    addRedCoin("math_master", 500, "Bug Report: Energy Charge is still white");
    addRedCoin("UnlimitedBlades", 1000, "Bug Report: Money Printer Level 27?");
    addRedCoin("YYZ133", 1000, "Bug Report: BA Post-explosion Special Wand “Power Attack” Skill Bug");
    addRedCoin("rockstip", 500, "Bug Report: Adventuring Energy Loss");
    addRedCoin("wecl0me12", 500, "Bug Report: Dying in prehistoric mission sometimes allows you to continue");
    addRedCoin("halemaster", 500, "Bug Report: Legendary Boxes at NaN");
    addRedCoin("rockstip", 500, "Bug Report: Hide Level, Exp, and Coins graphical bug");
    addRedCoin("dariofg", 500, "Bug Report: Bug in “Too much lag!” screen");
    addRedCoin("somethingggg", 250, "Bug Report: Very poor grammar.");
    addRedCoin("qlordz", 250, "Bug Report: Push text off bottom of item description");
    addRedCoin("Arch_Gremlin", 500, "Bug Report: Mission kommander mission");
    addRedCoin("Sturmfeder", 500, "Bug Report: Quick Insta-Progress Buying");
    addRedCoin("naruto070797", 500, "Bug Report: Wrong gamblers box description");
    addRedCoin("Mcflopidisss", 500, "Bug Report: Version 1386 Relic");
    addRedCoin("offsides", 500, "Bug Report: After Buying a new plot, incorrect garden points for next plot shown");
    addRedCoin("23skidoosh", 500, "Bug Report: Pre-explosion Armour");
    addRedCoin("peleg97", 750, "Bug Report: Double exp gain for item maker career");
    addRedCoin("ThinkInvisible", 500, "Bug Report: TukkunFCG Level Fail");
    addRedCoin("Oddity", 500, "Bug Report: v1388: Hit indicators no longer appear in Death Match");
    addRedCoin("math_master", 500, "Bug Report: Safe Zone? That’s not the name anymore.");
    addRedCoin("Pimgd", 500, "Bug Report: Combo remains when death by lab suffocation");
    addRedCoin("gregjo", 500, "Bug Report: Double Exp For Item Making Career");
    addRedCoin("eat911", 500, "Bug Report: Stadium text bug");
    addRedCoin("BewareOfElephant", 500, "Bug Report: No hits in the BA");
    addRedCoin("23skidoosh", 3500, "Exploit report: Infinate Red Coins");
    addRedCoin("Picklebreath", 250, "Bug Report: Getting career exp twice in the stadium?");
    addRedCoin("DuncmanG", 250, "Bug Report: Graphical glitch in prehistoric mission");
    addRedCoin("123x1111", 2500, "Exploit report: Battle Arena and Tukkun FCG at the same time");
    addRedCoin("Flamewarden", 250, "Bug Report: Lingering tooltip");
    addRedCoin("Arch_Gremlin", 500, "Bug Report: EXP graph display");
    addRedCoin("DarkArmadaStudio", 250, "Bug Report: [Stadium] Fastest Race Leaderboards");
    addRedCoin("qlordz", 500, "Bug Report: Legendary hunter not changing");
    addRedCoin("etmoonshade", 500, "Bug Report: Windowshade Mode Graphical Bug");
    addRedCoin("rockstip", 500, "Bug Report: Battle Arena Item Graphical Bug");
    addRedCoin("peleg97", 500, "Bug Report: Dying in the final rooms in the prehistoric mission leads to the next");
    addRedCoin("Motters", 500, "Bug Report: No daily bonuses");
    addRedCoin("tijntje_7", 500, "Bug Report: Pyramid damage numbers");
    addRedCoin("Qwertyuiopas", 500, "Bug Report: Daily rewards: clicking a box twice");
    addRedCoin("Mindtruster", 500, "Bug Report: Daily Bonus Screen");
    addRedCoin("DavidMadsen", 500, "Bug Report: No Daily Bonus Screen");
    addRedCoin("AleXinoS", 250, "Bug Report: Dragon made a grammar mistake! (Not at the part where it was intended)");
    addRedCoin("Slain087", 500, "Bug Report: Battle Arena Dark Pyramid parse error");
    addRedCoin("darkraiders", 500, "Bug Report: Heal give some extra damage and extra combo");
    addRedCoin("milleraus10", 750, "Bug Report: New Daily Bonus Box");
    addRedCoin("Ryo_Sangnoir", 250, "Bug Report: Arcade medal hovers stay when pressing space");
    addRedCoin("arcain", 500, "Bug Report: Too many skill points");
    addRedCoin("Mindtruster", 750, "Bug Report: TukkunFCG – PROFIT!!!!!");
    addRedCoin("Vitrebreaker", 500, "Bug Report: Not dead in the prehistoric mission");
    addRedCoin("Motters", 500, "Bug Report: New crafting UI shows wrong percentage for bonus adders");
    addRedCoin("Arcanmster", 250, "Bug Report: Standby mode message is cut");
    addRedCoin("Thomadin", 500, "Bug Report: Display Bug -> Enchanting with Armor Attackspeed Stone");
    addRedCoin("pinguin333", 500, "Bug Report: crafting material used highscore");
    addRedCoin("ohnonooh", 750, "Bug report: Career cost activation wrongly charged");
    addRedCoin("BanditEX", 250, "Bug report: Arcade prize display error");
    addRedCoin("DaMaster9000", 250, "Bug report: Spray Ants pop-up glitch");
    addRedCoin("notfromearth", 500, "Bug report: blue coin rewards don’t add up correctely");
    addRedCoin("math_master", 250, "Bug report: Holding left mouse button may move description");
    addRedCoin("BIGTIPPER", 250, "Bug report: MegaBoss Lvls Vary");
    addRedCoin("nickthemenace", 250, "Bug report: Red coin refund rate display too low");
    addRedCoin("ChaosII7", 250, "Bug report: Status icons clinging");
    addRedCoin("Tama_Yoshi", 500, "Bug report: Career time left glitch");
    addRedCoin("hyperhippy92", 500, "Bug report: Career Time Depletion Bug");
    addRedCoin("Quizer", 500, "Bug report: Forcing draws in TukkunFCG when decked out also causes poisoning");
    addRedCoin("DuncmanG", 250, "Bug report: Ascend mouse-over Text Unclear");
    addRedCoin("sabbut", 500, "Bug report: Doom Wizard heals himself over his maximum health");
    addRedCoin("SpudY2K", 500, "Bug report: Flickering Battle Arena Mission Stats");
    addRedCoin("sabbut", 250, "Bug report: Enhancing some weapons");
    addRedCoin("notfromearth", 500, "Bug report: GC rewards from progress bar");
    addRedCoin("Aurian", 1500, "Exploit report: Permanent Elite Temp. Max Boost");
    addRedCoin("ExSane", 750, "Exploit report: Sword of Ascendant abusable in Tower of DOOOOOOM");
    addRedCoin("Selgald", 750, "Exploit report: Lvl up wont stop");
    addRedCoin("RedSun383", 500, "Bug report: The same arcade daily reward awarded twice at midnight");
    addRedCoin("madnesss", 500, "Bug report: Double poisoning in TukkunFCG");
    addRedCoin("XxCradx", 500, "Bug report: Stadium – Teleport Through Obstacles (Deathmatch)");
    addRedCoin("redrocketwestie", 500, "Bug report: Lost/Glitched Achievements?");
    addRedCoin("ParaTheNoia", 500, "Bug report: Weaken does not lower your damage in Secret Lab");
    addRedCoin("ArcanMster", 500, "Bug report: Negative drowning damage");
    addRedCoin("wpolly", 500, "Bug report: No “Spawn Rate” bonuses on weapons");
    addRedCoin("notfromearth", 500, "Bug report: combo count in battle arena");
    addRedCoin("notfromearth", 500, "Exploit report");
    addRedCoin("Majildian", 500, "Bug report: Strange Machine gives the wrong adventure");
    addRedCoin("crazyphysicist", 500, "Bug report: FCG: no Pet bonus");
    addRedCoin("Maciejas42", 500, "Bug report: A little typo in AA");
    addRedCoin("ChaosII7", 500, "Bug report: Dying instantly in the BA");
    addRedCoin("talenramel", 500, "Bug report: BA death while in Menu");
    addRedCoin("stryph", 500, "Bug report: Quests Tab Broken");
    addRedCoin("helbrid", 250, "Bug report: instant achievements");
    addRedCoin("notfromearth", 250, "Bug report: bestiary page 4 not available");
    addRedCoin("eragonpotter", 500, "Bug report: LoLMarket Screen");
    addRedCoin("n0body123", 500, "Bug report: First Battle Arena travel arrow in tutorial");
    addRedCoin("trisk22", 500, "Bug report: Pet lost its level");
    addRedCoin("Ketchupyoshi", 500, "Bug report: TukkunFCG pet bug");
    addRedCoin("ChaosII7", 6000, "Item Design");
    addRedCoin("theyareclose", 6000, "Item Design");
    addRedCoin("UpsetFisherMAN", 5250, "Item Design");
    addRedCoin("olsfa", 500, "Item Design");
    addRedCoin("ManaMiyavi", 4500, "Item Design");
    addRedCoin("weslleyend", 6500, "Item Design");
    addRedCoin("cabbawargod", 7000, "Item Design");
    addRedCoin("blackcat2000", 4750, "Item Design");
    addRedCoin("lucksz", 3750, "Item Design");
    addRedCoin("blazez998", 3750, "Item Design");
    addRedCoin("theyareclose", 3750, "Item Design");
    addRedCoin("Khnum666", 3750, "Item Design");
    addRedCoin("ChaosII7", 3750, "Item Design");
    addRedCoin("Squigglet", 6500, "Item Design");
    addRedCoin("Chaldon", 3750, "Item Design");
    addRedCoin("endril", 6000, "Item Design");
    addRedCoin("takumi152", 1000, "Item Design");
    addRedCoin("RaceBandit", 2000, "Item Design");
    addRedCoin("hyperhippy92", 1000, "Item Design");
    addRedCoin("Pika2346", 1500, "Item Design");
    addRedCoin("Chokladkakan", 4500, "Item Design");
    addRedCoin("ipwnu1337", 2000, "Item Design");
    addRedCoin("Manjies", 4500, "Item Design");
    addRedCoin("Chokladkakan", 1500, "Item Design");
    addRedCoin("Randomthought31", 1500, "Item Design");
    addRedCoin("Harrs", 1500, "Item Design");
    addRedCoin("bulletbarrage", 1500, "Item Design");
    addRedCoin("Deilig", 3750, "Item Design");
    addRedCoin("Sphoofle", 6500, "Item Design");
    addRedCoin("Kalitrima", 4000, "Item Design");
    addRedCoin("Axecutioner64", 750, "Item Design");
    addRedCoin("Quizer", 1500, "");
    addRedCoin("Chatturgha", 3000, "Item Design");
    addRedCoin("LucidCrux", 30000, "Item Design");
    addRedCoin("LucidCrux", 70000, "Item Design");
    addRedCoin("LucidCrux", 40000, "Item Design");
    addRedCoin("LucidCrux", 40000, "Item Design");
    addRedCoin("shinki12345", 30000, "Item Design");
    addRedCoin("ChaosII7", 110000, "Item Design");
    addRedCoin("ManaMiyavi", 3000, "Item Design");
    addRedCoin("UpsetFisherMAN", 6000, "Item Design");
    addRedCoin("wecl0me12", 300, "Dragon of Wisdom Speeches");
    addRedCoin("Pharrit", 300, "Dragon of Wisdom Speeches");
    addRedCoin("arit3", 600, "Dragon of Wisdom Speeches");
    addRedCoin("Dudenator2", 300, "Dragon of Wisdom Speeches");
    addRedCoin("ChaosII7", 2000, "Dragon of Wisdom Speeches");
    addRedCoin("Beeshrine09", 1000, "Dragon of Wisdom Speeches");
    addRedCoin("GhoullyX", 300, "Dragon of Wisdom Speeches");
    addRedCoin("SvartRuskTroll", 600, "Dragon of Wisdom Speeches");
    addRedCoin("als02", 300, "Dragon of Wisdom Speeches");
    addRedCoin("Darkringer", 2000, "Dragon of Wisdom Speeches");
    addRedCoin("Cunari", 1000, "Dragon of Wisdom Speeches");
    addRedCoin("102938475621", 600, "Dragon of Wisdom Speeches");
    addRedCoin("AuburnAttack21", 2000, "Dragon of Wisdom Speeches");
    addRedCoin("Mr27", 1000, "Dragon of Wisdom Speeches");
    addRedCoin("poser2", 600, "Dragon of Wisdom Speeches");
    addRedCoin("ForceofLight", 1000, "Dragon of Wisdom Speeches");
    addRedCoin("ManaMiyavi", 1000, "Dragon of Wisdom Speeches");
    addRedCoin("silux", 1500, "Dragon of Wisdom Speeches");
    addRedCoin("wercooler", 1000, "Dragon of Wisdom Speeches");
    addRedCoin("jxm1985", 300, "Dragon of Wisdom Speeches");
    addRedCoin("TheNeRD14", 300, "Dragon of Wisdom Speeches");
    addRedCoin("billybobfred", 2000, "Dragon of Wisdom Speeches");
    addRedCoin("CAdamH", 300, "Dragon of Wisdom Speeches");
    addRedCoin("LunaticNeko", 2000, "Dragon of Wisdom Speeches");
    addRedCoin("toadvine", 2000, "Area Design: Foodlandistan");
    addRedCoin("toadvine", 131700, "Item Design");
    addRedCoin("AirSalad", 20, "You win!");
    addRedCoin("TheChaosNinja", 2, "Fine, here\'s a Red Coin for you. Or maybe two.");
    addRedCoin("Tukkun", 100000, "Test");
    addRedCoin("PlazmaBurst2", -999999, "PM Spamming");
}

export function step7Fcg() {
    function addNewCard(pil1, pil2, pil3, pil4, pil5, ene1, ene2, ene3, ene4, ene5, opil1, opil2, opil3, opil4, opil5, oene1, oene2, oene3, oene4, oene5, catk, cdef, chp, crec, matk, mdef, mhp, mrec, ocatk, ocdef, ochp, ocrec, omatk, omdef, omhp, omrec, draw, inflict, freeze, special, specialpow, atk, def, hp, upgraded, type, quanta, req, cost, name, desc, author) {
        var cardInfo = new Object();
        _root.cardid += 1;
        cardInfo.author = author;
        cardInfo.id = _root.cardid;
        cardInfo.upgraded = upgraded;
        cardInfo.type = type;
        cardInfo.quanta = quanta;
        cardInfo.req = req;
        cardInfo.name = name;
        cardInfo.desc = desc;
        cardInfo.atk = atk;
        cardInfo.def = def;
        cardInfo.hp = hp;
        cardInfo.catk = catk;
        cardInfo.cdef = cdef;
        cardInfo.chp = chp;
        cardInfo.crec = crec;
        cardInfo.matk = matk;
        cardInfo.mdef = mdef;
        cardInfo.mhp = mhp;
        cardInfo.mrec = mrec;
        cardInfo.ocatk = ocatk;
        cardInfo.ocdef = ocdef;
        cardInfo.ochp = ochp;
        cardInfo.ocrec = ocrec;
        cardInfo.omatk = omatk;
        cardInfo.omdef = omdef;
        cardInfo.omhp = omhp;
        cardInfo.omrec = omrec;
        cardInfo.draw = draw;
        cardInfo.inflict = inflict;
        cardInfo.special = special;
        cardInfo.specialpow = specialpow;
        cardInfo.cost = cost;
        let i = 1;
        while (i <= 5) {
            cardInfo["pil" + i] = eval("pil" + i);
            cardInfo["opil" + i] = eval("opil" + i);
            cardInfo["ene" + i] = eval("ene" + i);
            cardInfo["oene" + i] = eval("oene" + i);
            i++;
        }
        cardInfo.freeze = freeze;
        cardList.push(cardInfo);
    }
    function addNewDeck(deckname, deckArray) {
        var _loc3_ = new Object();
        _root.deckid += 1;
        _loc3_.deckname = deckname;
        let i = 1;
        while (i <= 400) {
            _loc3_["c" + i] = 0;
            i++;
        }
        i = 0;
        while (i <= deckArray.length - 1) {
            _loc3_["c" + deckArray[i + 1]] = deckArray[i];
            i += 2;
        }
        deckList.push(_loc3_);
    }
    var cardList = [];
    _root.cardid = 0;
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 4, 1, 1, 0, "Monster", 1, 1, 100, " ", "No, not a bug.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 5, 2, 1, 1, "Monster", 1, 1, 1000, " ", "No, not a bug.", "© Tukkun");
    addNewCard(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 0, "", 1, 1, 50, "White Generator", "Get 1 white energy per turn.", "© Blackwaltz002");
    addNewCard(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 1, "", 1, 0, 500, "White Generator", "Get 1 white energy per turn.", "© Blackwaltz002");
    addNewCard(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 0, "", 2, 1, 50, "Red Generator", "Get 1 red energy per turn.", "© Blackwaltz002");
    addNewCard(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 1, "", 2, 0, 500, "Red Generator", "Get 1 red energy per turn.", "© Blackwaltz002");
    addNewCard(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 0, "", 3, 1, 50, "Yellow Generator", "Get 1 yellow energy per turn.", "© Blackwaltz002");
    addNewCard(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 1, "", 3, 0, 500, "Yellow Generator", "Get 1 yellow energy per turn.", "© Blackwaltz002");
    addNewCard(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 0, "", 4, 1, 50, "Green Generator", "Get 1 green energy per turn.", "© Blackwaltz002");
    addNewCard(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 1, "", 4, 0, 500, "Green Generator", "Get 1 green energy per turn.", "© Blackwaltz002");
    addNewCard(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 0, "", 5, 1, 50, "Blue Generator", "Get 1 blue energy per turn.", "© Blackwaltz002");
    addNewCard(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 1, "", 5, 0, 500, "Blue Generator", "Get 1 blue energy per turn.", "© Blackwaltz002");
    addNewCard(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 0, "", 1, 8, 50, "Rainbow Generator", "Get 1 energy of each color per turn.", "© Blackwaltz002");
    addNewCard(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 1, 1, 1, "", 1, 7, 500, "Rainbow Generator", "Get 1 energy of each color per turn.", "© Blackwaltz002");
    addNewCard(0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 1, 0, 50, "Instant White", "Get 4 white energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 1, 0, 500, "Instant White", "Get 5 white energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 2, 0, 50, "Instant Red", "Get 4 red energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 2, 0, 500, "Instant Red", "Get 5 red energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 3, 0, 50, "Instant Yellow", "Get 4 yellow energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 3, 0, 500, "Instant Yellow", "Get 5 yellow energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 4, 0, 50, "Instant Green", "Get 4 green energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 4, 0, 500, "Instant Green", "Get 5 green energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 5, 0, 50, "Instant Blue", "Get 4 blue energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 5, 0, 500, "Instant Blue", "Get 5 blue energy instantly.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 1, 0, 50, "Energy Charge", "Get 1 energy of each color instantly. Get 1 extra white energy.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 1, 0, 500, "Energy Supercharge", "Get 1 energy of each color instantly. Get 2 extra white energy.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "MonKill", 0, 2, 0, 1, 2, "Monster", 2, 0, 2000, "Fire Sparkle", "This monster prioritizes attacking enemy monster.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "MonKill", 0, 3, 0, 1, 3, "Monster", 2, 0, 20000, "Fire Sparkle", "This monster prioritizes attacking enemy monster.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 5, 0, 1, 0, "Monster", 2, 1, 100, "Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 7, 0, 1, 1, "Monster", 2, 1, 1000, "Elite Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", 1, 7, 0, 2, 0, "Monster", 2, 3, 125, "Red Snail", "Get 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, "Generator", 1, 7, 0, 2, 1, "Monster", 2, 3, 1250, "Fire Snail", "Get 1 energy of card color per turn. Deal 1 poison damage to your opponent.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "MonKill", 0, 6, 0, 2, 0, "Monster", 2, 6, 150, "Flying Eyeball", "This monster prioritizes attacking enemy monster.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "MonKill", 0, 10, 0, 3, 1, "Monster", 2, 7, 1500, "Dark Eyeball", "This monster prioritizes attacking enemy monster.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 9, 0, 5, 0, "Monster", 2, 6, 175, "Red Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 11, 0, 5, 1, "Monster", 2, 6, 1750, "Red Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 7, 0, 1, 0, "Monster", 2, 7, 200, "Crimson Cockatrice", "You gain 4 attack.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 9, 0, 1, 1, "Monster", 2, 7, 2000, "Crimson Cockatrice", "You gain 4 attack.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Poison", 2, 0, 0, 1, 0, "Monster", 2, 11, 250, "Flame Mosquito", "Deals 2 poison damage per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Poison", 2, 0, 0, 1, 1, "Monster", 2, 10, 2500, "Flame Mosquito", "Deals 2 poison damage per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "GrowthA", 2, 0, 0, 1, 0, "Monster", 2, 7, 250, "Imp", "This monster gains 2 attack per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "GrowthA", 2, 4, 1, 1, 1, "Monster", 2, 8, 2500, "Elite Imp", "This monster gains 2 attack per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 15, 0, 2, 0, "Monster", 2, 12, 350, "Fire Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 17, 0, 2, 1, "Monster", 2, 12, 3500, "Flame Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 11, 0, 2, 2, "Monster", 2, 4, 1000, "Fire Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 10, 0, 1, 3, "Monster", 2, 0, 10000, "Fire Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Lure", 0, 1, 3, 1, 2, "Monster", 3, 0, 2000, "Light Sparkle", "This monster takes physical damage dealt to you.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Lure", 0, 2, 4, 1, 3, "Monster", 3, 0, 20000, "Light Sparkle", "This monster takes physical damage dealt to you.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 3, 4, 2, 0, "Monster", 3, 1, 100, "Yellow Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 4, 5, 2, 1, "Monster", 3, 1, 1000, "Elite Yellow Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", 1, 5, 4, 2, 0, "Monster", 3, 3, 125, "Yellow Snail", "Get 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "Generator", 1, 5, 4, 2, 1, "Monster", 3, 3, 1250, "Golden Snail", "Get 1 energy of card color per turn. Draw a card.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Lure", 0, 2, 2, 22, 0, "Monster", 3, 6, 150, "Big Daddy", "This monster takes physical damage dealt to you.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Lure", 0, 3, 3, 27, 1, "Monster", 3, 7, 1500, "Big Daddy", "This monster takes physical damage dealt to you.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 8, 5, 7, 0, "Monster", 3, 6, 175, "Yellow Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 9, 7, 7, 1, "Monster", 3, 6, 1750, "Yellow Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Transform", 59, 0, 0, 1, 0, "Monster", 3, 4, 200, "Cog", "Turns into Clockwork Machine after 1 turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Transform", 60, 0, 0, 1, 1, "Monster", 3, 4, 2000, "Cog", "Turns into Clockwork Machine after 1 turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Rebirth", 57, 6, 2, 1, 0, "Monster", 3, 9, 250, "Clockwork Machine", "Turns into Cog when it dies.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Rebirth", 58, 7, 3, 1, 1, "Monster", 3, 9, 2500, "Clockwork Machine", "Turns into Cog when it dies.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 12, 6, 5, 0, "Monster", 3, 12, 350, "Golden Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 13, 8, 5, 1, "Monster", 3, 12, 3500, "Light Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 8, 7, 4, 2, "Monster", 3, 4, 1000, "Light Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 7, 6, 4, 3, "Monster", 3, 0, 10000, "Light Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 4, 2, "Monster", 4, 0, 2000, "Nature Sparkle", "You gain 5 HP.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 2, 0, 5, 3, "Monster", 4, 0, 20000, "Nature Sparkle", "You gain 5 HP.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 4, 0, 5, 0, "Monster", 4, 1, 100, "Green Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 5, 0, 6, 1, "Monster", 4, 1, 1000, "Elite Green Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", 1, 4, 0, 8, 0, "Monster", 4, 3, 125, "Green Snail", "Get 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", 1, 4, 0, 8, 1, "Monster", 4, 3, 1250, "Life Snail", "Get 1 energy of card color per turn. You gain 1 HP per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Poison", 1, 0, 0, 2, 0, "Monster", 4, 6, 150, "Mosquito", "This monster gains 1 HP and deals 1 poison damage per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Poison", 1, 1, 0, 4, 1, "Monster", 4, 6, 1500, "Mosquito", "This monster gains 1 HP and deals 1 poison damage per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 6, 0, 11, 0, "Monster", 4, 6, 175, "Green Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 7, 0, 13, 1, "Monster", 4, 6, 1750, "Green Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 4, 1, 4, 0, "Monster", 4, 4, 200, "Cockatrice", "You gain 1 attack.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 5, 2, 5, 1, "Monster", 4, 5, 2000, "Elite Cockatrice", "You gain 2 attack.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 6, 3, 5, 0, "Monster", 4, 9, 250, "Cockatrice King", "You gain 3 attack. Draw a card.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 7, 4, 6, 1, "Monster", 4, 9, 2500, "Cockatrice King", "You gain 3 attack. Draw a card.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Growth", 1, 5, 2, 1, 0, "Monster", 4, 7, 250, "Razor Mantis", "This monster gains 1 attack, 1 defense and 1 HP per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Growth", 1, 7, 3, 1, 1, "Monster", 4, 7, 2500, "Razor Mantis", "This monster gains 1 attack, 1 defense and 1 HP per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 11, 0, 13, 0, "Monster", 4, 12, 350, "Baby Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 12, 0, 15, 1, "Monster", 4, 12, 3500, "Forest Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 7, 1, 9, 2, "Monster", 4, 4, 1000, "Grass Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 6, 0, 9, 3, "Monster", 4, 0, 10000, "Grass Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, "", 0, 2, 0, 1, 2, "Monster", 5, 0, 2000, "Air Sparkle", "Freeze enemy monster for 1 turn when summoned.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, "", 0, 3, 1, 1, 3, "Monster", 5, 0, 20000, "Air Sparkle", "Freeze enemy monster for 1 turn when summoned.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 4, 2, 4, 0, "Monster", 5, 1, 100, "Blue Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 5, 2, 5, 1, "Monster", 5, 1, 1000, "Elite Blue Ant", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", 1, 5, 2, 5, 0, "Monster", 5, 3, 125, "Blue Snail", "Get 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, "Generator", 1, 5, 2, 5, 1, "Monster", 5, 3, 1250, "Sea Snail", "Get 1 energy of card color per turn. Freeze enemy monster for 1 turn when summoned.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 11, 1, 0, "Monster", 5, 6, 150, "Crab", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 3, 14, 1, 1, "Monster", 5, 7, 1500, "Elite Crab", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 9, 3, 4, 0, "Monster", 5, 6, 175, "Blue Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 10, 5, 4, 1, "Monster", 5, 6, 1750, "Blue Crawler", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, "", 0, 10, 2, 3, 0, "Monster", 5, 10, 200, "Arctic Crawler", "Freeze enemy monster for 2 turns when summoned.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, "", 0, 12, 2, 3, 1, "Monster", 5, 10, 2000, "Arctic Crawler", "Freeze enemy monster for 2 turns when summoned.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 12, 0, 4, 0, "Monster", 5, 8, 250, "Mini Magi", "This monster enters the game poisoned. You gain 4 HP.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 14, 0, 4, 1, "Monster", 5, 8, 2500, "Mini Magi", "This monster enters the game poisoned. You gain 6 HP.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 12, 2, 9, 0, "Monster", 5, 12, 350, "Blue Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 14, 2, 9, 1, "Monster", 5, 12, 3500, "Alien Dragon", "", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 9, 3, 4, 2, "Monster", 5, 4, 1000, "Water Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -1, 8, 3, 3, 3, "Monster", 5, 0, 10000, "Water Elemental", "Consumes 1 energy of card color per turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, "Destroy", 0, 4, 0, 1, 0, "", 2, 8, 250, "Explosion", "Kill enemy monster. Opponent loses 6 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, "Destroy", 0, 4, 0, 1, 1, "", 2, 8, 2500, "Huge Explosion", "Kill enemy monster. Opponent loses 9 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 2, 3, 125, "Fire Bolt", "Opponent loses 10 HP.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 2, 3, 1250, "Fire Bolt", "Opponent loses 12 HP.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 2, 1, 125, "Fire Arrow", "Enemy monster is poisoned for 2 damage.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 2, 0, 1250, "Fire Arrow", "Enemy monster is poisoned for 2 damage.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Sacrifice", 0, 1, 1, 1, 0, "", 2, 9, 200, "Perma-Monster", "Destroy your monster. Gain stats equal to monster stats.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Sacrifice", 0, 1, 1, 1, 1, "", 2, 8, 2000, "Perma-Monster", "Destroy your monster. Gain stats equal to monster stats.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 2, 0, 1, 0, "", 2, 3, 125, "Rage", "Your monster gains 8 attack and loses 4 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 2, 0, 1, 1, "", 2, 3, 1250, "Berserk", "Your monster gains 9 attack and loses 4 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "MonKill", 0, 2, 0, 1, 0, "", 2, 2, 125, "Target Change", "Your monster gains 2 attack and prioritizes attacking enemy monster.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "MonKill", 0, 2, 0, 1, 1, "", 2, 2, 1250, "Target Change", "Your monster gains 3 attack and prioritizes attacking enemy monster.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -11, 0, 0, 0, -1, 0, 0, 0, 0, "", 0, 2, 0, 2, 0, "", 2, 5, 200, "Meteor Rain", "Everything takes 1 damage. Your opponent loses 10 extra HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -16, 0, 0, 0, -1, 0, 0, 0, 0, "", 0, 2, 0, 2, 1, "", 2, 6, 2000, "Meteor Rain", "Everything takes 1 damage. Your opponent loses 15 extra HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "GrowthA", 4, 1, 0, 3, 0, "", 2, 6, 125, "Final Strikes", "Your monster gains 4 attack per turn but is poisoned for 2 damage.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "GrowthA", 5, 1, 0, 3, 1, "", 2, 6, 1250, "Final Strikes", "Your monster gains 5 attack per turn but is poisoned for 2 damage.", "© CoCollect");
    addNewCard(1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 2, 6, 150, "Energy Upclash", "Gain 1 Generator of each color except red.", "© CoCollect");
    addNewCard(1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 2, 6, 1500, "Energy Upclash", "Gain 1 Generator and 1 energy of each color except red.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, "", 0, 5, 0, 1, 2, "", 2, 22, 2000, "Inferno", "Deal 25 additional physical damage this turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, "", 0, 6, 0, 1, 3, "", 2, 25, 20000, "Elite Inferno", "Deal 35 additional physical damage this turn.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "Destroy", 0, 3, 2, 1, 0, "", 3, 8, 250, "Overkill", "Kill enemy monster. Draw a card.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "Destroy", 0, 3, 2, 1, 1, "", 3, 7, 2500, "Overkill", "Kill enemy monster. Draw a card.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, -2, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 3, 3, 125, "Lightning", "Opponent loses 4 HP. Enemy monster loses 2 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, -2, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 3, 3, 1250, "Lightning", "Opponent loses 6 HP. Enemy monster loses 2 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, -1, 0, 0, 0, 0, "", 0, 2, 0, 1, 0, "", 3, 1, 125, "Thunderbolt", "Both players lose 8 HP. Enemy monster loses 1 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, -2, 0, 0, 0, 0, "", 0, 2, 0, 1, 1, "", 3, 1, 1250, "Thunderbolt", "Both players lose 8 HP. Enemy monster loses 2 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, "", 0, 0, 1, 1, 0, "", 3, 4, 200, "Time Warp", "Draw 2 cards.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, "", 0, 0, 1, 1, 1, "", 3, 3, 2000, "Time Warp", "Draw 2 cards.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 3, 1, 125, "Hide", "Your monster gains 7 defense and loses 3 attack.", "© Blackwaltz002");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 3, 1, 1250, "Hide", "Your monster gains 8 defense and loses 2 attack.", "© Blackwaltz002");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Lure", 0, 0, 0, 9, 0, "", 3, 2, 125, "Lure", "Your monster gains 3 defense and takes physical damage dealt to you.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Lure", 0, 0, 0, 9, 1, "", 3, 2, 1250, "Lure", "Your monster gains 5 defense and takes physical damage dealt to you.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Transform", 0, 1, 0, 1, 0, "", 3, 0, 125, "Transform", "Your monster turns into something else after 1 turn.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Transform", 0, 1, 0, 1, 1, "", 3, 0, 1250, "Transform", "Your monster turns into something else after 1 turn. You gain 1 defense.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 3, 2, 200, "Weaken", "Your opponent loses 1 attack. Enemy monster loses 5 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 3, 2, 2000, "Weaken", "Your opponent loses 2 attack. Enemy monster loses 6 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, "", 0, 0, 1, 1, 0, "", 3, 1, 150, "Time Freeze", "Freeze enemy monster for 1 turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, "", 0, 0, 1, 1, 1, "", 3, 0, 1500, "Time Freeze", "Freeze enemy monster for 1 turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, "", 0, 2, 3, 1, 2, "", 3, 15, 2000, "Dream Book", "Draw cards until your hand is full, one of which costs no energy.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, "", 0, 3, 3, 1, 3, "", 3, 13, 20000, "Dream Book", "Draw cards until your hand is full, one of which costs no energy.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Absorb", 0, 2, 0, 3, 0, "", 4, 8, 250, "Twister", "Kill enemy monster and absorb HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Absorb", 0, 2, 0, 3, 1, "", 4, 7, 2500, "Twister", "Kill enemy monster and absorb HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 4, 3, 125, "Magic Bolt", "Opponent loses 7 HP. You gain 7 HP.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 4, 3, 1250, "Magic Bolt", "Opponent loses 8 HP. You gain 8 HP.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 4, 5, 125, "Poison Arrow", "Deal 2 poison damage to your opponent.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 4, 6, 1250, "Poison Arrow", "Deal 3 poison damage to your opponent.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 4, 5, 125, "Heal", "Gain 15 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 4, 6, 1250, "Greater Heal", "Gain 20 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 4, 5, 200, "Regeneration", "You gain 2 HP per turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 4, 7, 2000, "Regeneration", "You gain 3 HP per turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 4, 4, 125, "Blessing", "Your monster gains 4 attack and 2 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 4, 4, 1250, "Improved Blessing", "Your monster gains 5 attack and 3 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Rebirth", 0, 0, 0, 1, 0, "", 4, 1, 125, "Rebirth", "Your monster turns into something else when it dies. You gain 2 HP.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Rebirth", 0, 0, 0, 1, 1, "", 4, 1, 1250, "Rebirth", "Your monster turns into something else when it dies. You gain 4 HP.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, -7, 0, 0, 0, 0, 0, "", 0, 0, 2, 1, 0, "", 4, 1, 125, "Shield Break", "Your opponent and enemy monster lose 7 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, -8, 0, 0, 0, 0, 0, "", 0, 0, 2, 1, 1, "", 4, 1, 1250, "Shield Break", "Your opponent and enemy monster lose 8 defense.", "© CoCollect");
    addNewCard(-3, -3, -3, 0, -3, 0, 0, 0, 0, 0, -3, -3, -3, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 2, 0, 1, 0, "", 4, 8, 200, "Green World", "Both players lose 3 Generators of each color except green.", "© CoCollect");
    addNewCard(-3, -3, -3, 0, -3, 0, 0, 0, 0, 0, -3, -3, -3, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 2, 0, 1, 1, "", 4, 7, 2000, "Green World", "Both players lose 3 Generators of each color except green.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, -15, -15, -15, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 4, 2, "", 4, 27, 2000, "Energy Heal", "Lose up to 15 energy of each color except green. Gain 45 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, -12, -12, -12, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 4, 3, "", 4, 30, 20000, "Energy Heal", "Lose up to 12 energy of each color except green. Gain 50 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Absorb", 0, 3, 1, 1, 0, "", 5, 9, 250, "Flood", "Kill enemy monster and absorb HP. Gain 6 additional HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Absorb", 0, 3, 1, 1, 1, "", 5, 9, 2500, "Flood", "Kill enemy monster and absorb HP. Gain 9 additional HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 1, "", 0, 1, 0, 1, 0, "", 5, 3, 125, "Ice Bolt", "Enemy monster loses 2 HP and is frozen for 1 turn.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 1, "", 0, 1, 0, 1, 1, "", 5, 3, 1250, "Ice Bolt", "Enemy monster loses 3 HP and is frozen for 1 turn.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, "", 0, 1, 0, 1, 0, "", 5, 3, 125, "Freeze", "Freeze enemy monster for 3 turns.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, "", 0, 1, 0, 1, 1, "", 5, 3, 1250, "Freeze", "Freeze enemy monster for 4 turns.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "NoSkill", 0, 1, 0, 1, 0, "", 5, 1, 125, "Forget", "Enemy monster loses its special ability.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, "NoSkill", 0, 1, 0, 1, 1, "", 5, 1, 1250, "Forget", "Enemy monster loses 1 attack and its special ability.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Growth", 1, 1, 0, 1, 0, "", 5, 4, 200, "Growth Power", "Your monster gains 1 attack and 1 defense per turn.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Growth", 1, 1, 0, 1, 1, "", 5, 3, 2000, "Growth Power", "Your monster gains 1 attack and 1 defense per turn.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Mutate", 0, 1, 0, 1, 0, "", 5, 0, 125, "Mutate", "Turn your monster into something else.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Mutate", 0, 1, 0, 1, 1, "", 5, 0, 1250, "Mutate", "Turn your monster into something else. You gain 1 attack.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", 3, 1, 0, 1, 0, "", 5, 1, 125, "Energy Monster", "Your monster gives 3 energy of monster color per turn and gains 1 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", 4, 1, 0, 1, 1, "", 5, 1, 1250, "Energy Monster", "Your monster gives 4 energy of monster color per turn and gains 2 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, -7, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 5, 3, 125, "Monster Break", "Enemy monster loses 8 attack and 7 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, -8, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 5, 3, 1250, "Monster Break", "Enemy monster loses 9 attack and 8 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -20, -20, 0, 0, 0, 0, 0, 0, -20, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 0, "", 5, 6, 200, "Stat Wipeout", "Both players lose 20 attack and defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -20, -20, 0, 0, 0, 0, 0, 0, -20, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 1, "", 5, 5, 2000, "Stat Wipeout", "Both players lose 20 attack and defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 2, "", 5, 16, 2000, "Holy Symbol", "Gain 18 HP, 3 attack and 3 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 1, 0, 1, 3, "", 5, 14, 20000, "Holy Symbol", "Gain 18 HP, 3 attack and 3 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 2, 5, 150, "Powerup", "You and your monster gain 3 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 2, 6, 1500, "Powerup", "You and your monster gain 4 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, -1, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 2, 2, 125, "Flaming Arrow", "Deal 1 poison damage to your opponent. Your opponent loses 3 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, -1, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 2, 1, 1250, "Flaming Arrow", "Deal 1 poison damage to your opponent. Your opponent loses 3 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, -10, 0, 0, 0, -10, 0, 0, 0, -10, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 3, 4, 150, "Epicbolt", "Everything takes 10 damage.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, -10, 0, 0, 0, -10, 0, 0, 0, -10, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 3, 3, 1500, "Epicbolt", "Everything takes 10 damage.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -35, 0, 0, 0, 0, 0, 0, 0, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 3, 2, 125, "Defense Removal", "You lose 35 defense. Opponent loses 20 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -35, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 3, 2, 1250, "Defense Removal", "You lose 35 defense. Opponent loses 30 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 4, 3, 150, "Monster Heal", "Your monster gains 3 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 4, 4, 1500, "Monster Heal", "Your monster gains 5 HP.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 4, 1, 150, "Match Delay", "Both you and your opponent gain 2 HP per turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 4, 0, 1500, "Match Delay", "Both you and your opponent gain 2 HP per turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, -2, 0, 0, 0, 0, "NoSkill", 0, 0, 0, 1, 0, "", 5, 5, 150, "Blue Lightning", "Your opponent loses 4 HP. Enemy monster loses 2 HP and its special ability.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, -2, 0, 0, 0, 0, "NoSkill", 0, 0, 0, 1, 1, "", 5, 5, 1500, "Blue Lightning", "Your opponent loses 6 HP. Enemy monster loses 2 HP and its special ability.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, "", 0, 0, 0, 1, 0, "", 5, 6, 150, "Permafreeze", "Freeze enemy monster for 20 turns.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, "", 0, 0, 0, 1, 1, "", 5, 5, 1500, "Permafreeze", "Freeze enemy monster for 20 turns.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 4, 9, 1, 0, "Monster", 1, 6, 150, "Invisible Zebra", "", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 6, 9, 1, 1, "Monster", 1, 6, 1500, "Invisible Zebra", "", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 9, 1, 7, 0, "Monster", 1, 9, 200, "Invisible Giraffe", "", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 10, 1, 9, 1, "Monster", 1, 9, 2000, "Invisible Giraffe", "", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 12, 9, 3, 0, "Monster", 1, 13, 350, "Invisible Dragon", "", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 14, 9, 3, 1, "Monster", 1, 13, 3500, "Invisible Dragon", "", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 1, 2, 250, "Dagger", "You gain 2 attack.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 1, 3, 2500, "Blade", "You gain 4 attack.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, "", 0, 0, 0, 1, 0, "", 1, 7, 350, "Silver Sword", "You gain 4 attack. Deal 7 more damage the turn you play this.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, "", 0, 0, 0, 1, 1, "", 1, 8, 3500, "Golden Sword", "You gain 5 attack. Deal 10 more damage the turn you play this.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 2, "", 1, 10, 3000, "Epic Sword", "You gain 7 attack.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 3, "", 1, 11, 30000, "Epic Sword", "You gain 9 attack.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 1, 6, 150, "Attack UP", "Your monster gains 7 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 1, 6, 1500, "Attack UP", "Your monster gains 8 attack.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 1, 6, 150, "Defense UP", "You gain 3 defense. Your monster gains 7 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 1, 6, 1500, "Defense UP", "You gain 4 defense. Your monster gains 8 defense.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 2, 6, 350, "Flaming Sword", "You gain 3 attack. Deal 1 poison damage.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 2, 7, 3500, "Flaming Sword", "You gain 5 attack. Deal 1 poison damage.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 0, 0, 1, 0, "", 3, 6, 350, "Dagger of Time", "You gain 2 attack. Draw a card.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 0, 0, 1, 1, "", 3, 7, 3500, "Blade of Time", "You gain 4 attack. Draw a card.", "© lobstershow");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 4, 6, 350, "Magic Wand", "You gain 2 attack. Gain 1 HP per turn.", "© Parsee");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 4, 7, 3500, "Magic Wand", "You gain 4 attack. Gain 1 HP per turn.", "© Parsee");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, "", 0, 0, 0, 1, 0, "", 5, 6, 350, "Frozen Sword", "You gain 2 attack. Freeze enemy monster for 2 turns.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, "", 0, 0, 0, 1, 1, "", 5, 7, 3500, "Frozen Sword", "You gain 4 attack. Freeze enemy monster for 2 turns.", "© Chatturgha");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Poison", 1, 8, 0, 2, 0, "Monster", 2, 5, 250, "Red Hydra", "This monster enters the game poisoned. Deals 1 poison damage per turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Poison", 1, 8, 0, 3, 1, "Monster", 2, 5, 2500, "Red Hydra", "This monster enters the game poisoned. Deals 1 poison damage per turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Transform", 0, 9, 3, 3, 0, "Monster", 3, 5, 250, "Yellow Hydra", "This monster turns into something else after 1 turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Transform", 0, 12, 3, 3, 1, "Monster", 3, 5, 2500, "Yellow Hydra", "This monster turns into something else after 1 turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 5, 0, 5, 0, "Monster", 4, 5, 250, "Green Hydra", "This monster gains 1 HP per turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 7, 0, 5, 1, "Monster", 4, 5, 2500, "Green Hydra", "This monster gains 1 HP per turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "GrowthD", 3, 5, 6, 1, 0, "Monster", 5, 5, 250, "Blue Hydra", "This monster gains 3 defense per turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "GrowthD", 3, 7, 6, 1, 1, "Monster", 5, 5, 2500, "Blue Hydra", "This monster gains 3 defense per turn.", "© Pika2346");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -4, 14, 0, 1, 2, "Monster", 1, 1, Infinity, "Awesome Face", "Consumes 4 energy of card color per turn. Poisoned.", "Special Edition");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Generator", -4, 16, 0, 1, 3, "Monster", 1, 1, Infinity, "Awesome Face", "Consumes 4 energy of card color per turn. Poisoned.", "Special Edition");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Unfreeze", 0, 0, 0, 1, 2, "", 2, 1, 3000, "Anti-Freeze", "Your monster is no longer frozen.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Unfreeze", 0, 0, 0, 1, 3, "", 2, 0, 30000, "Anti-Freeze", "Your monster is no longer frozen.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Antidote", 0, 0, 0, 1, 2, "", 4, 2, 3000, "Cure", "Removes poison/regen status from yourself.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Antidote", 0, 0, 0, 1, 3, "", 4, 1, 30000, "Cure", "Removes poison/regen status from yourself.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Zombify", 0, 0, 0, 1, 2, "", 5, 9, 3000, "Zombify", "Your opponent loses half of its regen stat rounded down. Deal 2 poison damage.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "Zombify", 0, 0, 0, 1, 3, "", 5, 8, 30000, "Zombify", "Your opponent loses half of its regen stat rounded down. Deal 2 poison damage.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, "", 0, 0, 0, 1, 2, "", 3, 2, 3000, "Golden Arrow", "Deal 10 additional physical damage this turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, "", 0, 0, 0, 1, 3, "", 3, 1, 30000, "Golden Arrow", "Deal 10 additional physical damage this turn.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 4, 2, 200, "Poison Heal", "Gain 30 HP. Deal 10 poison damage to yourself.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 4, 1, 2000, "Poison Heal", "Gain 30 HP. Deal 10 poison damage to yourself.", "© CoCollect");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 0, "", 2, 4, 200, "Attack Removal", "You lose 30 attack. Opponent loses 15 attack.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", 0, 0, 0, 1, 1, "", 2, 4, 2000, "Attack Removal", "You lose 30 attack. Opponent loses 25 attack.", "© Tukkun");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 0, 1, 1, 2, "", 1, 25, Infinity, "Code Fu", "Search your mind for a card and add it to your hand.", "Special Edition");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 0, 1, 1, 3, "", 1, 22, Infinity, "Code Fu", "Search your mind for a card and add it to your hand.", "Special Edition");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 0, 1, 1, 2, "", 1, 4, Infinity, "Mystery Card", "Add a random upgraded card to your hand. That card costs no energy.", "Special Edition");
    addNewCard(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, "", 0, 0, 1, 1, 3, "", 1, 3, Infinity, "Mystery Card", "Add a random upgraded card to your hand. That card costs no energy.", "Special Edition");
    var deckList = [];
    _root.deckid = 0;
    addNewDeck("Newbie", [2, 3, 5, 5, 5, 7, 5, 9, 5, 11, 1, 13, 2, 29, 1, 33, 1, 35, 2, 49, 1, 51, 1, 53, 1, 55, 2, 67, 1, 69, 1, 71, 1, 73, 2, 87, 1, 89, 1, 91, 1, 93, 1, 105, 1, 109, 1, 125, 1, 129, 1, 147, 1, 149, 1, 167, 1, 175]);
    addNewDeck("Mirror Match", [4, 43, 2, 44, 2, 45, 1, 46, 4, 61, 2, 62, 2, 63, 1, 64, 4, 81, 2, 82, 2, 83, 1, 84, 4, 99, 2, 100, 2, 101, 1, 102, 1, 104, 2, 121, 1, 122, 1, 124, 2, 141, 1, 142, 1, 144, 2, 161, 1, 162, 1, 164, 2, 181, 1, 182, 2, 203, 1, 204, 2, 205, 1, 206, 2, 207, 1, 208, 2, 209, 1, 210, 2, 215, 1, 216, 2, 217, 1, 218, 2, 219, 1, 220, 2, 221, 1, 222, 2, 231, 1, 232, 2, 233, 1, 234, 2, 235, 1, 236, 2, 237, 1, 238, 2, 239, 1, 240, 2, 241, 1, 242, 2, 245, 1, 246, 2, 247, 1, 248]);
    addNewDeck("Level 3 (White)", [1, 1, 9, 3, 1, 13, 5, 15, 5, 25, 1, 109, 1, 123, 1, 147, 1, 195, 5, 199, 3, 201, 2, 203, 5, 205, 3, 207, 2, 209, 3, 211, 2, 213]);
    addNewDeck("Level 3 (Red)", [9, 5, 5, 17, 1, 27, 1, 29, 1, 31, 1, 33, 1, 35, 1, 37, 1, 39, 1, 41, 1, 43, 1, 45, 2, 103, 2, 105, 2, 107, 5, 109, 1, 111, 2, 113, 2, 115, 1, 117, 1, 121, 1, 183, 1, 185, 2, 215, 1, 223, 1, 233, 2, 243]);
    addNewDeck("Level 3 (Yellow)", [9, 7, 5, 19, 1, 47, 1, 49, 1, 51, 1, 53, 1, 55, 1, 57, 1, 59, 1, 61, 1, 63, 2, 123, 2, 125, 2, 127, 5, 129, 1, 131, 2, 133, 2, 135, 2, 137, 2, 139, 1, 141, 2, 187, 1, 189, 1, 217, 1, 225, 1, 239]);
    addNewDeck("Level 3 (Green)", [9, 9, 5, 21, 1, 65, 1, 67, 1, 69, 1, 71, 1, 73, 1, 75, 1, 77, 1, 79, 1, 81, 1, 83, 2, 143, 2, 145, 2, 147, 2, 149, 2, 151, 2, 153, 2, 155, 1, 157, 1, 159, 1, 161, 2, 191, 2, 193, 2, 219, 1, 227, 1, 235, 1, 241]);
    addNewDeck("Level 3 (Blue)", [9, 11, 5, 23, 1, 85, 1, 87, 1, 89, 1, 91, 1, 93, 1, 95, 1, 97, 1, 99, 1, 101, 2, 163, 2, 165, 2, 167, 2, 169, 2, 171, 2, 173, 2, 175, 2, 177, 2, 179, 1, 181, 2, 195, 2, 197, 2, 221, 1, 229, 1, 237]);
    addNewDeck("Level 4 (White)", [1, 2, 9, 4, 1, 14, 5, 16, 5, 26, 1, 110, 1, 124, 1, 148, 1, 196, 5, 200, 3, 202, 2, 204, 5, 206, 3, 208, 2, 210, 3, 212, 2, 214]);
    addNewDeck("Level 4 (Red)", [9, 6, 5, 18, 1, 28, 1, 30, 1, 32, 1, 34, 1, 36, 1, 38, 1, 40, 1, 42, 1, 44, 1, 46, 2, 104, 2, 106, 2, 108, 5, 110, 1, 112, 2, 114, 2, 116, 1, 118, 1, 122, 1, 184, 1, 186, 2, 216, 1, 224, 1, 234, 2, 244]);
    addNewDeck("Level 4 (Yellow)", [9, 8, 5, 20, 1, 48, 1, 50, 1, 52, 1, 54, 1, 56, 1, 58, 1, 60, 1, 62, 1, 64, 2, 124, 2, 126, 2, 128, 5, 130, 1, 132, 2, 134, 2, 136, 2, 138, 2, 140, 1, 142, 2, 188, 1, 190, 1, 218, 1, 226, 1, 240]);
    addNewDeck("Level 4 (Green)", [9, 10, 5, 22, 1, 66, 1, 68, 1, 70, 1, 72, 1, 74, 1, 76, 1, 78, 1, 80, 1, 82, 1, 84, 2, 144, 2, 146, 2, 148, 2, 150, 2, 152, 2, 154, 2, 156, 1, 158, 1, 160, 1, 162, 2, 192, 2, 194, 2, 220, 1, 228, 1, 236, 1, 242]);
    addNewDeck("Level 4 (Blue)", [9, 12, 5, 24, 1, 86, 1, 88, 1, 90, 1, 92, 1, 94, 1, 98, 1, 100, 1, 102, 2, 164, 2, 166, 2, 168, 2, 170, 2, 172, 2, 174, 2, 176, 2, 178, 2, 180, 1, 182, 2, 196, 2, 198, 2, 222, 1, 230, 1, 238]);
    addNewDeck("Meteor", [8, 18, 3, 104, 7, 106, 7, 116, 1, 122, 6, 130]);
    addNewDeck("Pyro", [10, 6, 7, 44, 2, 104, 7, 110, 2, 142, 7, 216]);
    addNewDeck("Fate", [2, 18, 7, 102, 4, 110, 5, 130, 5, 136, 4, 156, 7, 174, 1, 248]);
    addNewDeck("Immortal", [7, 6, 4, 12, 2, 44, 7, 92, 7, 110, 1, 124, 1, 144, 3, 184]);
    addNewDeck("Clockwork", [6, 6, 9, 20, 4, 60, 7, 110, 3, 128, 3, 130]);
    addNewDeck("Nightmare", [4, 6, 10, 8, 6, 116, 4, 126, 7, 130, 7, 142, 4, 190, 7, 218]);
    addNewDeck("Infinity", [9, 8, 5, 54, 3, 112, 1, 116, 7, 130, 7, 132, 7, 218, 1, 236]);
    addNewDeck("Morto", [5, 6, 7, 10, 2, 40, 3, 108, 7, 148, 7, 152, 5, 186, 7, 216, 2, 244]);
    addNewDeck("Pyria", [7, 18, 3, 20, 2, 46, 2, 64, 2, 84, 2, 102, 7, 110, 3, 126, 7, 130]);
    addNewDeck("Zeal", [12, 10, 1, 74, 3, 82, 3, 130, 4, 144, 7, 150, 7, 152, 1, 158, 3, 160, 4, 162, 4, 220, 1, 236]);
    addNewDeck("Final Snail", [4, 10, 10, 18, 7, 70, 7, 110, 7, 118, 2, 126, 7, 192, 1, 198]);
    addNewDeck("Frosty", [10, 12, 7, 96, 1, 164, 5, 166, 2, 168, 2, 180, 1, 196, 3, 198, 7, 222, 1, 236, 1, 238]);
    addNewDeck("Inferno", [16, 6, 7, 122, 7, 130, 1, 144, 3, 180, 1, 238]);
    addNewDeck("Disaster", [6, 6, 5, 12, 2, 100, 7, 116, 2, 122, 6, 126, 1, 128, 7, 130, 1, 164, 3, 180, 4, 196, 1, 238]);
    addNewDeck("Hygra", [6, 8, 2, 14, 3, 110, 2, 124, 7, 130, 1, 158, 4, 172, 7, 226, 7, 240]);
    addNewDeck("Magi", [5, 6, 3, 14, 7, 98, 1, 106, 3, 110, 7, 120, 1, 124, 5, 126, 7, 130, 2, 142, 2, 144, 5, 146, 2, 182, 2, 190, 1, 210, 7, 220]);
    addNewDeck("Naturage", [9, 10, 3, 74, 3, 82, 7, 112, 7, 130, 2, 144, 2, 146, 2, 160, 3, 180, 3, 212, 1, 238]);
    addNewDeck("Yolo", [6, 14, 7, 116, 5, 128, 7, 130, 3, 148, 2, 180, 2, 182, 7, 188, 3, 236, 1, 238, 7, 242, 2, 248]);
    addNewDeck("Regiment", [6, 6, 3, 26, 2, 78, 2, 98, 5, 110, 4, 130, 1, 190, 2, 200]);
    addNewDeck("Armoria", [3, 4, 3, 8, 7, 14, 7, 16, 5, 130, 5, 206, 7, 208, 3, 210, 5, 216, 5, 218, 5, 220, 5, 222]);
    addNewDeck("Arrowhell", [3, 10, 1, 42, 7, 108, 7, 130, 7, 148, 2, 180, 7, 186, 1, 236, 7, 240]);
    addNewDeck("Harmonia", [9, 14, 2, 44, 2, 62, 2, 82, 2, 100, 4, 110, 2, 122, 3, 124, 5, 130, 2, 142, 2, 150, 2, 162, 2, 172, 2, 180, 2, 182, 1, 190, 2, 198, 2, 218, 3, 232, 2, 236, 1, 238, 1, 244]);
    addNewDeck("Buffbot", [7, 14, 6, 16, 6, 18, 3, 20, 6, 22, 3, 42, 3, 54, 3, 80, 3, 92, 7, 110, 5, 130, 4, 154, 4, 184, 3, 192, 4, 212, 4, 214]);
    addNewDeck("Relentless", [7, 14, 3, 16, 2, 54, 1, 60, 2, 78, 1, 92, 1, 96, 1, 100, 7, 110, 1, 124, 1, 130, 2, 142, 1, 144, 2, 150, 1, 164, 1, 180, 2, 182, 2, 204, 2, 218, 1, 238, 1, 248]);
    addNewDeck("Toxic", [1, 14, 2, 16, 1, 18, 2, 20, 4, 22, 1, 108, 7, 130, 7, 148, 2, 166, 1, 180, 2, 192, 1, 210, 1, 216, 3, 224]);
    addNewDeck("Avatar", [7, 14, 2, 44, 3, 100, 2, 104, 5, 116, 7, 130, 6, 148, 1, 182, 3, 206, 2, 216, 5, 218, 3, 236, 3, 244]);
    addNewDeck("Toy Maker", [4, 20, 5, 60, 7, 130, 4, 144, 5, 180, 5, 184, 4, 212, 3, 234, 3, 236, 1, 238]);
    addNewDeck("Bahumut", [7, 22, 4, 82, 7, 112, 7, 130, 3, 164, 3, 234]);
    addNewDeck("Basilisk", [5, 14, 7, 78, 3, 112, 7, 130, 6, 182, 7, 184]);
    addNewDeck("Titan", [8, 14, 7, 92, 7, 110, 1, 124, 2, 126, 1, 128, 7, 130, 2, 150, 5, 152, 3, 182, 3, 208, 2, 210]);
    addNewDeck("Mana-Fountain", [8, 6, 4, 110, 7, 120, 7, 130, 3, 142, 7, 148, 7, 182, 5, 204, 3, 236, 1, 238]);
    addNewDeck("Dante", [17, 6, 4, 40, 4, 104, 7, 122, 7, 130, 1, 142, 3, 180]);
    addNewDeck("Hells Gate", [10, 6, 7, 42, 4, 104, 3, 122, 7, 130, 2, 150, 5, 180, 4, 184, 2, 212, 3, 236]);
    addNewDeck("Schizophrenia", [7, 4, 5, 16, 4, 18, 7, 110, 7, 130, 7, 204, 3, 236, 2, 246]);
    addNewDeck("Dragoon", [5, 82, 4, 112, 7, 142, 3, 158, 7, 182, 4, 184, 7, 232]);
    addNewDeck("Shinki", [4, 18, 9, 20, 4, 122, 6, 142, 1, 164, 2, 226, 1, 246]);
    addNewDeck("Devi", [7, 14, 3, 42, 2, 122, 2, 142, 7, 144, 4, 180, 5, 182, 2, 208, 2, 210, 5, 218]);
    addNewDeck("Benediction", [2, 122, 3, 124, 7, 130, 4, 180, 7, 192, 7, 232, 3, 236]);
    addNewDeck("Gaia", [6, 83, 5, 112, 3, 142, 4, 164, 4, 184, 6, 212, 2, 234]);
    addNewDeck("Messiah", [5, 12, 5, 116, 2, 122, 5, 142, 5, 152, 3, 164, 7, 182, 3, 204, 3, 236]);
    addNewDeck("Rainbow", [17, 14, 17, 16, 7, 116, 7, 122, 7, 130, 7, 142, 7, 148, 7, 152, 5, 180, 7, 182, 7, 218, 5, 246]);
    addNewDeck("Calamity", [20, 14, 5, 40, 7, 122, 3, 124, 7, 142, 6, 162, 5, 164, 5, 180, 7, 182]);
    addNewDeck("Chronos", [4, 60, 7, 116, 7, 128, 7, 130, 7, 150, 3, 182, 2, 188, 2, 236, 5, 244, 1, 246]);
    addNewDeck("Shiva", [5, 4, 7, 8, 7, 130, 2, 142, 2, 150, 3, 158, 7, 208, 5, 218, 7, 240]);
    addNewDeck("Ambiguity", [1, 14, 6, 26, 4, 148, 3, 216, 5, 226, 1, 246, 7, 248]);
    addNewDeck("Poseidon", [17, 12, 7, 94, 6, 100, 7, 130, 2, 142, 7, 164, 7, 180, 7, 182, 7, 184, 7, 212, 4, 236]);
    addNewDeck("Myriad", [2, 100, 7, 106, 1, 112, 7, 130, 4, 148, 1, 190, 3, 208]);
    addNewDeck("Momentum", [7, 14, 7, 78, 4, 110, 4, 112, 1, 124, 7, 130, 1, 142, 1, 144, 5, 182, 4, 184, 4, 212, 4, 218, 1, 238]);
    addNewDeck("LOLsnails", [5, 90, 2, 110, 2, 112, 7, 130, 5, 154, 1, 164, 2, 184, 5, 212]);
    addNewDeck("Apocalypse", [12, 8, 7, 116, 7, 130, 4, 142, 7, 188, 7, 218, 1, 238]);
    addNewDeck("Legion", [6, 16, 1, 82, 1, 100, 1, 122, 7, 130, 1, 190, 7, 208, 1, 238]);
    addNewDeck("Rampant", [7, 6, 7, 74, 3, 83, 5, 110, 7, 112, 7, 130, 2, 142, 2, 164, 7, 184, 2, 190, 7, 212]);
    addNewDeck("Blitz", [7, 106, 7, 130, 2, 180, 2, 192, 1, 196, 7, 232]);
    addNewDeck("Lernaean", [4, 4, 4, 8, 6, 156, 2, 166, 1, 198, 7, 212, 7, 226, 2, 244]);
    addNewDeck("Timmy", [13, 14, 5, 16, 9, 26, 7, 78, 7, 104, 7, 130, 7, 142, 2, 158, 7, 182, 7, 216, 7, 220, 5, 222, 2, 246]);
    addNewDeck("Mantodea", [10, 10, 5, 18, 7, 80, 7, 110, 5, 144, 5, 148, 5, 154, 3, 158, 3, 160, 5, 220]);
    addNewDeck("Tukkun", [7, 4, 7, 16, 10, 110, 1, 122, 5, 142, 1, 162, 2, 182, 3, 192, 12, 232, 1, 236, 1, 238, 7, 246, 7, 248]);
    addNewDeck("tenco1", [15, 10, 2, 12, 1, 22, 5, 71, 2, 144, 3, 147, 2, 148, 2, 149, 3, 150, 2, 151, 3, 152, 1, 160, 5, 180]);
    addNewDeck("tenco1", [1, 3, 5, 6, 5, 10, 5, 12, 5, 14, 10, 16, 20, 26, 7, 42, 7, 80, 7, 110, 7, 150, 7, 172, 7, 180, 7, 228]);
    addNewDeck("Sturmfeder", [10, 10, 3, 12, 4, 21, 5, 71, 1, 82, 1, 102, 2, 144, 5, 146, 4, 147, 2, 148, 3, 149, 2, 150, 5, 152, 3, 180]);
    addNewDeck("justinkal", [10, 4, 8, 14, 1, 33, 1, 52, 2, 53, 1, 56, 1, 60, 1, 71, 1, 78, 1, 90, 2, 91, 1, 94, 1, 100, 5, 110, 1, 116, 2, 125, 3, 130, 1, 142, 2, 147, 2, 150, 1, 151, 1, 166, 2, 168, 1, 172, 2, 204, 1, 207, 1, 221]);
    addNewDeck("missingno", [7, 6, 10, 8, 4, 18, 4, 20, 7, 58, 3, 60, 1, 104, 7, 110, 1, 116, 1, 124, 1, 126, 5, 130, 1, 183, 1, 194, 1, 216, 5, 218, 1, 232, 1, 236, 1, 244]);
    addNewDeck("ChaosII7", [5, 6, 8, 8, 1, 14, 2, 18, 3, 20, 1, 58, 5, 60, 7, 110, 1, 124, 7, 130, 1, 142, 2, 150, 1, 236, 1, 238]);
    addNewDeck("Motztante", [13, 6, 11, 8, 2, 38, 7, 54, 3, 104, 5, 110, 4, 118, 2, 120, 4, 124, 3, 132, 4, 152, 3, 180, 3, 184]);
    addNewDeck("Vexsloth", [4, 3, 2, 4, 4, 5, 3, 6, 5, 7, 2, 8, 1, 31, 1, 32, 1, 37, 1, 38, 1, 52, 1, 55, 1, 58, 2, 103, 1, 104, 1, 105, 1, 106, 2, 107, 1, 123, 1, 124, 1, 125, 2, 129, 2, 130, 1, 137, 1, 138, 1, 142, 4, 183, 1, 199, 1, 200, 1, 201, 1, 205, 1, 206, 2, 212, 2, 216, 2, 218, 1, 223, 1, 224, 2, 225, 1, 243]);
    addNewDeck("jakxkidney", [2, 3, 1, 4, 6, 5, 6, 6, 1, 13, 1, 14, 5, 17, 1, 33, 2, 35, 1, 36, 2, 44, 5, 105, 3, 109, 1, 125, 1, 129, 2, 147, 2, 149, 1, 175, 5, 183, 5, 185, 1, 199, 5, 215]);
    addNewDeck("DragonArcherZ", [10, 6, 5, 18, 3, 30, 2, 32, 2, 36, 3, 44, 3, 106, 3, 110, 2, 184, 2, 216]);
    addNewDeck("figter2000", [1, 6, 16, 10, 7, 12, 1, 44, 2, 78, 2, 82, 3, 100, 3, 110, 4, 130, 2, 144, 7, 148, 4, 150, 7, 152, 3, 164, 4, 180, 4, 182, 2, 186, 1, 236, 3, 244]);
    addNewDeck("39kk9t", [1, 3, 2, 4, 1, 5, 2, 6, 3, 7, 3, 10, 1, 11, 2, 12, 1, 13, 1, 14, 1, 16, 1, 18, 1, 33, 1, 39, 1, 41, 1, 53, 1, 58, 1, 63, 1, 64, 1, 71, 2, 80, 1, 105, 1, 109, 1, 116, 1, 125, 1, 129, 1, 130, 1, 132, 1, 144, 1, 147, 1, 149, 6, 151, 1, 152, 2, 154, 1, 166, 1, 167, 1, 172, 1, 175, 1, 184, 1, 188, 1, 206, 1, 212]);
    addNewDeck("soultaker7777", [9, 6, 1, 102, 7, 106, 7, 116, 1, 243, 1, 244]);
    addNewDeck("SaintSpirit", [8, 8, 8, 10, 4, 12, 2, 54, 2, 60, 2, 62, 2, 72, 2, 97, 2, 124, 4, 142, 2, 144, 4, 148, 3, 150, 3, 152, 4, 180, 4, 188, 2, 236, 2, 238]);
    addNewDeck("Tsunoflare", [3, 4, 12, 10, 3, 14, 3, 16, 10, 22, 1, 43, 1, 62, 4, 68, 1, 70, 2, 74, 1, 78, 1, 80, 1, 81, 1, 100, 1, 103, 3, 109, 2, 113, 2, 125, 3, 130, 5, 144, 5, 147, 4, 149, 2, 151, 3, 153, 1, 155, 1, 157, 1, 160, 3, 167, 2, 171, 3, 179, 1, 195, 1, 201, 3, 207, 1, 219, 2, 243]);
    addNewDeck("vincenthi135799", [14, 21, 2, 71, 3, 72, 5, 147, 5, 149, 2, 151]);
    addNewDeck("Gamer4124", [4, 3, 1, 4, 5, 5, 5, 7, 6, 9, 5, 11, 3, 13, 1, 15, 1, 17, 1, 19, 1, 22, 1, 23, 1, 25, 2, 29, 1, 33, 2, 35, 1, 49, 1, 51, 1, 53, 1, 55, 1, 62, 2, 67, 1, 69, 2, 71, 1, 73, 3, 87, 1, 89, 1, 91, 1, 93, 1, 105, 2, 109, 2, 124, 1, 125, 1, 129, 1, 130, 3, 147, 5, 149, 3, 151, 1, 153, 1, 167, 2, 171, 1, 180, 1, 181, 1, 183, 1, 202, 1, 203, 3, 207, 1, 209, 1, 211, 1, 215, 2, 217, 1, 236]);
    addNewDeck("Guest", [15, 8, 8, 10, 6, 124, 4, 130, 2, 142, 4, 148, 4, 152, 4, 180, 4, 218, 7, 232]);
    addNewDeck("Piscataway44", [9, 10, 8, 12, 2, 78, 2, 100, 1, 116, 3, 130, 5, 148, 5, 150, 4, 152, 4, 164, 4, 168, 5, 180, 1, 182, 2, 224]);
    addNewDeck("woto", [13, 10, 5, 14, 5, 71, 3, 116, 5, 130, 4, 144, 5, 148, 3, 150, 5, 152, 1, 162, 4, 180, 2, 198, 5, 224, 2, 236]);
    addNewDeck("destroyer57345", [6, 3, 6, 5, 7, 7, 7, 9, 7, 11, 2, 12, 1, 13, 1, 15, 2, 29, 1, 33, 1, 35, 1, 46, 2, 49, 1, 51, 1, 53, 1, 55, 2, 67, 1, 69, 1, 71, 1, 73, 2, 87, 2, 89, 1, 91, 1, 93, 1, 105, 1, 109, 1, 124, 1, 125, 1, 129, 3, 147, 4, 149, 1, 175, 1, 201]);
    addNewDeck("Rieffu", [17, 6, 7, 32, 2, 44, 2, 104, 3, 110, 1, 122, 4, 184, 4, 216]);
    addNewDeck("timhessel", [5, 4, 8, 6, 1, 32, 1, 42, 1, 58, 1, 92, 6, 110, 1, 124, 1, 138, 1, 148, 1, 151, 1, 158, 1, 172, 1, 182, 1, 184, 2, 200, 1, 204, 1, 211]);
    addNewDeck("timhessel", [8, 10, 1, 42, 1, 72, 1, 80, 1, 124, 1, 144, 1, 146, 2, 148, 2, 150, 4, 151, 1, 152, 1, 156, 1, 160, 1, 182, 1, 200, 1, 220]);
    addNewDeck("jurrin", [24, 5, 4, 35, 1, 36, 5, 37, 2, 41, 3, 43, 2, 44, 4, 109, 1, 121]);
    addNewDeck("PurgexCross", [4, 10, 4, 22, 1, 53, 1, 70, 2, 71, 1, 72, 1, 73, 1, 80, 1, 82, 1, 101, 1, 109, 1, 143, 3, 147, 2, 151, 1, 153]);
    addNewDeck("straymaverick", [21, 5, 5, 35, 7, 37, 2, 44, 3, 103, 2, 109, 1, 115, 1, 121, 1, 141, 5, 183, 2, 184, 5, 215, 2, 216, 3, 223]);
    addNewDeck("adrian206", [4, 4, 4, 6, 4, 8, 4, 10, 4, 12, 5, 14, 1, 26, 2, 29, 3, 30, 2, 33, 2, 34, 1, 35, 2, 49, 1, 51, 1, 53, 1, 54, 1, 55, 3, 60, 1, 61, 1, 62, 2, 67, 1, 69, 1, 71, 1, 73, 2, 87, 1, 89, 1, 91, 1, 93, 3, 104, 2, 105, 1, 106, 1, 109, 2, 114, 1, 124, 1, 125, 3, 130, 5, 133, 1, 137, 1, 138, 2, 142, 3, 144, 4, 146, 2, 147, 1, 149, 3, 156, 1, 167, 3, 174, 1, 175, 1, 208, 1, 210]);
    addNewDeck("DavidMadsen", [13, 10, 3, 14, 5, 54, 4, 110, 2, 118, 2, 130, 1, 142, 4, 144, 5, 148, 5, 150, 5, 152, 5, 164, 5, 180, 1, 181, 1, 182, 5, 194, 1, 210, 1, 220, 5, 232, 1, 236, 1, 237, 1, 243, 4, 244]);
    addNewDeck("balrok", [5, 5, 1, 6, 3, 7, 2, 10, 2, 33, 2, 35, 1, 41, 2, 51, 1, 53, 1, 55, 1, 57, 1, 68, 2, 87, 1, 107, 4, 110, 1, 114, 1, 125, 2, 147, 5, 151, 1, 167, 2, 205, 1, 219]);
    addNewDeck("duudez", [2, 4, 1, 6, 1, 8, 3, 9, 1, 10, 4, 11, 2, 12, 8, 13, 2, 29, 1, 35, 1, 50, 1, 53, 1, 55, 1, 69, 1, 71, 1, 73, 1, 82, 1, 91, 1, 95, 1, 100, 2, 109, 1, 115, 1, 118, 4, 125, 1, 130, 1, 147, 1, 149, 1, 156, 1, 163, 1, 167, 1, 174, 1, 179, 1, 183]);
    addNewDeck("frae2", [20, 14, 8, 16, 2, 40, 2, 42, 1, 44, 3, 60, 6, 110, 5, 122, 5, 124, 5, 130, 1, 142, 3, 148, 2, 150, 5, 152, 3, 180, 1, 184, 2, 186, 5, 204, 7, 210, 2, 212, 1, 214, 3, 218, 1, 234, 2, 238, 5, 240]);
    addNewDeck("Yupei", [6, 3, 2, 4, 13, 9, 10, 10, 2, 21, 1, 71, 2, 75, 2, 77, 2, 79, 1, 81, 2, 109, 1, 123, 2, 143, 3, 147, 3, 149, 3, 151, 1, 152, 1, 153, 1, 184, 1, 199, 1, 200, 1, 202, 3, 205, 4, 207, 4, 219, 1, 220, 1, 236, 1, 238, 1, 240]);
    addNewDeck("Hakaisha", [5, 4, 5, 6, 12, 14, 5, 16, 2, 18, 1, 26, 2, 40, 1, 42, 2, 44, 3, 60, 5, 110, 5, 120, 1, 122, 2, 124, 5, 130, 1, 142, 2, 148, 2, 150, 5, 152, 5, 180, 3, 204, 2, 212, 1, 216, 5, 218, 6, 232, 1, 236, 1, 238, 5, 240, 5, 244]);
    addNewDeck("iamevilman", [11, 8, 4, 10, 4, 124, 4, 130, 1, 142, 4, 152, 4, 218]);
    addNewDeck("iamevilman", [10, 10, 3, 12, 4, 22, 4, 71, 1, 82, 3, 144, 4, 147, 2, 148, 3, 150, 4, 152, 3, 180]);
    addNewDeck("shinki12345", [10, 10, 3, 72, 2, 144, 5, 148, 4, 150, 7, 152, 2, 160, 3, 232, 1, 236, 3, 243]);
    addNewDeck("nightmaren00", [5, 3, 1, 4, 5, 5, 5, 7, 5, 9, 5, 11, 1, 12, 1, 13, 1, 33, 1, 35, 5, 43, 1, 53, 1, 55, 5, 71, 1, 73, 1, 82, 1, 91, 1, 93, 1, 105, 1, 109, 1, 125, 1, 129, 5, 148, 1, 149, 1, 151, 1, 167, 1, 175, 5, 185, 5, 207, 5, 215, 5, 221, 5, 223]);
    addNewDeck("Gamerdude247", [5, 8, 10, 10, 2, 12, 3, 20, 1, 22, 1, 60, 2, 72, 2, 124, 4, 130, 1, 144, 7, 148, 3, 150, 7, 152, 5, 180, 3, 218, 3, 220, 6, 232]);
    addNewDeck("Alamand", [14, 10, 1, 72, 5, 144, 7, 148, 7, 152, 5, 180, 7, 186, 4, 232]);
    addNewDeck("lackinglack1", [7, 4, 2, 6, 5, 10, 5, 14, 2, 44, 2, 72, 2, 78, 3, 82, 1, 104, 1, 106, 1, 110, 3, 144, 2, 146, 5, 148, 4, 150, 5, 152, 2, 164, 3, 168, 3, 184, 2, 204, 4, 209, 1, 212, 2, 216, 1, 218, 1, 220, 1, 222]);
    addNewDeck("Gamerdude247", [10, 8, 15, 10, 4, 12, 3, 20, 1, 22, 1, 24, 1, 60, 3, 72, 2, 124, 4, 130, 1, 144, 7, 148, 3, 150, 7, 152, 7, 180, 3, 218, 7, 220, 7, 232]);
    addNewDeck("Killerkarnickel", [7, 8, 9, 12, 4, 116, 5, 124, 5, 130, 4, 150, 1, 180, 7, 182, 5, 232, 2, 236, 2, 238]);
    addNewDeck("Kenaron", [3, 2, 1, 28, 4, 30, 1, 114, 1, 116, 7, 130, 4, 136, 2, 152, 4, 156, 2, 166, 1, 171, 3, 174, 2, 178, 1, 196, 4, 205, 2, 235]);
    addNewDeck("Kenaron", [3, 2, 1, 28, 4, 30, 2, 50, 1, 88, 2, 116, 7, 130, 4, 136, 3, 150, 4, 156, 2, 166, 3, 174, 2, 178, 1, 179, 3, 186, 4, 206, 2, 235, 1, 238]);
    addNewDeck("Kenaron", [3, 2, 4, 30, 1, 114, 1, 116, 7, 130, 4, 136, 2, 152, 4, 156, 1, 171, 1, 172, 2, 173, 3, 174, 2, 178, 1, 196, 4, 205, 1, 224, 1, 235]);
    addNewDeck("aznpanda890", [15, 6, 1, 17, 5, 18, 2, 34, 2, 36, 1, 38, 2, 40, 2, 42, 1, 104, 1, 106, 2, 110]);
    addNewDeck("lackinglack1", [6, 4, 5, 6, 10, 10, 5, 14, 2, 44, 2, 82, 4, 110, 5, 130, 4, 144, 6, 148, 5, 150, 6, 152, 4, 164, 4, 180, 1, 182, 3, 184, 2, 204, 4, 209, 1, 212, 3, 216, 1, 218, 1, 220, 1, 222, 5, 224, 3, 235, 3, 237]);
    addNewDeck("Tigerbladedn", [3, 3, 2, 4, 1, 5, 4, 6, 5, 7, 8, 9, 2, 10, 6, 11, 4, 12, 1, 13, 1, 32, 1, 33, 1, 35, 2, 42, 1, 53, 1, 55, 2, 58, 1, 70, 1, 73, 2, 78, 2, 80, 1, 93, 2, 95, 2, 98, 1, 105, 4, 109, 1, 118, 3, 124, 1, 125, 4, 129, 1, 147, 1, 149, 5, 152, 2, 154, 1, 167, 1, 175, 2, 183, 5, 218, 5, 220, 3, 221]);
    addNewDeck("elkid", [2, 5, 2, 6, 2, 7, 11, 9, 6, 10, 1, 13, 2, 33, 1, 38, 3, 40, 2, 44, 1, 53, 1, 55, 1, 57, 1, 60, 4, 71, 1, 73, 2, 105, 2, 109, 1, 113, 1, 125, 1, 130, 2, 143, 5, 148, 5, 149, 5, 151, 1, 152, 1, 164, 1, 167, 1, 198, 1, 210, 1, 215, 3, 216, 2, 220, 3, 243]);
    addNewDeck("ManXl", [8, 3, 2, 6, 2, 8, 4, 15, 2, 29, 5, 109, 4, 129, 6, 137, 1, 149, 2, 151, 4, 167, 4, 185, 4, 199, 3, 203, 7, 205, 4, 207]);
    addNewDeck("zeo123200", [5, 10, 10, 22, 4, 71, 1, 144, 3, 147, 4, 148, 5, 149, 2, 150, 2, 151, 5, 152, 1, 161, 2, 220, 1, 235]);
    addNewDeck("LokiGodOfFire", [20, 7, 3, 49, 1, 50, 3, 51, 1, 53, 4, 55, 1, 57, 1, 59, 1, 61, 4, 109, 4, 123, 7, 125, 4, 129, 1, 138, 3, 217, 1, 240]);
    addNewDeck("xdarkcodex", [33, 9, 1, 13, 2, 67, 1, 69, 5, 71, 3, 73, 6, 75, 6, 79, 1, 81, 1, 105, 1, 125, 1, 129, 4, 143, 2, 145, 1, 147, 1, 149, 3, 151, 1, 155, 4, 159, 1, 167, 1, 183]);
    addNewDeck("Fasalrod", [10, 4, 7, 8, 5, 10, 5, 14, 5, 110, 5, 116, 5, 124, 2, 125, 1, 142, 5, 148, 5, 152, 2, 165, 5, 180, 2, 199, 5, 204, 1, 207, 5, 218, 2, 232]);
    addNewDeck("crazyphysicist", [1, 14, 1, 28, 1, 46, 2, 108, 3, 130, 1, 150, 3, 156, 1, 158, 1, 166, 1, 178, 1, 180, 1, 192, 5, 232, 1, 236, 1, 238, 7, 240, 1, 244]);
    addNewDeck("C4po", [10, 4, 5, 6, 5, 10, 5, 13, 5, 110, 1, 150, 2, 151, 3, 152, 5, 199, 5, 203, 3, 207, 2, 211]);
    addNewDeck("zerotg90", [7, 5, 2, 6, 7, 9, 2, 10, 2, 29, 2, 31, 1, 33, 1, 35, 2, 40, 2, 42, 1, 43, 2, 67, 2, 69, 3, 71, 1, 73, 2, 79, 2, 82, 1, 105, 2, 109, 2, 147, 2, 149, 2, 151, 2, 183]);
    addNewDeck("RikuFrost", [3, 3, 3, 5, 3, 7, 3, 9, 3, 11, 2, 13, 2, 29, 1, 33, 1, 35, 2, 49, 1, 51, 1, 53, 2, 55, 1, 65, 2, 67, 1, 69, 1, 71, 1, 73, 2, 87, 1, 89, 1, 91, 1, 93, 1, 105, 1, 109, 1, 125, 1, 129, 1, 133, 1, 147, 1, 149, 2, 167, 1, 175]);
    addNewDeck("rocxror", [7, 5, 10, 6, 5, 9, 2, 13, 2, 29, 1, 33, 1, 35, 1, 105, 1, 109, 3, 145, 1, 147, 5, 149, 1, 184]);
    addNewDeck("Abinmorth", [1, 1, 1, 3, 10, 4, 1, 5, 1, 191, 1, 200, 1, 203, 5, 204, 1, 208, 1, 209, 5, 212, 1, 227, 1, 232, 1, 243]);
    addNewDeck("dahp", [10, 12, 6, 24, 2, 94, 2, 96, 3, 100, 1, 149, 3, 163, 2, 167, 1, 175, 4, 222]);
    addNewDeck("Nator", [20, 8, 2, 60, 7, 124, 7, 130, 5, 150, 2, 190, 7, 218, 2, 236, 2, 238]);
    addNewDeck("metax11", [10, 6, 8, 8, 7, 58, 4, 104, 7, 110, 5, 124, 3, 180, 2, 218, 2, 235, 2, 240]);
    addNewDeck("opex51", [5, 3, 5, 5, 5, 7, 5, 9, 6, 11, 1, 13, 3, 15, 2, 17, 2, 29, 1, 31, 1, 33, 2, 35, 1, 44, 1, 46, 2, 49, 1, 51, 1, 53, 2, 55, 1, 61, 4, 67, 1, 69, 1, 71, 1, 73, 2, 87, 1, 89, 1, 91, 1, 93, 1, 105, 1, 109, 1, 125, 1, 129, 1, 146, 1, 147, 1, 149, 1, 167, 1, 175, 1, 190, 1, 227]);
    addNewDeck("arklegru", [7, 8, 7, 10, 3, 14, 3, 20, 3, 22, 2, 54, 2, 55, 1, 59, 1, 62, 1, 71, 3, 78, 3, 91, 4, 109, 3, 124, 1, 126, 2, 130, 1, 134, 1, 138, 3, 144, 2, 148, 2, 150, 5, 152, 1, 159, 2, 167, 1, 204, 3, 218, 5, 220]);
    addNewDeck("Mirodian", [7, 14, 7, 26, 1, 44, 1, 54, 1, 60, 1, 80, 5, 110, 3, 124, 3, 130, 1, 142, 1, 146, 2, 148, 2, 150, 3, 152, 2, 154, 1, 164, 2, 180, 2, 182, 1, 184, 1, 204, 5, 218, 3, 220]);
    addNewDeck("pika393", [6, 10, 8, 12, 2, 20, 4, 100, 7, 130, 7, 152, 7, 180]);
    addNewDeck("Odenezen", [5, 5, 1, 6, 2, 8, 3, 9, 7, 10, 1, 12, 4, 17, 2, 19, 3, 21, 5, 71, 5, 79, 2, 81, 1, 82, 2, 91, 2, 103, 1, 104, 1, 105, 1, 109, 4, 110, 1, 125, 2, 130, 4, 147, 1, 148, 2, 149, 2, 151, 3, 152, 2, 157, 1, 159, 2, 160, 1, 167, 2, 171, 5, 193, 1, 195, 2, 217, 2, 218]);
    addNewDeck("hithere", [8, 6, 13, 8, 4, 60, 7, 110, 4, 130, 1, 142, 1, 204]);
    addNewDeck("Qwertyuiopas", [2, 4, 20, 10, 1, 13, 2, 14, 1, 70, 3, 71, 3, 74, 1, 76, 1, 77, 1, 91, 2, 110, 2, 130, 1, 143, 1, 144, 1, 145, 1, 146, 3, 147, 1, 148, 4, 149, 1, 150, 1, 151, 1, 152, 1, 154, 2, 156, 1, 158, 1, 160, 1, 171, 1, 174, 1, 183, 1, 192, 2, 194, 1, 209, 1, 216, 3, 218, 1, 220]);
    addNewDeck("Guest", [17, 9, 3, 22, 2, 67, 2, 69, 2, 70, 4, 71, 2, 73, 5, 150, 3, 151, 4, 152, 1, 159, 1, 161, 1, 167, 1, 175, 2, 191, 4, 192, 3, 219]);
    addNewDeck("trofffim", [7, 3, 5, 5, 5, 7, 6, 9, 5, 11, 1, 13, 1, 27, 2, 29, 1, 33, 1, 35, 2, 49, 1, 51, 2, 105, 1, 129, 1, 147, 1, 149, 1, 167, 1, 175, 5, 203]);
    addNewDeck("JohnSmithBalls", [4, 8, 10, 10, 2, 12, 1, 14, 2, 20, 2, 22, 3, 72, 2, 78, 1, 122, 5, 124, 5, 130, 1, 149, 3, 150, 7, 152, 1, 162, 1, 164, 4, 180, 1, 182, 5, 194]);
    addNewDeck("drakethatsme", [6, 6, 6, 8, 3, 12, 1, 15, 3, 18, 3, 20, 4, 23, 3, 59, 1, 91, 2, 92, 1, 99, 4, 109, 1, 110, 3, 124, 1, 130, 3, 184, 4, 191, 4, 218, 2, 231]);
    addNewDeck("nickthemenace", [16, 10, 1, 13, 1, 18, 1, 58, 1, 68, 2, 71, 2, 72, 1, 73, 1, 85, 1, 94, 1, 105, 2, 108, 1, 110, 1, 126, 2, 129, 1, 142, 2, 143, 3, 144, 2, 145, 5, 147, 2, 148, 6, 149, 1, 150, 2, 151, 1, 152, 1, 167, 1, 184, 2, 205, 3, 215, 2, 216, 1, 218, 1, 219, 1, 220]);
    addNewDeck("torcherboy10", [5, 3, 14, 5, 5, 7, 3, 9, 2, 10, 5, 11, 8, 13, 4, 17, 2, 29, 1, 33, 1, 35, 3, 39, 7, 43, 2, 49, 1, 51, 1, 53, 2, 67, 1, 69, 1, 71, 1, 73, 2, 87, 1, 89, 1, 91, 1, 93, 4, 103, 1, 104, 1, 105, 7, 109, 1, 129, 1, 147, 1, 149, 1, 167, 1, 175, 2, 209, 3, 216]);
    addNewDeck("torcherboy10", [6, 3, 1, 4, 14, 5, 1, 7, 5, 9, 2, 10, 3, 11, 8, 13, 4, 17, 2, 29, 1, 33, 1, 35, 3, 39, 7, 43, 2, 67, 1, 69, 1, 71, 1, 73, 1, 91, 5, 103, 1, 104, 1, 105, 7, 109, 1, 129, 1, 147, 1, 148, 2, 149, 1, 151, 1, 167, 1, 175, 1, 182, 1, 197, 4, 209, 1, 211, 3, 216]);
    addNewDeck("figter2000", [2, 4, 11, 6, 5, 8, 2, 10, 2, 12, 2, 32, 1, 33, 1, 40, 1, 44, 1, 52, 4, 53, 1, 60, 2, 78, 2, 82, 3, 100, 1, 104, 6, 110, 3, 118, 5, 130, 1, 142, 2, 150, 2, 152, 4, 182, 2, 203, 3, 218, 1, 232, 1, 236]);
    addNewDeck("person2348", [1, 1, 5, 3, 1, 4, 5, 5, 7, 7, 7, 9, 4, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 17, 1, 19, 1, 21, 1, 23, 1, 25, 2, 29, 1, 31, 2, 33, 2, 35, 1, 41, 1, 43, 3, 49, 1, 51, 1, 53, 1, 55, 1, 57, 1, 59, 1, 62, 3, 67, 2, 69, 1, 71, 2, 73, 1, 77, 4, 87, 1, 89, 2, 91, 1, 93, 1, 96, 2, 105, 1, 107, 1, 109, 1, 119, 1, 120, 2, 125, 2, 129, 1, 131, 2, 135, 1, 137, 2, 147, 2, 149, 1, 167, 1, 173, 2, 175, 1, 188, 1, 201, 1, 218]);
    addNewDeck("iamnoone", [4, 6, 4, 18, 7, 102, 1, 108, 5, 110, 4, 130, 7, 156, 7, 186, 1, 232, 5, 240]);
    addNewDeck("Quaznar", [11, 6, 11, 8, 10, 10, 7, 40, 5, 53, 7, 130, 5, 148, 7, 152, 5, 180, 7, 194, 1, 198, 1, 217, 6, 218, 7, 224, 2, 236, 1, 238, 7, 244]);
    addNewDeck("sh00td3ad", [20, 5, 11, 17, 2, 35, 7, 37, 7, 43, 3, 105, 6, 109, 7, 183, 7, 215]);
    addNewDeck("Simpoink", [10, 5, 10, 11, 3, 13, 1, 18, 1, 23, 1, 27, 2, 29, 2, 33, 2, 35, 1, 39, 1, 41, 1, 43, 2, 87, 2, 89, 1, 91, 2, 93, 1, 95, 1, 97, 1, 98, 2, 99, 2, 103, 1, 105, 3, 109, 1, 111, 1, 113, 1, 115, 1, 117, 1, 167, 2, 171, 1, 173, 1, 180, 1, 201, 1, 204, 2, 207, 1, 211, 1, 215, 1, 221, 1, 223, 1, 229, 1, 233]);
    addNewDeck("abc12367659", [4, 3, 2, 5, 3, 7, 4, 9, 3, 11, 2, 13, 1, 20, 1, 29, 1, 35, 1, 49, 1, 53, 1, 55, 1, 67, 1, 69, 1, 71, 1, 73, 1, 79, 1, 82, 1, 87, 1, 89, 1, 91, 1, 93, 1, 105, 1, 125, 1, 129, 1, 147, 1, 149, 1, 167, 1, 172, 1, 175, 1, 204, 2, 211, 1, 212, 1, 223]);
    addNewDeck("Olobaid", [5, 4, 6, 6, 5, 8, 5, 10, 5, 12, 2, 14, 1, 35, 2, 43, 2, 44, 1, 53, 1, 55, 1, 73, 2, 80, 1, 89, 1, 93, 1, 104, 2, 130, 1, 147, 2, 148, 1, 149, 2, 150, 3, 152, 1, 167, 1, 172, 1, 175, 2, 191, 2, 202, 2, 205, 2, 206, 2, 237]);
    addNewDeck("GregLazlo", [3, 4, 4, 6, 4, 8, 3, 10, 3, 12, 2, 13, 1, 14, 2, 15, 1, 19, 1, 21, 1, 28, 1, 29, 1, 33, 1, 36, 2, 41, 1, 56, 2, 62, 1, 71, 1, 73, 2, 80, 1, 93, 1, 96, 2, 108, 4, 110, 1, 126, 2, 130, 1, 134, 1, 138, 1, 140, 1, 144, 1, 148, 2, 149, 2, 150, 1, 152, 1, 156, 2, 167, 1, 172, 3, 204, 1, 205, 1, 207, 1, 219, 1, 221]);
    addNewDeck("spyrolvr96", [2, 1, 1, 2, 7, 3, 1, 4, 7, 13, 5, 15, 1, 25, 1, 26, 1, 80, 1, 95, 1, 109, 3, 110, 1, 129, 1, 147, 1, 149, 1, 151, 1, 152, 1, 171, 1, 175, 3, 199, 1, 200, 3, 201, 1, 202, 3, 203, 1, 204, 3, 205, 1, 206, 2, 207, 1, 208, 2, 209, 3, 211, 1, 212, 3, 213, 1, 214, 1, 235, 1, 237]);
    addNewDeck("AogT666", [3, 4, 4, 6, 4, 8, 4, 10, 4, 12, 2, 44, 2, 62, 2, 82, 2, 100, 1, 104, 3, 110, 1, 124, 1, 144, 3, 148, 2, 150, 1, 152, 1, 163, 6, 180, 1, 186, 1, 204, 1, 208, 1, 212, 1, 218, 2, 235]);
    addNewDeck("Arcanmster", [8, 6, 8, 8, 1, 14, 1, 40, 2, 54, 4, 60, 1, 80, 2, 91, 5, 110, 1, 118, 1, 120, 3, 124, 4, 130, 2, 147, 3, 151, 1, 172, 1, 180, 1, 208, 2, 216, 2, 218, 2, 220, 1, 232, 1, 236, 3, 244]);
    addNewDeck("jeff7871", [2, 3, 1, 4, 1, 6, 7, 7, 6, 9, 4, 10, 1, 13, 5, 21, 1, 33, 1, 35, 1, 40, 1, 49, 1, 51, 1, 53, 1, 55, 2, 67, 2, 69, 1, 71, 1, 73, 2, 77, 1, 81, 2, 143, 1, 146, 1, 147, 1, 149, 1, 155, 1, 207, 1, 219]);
    addNewDeck("mmKALLL", [5, 4, 7, 6, 1, 43, 2, 91, 6, 110, 7, 130, 4, 184, 4, 204]);
    addNewDeck("cheese9999", [4, 3, 15, 5, 4, 7, 3, 9, 15, 11, 8, 13, 2, 15, 5, 17, 1, 19, 1, 21, 6, 23, 2, 49, 1, 51, 1, 53, 1, 55, 1, 59, 2, 61, 2, 67, 1, 69, 1, 71, 1, 73, 1, 80, 7, 91, 7, 109, 1, 123, 1, 125, 1, 129, 1, 144, 1, 147, 1, 149, 1, 151, 1, 211]);
    addNewDeck("pagboy", [5, 3, 5, 5, 2, 6, 2, 7, 8, 9, 2, 11, 1, 12, 1, 14, 6, 15, 1, 16, 1, 22, 1, 39, 5, 71, 5, 91, 1, 105, 2, 109, 1, 123, 1, 125, 5, 129, 1, 144, 5, 145, 2, 147, 2, 149, 3, 150, 2, 167, 1, 181, 1, 199, 1, 200, 1, 202, 1, 207, 1, 210, 2, 215, 5, 217, 5, 219, 1, 231, 1, 235, 1, 239, 1, 242]);
    addNewDeck("blakzer", [7, 1, 1, 2, 5, 3, 6, 5, 5, 7, 5, 9, 7, 11, 1, 13, 1, 16, 1, 25, 1, 26, 2, 29, 1, 33, 2, 35, 2, 37, 2, 49, 1, 51, 1, 53, 1, 55, 1, 69, 1, 71, 1, 73, 2, 87, 1, 89, 1, 91, 1, 93, 1, 105, 1, 109, 1, 125, 2, 129, 7, 147, 7, 149, 1, 167, 1, 175, 4, 205, 3, 206, 7, 207, 1, 211, 1, 213, 1, 217, 2, 223]);
    addNewDeck("isomanic", [6, 6, 6, 8, 3, 18, 3, 20, 1, 32, 1, 34, 1, 38, 1, 42, 1, 44, 2, 54, 2, 60, 1, 61, 2, 103, 3, 110, 1, 112, 1, 116, 2, 124, 2, 126, 3, 130, 1, 138, 2, 142, 2, 188, 1, 217, 1, 218, 1, 238]);
    addNewDeck("Sephirothfan", [2, 3, 2, 5, 2, 7, 2, 9, 2, 11, 1, 13, 2, 29, 1, 33, 1, 35, 1, 39, 1, 42, 1, 51, 1, 53, 1, 55, 1, 69, 1, 71, 2, 73, 1, 87, 1, 89, 2, 93, 1, 96, 2, 105, 1, 109, 1, 112, 1, 125, 1, 129, 1, 130, 1, 140, 1, 147, 1, 149, 1, 175, 2, 184, 1, 207, 2, 210, 2, 217]);
    addNewDeck("reorx8", [7, 6, 5, 40, 7, 140, 3, 150, 3, 180, 3, 212, 7, 244]);
    addNewDeck("reorx8", [11, 10, 4, 130, 5, 148, 6, 152, 7, 220]);
    addNewDeck("reorx8", [2, 16, 4, 28, 3, 126, 3, 180, 4, 212, 2, 236, 3, 242, 4, 244]);
    addNewDeck("reorx8", [4, 18, 6, 20, 2, 42, 7, 126, 7, 130, 2, 180, 3, 236, 7, 242, 6, 244]);
    addNewDeck("reorx8", [3, 14, 6, 26, 3, 92, 7, 110, 7, 130, 3, 152, 4, 232]);
    addNewDeck("reorx8", [4, 26, 4, 48, 5, 130, 5, 154, 3, 180, 3, 184, 6, 214]);
    addNewDeck("reorx8", [3, 14, 7, 26, 2, 42, 3, 126, 5, 130, 4, 152, 5, 180, 3, 212]);
    addNewDeck("reorx8", [6, 26, 5, 48, 7, 130, 5, 154, 4, 180, 2, 212, 5, 214]);
    addNewDeck("reorx8", [2, 6, 3, 14, 7, 26, 3, 92, 7, 110, 7, 130, 3, 152, 4, 232]);
    addNewDeck("reorx8", [12, 10, 2, 82, 7, 130, 7, 148, 5, 152, 3, 180, 7, 194, 3, 212, 4, 244]);
    addNewDeck("reorx8", [3, 26, 3, 42, 4, 130, 2, 152, 4, 170, 3, 180, 3, 212, 3, 244]);
    addNewDeck("reorx8", [4, 48, 5, 130, 4, 132, 2, 180, 3, 184, 3, 212, 7, 236, 2, 238, 7, 242]);
    addNewDeck("reorx8", [4, 6, 3, 20, 3, 60, 5, 110, 6, 236, 2, 238, 7, 242]);
    addNewDeck("reorx8", [5, 6, 2, 22, 4, 24, 4, 92, 7, 110, 4, 130, 3, 152, 3, 232]);
    addNewDeck("reorx8", [4, 26, 4, 48, 5, 130, 5, 154, 3, 180, 3, 184, 6, 214]);
    addNewDeck("reorx8", [10, 10, 5, 144, 7, 148, 3, 206, 2, 216, 2, 218, 7, 220, 2, 222]);
    addNewDeck("reorx8", [6, 18, 5, 24, 5, 110, 4, 130, 6, 198, 7, 232, 2, 238]);
    addNewDeck("reorx8", [5, 6, 4, 24, 3, 92, 7, 110, 4, 130, 2, 152, 5, 170, 4, 232]);
    addNewDeck("reorx8", [7, 10, 5, 20, 7, 126, 7, 130, 7, 148, 5, 152, 3, 180, 4, 244]);
    addNewDeck("reorx8", [12, 10, 3, 71, 5, 130, 7, 148, 7, 152, 3, 180, 3, 212, 4, 244]);
    addNewDeck("reorx8", [4, 26, 7, 206, 3, 216, 4, 218, 4, 222, 7, 236, 7, 242]);
    addNewDeck("reorx8", [4, 6, 9, 12, 2, 18, 7, 92, 7, 110, 7, 130, 2, 150, 2, 158, 4, 182, 3, 206]);
    addNewDeck("reorx8", [5, 22, 4, 24, 3, 82, 6, 112, 5, 126, 7, 180]);
    addNewDeck("reorx8", [8, 14, 13, 26, 3, 104, 4, 124, 7, 130, 2, 144, 7, 148, 2, 164, 7, 180, 7, 244]);
    addNewDeck("reorx8", [3, 26, 2, 42, 5, 130, 2, 166, 4, 212, 7, 236, 4, 242]);
    addNewDeck("reorx8", [5, 18, 7, 24, 7, 92, 5, 110, 7, 130, 1, 210, 7, 236, 7, 242]);
    addNewDeck("reorx8", [15, 14, 15, 16, 7, 116, 7, 122, 7, 130, 7, 142, 7, 150, 7, 182, 7, 196, 4, 246]);
    addNewDeck("Kongregate Username", [11, 12, 5, 130, 7, 182, 3, 214, 2, 216, 5, 236]);
    addNewDeck("Kongregate Username", [3, 14, 5, 26, 3, 42, 5, 130, 5, 152, 5, 180, 2, 212, 4, 244]);
    addNewDeck("Kongregate Username", [7, 18, 5, 110, 4, 130, 5, 232, 5, 236, 5, 242]);
    addNewDeck("Kongregate Username", [6, 12, 5, 80, 7, 130, 7, 182, 4, 214, 5, 236, 5, 242, 3, 244]);
    addNewDeck("Kongregate Username", [7, 22, 1, 26, 4, 130, 7, 144, 1, 164, 3, 206, 2, 216]);
    addNewDeck("Kongregate Username", [2, 4, 5, 8, 6, 20, 7, 26, 7, 54, 4, 108, 7, 130, 7, 132, 3, 142, 3, 154, 5, 180, 4, 194, 7, 212, 7, 214, 4, 244]);
    addNewDeck("Kongregate Username", [9, 14, 11, 26, 5, 44, 1, 82, 1, 100, 7, 130, 7, 140, 3, 142, 7, 152, 7, 168, 5, 198, 2, 204]);
    addNewDeck("Kongregate Username", [9, 26, 6, 28, 7, 130, 4, 152, 5, 180, 7, 212]);
    addNewDeck("Kongregate Username", [12, 10, 3, 116, 7, 130, 7, 148, 4, 150, 7, 152, 2, 166, 7, 170, 1, 180]);
    addNewDeck("Kongregate Username", [15, 12, 4, 100, 7, 130, 3, 152, 1, 158, 2, 172, 7, 182, 3, 212]);
    addNewDeck("Kongregate Username", [5, 26, 5, 28, 5, 130, 3, 154, 3, 180, 1, 184, 4, 194, 4, 212, 2, 244]);
    addNewDeck("Kongregate Username", [12, 14, 14, 26, 7, 116, 7, 126, 7, 130, 4, 142, 7, 148, 7, 150, 7, 182, 7, 236, 7, 242]);
    addNewDeck("Kongregate Username", [10, 10, 7, 126, 7, 148, 7, 152, 5, 180, 6, 244]);
    addNewDeck("Kongregate Username", [7, 14, 9, 26, 3, 40, 5, 124, 7, 130, 7, 140, 7, 152, 3, 180, 7, 198, 4, 244]);
    addNewDeck("Kongregate Username", [7, 10, 5, 28, 5, 130, 7, 152, 5, 154, 3, 180, 3, 212, 4, 244]);
    addNewDeck("Kongregate Username", [8, 26, 6, 28, 7, 130, 3, 152, 3, 180, 3, 184, 7, 212]);
    addNewDeck("Kongregate Username", [7, 10, 7, 126, 7, 148, 4, 152, 7, 166, 6, 244]);
    addNewDeck("Kongregate Username", [17, 12, 7, 130, 3, 144, 7, 168, 7, 182, 7, 198, 5, 214, 4, 222]);
    addNewDeck("Kongregate Username", [10, 6, 7, 44, 1, 96, 1, 104, 4, 124, 7, 130, 7, 144, 1, 164, 5, 180, 3, 194, 1, 202, 7, 212, 3, 244]);
    addNewDeck("Kongregate Username", [12, 14, 16, 26, 7, 116, 7, 122, 7, 126, 7, 130, 7, 142, 7, 152, 7, 182, 2, 246]);
    addNewDeck("Kongregate Username", [5, 26, 6, 28, 7, 130, 4, 154, 5, 180, 2, 184, 6, 194, 4, 212]);
    addNewDeck("Kongregate Username", [8, 6, 4, 40, 3, 152, 3, 214, 7, 244]);
    addNewDeck("Kongregate Username", [3, 42, 2, 124, 3, 166, 3, 180, 2, 212, 5, 236, 5, 242, 2, 244]);
    addNewDeck("Kongregate Username", [11, 12, 7, 130, 3, 152, 2, 158, 7, 182, 4, 214, 1, 216, 6, 222]);
    addNewDeck("Kongregate Username", [10, 10, 4, 130, 7, 152, 1, 210, 1, 216, 7, 220, 1, 222]);
    addNewDeck("Kongregate Username", [4, 26, 4, 42, 5, 130, 3, 154, 3, 180, 4, 212, 4, 236, 3, 242]);
    addNewDeck("Kongregate Username", [6, 10, 3, 54, 7, 152, 3, 172, 2, 180, 4, 194, 3, 212, 5, 244]);
    addNewDeck("Kongregate Username", [11, 14, 14, 26, 3, 60, 6, 104, 5, 124, 3, 130, 7, 148, 6, 150, 7, 152, 5, 164, 7, 168, 7, 180, 7, 198, 1, 236, 4, 244, 7, 246]);
    addNewDeck("Kongregate Username", [7, 26, 7, 28, 7, 130, 3, 152, 4, 180, 3, 194, 7, 212, 3, 244]);
    addNewDeck("Kongregate Username", [4, 28, 3, 126, 2, 154, 3, 180, 2, 212, 3, 236, 4, 242, 4, 244]);
    addNewDeck("Kongregate Username", [4, 8, 13, 14, 17, 26, 7, 40, 3, 72, 7, 130, 7, 142, 7, 152, 7, 182, 7, 194, 7, 218, 7, 220, 1, 246]);
    addNewDeck("Kongregate Username", [5, 6, 8, 26, 4, 40, 3, 72, 7, 130, 2, 150, 2, 182, 7, 214, 7, 244]);
    addNewDeck("Kongregate Username", [9, 12, 3, 100, 2, 112, 5, 130, 3, 150, 6, 166, 5, 180, 3, 212]);
    addNewDeck("Kongregate Username", [9, 14, 14, 26, 1, 62, 7, 78, 7, 110, 7, 130, 4, 142, 7, 182, 1, 204, 2, 214]);
    addNewDeck("Kongregate Username", [6, 10, 3, 42, 5, 130, 7, 152, 5, 180, 7, 194, 4, 244]);
    addNewDeck("Kongregate Username", [8, 14, 8, 26, 4, 40, 7, 130, 2, 142, 7, 152, 7, 180]);
    addNewDeck("Kongregate Username", [3, 26, 2, 42, 5, 130, 1, 166, 4, 212, 1, 234, 7, 236, 4, 242]);
    addNewDeck("Kongregate Username", [5, 6, 10, 14, 14, 26, 7, 116, 7, 122, 7, 130, 7, 142, 7, 150, 7, 182, 7, 196, 4, 246]);
    addNewDeck("Kongregate Username", [7, 6, 2, 16, 4, 40, 5, 140, 3, 150, 4, 180, 5, 212, 7, 244]);
    addNewDeck("Kongregate Username", [6, 18, 3, 86, 6, 110, 3, 124, 3, 144, 4, 198, 7, 232, 2, 238]);
    addNewDeck("Kongregate Username", [7, 5, 3, 25, 2, 77, 2, 97, 5, 109, 3, 129, 1, 189, 2, 199]);
    addNewDeck("Kongregate Username", [6, 6, 3, 26, 2, 78, 2, 98, 5, 110, 4, 130, 1, 190, 2, 200]);
    addNewDeck("Kongregate Username", [5, 20, 2, 106, 1, 128, 7, 130, 2, 146, 1, 196, 3, 232, 7, 240]);
}

export function step8AchievementsQuests() {

    function addNewQuest(expired, eventQuest, dailyQuest, questID, questImage, reqLevel, reqQuest, reqQuestRank, questName, descA, descB, need, where, amnt1, amnt2, amnt3, amnt4, questToken, eventToken) {
        _root.totalMainQuest += 1;
        var _loc2_ = new Object();
        _loc2_.expired = expired;
        _loc2_.eventQuest = eventQuest;
        _loc2_.dailyQuest = dailyQuest;
        _loc2_.questID = questID;
        _loc2_.questImage = questImage;
        _loc2_.reqLevel = reqLevel;
        _loc2_.reqQuest = reqQuest;
        _loc2_.reqQuestRank = reqQuestRank;
        _loc2_.questName = questName;
        _loc2_.descA = descA;
        _loc2_.descB = descB;
        _loc2_.need = need;
        _loc2_.where = where;
        _loc2_.amnt1 = amnt1;
        _loc2_.amnt2 = amnt2;
        _loc2_.amnt3 = amnt3;
        _loc2_.amnt4 = amnt4;
        _loc2_.questToken = questToken;
        _loc2_.eventToken = eventToken;
        mainQuestList.push(_loc2_);
    }
    function addRandomQuest(chance, difficulty, maxMult, reqLv, reward, rewardQuan, rewardBlueCoin, rewardToken, feature, type, subtype, need, descA, descB) {
        var _loc2_ = new Object();
        _loc2_.chance = chance;
        _loc2_.difficulty = difficulty;
        _loc2_.maxMult = maxMult;
        _loc2_.reqLv = reqLv;
        _loc2_.feature = feature;
        _loc2_.type = type;
        _loc2_.subtype = subtype;
        _loc2_.need = need;
        _loc2_.reward = reward;
        _loc2_.rewardQuan = rewardQuan;
        _loc2_.rewardBlueCoin = rewardBlueCoin;
        _loc2_.rewardToken = rewardToken;
        _loc2_.descA = descA;
        _loc2_.descB = descB;
        questList.push(_loc2_);
        _root.totalquest += 1;
    }
    _root.totalquest = 0;
    _root.totalNewQuest = 0;
    _root.totalMainQuest = 0;
    _root.totalachievements = 0;
    _root.totalsachievements = 0;
    _root.maxredcoin = 0;
    _root.achList = [{}];
    _root.achListR = [{}];
    var questList = [{}];
    var mainQuestList = [{}];
    var newAchList = [{}];
    var newMainQuestList = [{}];
    var questMap = new Array();
    var questHLink = new Array();
    var questVLink = new Array();
    let i = 1;
    while (i <= 5) {
        questMap[i] = new Array();
        questHLink[i] = new Array();
        questVLink[i] = new Array();
        i++;
    }
    addNewAchievement(1000, "Graduated", "Newbie Tasks", "newbieProgress", 15, "Max", "save", false, 2000);
    addNewAchievement(1100, "Newbie Anti-Idler", "Level", "bestLevel", 10, "Max", "save", false, 5);
    addNewAchievement(1101, "Good Anti-Idler", "Level", "bestLevel", 20, "Max", "save", false, 5);
    addNewAchievement(1102, "Better Anti-Idler", "Level", "bestLevel", 40, "Max", "save", false, 5);
    addNewAchievement(1103, "Great Anti-Idler", "Level", "bestLevel", 70, "Max", "save", false, 10);
    addNewAchievement(1104, "Skilled Anti-Idler", "Level", "bestLevel", 100, "Max", "save", false, 10);
    addNewAchievement(1105, "Awesome Anti-Idler", "Level", "bestLevel", 150, "Max", "save", false, 10);
    addNewAchievement(1106, "Expert Anti-Idler", "Level", "bestLevel", 200, "Max", "save", false, 15);
    addNewAchievement(1107, "Bronze Trophy Anti-Idler", "Level", "bestLevel", 300, "Max", "save", false, 15);
    addNewAchievement(1108, "Silver Trophy Anti-Idler", "Level", "bestLevel", 400, "Max", "save", false, 15);
    addNewAchievement(1109, "Gold Trophy Anti-Idler", "Level", "bestLevel", 500, "Max", "save", false, 20);
    addNewAchievement(1110, "Lifeless King", "Level", "bestLevel", 700, "Max", "save", false, 20);
    addNewAchievement(1111, "Scoreboard Destroyer", "Level", "bestLevel", 1000, "Max", "save", false, 25);
    addNewAchievement(1112, "Elite Anti-Idler", "Level", "bestLevel", 1337, "Max", "save", false, 25);
    addNewAchievement(1113, "World\'s Best Anti-Idler", "Level", "bestLevel", 2000, "Max", "save", false, 30);
    addNewAchievement(1114, "Better Than The Best", "Level", "bestLevel", 3000, "Max", "save", false, 30);
    addNewAchievement(1115, "Isn\'t It Getting Boring?", "Level", "bestLevel", 4000, "Max", "save", false, 35);
    addNewAchievement(1116, "The Game That Never Ends", "Level", "bestLevel", 5000, "Max", "save", false, 35);
    addNewAchievement(1117, "Master Of The Universe", "Level", "bestLevel", 9001, "Max", "save", false, 50);
    addNewAchievement(1150, "Welcome to Anti-Idle!", "Times Played", "totalPlays", 1, "Max", "save", false, 0);
    addNewAchievement(1151, "Welcome Back", "Times Played", "totalPlays", 2, "Max", "save", false, 0);
    addNewAchievement(1152, "Fifth Visit", "Times Played", "totalPlays", 5, "Max", "save", false, 0);
    addNewAchievement(1153, "Revenue Generator", "Times Played", "totalPlays", 10, "Max", "save", false, 0);
    addNewAchievement(1154, "Mad Refresher", "Times Played", "totalPlays", 20, "Max", "save", false, 0);
    addNewAchievement(1155, "Test Drive", "Total Play Time (sec)", "totalPlayTime", 600, "Max", "save", false, 5);
    addNewAchievement(1156, "Time Waster", "Total Play Time (sec)", "totalPlayTime", 5400, "Max", "save", false, 5);
    addNewAchievement(1157, "Time Killer", "Total Play Time (sec)", "totalPlayTime", 18000, "Max", "save", false, 5);
    addNewAchievement(1158, "Day Splitter", "Total Play Time (sec)", "totalPlayTime", 86400, "Max", "save", false, 5);
    addNewAchievement(1159, "I Like Bad Games", "Total Play Time (sec)", "totalPlayTime", 259200, "Max", "save", false, 10);
    addNewAchievement(1160, "Week Splitter", "Total Play Time (sec)", "totalPlayTime", 604800, "Max", "save", false, 10);
    addNewAchievement(1161, "Time Badly Spent", "Total Play Time (sec)", "totalPlayTime", 2419200, "Max", "save", false, 15);
    addNewAchievement(1162, "Worst Hour Ever", "Session Play Time (sec)", "longestSession", 3600, "Max", "save", false, 5);
    addNewAchievement(1163, "Anti-Refresher", "Session Play Time (sec)", "longestSession", 7200, "Max", "save", false, 5);
    addNewAchievement(1164, "Anti-Rester", "Session Play Time (sec)", "longestSession", 10800, "Max", "save", false, 5);
    addNewAchievement(1165, "Anti-Life", "Session Play Time (sec)", "longestSession", 14400, "Max", "save", false, 10);
    addNewAchievement(1166, "This Screen is Boring", "Stat Views", "viewStat", 1, "Max", "save", false, 5);
    addNewAchievement(1167, "More Tasks, YAY!", "Quest Views", "viewQuest", 1, "Max", "save", false, 5);
    addNewAchievement(1168, "Customizer", "Option Views", "viewOption", 1, "Max", "save", false, 5);
    addNewAchievement(1169, "This is An Achievement", "Achievement Views", "viewAchievement", 1, "Max", "save", false, 5);
    addNewAchievement(1170, "Another Achievement", "Achievement Views", "viewAchievement", 10, "Max", "save", false, 5);
    addNewAchievement(1171, "Another Another Achievement", "Achievement Views", "viewAchievement", 50, "Max", "save", false, 5);
    addNewAchievement(1172, "Achievement Addict", "Achievement Views", "viewAchievement", 250, "Max", "save", false, 10);
    addNewAchievement(1173, "Safe Mode", "Manual Save", "manualSave", 1, "Max", "save", false, 5);
    addNewAchievement(1174, "Just In Case...", "Manual Save", "manualSave", 100, "Max", "save", false, 10);
    addNewAchievement(1175, "Ignorant", "Mute", "totalMute", 1, "Max", "save", false, 5);
    addNewAchievement(1176, "\'no unmute button 1/5\'", "Mute", "totalMute", 100, "Max", "save", false, 10);
    addNewAchievement(1180, "First Quests", "Random Quests Completed", "questTotal", 5, "Max", "save", false, 5);
    addNewAchievement(1181, "Beginner Quester", "Random Quests Completed", "questTotal", 10, "Max", "save", false, 5);
    addNewAchievement(1182, "Quester", "Random Quests Completed", "questTotal", 25, "Max", "save", false, 10);
    addNewAchievement(1183, "Quest Specialist", "Random Quests Completed", "questTotal", 50, "Max", "save", false, 10);
    addNewAchievement(1184, "Quest Maniac", "Random Quests Completed", "questTotal", 100, "Max", "save", false, 15);
    addNewAchievement(1185, "Quest Master", "Random Quests Completed", "questTotal", 250, "Max", "save", false, 15);
    addNewAchievement(1186, "Epic Quester", "Random Quests Completed", "questTotal", 500, "Max", "save", false, 20);
    addNewAchievement(1190, "lrn2spray", "Ants Sprayed", "antsSprayed", 1, "Max", "save", false, 10);
    addNewAchievement(1191, "Boost Saver", "Ants Sprayed", "antsSprayed", 250, "Max", "save", false, 10);
    addNewAchievement(1192, "Pest Hunter", "Ants Sprayed", "antsSprayed", 1000, "Max", "save", false, 10);
    addNewAchievement(1193, "Ant Hater", "Ants Sprayed", "antsSprayed", 5000, "Max", "save", false, 10);
    addNewAchievement(1194, "Ant Killer", "Ants Sprayed", "antsSprayed", 25000, "Max", "save", false, 15);
    addNewAchievement(1195, "Ant Destroyer", "Ants Sprayed", "antsSprayed", 100000, "Max", "save", false, 15);
    addNewAchievement(1196, "i-Idle: The Game", "Ants Sprayed", "antsSprayed", 500000, "Max", "save", false, 20);
    addNewAchievement(1200, "High Roller", "Unspent Coins", "coinMax", 50000, "Max", "save", false, 5);
    addNewAchievement(1201, "New Digit Unlocked!", "Unspent Coins", "coinMax", 100000, "Max", "save", false, 5);
    addNewAchievement(1202, "Money Saver", "Unspent Coins", "coinMax", 250000, "Max", "save", false, 5);
    addNewAchievement(1203, "Money Keeper", "Unspent Coins", "coinMax", 500000, "Max", "save", false, 5);
    addNewAchievement(1204, "Millionaire", "Unspent Coins", "coinMax", 1000000, "Max", "save", false, 10);
    addNewAchievement(1205, "Coin Collector", "Unspent Coins", "coinMax", 2500000, "Max", "save", false, 10);
    addNewAchievement(1206, "Richman", "Unspent Coins", "coinMax", 5000000, "Max", "save", false, 10);
    addNewAchievement(1207, "That\'s With Seven Zeros!", "Unspent Coins", "coinMax", 10000000, "Max", "save", false, 10);
    addNewAchievement(1208, "Too Much To Spend", "Unspent Coins", "coinMax", 25000000, "Max", "save", false, 15);
    addNewAchievement(1209, "Overcoins", "Unspent Coins", "coinMax", 50000000, "Max", "save", false, 15);
    addNewAchievement(1210, "Coin Gates", "Unspent Coins", "coinMax", 250000000, "Max", "save", false, 15);
    addNewAchievement(1211, "Billionaire", "Unspent Coins", "coinMax", 1000000000, "Max", "save", false, 15);
    addNewAchievement(1212, "God of Gold", "Unspent Coins", "coinMax", 10000000000, "Max", "save", false, 20);
    addNewAchievement(1213, "Mountain of Coins", "Unspent Coins", "coinMax", 100000000000, "Max", "save", false, 25);
    addNewAchievement(1300, "First Green Coins", "Unspent Green Coins", "greenCoinMax", 2500, "Max", "save", false, 5);
    addNewAchievement(1301, "Green Coin Saver", "Unspent Green Coins", "greenCoinMax", 10000, "Max", "save", false, 5);
    addNewAchievement(1302, "Green Coin Keeper", "Unspent Green Coins", "greenCoinMax", 25000, "Max", "save", false, 5);
    addNewAchievement(1303, "Green Coin Collector", "Unspent Green Coins", "greenCoinMax", 50000, "Max", "save", false, 5);
    addNewAchievement(1304, "Green Coin Hoarder", "Unspent Green Coins", "greenCoinMax", 100000, "Max", "save", false, 10);
    addNewAchievement(1305, "Green Coin Enthusiast", "Unspent Green Coins", "greenCoinMax", 250000, "Max", "save", false, 10);
    addNewAchievement(1306, "True Millionaire", "Unspent Green Coins", "greenCoinMax", 1000000, "Max", "save", false, 10);
    addNewAchievement(1307, "Green Coin Master", "Unspent Green Coins", "greenCoinMax", 2500000, "Max", "save", false, 10);
    addNewAchievement(1308, "Green Coin Grand Master", "Unspent Green Coins", "greenCoinMax", 5000000, "Max", "save", false, 15);
    addNewAchievement(1309, "Limit Breaker", "Unspent Green Coins", "greenCoinMax", 10000000, "Max", "save", false, 15);
    addNewAchievement(1310, "Coins Painted Green", "Unspent Green Coins", "greenCoinMax", 25000000, "Max", "save", false, 15);
    addNewAchievement(1311, "What\'s Special About These?", "Unspent Green Coins", "greenCoinMax", 50000000, "Max", "save", false, 20);
    addNewAchievement(1400, "First Blue Coins", "Unspent Blue Coins", "blueCoinMax", 100, "Max", "save", false, 5);
    addNewAchievement(1401, "Enough For Nothing", "Unspent Blue Coins", "blueCoinMax", 250, "Max", "save", false, 5);
    addNewAchievement(1402, "Blue Coin Saver", "Unspent Blue Coins", "blueCoinMax", 500, "Max", "save", false, 5);
    addNewAchievement(1403, "Blue Coin Keeper", "Unspent Blue Coins", "blueCoinMax", 1000, "Max", "save", false, 5);
    addNewAchievement(1404, "Blue Coin Collector", "Unspent Blue Coins", "blueCoinMax", 2500, "Max", "save", false, 10);
    addNewAchievement(1405, "Blue Coin Hoarder", "Unspent Blue Coins", "blueCoinMax", 5000, "Max", "save", false, 10);
    addNewAchievement(1406, "Blue Coin Enthusiast", "Unspent Blue Coins", "blueCoinMax", 10000, "Max", "save", false, 10);
    addNewAchievement(1407, "Blue Coin Master", "Unspent Blue Coins", "blueCoinMax", 25000, "Max", "save", false, 10);
    addNewAchievement(1408, "Blue Coin Grand Master", "Unspent Blue Coins", "blueCoinMax", 50000, "Max", "save", false, 15);
    addNewAchievement(1409, "Anti-Spender", "Unspent Blue Coins", "blueCoinMax", 100000, "Max", "save", false, 15);
    addNewAchievement(1410, "Feeling Rich", "Unspent Blue Coins", "blueCoinMax", 250000, "Max", "save", false, 15);
    addNewAchievement(1411, "Over-Sadist", "Unspent Blue Coins", "blueCoinMax", 500000, "Max", "save", false, 20);
    addNewAchievement(1500, "First Rewards", "Total Rewards", "rewardClaim", 50, "Max", "save", false, 5);
    addNewAchievement(1501, "More Rewards", "Total Rewards", "rewardClaim", 250, "Max", "save", false, 5);
    addNewAchievement(1502, "Moar Rewards", "Total Rewards", "rewardClaim", 500, "Max", "save", false, 5);
    addNewAchievement(1503, "Even More Rewards", "Total Rewards", "rewardClaim", 1000, "Max", "save", false, 5);
    addNewAchievement(1504, "Reward Claimer", "Total Rewards", "rewardClaim", 2500, "Max", "save", false, 10);
    addNewAchievement(1505, "Reward Collector", "Total Rewards", "rewardClaim", 5000, "Max", "save", false, 10);
    addNewAchievement(1506, "Reward Hoarder", "Total Rewards", "rewardClaim", 10000, "Max", "save", false, 10);
    addNewAchievement(1507, "Reward Specialist", "Total Rewards", "rewardClaim", 25000, "Max", "save", false, 10);
    addNewAchievement(1508, "Reward Addict", "Total Rewards", "rewardClaim", 50000, "Max", "save", false, 15);
    addNewAchievement(1509, "Reward Enthusiast", "Total Rewards", "rewardClaim", 100000, "Max", "save", false, 15);
    addNewAchievement(1510, "Reward Maniac", "Total Rewards", "rewardClaim", 250000, "Max", "save", false, 15);
    addNewAchievement(1511, "Reward Master", "Total Rewards", "rewardClaim", 500000, "Max", "save", false, 15);
    addNewAchievement(1512, "Reward Grand Master", "Total Rewards", "rewardClaim", 1000000, "Max", "save", false, 20);
    addNewAchievement(1513, "Reward Psychopath", "Total Rewards", "rewardClaim", 2500000, "Max", "save", false, 25);
    addNewAchievement(1600, "Tutorial Complete!", "Anti-Idle Rewards", "rewardClaimManual", 5, "Max", "save", false, 10);
    addNewAchievement(1601, "Getting The Idea", "Anti-Idle Rewards", "rewardClaimManual", 50, "Max", "save", false, 10);
    addNewAchievement(1602, "Junior Mouse Mover", "Anti-Idle Rewards", "rewardClaimManual", 100, "Max", "save", false, 10);
    addNewAchievement(1603, "Mouse Mover", "Anti-Idle Rewards", "rewardClaimManual", 250, "Max", "save", false, 10);
    addNewAchievement(1604, "Anti-IdleMode", "Anti-Idle Rewards", "rewardClaimManual", 500, "Max", "save", false, 15);
    addNewAchievement(1605, "Actually Playing", "Anti-Idle Rewards", "rewardClaimManual", 1000, "Max", "save", false, 15);
    addNewAchievement(1606, "True Anti-Idler", "Anti-Idle Rewards", "rewardClaimManual", 2500, "Max", "save", false, 15);
    addNewAchievement(1607, "The Meaning of Anti-Idle", "Anti-Idle Rewards", "rewardClaimManual", 4200, "Max", "save", false, 15);
    addNewAchievement(1608, "God of Anti-Idle", "Anti-Idle Rewards", "rewardClaimManual", 10000, "Max", "save", false, 20);
    addNewAchievement(1609, "Idle Mode Exists?", "Anti-Idle Rewards", "rewardClaimManual", 25000, "Max", "save", false, 20);
    addNewAchievement(1610, "Anti-Idle Maniac", "Anti-Idle Rewards", "rewardClaimManual", 50000, "Max", "save", false, 20);
    addNewAchievement(1611, "Anti-Idle Master", "Anti-Idle Rewards", "rewardClaimManual", 100000, "Max", "save", false, 20);
    addNewAchievement(1612, "Anti-Idle Grand Master", "Anti-Idle Rewards", "rewardClaimManual", 250000, "Max", "save", false, 25);
    addNewAchievement(1613, "Unbelievable Statistic", "Anti-Idle Rewards", "rewardClaimManual", 500000, "Max", "save", false, 30);
    addNewAchievement(1700, "Idle Mode GET!", "Idle Rewards", "rewardClaimAuto", 5, "Max", "save", false, 5);
    addNewAchievement(1701, "ZOMG ANOTHER IDLE GAEM!?", "Idle Rewards", "rewardClaimAuto", 50, "Max", "save", false, 5);
    addNewAchievement(1702, "Automatic Player", "Idle Rewards", "rewardClaimAuto", 100, "Max", "save", false, 5);
    addNewAchievement(1703, "True Automatic Player", "Idle Rewards", "rewardClaimAuto", 250, "Max", "save", false, 5);
    addNewAchievement(1704, "Idle Mode User", "Idle Rewards", "rewardClaimAuto", 500, "Max", "save", false, 10);
    addNewAchievement(1705, "Idle Mode Abuser", "Idle Rewards", "rewardClaimAuto", 1000, "Max", "save", false, 10);
    addNewAchievement(1706, "Robot Abuser", "Idle Rewards", "rewardClaimAuto", 2500, "Max", "save", false, 10);
    addNewAchievement(1707, "Worst Idle Game Ever!", "Idle Rewards", "rewardClaimAuto", 5000, "Max", "save", false, 10);
    addNewAchievement(1708, "God of Idle", "Idle Rewards", "rewardClaimAuto", 10000, "Max", "save", false, 15);
    addNewAchievement(1709, "Lazy Player", "Idle Rewards", "rewardClaimAuto", 25000, "Max", "save", false, 15);
    addNewAchievement(1710, "Idle Mode Maniac", "Idle Rewards", "rewardClaimAuto", 50000, "Max", "save", false, 15);
    addNewAchievement(1711, "Idle Mode Master", "Idle Rewards", "rewardClaimAuto", 100000, "Max", "save", false, 15);
    addNewAchievement(1712, "Idle Mode Grand Master", "Idle Rewards", "rewardClaimAuto", 250000, "Max", "save", false, 20);
    addNewAchievement(1713, "I Didn\'t Even Know", "Idle Rewards", "rewardClaimAuto", 500000, "Max", "save", false, 25);
    addNewAchievement(1800, "Faster", "% Anti-Idle Mode Speed", "progSpeedManual", 130, "Max", "save", false, 5);
    addNewAchievement(1801, "Even Faster", "% Anti-Idle Mode Speed", "progSpeedManual", 160, "Max", "save", false, 5);
    addNewAchievement(1802, "Anti-Idle Mode Madness", "% Anti-Idle Mode Speed", "progSpeedManual", 200, "Max", "save", false, 10);
    addNewAchievement(1803, "The Old Noob Days...", "% Anti-Idle Mode Speed", "progSpeedManual", 300, "Max", "save", false, 15);
    addNewAchievement(1850, "It\'s Still Slow!", "% Idle Mode Speed", "progSpeedAuto", 50, "Max", "save", false, 5);
    addNewAchievement(1851, "Idle Mode Madness", "% Idle Mode Speed", "progSpeedAuto", 100, "Max", "save", false, 5);
    addNewAchievement(1852, "More Idle Advantage!", "% Idle Mode Speed", "progSpeedAuto", 150, "Max", "save", false, 10);
    addNewAchievement(1910, "550% Boost GET!", "% Maximum Boost", "boostMax", 550, "Max", "root", false, 5);
    addNewAchievement(1900, "600% Boost GET!", "% Maximum Boost", "boostMax", 600, "Max", "root", false, 5);
    addNewAchievement(1911, "650% Boost GET!", "% Maximum Boost", "boostMax", 650, "Max", "root", false, 5);
    addNewAchievement(1901, "700% Boost GET!", "% Maximum Boost", "boostMax", 700, "Max", "root", false, 5);
    addNewAchievement(1912, "750% Boost GET!", "% Maximum Boost", "boostMax", 750, "Max", "root", false, 5);
    addNewAchievement(1902, "800% Boost GET!", "% Maximum Boost", "boostMax", 800, "Max", "root", false, 5);
    addNewAchievement(1913, "850% Boost GET!", "% Maximum Boost", "boostMax", 850, "Max", "root", false, 10);
    addNewAchievement(1903, "900% Boost GET!", "% Maximum Boost", "boostMax", 900, "Max", "root", false, 10);
    addNewAchievement(1904, "1000% Boost GET!", "% Maximum Boost", "boostMax", 1000, "Max", "root", false, 15);
    addNewAchievement(1905, "1100% Boost GET!", "% Maximum Boost", "boostMax", 1100, "Max", "root", false, 15);
    addNewAchievement(1906, "1200% Boost GET!", "% Maximum Boost", "boostMax", 1200, "Max", "root", false, 20);
    addNewAchievement(1907, "1300% Boost GET!", "% Maximum Boost", "boostMax", 1300, "Max", "root", false, 20);
    addNewAchievement(1908, "1400% Boost GET!", "% Maximum Boost", "boostMax", 1400, "Max", "root", false, 20);
    addNewAchievement(1909, "1500% Boost GET!", "% Maximum Boost", "boostMax", 1500, "Max", "root", false, 20);
    addNewAchievement(1970, "What is This?", "% Progress Bar Capacity", "progStore", 200, "Max", "save", false, 10);
    addNewAchievement(1971, "Noticeable Difference", "% Progress Bar Capacity", "progStore", 400, "Max", "save", false, 10);
    addNewAchievement(1972, "Progress Saver", "% Progress Bar Capacity", "progStore", 700, "Max", "save", false, 15);
    addNewAchievement(1973, "Progress Keeper", "% Progress Bar Capacity", "progStore", 1000, "Max", "save", false, 15);
    addNewAchievement(1974, "Progress Master", "% Progress Bar Capacity", "progStore", 2000, "Max", "save", false, 20);
    addNewAchievement(1975, "Progress Grand Master", "% Progress Bar Capacity", "progStore", 3000, "Max", "save", false, 20);
    addNewAchievement(1976, "Ultimate Progress Holder", "% Progress Bar Capacity", "progStore", 5000, "Max", "save", false, 50);
    addNewAchievement(2000, "Boost Generated!", "% Boost Gained", "boostPurchased", 300, "Max", "save", false, 5);
    addNewAchievement(2001, "Boost User", "% Boost Gained", "boostPurchased", 1000, "Max", "save", false, 5);
    addNewAchievement(2002, "Boost Lover", "% Boost Gained", "boostPurchased", 3000, "Max", "save", false, 5);
    addNewAchievement(2003, "Boost Master", "% Boost Gained", "boostPurchased", 10000, "Max", "save", false, 5);
    addNewAchievement(2004, "Boost Grand Master", "% Boost Gained", "boostPurchased", 30000, "Max", "save", false, 10);
    addNewAchievement(2005, "Boost King", "% Boost Gained", "boostPurchased", 100000, "Max", "save", false, 10);
    addNewAchievement(2006, "Power Leveler", "% Boost Gained", "boostPurchased", 300000, "Max", "save", false, 15);
    addNewAchievement(2100, "This is Called \'Harvest\'", "Tree Harvests", "harvestCount", 1, "Max", "save", false, 5);
    addNewAchievement(2101, "Another Harvest", "Tree Harvests", "harvestCount", 2, "Max", "save", false, 5);
    addNewAchievement(2102, "Yay Garden!", "Tree Harvests", "harvestCount", 5, "Max", "save", false, 5);
    addNewAchievement(2103, "First Trees", "Tree Harvests", "harvestCount", 10, "Max", "save", false, 5);
    addNewAchievement(2104, "Tree Hugger", "Tree Harvests", "harvestCount", 50, "Max", "save", false, 10);
    addNewAchievement(2105, "Tree Lover", "Tree Harvests", "harvestCount", 250, "Max", "save", false, 10);
    addNewAchievement(2106, "Green Thumb", "Tree Harvests", "harvestCount", 1000, "Max", "save", false, 10);
    addNewAchievement(2107, "*insert tree color* Thumb", "Tree Harvests", "harvestCount", 2500, "Max", "save", false, 10);
    addNewAchievement(2108, "Super Farmer", "Tree Harvests", "harvestCount", 5000, "Max", "save", false, 15);
    addNewAchievement(2109, "Garden Madness", "Tree Harvests", "harvestCount", 10000, "Max", "save", false, 15);
    addNewAchievement(2110, "Garden King", "Tree Harvests", "harvestCount", 25000, "Max", "save", false, 20);
    addNewAchievement(2111, "\'need autoharvest 1/5\'", "Tree Harvests", "harvestCount", 50000, "Max", "save", false, 25);
    addNewAchievement(2200, "Early Income", "Tree Income", "harvestCoin", 50000, "Max", "save", false, 5);
    addNewAchievement(2201, "Tree Harvester", "Tree Income", "harvestCoin", 250000, "Max", "save", false, 5);
    addNewAchievement(2202, "Coin Harvester", "Tree Income", "harvestCoin", 1000000, "Max", "save", false, 5);
    addNewAchievement(2203, "Expert Farmer", "Tree Income", "harvestCoin", 5000000, "Max", "save", false, 5);
    addNewAchievement(2204, "Late Income", "Tree Income", "harvestCoin", 25000000, "Max", "save", false, 10);
    addNewAchievement(2205, "Corny Trees", "Tree Income", "harvestCoin", 100000000, "Max", "save", false, 10);
    addNewAchievement(2206, "Coiny Trees", "Tree Income", "harvestCoin", 500000000, "Max", "save", false, 10);
    addNewAchievement(2207, "Diligent Farmer", "Tree Income", "harvestCoin", 2500000000, "Max", "save", false, 10);
    addNewAchievement(2208, "Famous Farmer", "Tree Income", "harvestCoin", 5000000000, "Max", "save", false, 15);
    addNewAchievement(2209, "No Need For Crops", "Tree Income", "harvestCoin", 10000000000, "Max", "save", false, 15);
    addNewAchievement(2210, "Achievement Harvester", "Tree Income", "harvestCoin", 25000000000, "Max", "save", false, 20);
    addNewAchievement(2211, "Master Harvester", "Tree Income", "harvestCoin", 50000000000, "Max", "save", false, 25);
    addNewAchievement(2300, "It\'s Now a \'Garden\'", "Garden Plots", "gardenCapacity", 2, "Max", "save", false, 5);
    addNewAchievement(2301, "More Trees", "Garden Plots", "gardenCapacity", 5, "Max", "save", false, 5);
    addNewAchievement(2302, "Even More Trees", "Garden Plots", "gardenCapacity", 10, "Max", "save", false, 5);
    addNewAchievement(2303, "Large Garden", "Garden Plots", "gardenCapacity", 15, "Max", "save", false, 10);
    addNewAchievement(2304, "Huge Garden", "Garden Plots", "gardenCapacity", 20, "Max", "save", false, 10);
    addNewAchievement(2305, "Garden Unlocked!", "Garden Plots", "gardenCapacity", 25, "Max", "save", false, 15);
    addNewAchievement(2400, "Newbie Gardener", "Garden EXP", "gardenEXP", 50, "Max", "save", false, 5);
    addNewAchievement(2401, "Gardener", "Garden EXP", "gardenEXP", 250, "Max", "save", false, 5);
    addNewAchievement(2402, "Awesome Gardener", "Garden EXP", "gardenEXP", 1000, "Max", "save", false, 5);
    addNewAchievement(2403, "Super Gardener", "Garden EXP", "gardenEXP", 10000, "Max", "save", false, 10);
    addNewAchievement(2404, "Epic Gardener", "Garden EXP", "gardenEXP", 100000, "Max", "save", false, 10);
    addNewAchievement(2405, "Ultimate Gardener", "Garden EXP", "gardenEXP", 1000000, "Max", "save", false, 20);
    addNewAchievement(2500, "First Garden Points", "Unspent Garden Points", "gardenPointMax", 100, "Max", "save", false, 5);
    addNewAchievement(2501, "More Garden Points", "Unspent Garden Points", "gardenPointMax", 500, "Max", "save", false, 5);
    addNewAchievement(2502, "Garden Point Saver", "Unspent Garden Points", "gardenPointMax", 2500, "Max", "save", false, 5);
    addNewAchievement(2503, "Garden Point Keeper", "Unspent Garden Points", "gardenPointMax", 10000, "Max", "save", false, 10);
    addNewAchievement(2504, "Garden Point Hoarder", "Unspent Garden Points", "gardenPointMax", 50000, "Max", "save", false, 10);
    addNewAchievement(2505, "Garden Master", "Unspent Garden Points", "gardenPointMax", 250000, "Max", "save", false, 15);
    addNewAchievement(2550, "Newbie Fighter", "Arena Rank", "arenaLevel", 10, "Max", "save", false, 5);
    addNewAchievement(2551, "Fighter", "Arena Rank", "arenaLevel", 30, "Max", "save", false, 10);
    addNewAchievement(2552, "Veteran Fighter", "Arena Rank", "arenaLevel", 70, "Max", "save", false, 15);
    addNewAchievement(2553, "Heroic Fighter", "Arena Rank", "arenaLevel", 120, "Max", "save", false, 20);
    addNewAchievement(2554, "Elite Fighter", "Arena Rank", "arenaLevel", 180, "Max", "save", false, 25);
    addNewAchievement(2555, "Master Fighter", "Arena Rank", "arenaLevel", 250, "Max", "save", false, 30);
    addNewAchievement(2556, "Ultimate Fighter", "Arena Rank", "arenaLevel", 350, "Max", "save", false, 35);
    addNewAchievement(2599, "First Kill", "Monster Kills", "arenaKill", 1, "Max", "save", false, 5);
    addNewAchievement(2600, "New to Arena", "Monster Kills", "arenaKill", 50, "Max", "save", false, 5);
    addNewAchievement(2601, "First Invisible Blood", "Monster Kills", "arenaKill", 100, "Max", "save", false, 5);
    addNewAchievement(2602, "Death to Monsters", "Monster Kills", "arenaKill", 250, "Max", "save", false, 5);
    addNewAchievement(2603, "Ouch!", "Monster Kills", "arenaKill", 500, "Max", "save", false, 5);
    addNewAchievement(2604, "Owie!!", "Monster Kills", "arenaKill", 1000, "Max", "save", false, 10);
    addNewAchievement(2605, "Arghhhhhhh...", "Monster Kills", "arenaKill", 2500, "Max", "save", false, 10);
    addNewAchievement(2606, "Monster Slayer", "Monster Kills", "arenaKill", 5000, "Max", "save", false, 10);
    addNewAchievement(2607, "Pain", "Monster Kills", "arenaKill", 10000, "Max", "save", false, 10);
    addNewAchievement(2608, "Painmaster", "Monster Kills", "arenaKill", 25000, "Max", "save", false, 15);
    addNewAchievement(2609, "Destroyer of Pixels", "Monster Kills", "arenaKill", 50000, "Max", "save", false, 15);
    addNewAchievement(2610, "That\'s Not Too Many!", "Monster Kills", "arenaKill", 100000, "Max", "save", false, 15);
    addNewAchievement(2611, "Battle Arena Addict", "Monster Kills", "arenaKill", 250000, "Max", "save", false, 15);
    addNewAchievement(2612, "Battle Arena Conqueror", "Monster Kills", "arenaKill", 500000, "Max", "save", false, 20);
    addNewAchievement(2630, "Newbie Hunter", "Monster Kills (non-weak)", "arenaKillWhite", 25, "Max", "save", false, 5);
    addNewAchievement(2631, "Novice Hunter", "Monster Kills (non-weak)", "arenaKillWhite", 100, "Max", "save", false, 5);
    addNewAchievement(2632, "Trainee", "Monster Kills (non-weak)", "arenaKillWhite", 500, "Max", "save", false, 5);
    addNewAchievement(2633, "Still In Training", "Monster Kills (non-weak)", "arenaKillWhite", 2500, "Max", "save", false, 5);
    addNewAchievement(2634, "True Hunter", "Monster Kills (non-weak)", "arenaKillWhite", 10000, "Max", "save", false, 10);
    addNewAchievement(2635, "Platinum Hero", "Monster Kills (non-weak)", "arenaKillWhite", 50000, "Max", "save", false, 10);
    addNewAchievement(2636, "Overgrind", "Monster Kills (non-weak)", "arenaKillWhite", 250000, "Max", "save", false, 15);
    addNewAchievement(2660, "It\'s Dangerous!", "Monster Kills (strong)", "arenaKillRed", 10, "Max", "save", false, 5);
    addNewAchievement(2661, "That Was Hard!", "Monster Kills (strong)", "arenaKillRed", 50, "Max", "save", false, 5);
    addNewAchievement(2662, "Risktaker", "Monster Kills (strong)", "arenaKillRed", 250, "Max", "save", false, 5);
    addNewAchievement(2663, "Potion Burner", "Monster Kills (strong)", "arenaKillRed", 1000, "Max", "save", false, 5);
    addNewAchievement(2664, "They Aren\'t That Strong!", "Monster Kills (strong)", "arenaKillRed", 5000, "Max", "save", false, 10);
    addNewAchievement(2665, "Amazing Hunter", "Monster Kills (strong)", "arenaKillRed", 25000, "Max", "save", false, 10);
    addNewAchievement(2666, "Legendary Hunter", "Monster Kills (strong)", "arenaKillRed", 100000, "Max", "save", false, 15);
    addNewAchievement(2690, "First Bosses", "Boss Kills", "arenaKillPurple", 5, "Max", "save", false, 5);
    addNewAchievement(2691, "More Bosses", "Boss Kills", "arenaKillPurple", 25, "Max", "save", false, 5);
    addNewAchievement(2692, "Even More Bosses", "Boss Kills", "arenaKillPurple", 100, "Max", "save", false, 5);
    addNewAchievement(2693, "Boss Hunter", "Boss Kills", "arenaKillPurple", 500, "Max", "save", false, 5);
    addNewAchievement(2694, "Boss Killer", "Boss Kills", "arenaKillPurple", 2500, "Max", "save", false, 10);
    addNewAchievement(2695, "Boss Slayer", "Boss Kills", "arenaKillPurple", 10000, "Max", "save", false, 10);
    addNewAchievement(2696, "Purple Power", "Boss Kills", "arenaKillPurple", 50000, "Max", "save", false, 15);
    addNewAchievement(2640, "First Rare Monster", "Rare Monster Kills", "arenaKillRare", 1, "Max", "save", false, 5);
    addNewAchievement(2641, "More Rare Monsters", "Rare Monster Kills", "arenaKillRare", 5, "Max", "save", false, 5);
    addNewAchievement(2642, "Even More Rare Monsters", "Rare Monster Kills", "arenaKillRare", 25, "Max", "save", false, 5);
    addNewAchievement(2643, "Rare Monster Hunter", "Rare Monster Kills", "arenaKillRare", 100, "Max", "save", false, 5);
    addNewAchievement(2644, "Rare Monster Killer", "Rare Monster Kills", "arenaKillRare", 500, "Max", "save", false, 10);
    addNewAchievement(2645, "Rare Monster Slayer", "Rare Monster Kills", "arenaKillRare", 2500, "Max", "save", false, 10);
    addNewAchievement(2646, "Rare Monster Master", "Rare Monster Kills", "arenaKillRare", 10000, "Max", "save", false, 15);
    addNewAchievement(2700, "Stronger", "Max Damage Dealt", "arenaMaxDamage", 500, "Max", "save", false, 5);
    addNewAchievement(2701, "Even Stronger", "Max Damage Dealt", "arenaMaxDamage", 2500, "Max", "save", false, 5);
    addNewAchievement(2702, "IT\'S OVER 9000!!!", "Max Damage Dealt", "arenaMaxDamage", 9001, "Max", "save", false, 5);
    addNewAchievement(2703, "Barbarian", "Max Damage Dealt", "arenaMaxDamage", 100000, "Max", "save", false, 5);
    addNewAchievement(2704, "Powerful Hero", "Max Damage Dealt", "arenaMaxDamage", 2000000, "Max", "save", false, 10);
    addNewAchievement(2705, "Slayer", "Max Damage Dealt", "arenaMaxDamage", 50000000, "Max", "save", false, 10);
    addNewAchievement(2706, "Master Slayer", "Max Damage Dealt", "arenaMaxDamage", 1000000000, "Max", "save", false, 15);
    addNewAchievement(2800, "First Attack", "Max Combo", "arenaMaxCombo", 1, "Max", "save", false, 5);
    addNewAchievement(2801, "What\'s a Combo?", "Max Combo", "arenaMaxCombo", 100, "Max", "save", false, 5);
    addNewAchievement(2802, "Can\'t Touch This!", "Max Combo", "arenaMaxCombo", 250, "Max", "save", false, 5);
    addNewAchievement(2803, "Good Combo!", "Max Combo", "arenaMaxCombo", 500, "Max", "save", false, 5);
    addNewAchievement(2804, "Nice Combo!", "Max Combo", "arenaMaxCombo", 1000, "Max", "save", false, 10);
    addNewAchievement(2805, "Amazing Combo!", "Max Combo", "arenaMaxCombo", 2500, "Max", "save", false, 10);
    addNewAchievement(2806, "Combo Maniac", "Max Combo", "arenaMaxCombo", 5000, "Max", "save", false, 15);
    addNewAchievement(2900, "Pixel? Coins?", "Unspent Pixels", "arenaPixelMax", 10000, "Max", "save", false, 5);
    addNewAchievement(2901, "Pixel Saver", "Unspent Pixels", "arenaPixelMax", 50000, "Max", "save", false, 5);
    addNewAchievement(2902, "Pixel Collector", "Unspent Pixels", "arenaPixelMax", 250000, "Max", "save", false, 5);
    addNewAchievement(2903, "A Lot of Pixels", "Unspent Pixels", "arenaPixelMax", 1000000, "Max", "save", false, 5);
    addNewAchievement(2904, "Pixel Hoarder", "Unspent Pixels", "arenaPixelMax", 5000000, "Max", "save", false, 10);
    addNewAchievement(2905, "Pixel Enthusiast", "Unspent Pixels", "arenaPixelMax", 25000000, "Max", "save", false, 10);
    addNewAchievement(2906, "Pixel King", "Unspent Pixels", "arenaPixelMax", 100000000, "Max", "save", false, 15);
    addNewAchievement(3000, "First Material", "Unused Crafting Material", "arenaCraftMax", 10000, "Max", "save", false, 10);
    addNewAchievement(3001, "Material Saver", "Unused Crafting Material", "arenaCraftMax", 50000, "Max", "save", false, 10);
    addNewAchievement(3002, "Material Collector", "Unused Crafting Material", "arenaCraftMax", 250000, "Max", "save", false, 10);
    addNewAchievement(3003, "Material Hoarder", "Unused Crafting Material", "arenaCraftMax", 1000000, "Max", "save", false, 10);
    addNewAchievement(3004, "Material Enthusiast", "Unused Crafting Material", "arenaCraftMax", 5000000, "Max", "save", false, 15);
    addNewAchievement(3005, "Blacksmith", "Unused Crafting Material", "arenaCraftMax", 25000000, "Max", "save", false, 15);
    addNewAchievement(3006, "Battle Arena Inc.", "Unused Crafting Material", "arenaCraftMax", 100000000, "Max", "save", false, 20);
    addNewAchievement(3100, "First Loots", "Loots", "arenaLoot", 500, "Max", "save", false, 10);
    addNewAchievement(3101, "Junior Looter", "Loots", "arenaLoot", 1000, "Max", "save", false, 10);
    addNewAchievement(3102, "Looter", "Loots", "arenaLoot", 2500, "Max", "save", false, 15);
    addNewAchievement(3103, "Senior Looter", "Loots", "arenaLoot", 5000, "Max", "save", false, 15);
    addNewAchievement(3104, "Reward For Being Active", "Loots", "arenaLoot", 10000, "Max", "save", false, 20);
    addNewAchievement(3105, "Loot Enthusiast", "Loots", "arenaLoot", 25000, "Max", "save", false, 20);
    addNewAchievement(3106, "Master of Looting", "Loots", "arenaLoot", 50000, "Max", "save", false, 25);
    addNewAchievement(3200, "Healthy Hunter", "Base MaxHP", "arenaMaxHealth", 650000, "Max", "save", false, 30);
    addNewAchievement(3201, "Spellcaster", "Base MaxMP", "arenaMaxMana", 130000, "Max", "save", false, 30);
    addNewAchievement(3202, "Powerful", "Base Attack", "arenaAttack", 65000, "Max", "save", false, 30);
    addNewAchievement(3203, "Defensive", "Base Defense", "arenaDefense", 65000, "Max", "save", false, 30);
    addNewAchievement(3204, "Accurate", "Base Accuracy", "arenaAccuracy", 6500, "Max", "save", false, 30);
    addNewAchievement(3205, "Evasive", "Base Evasion", "arenaEvasion", 6500, "Max", "save", false, 30);
    addNewAchievement(3206, "Enhancement King", "Items Enhanced to +10", "arenaMaxEnhance", 10, "Max", "save", false, 30);
    addNewAchievement(3300, "Mission Complete!", "Missions Completed", "arenaMission", 1, "Max", "save", false, 5);
    addNewAchievement(3301, "Mission Kommander\'s Helper", "Mission Kommander\'s Mission", "arenaKommanderComplete", 1, "Max", "save", false, 5);
    addNewAchievement(3302, "Mission Kommander\'s Successor", "Mission Kommander\'s Mission", "arenaKommanderComplete", 25, "Max", "save", false, 10);
    addNewAchievement(3303, "Lab Defender", "Defend Mission", "arenaDefendComplete", 1, "Max", "save", false, 10);
    addNewAchievement(3304, "The Future\'s Protector", "Defend Mission", "arenaDefendComplete", 25, "Max", "save", false, 15);
    addNewAchievement(3305, "Alien Destroyer", "Prehistoric Mission", "arenaPrehistoricComplete", 1, "Max", "save", false, 15);
    addNewAchievement(3306, "The Past\'s Protector", "Prehistoric Mission", "arenaPrehistoricComplete", 25, "Max", "save", false, 20);
    addNewAchievement(3400, "What\'s a Bestiary?", "Bestiary Level", "bestiaryLevel", 100, "Max", "root", false, 5);
    addNewAchievement(3401, "Stamp Collector", "Bestiary Level", "bestiaryLevel", 200, "Max", "root", false, 5);
    addNewAchievement(3402, "Monster Collector", "Bestiary Level", "bestiaryLevel", 300, "Max", "root", false, 10);
    addNewAchievement(3403, "Dr. Monster", "Bestiary Level", "bestiaryLevel", 400, "Max", "root", false, 10);
    addNewAchievement(3404, "Monster Expert", "Bestiary Level", "bestiaryLevel", 500, "Max", "root", false, 15);
    addNewAchievement(3405, "Variety Killer", "Bestiary Level", "bestiaryLevel", 625, "Max", "root", false, 15);
    addNewAchievement(3406, "Knowledgeable Fighter", "Bestiary Level", "bestiaryLevel", 750, "Max", "root", false, 20);
    addNewAchievement(3407, "Information Addict", "Bestiary Level", "bestiaryLevel", 875, "Max", "root", false, 20);
    addNewAchievement(3408, "Everything Killer", "Bestiary Level", "bestiaryLevel", 1000, "Max", "root", false, 25);
    addNewAchievement(3409, "Master Explorer", "Bestiary Level", "bestiaryLevel", 1150, "Max", "root", false, 25);
    addNewAchievement(3410, "Master Researcher", "Bestiary Level", "bestiaryLevel", 1300, "Max", "root", false, 30);
    addNewAchievement(3411, "Bestiary Master", "Bestiary Level", "bestiaryLevel", 1500, "Max", "root", false, 50);
    addNewAchievement(3500, "Beginner Training Zone Master", "Area Kills", "zoneKill1", 500, "Max", "root", false, 10);
    addNewAchievement(3501, "Advanced Training Zone Master", "Area Kills", "zoneKill2", 1000, "Max", "root", false, 10);
    addNewAchievement(3502, "Mystic Forest Master", "Area Kills", "zoneKill3", 1000, "Max", "root", false, 10);
    addNewAchievement(3503, "Night Forest Master", "Area Kills", "zoneKill4", 2500, "Max", "root", false, 15);
    addNewAchievement(3504, "Sky Master", "Area Kills", "zoneKill5", 2500, "Max", "root", false, 15);
    addNewAchievement(3505, "Deadlands Master", "Area Kills", "zoneKill6", 5000, "Max", "root", false, 15);
    addNewAchievement(3506, "Desert Master", "Area Kills", "zoneKill8", 5000, "Max", "root", false, 15);
    addNewAchievement(3507, "Beach Master", "Area Kills", "zoneKill9", 10000, "Max", "root", false, 20);
    addNewAchievement(3508, "Binary Battlefield Master", "Area Kills", "zoneKill10", 10000, "Max", "root", false, 20);
    addNewAchievement(3509, "Dragon Cave Master", "Area Kills", "zoneKill11", 25000, "Max", "root", false, 20);
    addNewAchievement(3510, "Pirate Ship Master", "Area Kills", "zoneKill12", 25000, "Max", "root", false, 20);
    addNewAchievement(3511, "Triangle Land Master", "Area Kills", "zoneKill13", 50000, "Max", "root", false, 25);
    addNewAchievement(3512, "Polluted Sky Master", "Area Kills", "zoneKill15", 2500, "Max", "root", false, 15);
    addNewAchievement(3513, "Secret Beach Master", "Area Kills", "zoneKill16", 5000, "Max", "root", false, 20);
    addNewAchievement(3514, "Scary Graveyard Master", "Area Kills", "zoneKill17", 5000, "Max", "root", false, 20);
    addNewAchievement(3515, "Dark Portal Master", "Area Kills", "zoneKill18", 1000, "Max", "root", false, 20);
    addNewAchievement(3516, "Dark Pyramid Master", "Area Kills", "zoneKill20", 10000, "Max", "root", false, 20);
    addNewAchievement(3517, "Secret Lab Master", "Area Kills", "zoneKill25", 500, "Max", "root", false, 20);
    addNewAchievement(3518, "Volcano Peak Master", "Area Kills", "zoneKill26", 5000, "Max", "root", false, 20);
    addNewAchievement(3519, "Frosty Zone Master", "Area Kills", "zoneKill27", 5000, "Max", "root", false, 20);
    addNewAchievement(3520, "Ship Interior Master", "Area Kills", "zoneKill28", 25000, "Max", "root", false, 25);
    addNewAchievement(3521, "The Special Arena Master", "Area Kills", "zoneKill29", 500, "Max", "root", false, 25);
    addNewAchievement(3522, "Prehistoric Area Master", "Area Kills", "zoneKill30", 10000, "Max", "root", false, 20);
    addNewAchievement(3600, "Button Machine GET!", "Button Presses", "buttonPress", 500, "Max", "save", false, 5);
    addNewAchievement(3601, "Button Presser", "Button Presses", "buttonPress", 1000, "Max", "save", false, 5);
    addNewAchievement(3602, "Button Masher", "Button Presses", "buttonPress", 2500, "Max", "save", false, 5);
    addNewAchievement(3603, "Button M4sh3r", "Button Presses", "buttonPress", 5000, "Max", "save", false, 5);
    addNewAchievement(3604, "Mouse Masher", "Button Presses", "buttonPress", 10000, "Max", "save", false, 10);
    addNewAchievement(3605, "Bored Machine", "Button Presses", "buttonPress", 25000, "Max", "save", false, 10);
    addNewAchievement(3606, "Button Mashine", "Button Presses", "buttonPress", 50000, "Max", "save", false, 15);
    addNewAchievement(3700, "Perfect Click!", "Perfect Clicks", "buttonPerfect", 1, "Max", "save", false, 10);
    addNewAchievement(3701, "Another Perfect Click", "Perfect Clicks", "buttonPerfect", 2, "Max", "save", false, 10);
    addNewAchievement(3702, "Yet Another Perfect Click", "Perfect Clicks", "buttonPerfect", 5, "Max", "save", false, 10);
    addNewAchievement(3703, "Accurate Clicker", "Perfect Clicks", "buttonPerfect", 25, "Max", "save", false, 10);
    addNewAchievement(3704, "More Accurate Clicker", "Perfect Clicks", "buttonPerfect", 50, "Max", "save", false, 15);
    addNewAchievement(3705, "Perfect Clicker", "Perfect Clicks", "buttonPerfect", 100, "Max", "save", false, 15);
    addNewAchievement(3706, "Pixel Perfect", "Perfect Clicks", "buttonPerfect", 250, "Max", "save", false, 20);
    addNewAchievement(3800, "Button Breaker", "Button Breaks", "buttonBreak", 1, "Max", "save", false, 5);
    addNewAchievement(3801, "Button Killer", "Button Breaks", "buttonBreak", 2, "Max", "save", false, 5);
    addNewAchievement(3802, "Button Destroyer", "Button Breaks", "buttonBreak", 5, "Max", "save", false, 5);
    addNewAchievement(3803, "Mouse Breaker", "Button Breaks", "buttonBreak", 10, "Max", "save", false, 5);
    addNewAchievement(3804, "Mouse Destroyer", "Button Breaks", "buttonBreak", 25, "Max", "save", false, 10);
    addNewAchievement(3805, "Warning Ignorer", "Button Breaks", "buttonBreak", 50, "Max", "save", false, 10);
    addNewAchievement(3806, "Button Hater", "Button Breaks", "buttonBreak", 100, "Max", "save", false, 15);
    addNewAchievement(3900, "100 Hit Combo!", "Max Hit Combo", "buttonMaxCombo", 100, "Max", "save", false, 10);
    addNewAchievement(3901, "Doing It Right", "Max Hit Combo", "buttonMaxCombo", 250, "Max", "save", false, 10);
    addNewAchievement(3902, "Fast Clicker", "Max Hit Combo", "buttonMaxCombo", 500, "Max", "save", false, 10);
    addNewAchievement(3903, "Faster Clicker", "Max Hit Combo", "buttonMaxCombo", 1000, "Max", "save", false, 10);
    addNewAchievement(3904, "Ultimate Clicker", "Max Hit Combo", "buttonMaxCombo", 2500, "Max", "save", false, 15);
    addNewAchievement(3905, "Combo Master", "Max Hit Combo", "buttonMaxCombo", 5000, "Max", "save", false, 15);
    addNewAchievement(3906, "Finger Breaker", "Max Hit Combo", "buttonMaxCombo", 10000, "Max", "save", false, 20);
    addNewAchievement(4000, "Printer Upgraded!", "Money Printer Level", "printerLevel", 2, "Max", "save", false, 5);
    addNewAchievement(4001, "Illegal Upgrades", "Money Printer Level", "printerLevel", 5, "Max", "save", false, 5);
    addNewAchievement(4002, "Extremely Illegal", "Money Printer Level", "printerLevel", 10, "Max", "save", false, 5);
    addNewAchievement(4003, "Coins Spent For More Coins", "Money Printer Level", "printerLevel", 25, "Max", "save", false, 10);
    addNewAchievement(4004, "It\'s Worth Upgrading!", "Money Printer Level", "printerLevel", 50, "Max", "save", false, 10);
    addNewAchievement(4005, "Max Upgrader (or maybe not)", "Money Printer Level", "printerLevel", 100, "Max", "save", false, 15);
    addNewAchievement(4100, "First Illegal Money", "Illegal Coins (Million)", "totalPrinterMillion", 1, "Max", "save", false, 5);
    addNewAchievement(4101, "It Prints... Coins?", "Illegal Coins (Million)", "totalPrinterMillion", 2, "Max", "save", false, 5);
    addNewAchievement(4102, "It Prints Money!", "Illegal Coins (Million)", "totalPrinterMillion", 5, "Max", "save", false, 5);
    addNewAchievement(4103, "Going Illegal", "Illegal Coins (Million)", "totalPrinterMillion", 10, "Max", "save", false, 5);
    addNewAchievement(4104, "More Illegal Money", "Illegal Coins (Million)", "totalPrinterMillion", 25, "Max", "save", false, 10);
    addNewAchievement(4105, "Even More Illegal Money", "Illegal Coins (Million)", "totalPrinterMillion", 50, "Max", "save", false, 10);
    addNewAchievement(4106, "A Lot of Illegal Money", "Illegal Coins (Million)", "totalPrinterMillion", 100, "Max", "save", false, 10);
    addNewAchievement(4107, "\'This is illegal, you know\'", "Illegal Coins (Million)", "totalPrinterMillion", 250, "Max", "save", false, 15);
    addNewAchievement(4200, "Battery Charged!", "Battery Charges", "totalPrinterCharge", 250, "Max", "save", false, 5);
    addNewAchievement(4201, "First Charges", "Battery Charges", "totalPrinterCharge", 500, "Max", "save", false, 5);
    addNewAchievement(4202, "Battery Charger", "Battery Charges", "totalPrinterCharge", 1000, "Max", "save", false, 5);
    addNewAchievement(4203, "Printer User", "Battery Charges", "totalPrinterCharge", 2500, "Max", "save", false, 5);
    addNewAchievement(4204, "Haven\'t Forgotten", "Battery Charges", "totalPrinterCharge", 5000, "Max", "save", false, 10);
    addNewAchievement(4205, "Battery Supercharged!", "Battery Charges", "totalPrinterCharge", 10000, "Max", "save", false, 10);
    addNewAchievement(4206, "Chargin\' Mah Battery", "Battery Charges", "totalPrinterCharge", 25000, "Max", "save", false, 15);
    addNewAchievement(4300, "Pong Newbie", "Pong High Score", "highPong", 200000, "Max", "save", false, 5);
    addNewAchievement(4301, "Pongregate", "Pong High Score", "highPong", 275000, "Max", "save", false, 10);
    addNewAchievement(4302, "Pwngregate", "Pong High Score", "highPong", 375000, "Max", "save", false, 15);
    addNewAchievement(4303, "Pwn-greg-ate", "Pong High Score", "highPong", 500000, "Max", "save", false, 20);
    addNewAchievement(4350, "Pong Player", "Pong Total Score", "totalPong", 1000000, "Max", "save", false, 5);
    addNewAchievement(4351, "Pong Lover", "Pong Total Score", "totalPong", 2500000, "Max", "save", false, 5);
    addNewAchievement(4352, "Pong-a-Lot", "Pong Total Score", "totalPong", 5000000, "Max", "save", false, 10);
    addNewAchievement(4400, "Newbie Avoider", "Avoidance High Score", "highAvoidance", 125000, "Max", "save", false, 5);
    addNewAchievement(4401, "Good Avoider", "Avoidance High Score", "highAvoidance", 175000, "Max", "save", false, 10);
    addNewAchievement(4402, "Amazing Avoider", "Avoidance High Score", "highAvoidance", 250000, "Max", "save", false, 15);
    addNewAchievement(4403, "Master Avoider", "Avoidance High Score", "highAvoidance", 350000, "Max", "save", false, 20);
    addNewAchievement(4450, "Avoidance Player", "Avoidance Total Score", "totalAvoidance", 750000, "Max", "save", false, 5);
    addNewAchievement(4451, "Avoidance Lover", "Avoidance Total Score", "totalAvoidance", 1500000, "Max", "save", false, 5);
    addNewAchievement(4452, "Just Avoid", "Avoidance Total Score", "totalAvoidance", 3000000, "Max", "save", false, 10);
    addNewAchievement(4500, "Math Solver", "Math High Score", "highMath", 75000, "Max", "save", false, 5);
    addNewAchievement(4501, "Math Master", "Math High Score", "highMath", 125000, "Max", "save", false, 10);
    addNewAchievement(4502, "Alternative Calculator", "Math High Score", "highMath", 200000, "Max", "save", false, 15);
    addNewAchievement(4503, "Lower The Requirements!", "Math High Score", "highMath", 300000, "Max", "save", false, 20);
    addNewAchievement(4550, "Math Master Player", "Math Total Score", "totalMath", 1000000, "Max", "save", false, 5);
    addNewAchievement(4551, "Math Master Lover", "Math Total Score", "totalMath", 2500000, "Max", "save", false, 5);
    addNewAchievement(4552, "Math Like Mad", "Math Total Score", "totalMath", 5000000, "Max", "save", false, 10);
    addNewAchievement(4600, "Mole Whacker", "Whack-a-greg High Score", "highWhack", 600000, "Max", "save", false, 5);
    addNewAchievement(4601, "Greg Whacker", "Whack-a-greg High Score", "highWhack", 900000, "Max", "save", false, 10);
    addNewAchievement(4602, "Quick Reaction", "Whack-a-greg High Score", "highWhack", 1200000, "Max", "save", false, 15);
    addNewAchievement(4603, "Greg Destroyer", "Whack-a-greg High Score", "highWhack", 1500000, "Max", "save", false, 20);
    addNewAchievement(4650, "Whack-a-greg Player", "Whack-a-greg Total Score", "totalWhack", 3000000, "Max", "save", false, 5);
    addNewAchievement(4651, "Whack-a-greg Lover", "Whack-a-greg Total Score", "totalWhack", 7500000, "Max", "save", false, 5);
    addNewAchievement(4652, "Greg Clicker", "Whack-a-greg Total Score", "totalWhack", 15000000, "Max", "save", false, 10);
    addNewAchievement(4700, "What Are These Numbers?", "MindSweeper High Score", "highMind", 700000, "Max", "save", false, 5);
    addNewAchievement(4701, "That\'s How You Play It", "MindSweeper High Score", "highMind", 900000, "Max", "save", false, 10);
    addNewAchievement(4702, "Goal Hunter", "MindSweeper High Score", "highMind", 1200000, "Max", "save", false, 15);
    addNewAchievement(4703, "Mind Destroyer", "MindSweeper High Score", "highMind", 1600000, "Max", "save", false, 20);
    addNewAchievement(4750, "MindSweeper Player", "MindSweeper Total Score", "totalMind", 2000000, "Max", "save", false, 5);
    addNewAchievement(4751, "MindSweeper Lover", "MindSweeper Total Score", "totalMind", 5000000, "Max", "save", false, 5);
    addNewAchievement(4752, "Square Clicker", "MindSweeper Total Score", "totalMind", 10000000, "Max", "save", false, 10);
    addNewAchievement(4770, "Balance Newbie", "Balance 3 High Score", "highBalance", 300000, "Max", "save", false, 5);
    addNewAchievement(4771, "Block Dropper", "Balance 3 High Score", "highBalance", 500000, "Max", "save", false, 10);
    addNewAchievement(4772, "Balance Master", "Balance 3 High Score", "highBalance", 800000, "Max", "save", false, 15);
    addNewAchievement(4773, "Perfect Harmony", "Balance 3 High Score", "highBalance", 1200000, "Max", "save", false, 20);
    addNewAchievement(4780, "Balance 3 Player", "Balance 3 Total Score", "totalBalance", 2000000, "Max", "save", false, 5);
    addNewAchievement(4781, "Balance 3 Lover", "Balance 3 Total Score", "totalBalance", 5000000, "Max", "save", false, 5);
    addNewAchievement(4782, "Block Destroyer", "Balance 3 Total Score", "totalBalance", 10000000, "Max", "save", false, 10);
    addNewAchievement(4800, "Finally Won", "Simple Race Wins", "stadiumRace", 1, "Max", "save", false, 5);
    addNewAchievement(4801, "Newbie Racer", "Simple Race Wins", "stadiumRace", 10, "Max", "save", false, 5);
    addNewAchievement(4802, "Diligent Racer", "Simple Race Wins", "stadiumRace", 50, "Max", "save", false, 10);
    addNewAchievement(4810, "Stadium Hero", "Simple Race Wins (Impossible)", "stadiumImpossibleRace", 1, "Max", "save", false, 50);
    addNewAchievement(4820, "Item User", "Item Fight Wins", "stadiumItem", 1, "Max", "save", false, 5);
    addNewAchievement(4821, "Item Racer", "Item Fight Wins", "stadiumItem", 10, "Max", "save", false, 5);
    addNewAchievement(4822, "Diligent Racer (Again!)", "Item Fight Wins", "stadiumItem", 50, "Max", "save", false, 10);
    addNewAchievement(4830, "Stadium Superstar", "Item Fight Wins (Impossible)", "stadiumImpossibleItem", 1, "Max", "save", false, 50);
    addNewAchievement(4840, "Death Match Winner", "Death Match Wins", "stadiumDeathMatch", 1, "Max", "save", false, 5);
    addNewAchievement(4841, "Death Match Expert", "Death Match Wins", "stadiumDeathMatch", 2, "Max", "save", false, 5);
    addNewAchievement(4842, "Death Match Pro", "Death Match Wins", "stadiumDeathMatch", 4, "Max", "save", false, 10);
    addNewAchievement(4843, "Death Match Master", "Death Match Wins", "stadiumDeathMatch", 7, "Max", "save", false, 15);
    addNewAchievement(4850, "Keybasher", "Highest PWNts", "stadiumBestDeathMatch", 400, "Max", "save", false, 5);
    addNewAchievement(4851, "Troublemaker", "Highest PWNts", "stadiumBestDeathMatch", 500, "Max", "save", false, 10);
    addNewAchievement(4852, "Ultimate PWNer", "Highest PWNts", "stadiumBestDeathMatch", 600, "Max", "save", false, 15);
    addNewAchievement(4853, "iPwn", "Highest PWNts", "stadiumBestDeathMatch", 700, "Max", "save", false, 20);
    addNewAchievement(4860, "Good Start", "Best Race Time (ms)", "stadiumBestTime", 13500, "Min", "save", false, 5);
    addNewAchievement(4861, "Great Start", "Best Race Time (ms)", "stadiumBestTime", 12000, "Min", "save", false, 5);
    addNewAchievement(4862, "Not a Start", "Best Race Time (ms)", "stadiumBestTime", 10500, "Min", "save", false, 10);
    addNewAchievement(4863, "Awesome Speed", "Best Race Time (ms)", "stadiumBestTime", 9000, "Min", "save", false, 15);
    addNewAchievement(4864, "Speed Runner", "Best Race Time (ms)", "stadiumBestTime", 7500, "Min", "save", false, 20);
    addNewAchievement(4870, "Beginner\'s Luck", "Correct Bets", "stadiumBetCorrect", 1, "Max", "save", false, 5);
    addNewAchievement(4871, "Better Bettor", "Correct Bets", "stadiumBetCorrect", 10, "Max", "save", false, 10);
    addNewAchievement(4880, "Lucky Money", "Bet Winnings (Coins)", "stadiumBetWinningCoin", 5000000, "Max", "save", false, 5);
    addNewAchievement(4881, "Big Winnings", "Bet Winnings (Coins)", "stadiumBetWinningCoin", 100000000, "Max", "save", false, 10);
    addNewAchievement(4890, "Future Teller", "Bet Winnings (Tokens)", "stadiumBetWinningToken", 250, "Max", "save", false, 5);
    addNewAchievement(4891, "Lucky Star", "Bet Winnings (Tokens)", "stadiumBetWinningToken", 5000, "Max", "save", false, 10);
    addNewAchievement(4900, "Energetic Racer", "Stadium Max Energy", "stadiumEnergy", 50, "Max", "save", false, 10);
    addNewAchievement(4910, "Quick Runner", "Stadium Accel", "stadiumAccel", 50, "Max", "save", false, 10);
    addNewAchievement(4920, "Speed of Light", "Stadium Max Speed", "stadiumMaxSpeed", 50, "Max", "save", false, 10);
    addNewAchievement(4930, "Decent Starter", "Stadium Starting Speed", "stadiumStartSpeed", 50, "Max", "save", false, 10);
    addNewAchievement(4940, "Dash Master", "Stadium Dash", "stadiumDash", 50, "Max", "save", false, 10);
    addNewAchievement(4950, "Reach For The Stars", "Stadium Jump", "stadiumJump", 50, "Max", "save", false, 10);
    addNewAchievement(4960, "Shifter", "Stadium Boost", "stadiumBoost", 50, "Max", "save", false, 10);
    addNewAchievement(4970, "Rewarded Racer", "Stadium Reward", "stadiumReward", 50, "Max", "save", false, 10);
    addNewAchievement(5000, "TukkunFCG Novice", "TukkunFCG Level", "fcgLevel", 2, "Max", "save", false, 5);
    addNewAchievement(5001, "TukkunFCG Trainee", "TukkunFCG Level", "fcgLevel", 5, "Max", "save", false, 5);
    addNewAchievement(5002, "TukkunFCG Player", "TukkunFCG Level", "fcgLevel", 8, "Max", "save", false, 10);
    addNewAchievement(5003, "TukkunFCG Expert", "TukkunFCG Level", "fcgLevel", 11, "Max", "save", false, 10);
    addNewAchievement(5004, "TukkunFCG Enthusiast", "TukkunFCG Level", "fcgLevel", 14, "Max", "save", false, 15);
    addNewAchievement(5005, "TukkunFCG Master", "TukkunFCG Level", "fcgLevel", 17, "Max", "save", false, 15);
    addNewAchievement(5006, "TukkunFCG Grand Master", "TukkunFCG Level", "fcgLevel", 20, "Max", "save", false, 25);
    addNewAchievement(5100, "Learning to Play", "TukkunFCG Wins", "fcgWin", 1, "Max", "save", false, 5);
    addNewAchievement(5101, "Learning to Win", "TukkunFCG Wins", "fcgWin", 2, "Max", "save", false, 5);
    addNewAchievement(5102, "Getting Better", "TukkunFCG Wins", "fcgWin", 5, "Max", "save", false, 5);
    addNewAchievement(5103, "Card Specialist", "TukkunFCG Wins", "fcgWin", 10, "Max", "save", false, 5);
    addNewAchievement(5104, "Cardmaster", "TukkunFCG Wins", "fcgWin", 25, "Max", "save", false, 10);
    addNewAchievement(5105, "Skillful TukkunFCG Player", "TukkunFCG Wins", "fcgWin", 50, "Max", "save", false, 10);
    addNewAchievement(5106, "A Winner is You", "TukkunFCG Wins", "fcgWin", 100, "Max", "save", false, 15);
    addNewAchievement(5206, "Level 1 Master", "TukkunFCG Level 1 Wins", "fcgLevel1", 10, "Max", "save", false, 5);
    addNewAchievement(5200, "Level 2 Master", "TukkunFCG Level 2 Wins", "fcgLevel2", 10, "Max", "save", false, 5);
    addNewAchievement(5201, "Level 3 Master", "TukkunFCG Level 3 Wins", "fcgLevel3", 10, "Max", "save", false, 10);
    addNewAchievement(5202, "Level 4 Master", "TukkunFCG Level 4 Wins", "fcgLevel4", 10, "Max", "save", false, 10);
    addNewAchievement(5203, "Kongrebasher", "TukkunFCG Level 5 Wins", "fcgLevel5", 10, "Max", "save", false, 15);
    addNewAchievement(5204, "Level 6 Master", "TukkunFCG Level 6 Wins", "fcgLevel6", 10, "Max", "save", false, 15);
    addNewAchievement(5205, "Level 7 Master", "TukkunFCG Level 7 Wins", "fcgLevel7", 10, "Max", "save", false, 20);
    addNewAchievement(5300, "Profit!", "LolMarket Profit", "lolMaxProfit", 5000, "Max", "save", false, 5);
    addNewAchievement(5301, "More Profit!", "LolMarket Profit", "lolMaxProfit", 25000, "Max", "save", false, 5);
    addNewAchievement(5302, "Even More Profit!", "LolMarket Profit", "lolMaxProfit", 100000, "Max", "save", false, 10);
    addNewAchievement(5303, "Gem Trader", "LolMarket Profit", "lolMaxProfit", 500000, "Max", "save", false, 10);
    addNewAchievement(5304, "LolMarket Master", "LolMarket Profit", "lolMaxProfit", 2500000, "Max", "save", false, 15);
    addNewAchievement(5305, "LolMarket Grand Master", "LolMarket Profit", "lolMaxProfit", 10000000, "Max", "save", false, 15);
    addNewAchievement(5306, "\'higher gc cap plz\'", "LolMarket Profit", "lolMaxProfit", 50000000, "Max", "save", false, 25);
    addNewAchievement(5400, "Newbie Adventurer", "Adventure Reputation", "awesomeMaxReputation", 25, "Max", "save", false, 5);
    addNewAchievement(5401, "Junior Adventurer", "Adventure Reputation", "awesomeMaxReputation", 50, "Max", "save", false, 5);
    addNewAchievement(5402, "Adventurer", "Adventure Reputation", "awesomeMaxReputation", 100, "Max", "save", false, 10);
    addNewAchievement(5403, "Diligent Adventurer", "Adventure Reputation", "awesomeMaxReputation", 250, "Max", "save", false, 10);
    addNewAchievement(5404, "Famous Adventurer", "Adventure Reputation", "awesomeMaxReputation", 500, "Max", "save", false, 15);
    addNewAchievement(5405, "Master Adventurer", "Adventure Reputation", "awesomeMaxReputation", 1000, "Max", "save", false, 15);
    addNewAchievement(5406, "Epic Adventurer", "Adventure Reputation", "awesomeMaxReputation", 5000, "Max", "save", false, 25);
    addNewAchievement(5601, "Fishing Newbie", "Fishing Skill", "fishLevel", 2, "Max", "save", false, 5);
    addNewAchievement(5602, "Fishing Novice", "Fishing Skill", "fishLevel", 3, "Max", "save", false, 10);
    addNewAchievement(5603, "Fishing Expert", "Fishing Skill", "fishLevel", 5, "Max", "save", false, 15);
    addNewAchievement(5604, "Fishing Master", "Fishing Skill", "fishLevel", 10, "Max", "save", false, 20);
    addNewAchievement(5605, "Fishing Grand Master", "Fishing Skill", "fishLevel", 15, "Max", "save", false, 25);
    addNewAchievement(5606, "Fishing King", "Fishing Skill", "fishLevel", 20, "Max", "save", false, 30);
    addNewAchievement(5651, "Fish Catcher", "Fishing Catches", "fishTotal", 50, "Max", "save", false, 5);
    addNewAchievement(5652, "Diligent Fish Catcher", "Fishing Catches", "fishTotal", 500, "Max", "save", false, 15);
    addNewAchievement(5653, "Famous Fish Catcher", "Fishing Catches", "fishTotal", 5000, "Max", "save", false, 30);
    addNewAchievement(5701, "Perfect Catcher", "Fishing Perfect Catches", "fishPerfect", 20, "Max", "save", false, 10);
    addNewAchievement(5702, "Elite Perfect Catcher", "Fishing Perfect Catches", "fishPerfect", 200, "Max", "save", false, 20);
    addNewAchievement(5703, "Master Perfect Catcher", "Fishing Perfect Catches", "fishPerfect", 2000, "Max", "save", false, 40);
    addNewAchievement(5751, "Lucky Streak", "Fishing Perfect Streak", "fishBestStreak", 10, "Max", "save", false, 25);
    addNewAchievement(5752, "Godly Streak", "Fishing Perfect Streak", "fishBestStreak", 20, "Max", "save", false, 50);
    addNewAchievement(5501, "Pet Feeder", "Pet Level", "petBestLevel", 25, "Max", "save", false, 20);
    addNewAchievement(5502, "Pet Trainer", "Pet Level", "petBestLevel", 50, "Max", "save", false, 30);
    addNewAchievement(5503, "Pet Lover", "Pet Level", "petBestLevel", 75, "Max", "save", false, 40);
    addNewAchievement(5504, "Pet Master", "Pet Level", "petBestLevel", 100, "Max", "save", false, 50);
    addNewAchievement(5801, "First Career", "Total Career Level", "totalCareerLevel", 1, "Max", "root", false, 5);
    addNewAchievement(5802, "Career Newbie", "Total Career Level", "totalCareerLevel", 200, "Max", "root", false, 20);
    addNewAchievement(5803, "Career User", "Total Career Level", "totalCareerLevel", 400, "Max", "root", false, 30);
    addNewAchievement(5804, "Career Maniac", "Total Career Level", "totalCareerLevel", 600, "Max", "root", false, 40);
    addNewAchievement(5805, "Career Master", "Total Career Level", "totalCareerLevel", 800, "Max", "root", false, 50);
    addNewAchievement(8000, "10th Achievement", "Achievements", "maxAchievement", 9, "Max", "save", false, 5);
    addNewAchievement(8001, "20th Achievement", "Achievements", "maxAchievement", 19, "Max", "save", false, 5);
    addNewAchievement(8002, "30th Achievement", "Achievements", "maxAchievement", 29, "Max", "save", false, 5);
    addNewAchievement(8003, "40th Achievement", "Achievements", "maxAchievement", 39, "Max", "save", false, 5);
    addNewAchievement(8004, "50th Achievement", "Achievements", "maxAchievement", 49, "Max", "save", false, 5);
    addNewAchievement(8005, "60th Achievement", "Achievements", "maxAchievement", 59, "Max", "save", false, 5);
    addNewAchievement(8006, "70th Achievement", "Achievements", "maxAchievement", 69, "Max", "save", false, 5);
    addNewAchievement(8007, "80th Achievement", "Achievements", "maxAchievement", 79, "Max", "save", false, 5);
    addNewAchievement(8008, "90th Achievement", "Achievements", "maxAchievement", 89, "Max", "save", false, 5);
    addNewAchievement(8009, "100th Achievement", "Achievements", "maxAchievement", 99, "Max", "save", false, 5);
    addNewAchievement(8010, "110th Achievement", "Achievements", "maxAchievement", 109, "Max", "save", false, 10);
    addNewAchievement(8011, "120th Achievement", "Achievements", "maxAchievement", 119, "Max", "save", false, 10);
    addNewAchievement(8012, "130th Achievement", "Achievements", "maxAchievement", 129, "Max", "save", false, 10);
    addNewAchievement(8013, "140th Achievement", "Achievements", "maxAchievement", 139, "Max", "save", false, 10);
    addNewAchievement(8014, "150th Achievement", "Achievements", "maxAchievement", 149, "Max", "save", false, 10);
    addNewAchievement(8015, "160th Achievement", "Achievements", "maxAchievement", 159, "Max", "save", false, 10);
    addNewAchievement(8016, "170th Achievement", "Achievements", "maxAchievement", 169, "Max", "save", false, 10);
    addNewAchievement(8017, "180th Achievement", "Achievements", "maxAchievement", 179, "Max", "save", false, 10);
    addNewAchievement(8018, "190th Achievement", "Achievements", "maxAchievement", 189, "Max", "save", false, 10);
    addNewAchievement(8019, "200th Achievement", "Achievements", "maxAchievement", 199, "Max", "save", false, 10);
    addNewAchievement(8020, "210th Achievement", "Achievements", "maxAchievement", 209, "Max", "save", false, 15);
    addNewAchievement(8021, "220th Achievement", "Achievements", "maxAchievement", 219, "Max", "save", false, 15);
    addNewAchievement(8022, "230th Achievement", "Achievements", "maxAchievement", 229, "Max", "save", false, 15);
    addNewAchievement(8023, "240th Achievement", "Achievements", "maxAchievement", 239, "Max", "save", false, 15);
    addNewAchievement(8024, "250th Achievement", "Achievements", "maxAchievement", 249, "Max", "save", false, 15);
    addNewAchievement(8025, "260th Achievement", "Achievements", "maxAchievement", 259, "Max", "save", false, 15);
    addNewAchievement(8026, "270th Achievement", "Achievements", "maxAchievement", 269, "Max", "save", false, 15);
    addNewAchievement(8027, "280th Achievement", "Achievements", "maxAchievement", 279, "Max", "save", false, 15);
    addNewAchievement(8028, "290th Achievement", "Achievements", "maxAchievement", 289, "Max", "save", false, 15);
    addNewAchievement(8029, "300th Achievement", "Achievements", "maxAchievement", 299, "Max", "save", false, 15);
    addNewAchievement(8030, "310th Achievement", "Achievements", "maxAchievement", 309, "Max", "save", false, 20);
    addNewAchievement(8031, "320th Achievement", "Achievements", "maxAchievement", 319, "Max", "save", false, 20);
    addNewAchievement(8032, "330th Achievement", "Achievements", "maxAchievement", 329, "Max", "save", false, 20);
    addNewAchievement(8033, "340th Achievement", "Achievements", "maxAchievement", 339, "Max", "save", false, 20);
    addNewAchievement(8034, "350th Achievement", "Achievements", "maxAchievement", 349, "Max", "save", false, 20);
    addNewAchievement(8035, "360th Achievement", "Achievements", "maxAchievement", 359, "Max", "save", false, 20);
    addNewAchievement(8036, "370th Achievement", "Achievements", "maxAchievement", 369, "Max", "save", false, 20);
    addNewAchievement(8037, "380th Achievement", "Achievements", "maxAchievement", 379, "Max", "save", false, 20);
    addNewAchievement(8038, "390th Achievement", "Achievements", "maxAchievement", 389, "Max", "save", false, 20);
    addNewAchievement(8039, "400th Achievement", "Achievements", "maxAchievement", 399, "Max", "save", false, 20);
    addNewAchievement(8040, "410th Achievement", "Achievements", "maxAchievement", 409, "Max", "save", false, 25);
    addNewAchievement(8041, "420th Achievement", "Achievements", "maxAchievement", 419, "Max", "save", false, 25);
    addNewAchievement(8042, "430th Achievement", "Achievements", "maxAchievement", 429, "Max", "save", false, 25);
    addNewAchievement(8043, "440th Achievement", "Achievements", "maxAchievement", 439, "Max", "save", false, 25);
    addNewAchievement(8044, "450th Achievement", "Achievements", "maxAchievement", 449, "Max", "save", false, 25);
    addNewAchievement(8045, "460th Achievement", "Achievements", "maxAchievement", 459, "Max", "save", false, 25);
    addNewAchievement(8046, "470th Achievement", "Achievements", "maxAchievement", 469, "Max", "save", false, 25);
    addNewAchievement(8047, "480th Achievement", "Achievements", "maxAchievement", 479, "Max", "save", false, 25);
    addNewAchievement(8048, "490th Achievement", "Achievements", "maxAchievement", 489, "Max", "save", false, 25);
    addNewAchievement(8049, "500th Achievement", "Achievements", "maxAchievement", 499, "Max", "save", false, 25);
    addNewAchievement(8050, "510th Achievement", "Achievements", "maxAchievement", 509, "Max", "save", false, 30);
    addNewAchievement(8051, "520th Achievement", "Achievements", "maxAchievement", 519, "Max", "save", false, 30);
    addNewAchievement(8052, "530th Achievement", "Achievements", "maxAchievement", 529, "Max", "save", false, 30);
    addNewAchievement(8053, "540th Achievement", "Achievements", "maxAchievement", 539, "Max", "save", false, 30);
    addNewAchievement(8054, "550th Achievement", "Achievements", "maxAchievement", 549, "Max", "save", false, 30);
    addNewAchievement(8055, "560th Achievement", "Achievements", "maxAchievement", 559, "Max", "save", false, 30);
    addNewAchievement(8056, "570th Achievement", "Achievements", "maxAchievement", 569, "Max", "save", false, 30);
    addNewAchievement(8057, "580th Achievement", "Achievements", "maxAchievement", 579, "Max", "save", false, 30);
    addNewAchievement(8058, "590th Achievement", "Achievements", "maxAchievement", 589, "Max", "save", false, 30);
    addNewAchievement(8059, "600th Achievement", "Achievements", "maxAchievement", 599, "Max", "save", false, 30);
    addNewAchievement(9000, "Cheater", "< Secret Achievement >", "cheat", 1337, "Max", "save", true, 5);
    addNewAchievement(9001, "Knowledge is Power", "< Secret Achievement >", "knowledge", 1337, "Max", "save", true, 15);
    addNewAchievement(9002, "Lost Again", "< Secret Achievement >", "theGame", 2, "Max", "save", true, 10);
    addNewAchievement(9003, "EXPerienced", "< Secret Achievement >", "experienced", 50, "Max", "save", true, 5);
    addNewAchievement(9004, "YOU\'RE DOING IT WRONG", "< Secret Achievement >", "doingItWrong", 1800, "Max", "save", true, 15);
    addNewAchievement(9005, "Patience is a Virtue", "< Secret Achievement >", "virtue", 50, "Max", "save", true, 5);
    addNewAchievement(9007, "Yay, Credits!", "< Secret Achievement >", "support", 1337, "Max", "save", true, 5);
    addNewAchievement(9008, "Walked Through", "< Secret Achievement >", "walkthru", 1337, "Max", "save", true, 5);
    addNewAchievement(9009, "Destroyer of Forests", "< Secret Achievement >", "forestDestroyer", 50, "Max", "save", true, 10);
    addNewAchievement(9010, "Greedy", "< Secret Achievement >", "greed", 1337, "Max", "save", true, 5);
    addNewAchievement(9011, "LOL BUG?", "< Secret Achievement >", "lolBug", 1337, "Max", "save", true, 5);
    addNewAchievement(9012, "Perfectionist", "< Secret Achievement >", "perfectionist", 3, "Max", "save", true, 15);
    addNewAchievement(9013, "Immortality", "< Secret Achievement >", "immortality", 100, "Max", "save", true, 10);
    addNewAchievement(9014, "Survivor", "< Secret Achievement >", "survivor", 1337, "Max", "save", true, 20);
    addNewAchievement(9015, "Failproof", "< Secret Achievement >", "failproof", 1337, "Max", "save", true, 10);
    addNewAchievement(9016, "\'I Ain\'t Afraid of No Ghosts!\'", "< Secret Achievement >", "randomGhost", 1337, "Max", "save", true, 5);
    addNewAchievement(9017, "Serious Business", "< Secret Achievement >", "seriousBusiness", 50, "Max", "save", true, 5);
    addNewAchievement(9018, "Dungeon Conqueror", "< Secret Achievement >", "raidDungeon", 1, "Max", "save", true, 5);
    addNewAchievement(9019, "Necronomnomnomiconquerer", "< Secret Achievement >", "fcgLevel7", 21, "Max", "save", true, 15);
    addNewAchievement(9020, "Still Doing It?", "< Secret Achievement >", "buttonPress", 102400, "Max", "save", true, 10);
    addNewAchievement(9021, "Now You\'re A Hero", "< Secret Achievement >", "zoneKill14", 1, "Max", "root", true, 10);
    addNewAchievement(9022, "Max Combo!", "< Secret Achievement >", "arenaMaxCombo", 9999, "Max", "save", true, 15);
    addNewAchievement(9023, "Secret Title Changer", "< Secret Achievement >", "mbma", 1337, "Max", "save", true, 5);
    addNewAchievement(9024, "This One is Obvious", "< Secret Achievement >", "zoneKill21", 1337, "Max", "root", true, 15);
    addNewAchievement(9025, "Pokayman STOP!", "< Secret Achievement >", "pokaystopCount", 1, "Max", "save", true, 15);
    addNewAchievement(9026, "Nightmare", "< Secret Achievement >", "nightmare", 1337, "Max", "save", true, 10);
    addNewAchievement(9027, "Level 11 Reached!", "< Secret Achievement >", "fcgLevel", 11, "Max", "save", true, 15);
    addNewAchievement(9028, "Helpful", "< Secret Achievement >", "arenaMission", 100, "Max", "save", true, 15);
    addNewAchievement(9029, "No Help For You", "< Secret Achievement >", "noHelp", 1337, "Max", "save", true, 10);
    addNewAchievement(9030, "Wrong Game?", "< Secret Achievement >", "aceFinish", 1337, "Max", "save", true, 10);
    addNewAchievement(9031, "Chuck Norris", "< Secret Achievement >", "chuckNorris", 1337, "Max", "save", true, 5);
    addNewAchievement(9032, "Pacifist", "< Secret Achievement >", "pacifist", 1337, "Max", "save", true, 5);
    addNewAchievement(9033, "No Death", "< Secret Achievement >", "noDeath", 1337, "Max", "save", true, 10);
    addNewAchievement(9034, "Wake Up", "< Secret Achievement >", "wakeUp", 1337, "Max", "save", true, 5);
    addNewAchievement(9035, "Ascended", "< Secret Achievement >", "banned", 1, "Max", "save", true, 30);
    addNewAchievement(9036, "Rebirthed", "< Secret Achievement >", "bannedB", 1, "Max", "save", true, 25);
    addNewQuest(false, false, true, 1, 201, 1, 0, 0, "Attendance Gift", "Play Anti-Idle: The Game for ", " consecutive days!", "consecutiveDays", "save", 2, 10, 50, 100, 5, 5);
    addNewQuest(false, false, true, 2, 201, 1, 0, 0, "Level Up Gift", "Reach level ", ".", "bestLevel", "save", 2, 1000, 5000, 9001, 5, 5);
    addNewQuest(false, false, true, 3, 201, 1, 510, 1, "Ascension Gift", "Ascend ", " time(s).", "banned", "save", 1, 2, 3, 4, 5, 5);
    addNewQuest(false, false, true, 11, 202, 35, 350, 1, "Press the Button!", "Press the Button Machine ", " times today.", "buttonPressToday", "save", 500, 2500, 10000, 50000, 5, 5);
    addNewQuest(false, false, true, 12, 203, 50, 360, 1, "Dragon Buffet", "Feed the Dragon of Wisdom ", " times today.", "feedToday", "save", 50, 150, 300, 500, 5, 5);
    addNewQuest(false, false, true, 13, 205, 180, 392, 1, "Death Match!", "Achieve a high score of ", " PWNts in Death Match today.", "stadiumTodayDeathMatch", "save", 400, 600, 800, 1000, 10, 10);
    addNewQuest(false, false, true, 14, 206, 750, 490, 1, "Fishing!", "Gain ", " score in Fishing today.", "fishScoreToday", "save", 500000, 2500000, 10000000, 50000000, 10, 10);
    addNewQuest(false, false, true, 15, 207, 1000, 313, 1, "Corruption Cleansing", "Defeat ", " monsters in The Corruption today.", "arenaCorruptToday", "save", 100, 500, 1250, 2500, 10, 10);
    addNewQuest(false, false, true, 16, 208, 25, 315, 1, "Spooky Crypt", "Reach a high score of ", " in Spooky Crypt today.", "arenaSpookyToday", "save", 200, 500, 1000, 2000, 10, 10);
    addNewQuest(false, false, false, 101, 2, 1, 0, 0, "[Level] Level Up!", "Reach level ", ".", "bestLevel", "save", 50, 150, 300, 500, 50, 0);
    addNewQuest(false, false, false, 102, 2, 1, 101, 4, "[Level] Level Up More!", "Reach level ", ".", "bestLevel", "save", 1500, 3500, 6000, 9001, 1000, 0);
    addNewQuest(false, false, false, 110, 3, 1, 0, 0, "[Achievement] Achievements!", "Earn a total of ", " Achievements.", "maxAchievement", "save", 100, 400, 550, 630, 2500, 0);
    addNewQuest(false, false, false, 120, 4, 1, 0, 0, "[Quest] C-Rank", "Get C-Rank or higher on ", " quests (daily quests and event quests excluded).", "mainQuestC", "save", 30, 60, 90, 120, 500, 0);
    addNewQuest(false, false, false, 121, 4, 1, 120, 1, "[Quest] B-Rank", "Get B-Rank or higher on ", " quests (daily quests and event quests excluded).", "mainQuestB", "save", 30, 60, 90, 120, 1000, 0);
    addNewQuest(false, false, false, 122, 4, 1, 121, 1, "[Quest] A-Rank", "Get A-Rank or higher on ", " quests (daily quests and event quests excluded).", "mainQuestA", "save", 30, 60, 90, 120, 2000, 0);
    addNewQuest(false, false, false, 123, 4, 1, 122, 1, "[Quest] S-Rank", "Get S-Rank on ", " quests (daily quests and event quests excluded).", "mainQuestS", "save", 30, 60, 90, 120, 4000, 0);
    addNewQuest(false, false, false, 124, 5, 1, 0, 0, "[Quest] Random Quests", "Complete a total of ", " Random Quests.", "questTotal", "save", 20, 100, 500, 2500, 2000, 0);
    addNewQuest(false, false, false, 130, 6, 1, 0, 0, "[Money] Coins", "Save up a total of ", " Coins.", "coinMax", "save", 100000, 15000000, 7500000000, 999999999999, 250, 0);
    addNewQuest(false, false, false, 131, 7, 1, 0, 0, "[Money] Green Coins", "Save up a total of ", " Green Coins.", "greenCoinMax", "save", 3000, 250000, 10000000, 999999999, 250, 0);
    addNewQuest(false, false, false, 132, 8, 1, 0, 0, "[Money] Blue Coins", "Save up a total of ", " Blue Coins.", "blueCoinMax", "save", 300, 7500, 50000, 999999, 500, 0);
    addNewQuest(false, false, false, 140, 9, 1, 0, 0, "[Progress] Claim Rewards!", "Claim ", " rewards from the Progress Bar.", "rewardClaim", "save", 15, 1500, 75000, 1500000, 100, 0);
    addNewQuest(false, false, false, 141, 10, 1, 0, 0, "[Progress] Idle Mode", "Claim ", " rewards from the Progress Bar when Idle Mode is ON.", "rewardClaimAuto", "save", 5, 750, 37500, 750000, 100, 0);
    addNewQuest(false, false, false, 142, 11, 1, 141, 1, "[Progress] Idle Mode Speed", "Visit the Feature Shop and upgrade Idle Mode Speed to ", "%.", "progSpeedAuto", "save", 31, 100, 125, 150, 50, 0);
    addNewQuest(false, false, false, 145, 12, 1, 0, 0, "[Mystery Box] Open Boxes", "Open ", " Legendary Boxes.", "legendaryBoxOpened", "save", 5, 50, 500, 5000, 250, 0);
    addNewQuest(false, false, false, 150, 13, 4, 0, 0, "[Boost] Boost!", "Gain a total of ", "% Boost.", "boostPurchased", "save", 400, 10000, 100000, 1000000, 50, 0);
    addNewQuest(false, false, false, 151, 14, 4, 150, 1, "[Boost] Maximum Boost", "Raise your Max Boost to ", "%.", "boostMax", "root", 501, 1000, 1500, 2000, 500, 0);
    addNewQuest(false, false, false, 160, 16, 12, 0, 0, "[Garden] Harvest Trees!", "Harvest trees in the Garden and reach ", " Garden EXP.", "gardenEXP", "save", 25, 10000, 400000, 16000000, 500, 0);
    addNewQuest(false, false, false, 161, 17, 12, 160, 1, "[Garden] Garden Expansion", "Expand your Garden to ", " plots.", "gardenCapacity", "save", 2, 10, 25, 50, 100, 0);
    addNewQuest(false, false, false, 162, 18, 12, 161, 3, "[Garden] Another Garden", "Breed a total of ", " seeds in Another Garden.", "gardenBreedTotal", "save", 20, 500, 5000, 50000, 100, 0);
    addNewQuest(false, false, false, 170, 19, 25, 0, 0, "[Arena] Kill Everything!", "Defeat ", " monsters in the Battle Arena.", "arenaKill", "save", 50, 10000, 200000, 4000000, 50, 0);
    addNewQuest(false, false, false, 171, 20, 25, 170, 1, "[Arena] Powerful Monsters", "Defeat ", " red-named monsters or bosses in the Battle Arena.", "arenaKillRed", "save", 25, 5000, 100000, 2000000, 50, 0);
    addNewQuest(false, false, false, 172, 21, 25, 170, 1, "[Arena] Boss Hunt", "Defeat ", " boss monsters in the Battle Arena.", "arenaKillPurple", "save", 10, 1000, 25000, 500000, 50, 0);
    addNewQuest(false, false, false, 173, 22, 25, 170, 1, "[Arena] Rare Monsters", "Defeat ", " rare monsters in the Battle Arena.", "arenaKillRare", "save", 5, 500, 10000, 250000, 50, 0);
    addNewQuest(false, false, false, 174, 23, 25, 173, 1, "[Arena] Epic Monsters", "Defeat ", " epic monsters in the Battle Arena.", "arenaKillEpic", "save", 2, 100, 2500, 50000, 100, 0);
    addNewQuest(false, false, false, 180, 24, 25, 170, 1, "[Arena] Loot", "Collect a total of ", " loot drops in the Battle Arena.", "arenaLoot", "save", 50, 2500, 50000, 1000000, 100, 0);
    addNewQuest(false, false, false, 190, 25, 25, 170, 1, "[Arena] Combo", "Reach a Combo of ", " in the Battle Arena.", "arenaMaxCombo", "save", 100, 500, 2500, 9999, 25, 0);
    addNewQuest(false, false, false, 200, 26, 25, 170, 1, "[Arena] Rank Up!", "Reach a Rank of ", " in the Battle Arena.", "arenaLevel", "save", 10, 30, 70, 120, 25, 0);
    addNewQuest(false, false, false, 201, 26, 25, 200, 4, "[Arena] Rank Up More!", "Reach a Rank of ", " in the Battle Arena.", "arenaLevel", "save", 180, 250, 350, 500, 250, 0);
    addNewQuest(false, false, false, 210, 27, 25, 170, 1, "[Arena] Skills!", "Spend a total of ", " Skill Points in the Battle Arena.", "arenaTotalSP", "save", 28, 1120, 7500, 9000, 100, 0);
    addNewQuest(false, false, false, 211, 28, 25, 201, 4, "[Arena] Extra SP", "Collect extra Skill Points from monsters ", " times.", "arenaUltimateSP", "save", 5, 50, 100, 150, 100, 0);
    addNewQuest(false, false, false, 212, 29, 25, 210, 2, "[Arena] Skill Books", "Collect a total of ", " Skill Books in the Battle Arena.", "arenaSkillBook", "save", 10, 500, 1000, 1240, 500, 0);
    addNewQuest(false, false, false, 220, 30, 25, 200, 1, "[Arena] Crafting!", "Use a total of ", " Crafting Material to craft items.", "arenaCraftUsed", "save", 1000, 2000000, 50000000, 1000000000, 50, 0);
    addNewQuest(false, false, false, 230, 31, 25, 220, 1, "[Arena] Item Enhancement", "Enhance ", " items to +10.", "arenaMaxEnhance", "save", 2, 10, 25, 100, 50, 0);
    addNewQuest(false, false, false, 240, 32, 25, 200, 1, "[Arena] Stat Upgrade!", "Increase your base Attack Power to ", ".", "arenaAttack", "save", 500, 25000, 65000, 90000, 50, 0);
    addNewQuest(false, false, false, 250, 33, 25, 200, 1, "[Arena] Rings", "Have a total of ", " different Rings at the same time.", "totalRing", "root", 4, 14, 16, 22, 25, 0);
    addNewQuest(false, false, false, 260, 34, 25, 200, 2, "[Arena] Bestiary", "Reach a total Bestiary Level of ", " in the Battle Arena.", "bestiaryLevel", "root", 250, 750, 1500, 2000, 500, 0);
    addNewQuest(false, false, false, 270, 35, 25, 200, 2, "[Arena] Invisible Ally <1>", "Tame a total of ", " Invisible Allies.", "totalAllyTamed", "root", 10, 150, 300, 500, 250, 0);
    addNewQuest(false, false, false, 271, 36, 25, 270, 1, "[Arena] Invisible Ally <2>", "Master a total of ", " Invisible Allies.", "totalAllyMastered", "root", 10, 150, 300, 500, 500, 0);
    addNewQuest(false, false, false, 280, 37, 25, 200, 2, "[Arena] Robacon", "Have a Rank ", " Robacon.", "robaconLevel", "save", 50, 200, 350, 500, 250, 0);
    addNewQuest(false, false, false, 300, 38, 25, 170, 1, "[Arena] Mission Kommander", "Finish Mission Kommander\'s mission ", " times.", "arenaKommanderComplete", "save", 2, 25, 150, 500, 100, 0);
    addNewQuest(false, false, false, 301, 39, 25, 200, 3, "[Arena] Defend Mission", "Reach a high score of ", " in Defend Mission.", "raidDefend", "save", 60000, 150000, 240000, 300000, 100, 0);
    addNewQuest(false, false, false, 302, 40, 25, 200, 3, "[Arena] Prehistoric Mission", "Reach a high score of ", " in Prehistoric Mission.", "raidPrehistoric", "save", 240000, 480000, 540000, 600000, 100, 0);
    addNewQuest(false, false, false, 310, 41, 25, 200, 1, "[Arena] Epic Pyramid Battle", "Reach a high score of ", " in Dark Pyramid.", "raidPyramid", "save", 250000, 1000000, 5000000, 25000000, 100, 0);
    addNewQuest(false, false, false, 311, 42, 25, 200, 4, "[Arena] The New Boss", "Reach a high score of ", " in The Special Arena.", "raidMegaboss", "save", 180000, 315000, 410000, 460000, 250, 0);
    addNewQuest(false, false, false, 312, 43, 25, 311, 1, "[Arena] The Revenge", "Reach round ", " in THE MEGABOSS\'s Revenge.", "arenaRevengeScore", "save", 10, 30, 60, 100, 250, 0);
    addNewQuest(false, false, false, 313, 44, 1000, 170, 1, "[Arena] The Corruption", "Clear The Corruption on difficulty ", " or higher.", "arenaCorruptBestDifficulty", "save", 1, 10, 20, 30, 250, 0);
    addNewQuest(false, false, false, 314, 45, 25, 201, 1, "[Arena] Tower of DOOOOOOM", "Reach a high score of ", " in Tower of DOOOOOOM.", "raidTower", "save", 1000000000, 5000000000, 10000000000, 15000000000, 250, 0);
    addNewQuest(false, false, false, 315, 46, 25, 201, 1, "[Arena] Spooky Crypt", "Reach a high score of ", " in Spooky Crypt.", "arenaSpookyScore", "save", 200, 500, 1000, 2000, 250, 0);
    addNewQuest(false, false, false, 316, 47, 25, 201, 2, "[Arena] Secret Dungeon", "Reach a high score of ", " in Secret Dungeon.", "raidDungeon", "save", 1100, 1800, 2500, 3200, 500, 0);
    addNewQuest(false, false, false, 317, 121, 25, 201, 2, "[Arena] Endless Dungeon", "Reach floor ", " in Endless Dungeon.", "raidEndless", "save", 2, 10, 20, 30, 500, 0);
    addNewQuest(false, false, false, 320, 48, 25, 200, 1, "[Arena] Polluted Sky", "Defeat ", " monsters in Polluted Sky.", "zoneKill15", "root", 200, 1000, 5000, 25000, 25, 0);
    addNewQuest(false, false, false, 321, 49, 25, 200, 1, "[Arena] Secret Beach", "Defeat ", " monsters in Secret Beach.", "zoneKill16", "root", 500, 2000, 10000, 50000, 25, 0);
    addNewQuest(false, false, false, 322, 50, 25, 200, 2, "[Arena] Scary Graveyard", "Defeat ", " monsters in Scary Graveyard.", "zoneKill17", "root", 100, 500, 2500, 10000, 25, 0);
    addNewQuest(false, false, false, 323, 51, 25, 200, 2, "[Arena] Mystic Path", "Defeat ", " monsters in Mystic Path.", "zoneKill21", "root", 50, 200, 1000, 5000, 25, 0);
    addNewQuest(false, false, false, 324, 52, 25, 200, 3, "[Arena] Volcano Peak", "Defeat ", " monsters in Volcano Peak.", "zoneKill26", "root", 50, 200, 1000, 5000, 25, 0);
    addNewQuest(false, false, false, 325, 53, 25, 200, 3, "[Arena] Frosty Zone", "Defeat ", " monsters in Frosty Zone.", "zoneKill27", "root", 50, 200, 1000, 5000, 25, 0);
    addNewQuest(false, false, false, 326, 54, 25, 200, 3, "[Arena] Advanced Training", "Defeat ", " Treasure Hunters in Pirate Ship Interior.", "treasureHunterKill", "root", 10, 100, 1000, 10000, 50, 0);
    addNewQuest(false, false, false, 327, 55, 25, 200, 4, "[Arena] The Guardian", "Defeat ", " monsters in Dark Portal.", "zoneKill18", "root", 50, 200, 1000, 5000, 50, 0);
    addNewQuest(false, false, false, 328, 56, 25, 326, 3, "[Arena] Rofltrainer\'s Secret", "Find ", " Roflhunter\'s Pendants.", "roflPendant", "save", 2, 10, 60, 200, 100, 0);
    addNewQuest(false, false, false, 330, 58, 25, 201, 2, "[Arena] Copy, Right?", "Defeat ", " monsters in Not Copyright Infringement.", "zoneKill49", "root", 5000, 20000, 100000, 500000, 100, 0);
    addNewQuest(false, false, false, 331, 59, 25, 330, 1, "[Arena] Censorship", "Defeat ", " monsters in Censor Ship.", "zoneKill57", "root", 2500, 10000, 50000, 250000, 100, 0);
    addNewQuest(false, false, false, 332, 60, 1000, 201, 2, "[Arena] Corrupt... oh wait", "Clear The Corruption? on difficulty ", " or higher.", "arenaCorruptWmBestDifficulty", "save", 1, 2, 3, 5, 250, 0);
    addNewQuest(false, false, false, 340, 61, 25, 200, 2, "[Arena] Mining", "Defeat ", " Secret Crystals.", "crystalKill", "root", 25, 250, 2500, 25000, 100, 0);
    addNewQuest(false, false, false, 329, 57, 25, 201, 4, "[Arena] Abandoned Lab", "Defeat ", " monsters in Abandoned Lab.", "zoneKill61", "root", 50, 100, 150, 200, 100, 0);
    addNewQuest(false, false, false, 345, 121, 25, 201, 4, "[Arena] Rebirth!", "Rebirth ", " time(s).", "bannedB", "save", 1, 5, 20, 50, 2500, 0);
    addNewQuest(false, false, false, 350, 62, 40, 0, 0, "[Button] Click the Button!", "Press the Button Machine ", " times.", "buttonPress", "save", 100, 1000, 10000, 100000, 100, 0);
    addNewQuest(false, false, false, 351, 63, 40, 350, 1, "[Button] Perfect Clicks!", "Get ", " PERFECT clicks!", "buttonPerfect", "save", 5, 50, 500, 5000, 250, 0);
    addNewQuest(false, false, false, 352, 64, 40, 351, 2, "[Button] Button Upgrade", "Purchase ", "% additional multiplier in Button Machine shop.", "buttonMultiplier", "save", 2, 10, 50, 200, 500, 0);
    addNewQuest(false, false, false, 370, 67, 40, 0, 0, "[Printer] Battery Charge", "Charge a total of ", " Battery Power.", "totalPrinterCharge", "save", 100, 2500, 50000, 1000000, 100, 0);
    addNewQuest(false, false, false, 371, 68, 40, 0, 0, "[Printer] More Illegal Money!", "Upgrade the Money Printer to level ", ".", "printerLevel", "save", 3, 10, 30, 100, 100, 0);
    addNewQuest(false, false, false, 360, 65, 50, 0, 0, "[Dragon] Knowledge is Power", "Feed the Dragon of Wisdom ", " times.", "feedTotal", "save", 200, 1000, 5000, 25000, 500, 0);
    addNewQuest(false, false, false, 361, 66, 50, 0, 0, "[Dragon] Dragon Boost!", "Gain a total of ", "% Dragon Boost.", "boostZebra", "save", 10, 50, 150, 300, 500, 0);
    addNewQuest(false, false, false, 389, 69, 80, 0, 0, "[Arcade] Rating", "Achieve a Rating of ", ".00 in Arcade.", "arcadeRating", "save", 5, 8, 10, 12, 1000, 0);
    addNewQuest(false, false, false, 380, 70, 80, 0, 0, "[Arcade] Pong", "Get a high score of ", " in Pong.", "highPong", "save", 300000, 700000, 1500000, 3000000, 100, 0);
    addNewQuest(false, false, false, 381, 71, 80, 0, 0, "[Arcade] Ultimate Avoidance", "Get a high score of ", " in Ultimate Avoidance.", "highAvoidance", "save", 200000, 400000, 600000, 900000, 100, 0);
    addNewQuest(false, false, false, 382, 72, 80, 0, 0, "[Arcade] Math Master", "Get a high score of ", " in Math Master.", "highMath", "save", 150000, 350000, 700000, 1500000, 100, 0);
    addNewQuest(false, false, false, 383, 73, 80, 0, 0, "[Arcade] Whack-a-greg", "Get a high score of ", " in Whack-a-greg.", "highWhack", "save", 1000000, 1500000, 1900000, 2250000, 100, 0);
    addNewQuest(false, false, false, 386, 74, 80, 0, 0, "[Arcade] Triangle Count", "Get a high score of ", " in Triangle Count.", "highCount", "save", 900000, 2000000, 3500000, 5400000, 100, 0);
    addNewQuest(false, false, false, 384, 75, 80, 0, 0, "[Arcade] MindSweeper", "Get a high score of ", " in MindSweeper.", "highMind", "save", 800000, 2000000, 3000000, 4000000, 250, 0);
    addNewQuest(false, false, false, 385, 76, 80, 0, 0, "[Arcade] Balance 3", "Get a high score of ", " in Balance 3.", "highBalance", "save", 600000, 1500000, 2500000, 4000000, 250, 0);
    addNewQuest(false, false, false, 390, 77, 180, 0, 0, "[Stadium] Simple Race", "Win Simple Race ", " times.", "stadiumRace", "save", 2, 25, 150, 500, 100, 0);
    addNewQuest(false, false, false, 391, 78, 180, 0, 0, "[Stadium] Item Fight", "Win Item Fight ", " times.", "stadiumItem", "save", 2, 25, 150, 500, 100, 0);
    addNewQuest(false, false, false, 392, 79, 180, 0, 0, "[Stadium] Death Match", "Win Death Match ", " times.", "stadiumDeathMatch", "save", 2, 5, 10, 25, 250, 0);
    addNewQuest(false, false, false, 393, 80, 180, 0, 0, "[Stadium] Bet", "Win ", " bets in Stadium.", "stadiumBetCorrect", "save", 2, 5, 15, 50, 50, 0);
    addNewQuest(false, false, false, 394, 81, 180, 0, 0, "[Stadium] Upgrade!", "Upgrade your Stadium abilities ", " times.", "stadiumAbilityCost", "save", 50, 100, 200, 400, 100, 0);
    addNewQuest(false, false, false, 400, 82, 300, 0, 0, "[TukkunFCG] TukkunFCG!", "Reach level ", " in TukkunFCG.", "fcgLevel", "save", 3, 16, 31, 51, 1000, 0);
    addNewQuest(false, false, false, 401, 83, 300, 0, 0, "[TukkunFCG] Lv. 0 Opponent", "Beat level 0 opponent ", " times in TukkunFCG.", "fcgLevel0", "save", 2, 5, 10, 25, 25, 0);
    addNewQuest(false, false, false, 402, 84, 300, 0, 0, "[TukkunFCG] Lv. 1 Opponent", "Beat level 1 opponent ", " times in TukkunFCG.", "fcgLevel1", "save", 2, 5, 10, 25, 25, 0);
    addNewQuest(false, false, false, 403, 85, 300, 0, 0, "[TukkunFCG] Lv. 2 Opponent", "Beat level 2 opponent ", " times in TukkunFCG.", "fcgLevel2", "save", 2, 5, 10, 25, 25, 0);
    addNewQuest(false, false, false, 404, 86, 300, 400, 1, "[TukkunFCG] Lv. 3 Opponent", "Get a win streak of ", " against level 3 opponent in TukkunFCG.", "fcgMaxStreak3", "save", 2, 5, 10, 20, 50, 0);
    addNewQuest(false, false, false, 405, 87, 300, 400, 1, "[TukkunFCG] Lv. 4 Opponent", "Get a win streak of ", " against level 4 opponent in TukkunFCG.", "fcgMaxStreak4", "save", 2, 5, 10, 20, 50, 0);
    addNewQuest(false, false, false, 406, 88, 300, 400, 1, "[TukkunFCG] Kong Battle!", "Beat level 5 opponent ", " times in TukkunFCG.", "fcgLevel5", "save", 2, 10, 60, 200, 100, 0);
    addNewQuest(false, false, false, 407, 89, 300, 400, 1, "[TukkunFCG] Lv. 6 Opponent", "Get a win streak of ", " against level 6 opponent in TukkunFCG.", "fcgMaxStreak6", "save", 2, 5, 10, 20, 100, 0);
    addNewQuest(false, false, false, 408, 90, 300, 400, 1, "[TukkunFCG] Lv. 7 Opponent", "Beat level 7 opponent ", " times in TukkunFCG.", "fcgLevel7", "save", 2, 10, 60, 200, 250, 0);
    addNewQuest(false, false, false, 409, 91, 300, 400, 1, "[TukkunFCG] Lv. 8 Opponent", "Get a win streak of ", " against level 8 opponent in TukkunFCG.", "fcgMaxStreak8", "save", 2, 5, 10, 20, 250, 0);
    addNewQuest(false, false, false, 410, 92, 300, 400, 1, "[TukkunFCG] Lv. 9 Opponent", "Defeat ", " Legendary Monsters in TukkunFCG.", "fcgLegendCount", "save", 2, 5, 10, 25, 500, 0);
    addNewQuest(false, false, false, 411, 93, 300, 400, 1, "[TukkunFCG] Lv. 10 Opponent", "Beat level 10 opponent ", " times in TukkunFCG.", "fcgLevel10", "save", 2, 10, 60, 200, 500, 0);
    addNewQuest(false, false, false, 420, 94, 250, 0, 0, "[Ants] Spray Ants!", "Spray a total of ", " ants!", "antsSprayed", "save", 100, 2500, 50000, 1000000, 250, 0);
    addNewQuest(false, false, false, 430, 95, 400, 0, 0, "[LolMarket] ???", "Gain a total of ", " Profit in LolMarket", "lolMaxProfit", "save", 942961, 15948841, 160540736, 2500000000, 2500, 0);
    addNewQuest(false, false, false, 440, 96, 500, 0, 0, "[Adventures] Reputation", "Reach ", " Reputation in Awesome Adventures.", "awesomeMaxReputation", "save", 100, 1000, 10000, 100000, 1000, 0);
    addNewQuest(false, false, false, 445, 97, 500, 131, 2, "[Adventures] Bar Extension", "Extend your Progress Bar Capacity to ", "%.", "progStore", "save", 200, 500, 2000, 5000, 1000, 0);
    addNewQuest(false, false, false, 450, 98, 1000, 0, 0, "[Epic Skills] Epic Ripoffs?", "Reach a total Epic Skill level of ", ".", "totalEpicSkill", "root", 20, 60, 120, 132, 500, 0);
    addNewQuest(false, false, false, 460, 99, 700, 0, 0, "[Career] Career Introduction", "Reach a total Career level of ", ".", "totalCareerLevel", "root", 100, 500, 1000, 1200, 500, 0);
    addNewQuest(false, false, false, 470, 100, 700, 460, 1, "[Career] Idler", "Reach Lv. ", " Idler Career.", "careerLevel1", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 471, 101, 700, 460, 1, "[Career] Gardener", "Reach Lv. ", " Gardener Career.", "careerLevel2", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 472, 102, 700, 460, 1, "[Career] Fighter", "Reach Lv. ", " Fighter Career.", "careerLevel3", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 473, 103, 700, 460, 1, "[Career] Item Maker", "Reach Lv. ", " Item Maker Career.", "careerLevel4", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 474, 104, 700, 460, 1, "[Career] Button Basher", "Reach Lv. ", " Button Basher Career.", "careerLevel5", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 475, 105, 700, 460, 1, "[Career] Arcade Player", "Reach Lv. ", " Arcade Player Career.", "careerLevel6", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 476, 106, 700, 460, 1, "[Career] Racer", "Reach Lv. ", " Racer Career.", "careerLevel7", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 477, 107, 700, 460, 1, "[Career] Card Player", "Reach Lv. ", " Card Player Career.", "careerLevel8", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 478, 108, 700, 460, 1, "[Career] Gem Trader", "Reach Lv. ", " Gem Trader Career.", "careerLevel9", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 479, 109, 700, 460, 1, "[Career] Adventurer", "Reach Lv. ", " Adventurer Career.", "careerLevel10", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 480, 110, 900, 460, 1, "[Career] Pet Trainer", "Reach Lv. ", " Pet Trainer Career.", "careerLevel11", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 481, 111, 750, 460, 1, "[Career] Fisher", "Reach Lv. ", " Fisher Career.", "careerLevel12", "root", 10, 30, 60, 100, 100, 0);
    addNewQuest(false, false, false, 490, 112, 750, 0, 0, "[Fishing] Fishing GET!", "Catch a total of ", " items in Fishing.", "fishTotal", "save", 100, 1000, 5000, 25000, 100, 0);
    addNewQuest(false, false, false, 491, 113, 750, 490, 1, "[Fishing] Perfect Catches", "Get ", " PERFECT catches in Fishing.", "fishPerfect", "save", 50, 500, 2500, 10000, 250, 0);
    addNewQuest(false, false, false, 492, 114, 750, 490, 1, "[Fishing] Skill Up!", "Reach Fishing Skill ", ".", "fishLevel", "save", 4, 10, 20, 30, 500, 0);
    addNewQuest(false, false, false, 493, 115, 750, 490, 1, "[Fishing] Bucket Upgrade", "Upgrade your Bucket Capacity to ", ".", "fishCapacity", "save", 5000, 7500, 12500, 17500, 50, 0);
    addNewQuest(false, false, false, 500, 116, 900, 0, 0, "[Pet] Raise a Pet!", "Raise a Pet to Lv. ", ".", "petBestLevel", "save", 10, 30, 60, 100, 500, 0);
    addNewQuest(false, false, false, 600, 117, 1000, 0, 0, "[Business] Go to Work!", "Gain a total of ", " Career EXP from Business.", "businessTotal", "save", 1000, 25000, 500000, 10000000, 500, 0);
    addNewQuest(false, false, false, 510, 118, 9000, 0, 0, "[Ascend] Ascend!", "Ascend ", " time(s).", "banned", "save", 1, 5, 20, 50, 2500, 0);
    addNewQuest(false, false, false, 511, 119, 9000, 510, 2, "[Ascend] Hard Ascension", "Ascend on Hard or Impossible difficulty ", " time(s).", "bannedHard", "save", 1, 5, 10, 25, 2500, 0);
    addNewQuest(false, false, false, 512, 120, 9000, 510, 2, "[Ascend] Impossible Ascension", "Ascend on Impossible difficulty ", " time(s).", "bannedImpossible", "save", 1, 2, 5, 10, 2500, 0);
    addRandomQuest(1, 1, 2, 1, "Progress Box", 4, 25, 25, "Main", "Claim Reward", "Any", 100, "Claim", "rewards from the Progress Bar.");
    addRandomQuest(0.9, 2, 3, 1, "Progress Box", 6, 50, 50, "Main", "Claim Reward", "Any", 500, "Claim", "rewards from the Progress Bar.");
    addRandomQuest(0.8, 3, 4, 1, "Progress Box", 8, 100, 100, "Main", "Claim Reward", "Any", 2500, "Claim", "rewards from the Progress Bar.");
    addRandomQuest(1, 1, 2, 1, "Progress Box", 6, 50, 25, "Main", "Claim Reward", "No Idle Mode", 50, "Claim", "rewards without Idle Mode.");
    addRandomQuest(0.9, 2, 3, 1, "Progress Box", 8, 100, 50, "Main", "Claim Reward", "No Idle Mode", 250, "Claim", "rewards without Idle Mode.");
    addRandomQuest(0.8, 3, 4, 1, "Progress Box", 10, 200, 100, "Main", "Claim Reward", "No Idle Mode", 1250, "Claim", "rewards without Idle Mode.");
    addRandomQuest(0.2, 2, 3, 50, "Legendary Box", 1, 50, 50, "Main", "Dragon of Wisdom", "Feed", 10, "Feed the Dragon of Wisdom", "times.");
    addRandomQuest(0.1, 3, 4, 50, "Legendary Box", 2, 100, 100, "Main", "Dragon of Wisdom", "Feed", 50, "Feed the Dragon of Wisdom", "times.");
    addRandomQuest(1, 1, 2, 12, "Fertilizer", 2, 50, 25, "Garden", "Harvest", "Any", 25, "Harvest from trees", "times.");
    addRandomQuest(0.9, 2, 3, 12, "Fertilizer", 3, 100, 50, "Garden", "Harvest", "Any", 100, "Harvest from trees", "times.");
    addRandomQuest(0.8, 3, 4, 12, "Fertilizer", 4, 200, 100, "Garden", "Harvest", "Any", 500, "Harvest from trees", "times.");
    addRandomQuest(0.4, 2, 2, 12, "Fertilizer", 3, 100, 50, "Garden", "Harvest", "Free Tree", 50, "Harvest from Free Trees", "times.");
    addRandomQuest(0.3, 3, 3, 12, "Fertilizer", 4, 200, 100, "Garden", "Harvest", "Free Tree", 250, "Harvest from Free Trees", "times.");
    addRandomQuest(0.4, 2, 2, 12, "Fertilizer", 3, 100, 50, "Garden", "Harvest", "Blue Tree", 25, "Harvest from Blue Trees", "times.");
    addRandomQuest(0.3, 3, 3, 12, "Fertilizer", 4, 200, 100, "Garden", "Harvest", "Blue Tree", 100, "Harvest from Blue Trees", "times.");
    addRandomQuest(0.3, 2, 2, 12, "Fertilizer", 3, 100, 50, "Garden", "Harvest", "Pink Tree", 10, "Harvest from Pink Trees", "times.");
    addRandomQuest(0.2, 3, 3, 12, "Fertilizer", 4, 200, 100, "Garden", "Harvest", "Pink Tree", 50, "Harvest from Pink Trees", "times.");
    addRandomQuest(0.2, 3, 3, 250, "Fertilizer", 4, 200, 100, "Garden", "Harvest", "Green Tree", 25, "Harvest from Green Trees", "times.");
    addRandomQuest(0.1, 3, 4, 250, "Fertilizer", 5, 300, 150, "Garden", "Harvest", "Lime Tree", 10, "Harvest from Lime Trees", "times.");
    addRandomQuest(0.1, 4, 5, 250, "Fertilizer", 6, 400, 200, "Garden", "Harvest", "Yellow Tree", 5, "Harvest from Yellow Trees", "times.");
    addRandomQuest(0.1, 4, 5, 2000, "Mega Fertilizer", 2, 600, 300, "Garden", "Harvest", "Red Tree", 10, "Harvest from Red Trees", "times.");
    addRandomQuest(0.1, 4, 5, 2000, "Mega Fertilizer", 3, 800, 400, "Garden", "Harvest", "Black Tree", 5, "Harvest from Black Trees", "times.");
    addRandomQuest(0.4, 3, 3, 2000, "Mega Fertilizer", 1, 300, 100, "Garden", "Harvest", "Another Garden Tree", 25, "Harvest from trees in Another Garden", "times.");
    addRandomQuest(0.3, 4, 4, 2000, "Mega Fertilizer", 2, 600, 200, "Garden", "Harvest", "Another Garden Tree", 125, "Harvest from trees in Another Garden", "times.");
    addRandomQuest(0.3, 3, 3, 2000, "Mega Fertilizer", 1, 300, 150, "Garden", "Breed", "Ant", 25, "Get", "Seeds from breeding in Another Garden.");
    addRandomQuest(0.2, 4, 4, 2000, "Mega Fertilizer", 2, 600, 300, "Garden", "Breed", "Ant", 100, "Get", "Seeds from breeding in Another Garden.");
    addRandomQuest(1, 1, 2, 25, "Superior Crafting Material", 10, 25, 25, "Battle Arena", "Kill", "Any", 250, "Kill", "monsters in Battle Arena.");
    addRandomQuest(0.9, 2, 3, 25, "Superior Crafting Material", 25, 50, 50, "Battle Arena", "Kill", "Any", 1000, "Kill", "monsters in Battle Arena.");
    addRandomQuest(0.8, 3, 4, 25, "Superior Crafting Material", 50, 100, 100, "Battle Arena", "Kill", "Any", 5000, "Kill", "monsters in Battle Arena.");
    addRandomQuest(1, 1, 2, 25, "Superior Crafting Material", 25, 50, 25, "Battle Arena", "Kill", "Non-Weak", 100, "Kill", "monsters in Battle Arena. Yellow-named monsters do not count.");
    addRandomQuest(0.9, 2, 3, 25, "Superior Crafting Material", 50, 100, 50, "Battle Arena", "Kill", "Non-Weak", 500, "Kill", "monsters in Battle Arena. Yellow-named monsters do not count.");
    addRandomQuest(0.8, 3, 4, 25, "Superior Crafting Material", 100, 200, 100, "Battle Arena", "Kill", "Non-Weak", 2500, "Kill", "monsters in Battle Arena. Yellow-named monsters do not count.");
    addRandomQuest(1, 2, 2, 250, "Superior Crafting Material", 50, 100, 50, "Battle Arena", "Kill", "Strong", 100, "Kill", "monsters in Battle Arena. Only red-named monsters and bosses count.");
    addRandomQuest(0.9, 3, 3, 250, "Superior Crafting Material", 100, 200, 100, "Battle Arena", "Kill", "Strong", 500, "Kill", "monsters in Battle Arena. Only red-named monsters and bosses count.");
    addRandomQuest(0.8, 4, 4, 250, "Superior Crafting Material", 250, 400, 200, "Battle Arena", "Kill", "Strong", 2500, "Kill", "monsters in Battle Arena. Only red-named monsters and bosses count.");
    addRandomQuest(1, 2, 2, 250, "Unobtainium", 10, 150, 50, "Battle Arena", "Kill", "Boss", 50, "Kill", "boss monsters in Battle Arena.");
    addRandomQuest(0.9, 3, 3, 250, "Unobtainium", 25, 300, 100, "Battle Arena", "Kill", "Boss", 250, "Kill", "boss monsters in Battle Arena.");
    addRandomQuest(0.8, 4, 4, 250, "Unobtainium", 50, 600, 200, "Battle Arena", "Kill", "Boss", 1000, "Kill", "boss monsters in Battle Arena.");
    addRandomQuest(0.5, 2, 2, 250, "Crystal of Rarity", 5, 150, 75, "Battle Arena", "Kill", "Rare", 25, "Kill", "rare monsters in Battle Arena.");
    addRandomQuest(0.4, 3, 3, 250, "Crystal of Rarity", 10, 300, 150, "Battle Arena", "Kill", "Rare", 100, "Kill", "rare monsters in Battle Arena.");
    addRandomQuest(0.5, 3, 2, 250, "Crystal of Ultimate Rarity", 5, 450, 150, "Battle Arena", "Kill", "Epic", 25, "Kill", "epic monsters in Battle Arena.");
    addRandomQuest(0.4, 4, 3, 250, "Crystal of Ultimate Rarity", 10, 900, 300, "Battle Arena", "Kill", "Epic", 100, "Kill", "epic monsters in Battle Arena.");
    addRandomQuest(0.2, 2, 3, 1000, "Crystal of Rarity", 10, 100, 50, "Battle Arena", "Kill", "Pyramid", 500, "Kill", "monsters in Dark Pyramid area.");
    addRandomQuest(0.2, 2, 3, 1000, "Crystal of Rarity", 10, 150, 75, "Battle Arena", "Kill", "Alien", 50, "Kill", "aliens in year 9001 or Prehistoric Mission.");
    addRandomQuest(0.1, 3, 4, 1000, "Crystal of Rarity", 20, 200, 100, "Battle Arena", "Kill", "The Corruption", 50, "Kill", "monsters in The Corruption area.");
    addRandomQuest(0.3, 1, 2, 25, "Crystal of Rarity", 4, 60, 30, "Battle Arena", "Kill", "Master Dummy", 2, "Defeat [Master Dummy]", "times.");
    addRandomQuest(0.3, 1, 2, 75, "Crystal of Rarity", 6, 80, 40, "Battle Arena", "Kill", "Forest Spirit", 2, "Defeat [Forest Spirit]", "times.");
    addRandomQuest(0.3, 2, 3, 150, "Crystal of Rarity", 8, 100, 50, "Battle Arena", "Kill", "Air Spirit", 5, "Defeat [Air Spirit]", "times.");
    addRandomQuest(0.3, 2, 3, 325, "Crystal of Rarity", 10, 120, 60, "Battle Arena", "Kill", "Sand Giant", 5, "Defeat [Sand Giant]", "times.");
    addRandomQuest(0.3, 2, 3, 550, "Crystal of Rarity", 12, 140, 70, "Battle Arena", "Kill", "Water Spirit", 5, "Defeat [Water Spirit]", "times.");
    addRandomQuest(0.3, 2, 3, 900, "Crystal of Rarity", 14, 160, 80, "Battle Arena", "Kill", "Robo Spirit", 5, "Defeat [Robo Spirit]", "times.");
    addRandomQuest(0.3, 2, 3, 1250, "Crystal of Rarity", 16, 180, 90, "Battle Arena", "Kill", "Bloodsurfer", 5, "Defeat [Bloodsurfer]", "times.");
    addRandomQuest(0.3, 3, 4, 2000, "Crystal of Rarity", 18, 240, 120, "Battle Arena", "Kill", "Dark Mage", 10, "Defeat [Dark Mage]", "times.");
    addRandomQuest(0.3, 3, 4, 3500, "Crystal of Rarity", 20, 300, 150, "Battle Arena", "Kill", "Super Triangle", 10, "Defeat [Super Triangle]", "times.");
    addRandomQuest(0.2, 3, 1, 2000, "Crystal of Ultimate Rarity", 10, 500, 125, "Battle Arena", "Kill", "Alien Secret Box", 2, "Defeat [Alien Secret Box] in Defend Mission", "times.");
    addRandomQuest(0.2, 3, 1, 2000, "Crystal of Ultimate Rarity", 10, 500, 125, "Battle Arena", "Kill", "Final Alien", 2, "Defeat [Final Alien] in Prehistoric Mission", "times.");
    addRandomQuest(0.2, 3, 2, 3000, "Crystal of Ultimate Rarity", 12, 600, 150, "Battle Arena", "Kill", "THE MEGABOSS", 2, "Defeat [THE MEGABOSS] in The Special Arena", "times.");
    addRandomQuest(0.2, 3, 3, 4000, "Crystal of Ultimate Rarity", 14, 700, 175, "Battle Arena", "Kill", "Boss of DOOOOOOM", 2, "Defeat [Boss of DOOOOOOM] in Tower of DOOOOOOM", "times.");
    addRandomQuest(0.2, 4, 4, 5000, "Crystal of Ultimate Rarity", 16, 800, 200, "Battle Arena", "Kill", "Chuck Norris", 2, "Defeat [Chuck Norris] in 2012: Ye Olde Pub", "times.");
    addRandomQuest(0.2, 4, 5, 6000, "Crystal of Ultimate Rarity", 20, 1000, 250, "Battle Arena", "Kill", "CHAOS", 2, "Defeat [CHAOS] in Final Chamber", "times.");
    addRandomQuest(1, 1, 2, 25, "Enhancer Fragment", 500, 50, 25, "Battle Arena", "Loot", "Any", 100, "Collect", "loot drops in Battle Arena.");
    addRandomQuest(0.9, 2, 3, 25, "Enhancer Fragment", 1000, 100, 50, "Battle Arena", "Loot", "Any", 500, "Collect", "loot drops in Battle Arena.");
    addRandomQuest(0.8, 3, 4, 25, "Enhancer Fragment", 2000, 200, 100, "Battle Arena", "Loot", "Any", 2500, "Collect", "loot drops in Battle Arena.");
    addRandomQuest(0.5, 1, 2, 25, "Enhancer Fragment", 800, 80, 40, "Battle Arena", "Loot", "Coin", 50, "Collect", "Coin loot drops in Battle Arena.");
    addRandomQuest(0.5, 1, 2, 25, "Enhancer Fragment", 800, 80, 40, "Battle Arena", "Loot", "Green Coin", 50, "Collect", "Green Coin loot drops in Battle Arena.");
    addRandomQuest(0.5, 2, 3, 25, "Enhancer Fragment", 1000, 100, 50, "Battle Arena", "Loot", "Blue Coin", 10, "Collect", "Blue Coin loot drops in Battle Arena.");
    addRandomQuest(0.5, 2, 3, 25, "Enhancer Fragment", 1000, 100, 50, "Battle Arena", "Loot", "Stat Increase", 50, "Collect", "Stat Increase loot drops in Battle Arena.");
    addRandomQuest(0.5, 2, 3, 25, "Enhancer Fragment", 1000, 100, 50, "Battle Arena", "Loot", "Boost", 50, "Collect", "Boost loot drops in Battle Arena.");
    addRandomQuest(0.5, 2, 3, 25, "Enhancer Fragment", 1000, 100, 50, "Battle Arena", "Loot", "Pixel", 50, "Collect", "Pixel loot drops in Battle Arena.");
    addRandomQuest(0.5, 2, 3, 25, "Enhancer Fragment", 1000, 100, 50, "Battle Arena", "Loot", "Crafting Material", 25, "Collect", "Crafting Material loot drops in Battle Arena.");
    addRandomQuest(0.5, 2, 3, 25, "Enhancer Fragment", 1500, 150, 75, "Battle Arena", "Loot", "Enhancer Fragment", 25, "Collect", "Enhancer Fragment loot drops in Battle Arena.");
    addRandomQuest(0.5, 2, 3, 25, "Enhancer Fragment", 1500, 150, 75, "Battle Arena", "Loot", "Superior Crafting Material", 10, "Collect", "Superior Crafting Material loot drops in Battle Arena.");
    addRandomQuest(0.4, 3, 4, 250, "Enhancer Fragment", 2000, 200, 100, "Battle Arena", "Loot", "Unobtainium", 10, "Collect", "Unobtainium loot drops in Battle Arena.");
    addRandomQuest(0.4, 3, 4, 250, "Enhancer Fragment", 3000, 300, 150, "Battle Arena", "Loot", "To-be-Nerfed Gem", 100, "Collect", "To-be-Nerfed Gem loot drops in Battle Arena.");
    addRandomQuest(0.4, 3, 4, 250, "Enhancer Fragment", 3000, 300, 150, "Battle Arena", "Loot", "Crystal of Rarity", 10, "Collect", "Crystal of Rarity loot drops in Battle Arena.");
    addRandomQuest(0.3, 4, 5, 250, "Enhancer Fragment", 4000, 400, 200, "Battle Arena", "Loot", "Crystal of Ultimate Rarity", 10, "Collect", "Crystal of Ultimate Rarity loot drops in Battle Arena.");
    addRandomQuest(0.3, 4, 5, 5000, "Enhancer Fragment", 4000, 400, 200, "Battle Arena", "Loot", "Chaotic Fragment of Chaos", 25, "Collect", "Chaotic Fragment of Chaos loot drops in Battle Arena.");
    addRandomQuest(1, 3, 1, 2500, "Enhancer Fragment", 3000, 300, 100, "Battle Arena", "Loot", "Roflhunter\'s Ring", 1, "Roflhunter has lost", "very valuable ring on some sort of island! Find it!");
    addRandomQuest(1, 1, 1, 25, "Enhancer Fragment", 250, 25, 25, "Battle Arena", "Enhance", "Success", 3, "Use", "Enhancers in Battle Arena.");
    addRandomQuest(1, 3, 1, 2500, "Pirate Sword", 1, 300, 100, "Battle Arena", "Special", "Treasure Map Piece", 4, "Apparently, the pirates are hiding Treasure Map Pieces somewhere... Find", "of them!");
    addRandomQuest(0.3, 3, 1, 3000, "Pixelated Mystery Box", 2, 200, 100, "Battle Arena", "Special", "Spooky Crypt Score", 500, "Reach a kill streak of", "in Spooky Crypt.");
    addRandomQuest(0.3, 3, 1, 4000, "Pixelated Mystery Box", 3, 300, 150, "Battle Arena", "Special", "Spooky Crypt Score", 1000, "Reach a kill streak of", "in Spooky Crypt.");
    addRandomQuest(0.3, 4, 1, 5000, "Pixelated Mystery Box", 4, 400, 200, "Battle Arena", "Special", "Spooky Crypt Score", 2500, "Reach a kill streak of", "in Spooky Crypt.");
    addRandomQuest(0.3, 4, 1, 6000, "Pixelated Mystery Box", 6, 600, 300, "Battle Arena", "Special", "Spooky Crypt Score", 5000, "Reach a kill streak of", "in Spooky Crypt.");
    addRandomQuest(0.3, 3, 1, 5000, "Pixelated Mystery Box", 3, 300, 100, "Battle Arena", "Special", "Secret Dungeon Score", 1400, "Clear the Secret Dungeon with a score of", "or higher.");
    addRandomQuest(0.3, 3, 1, 6000, "Pixelated Mystery Box", 4, 450, 150, "Battle Arena", "Special", "Secret Dungeon Score", 2100, "Clear the Secret Dungeon with a score of", "or higher.");
    addRandomQuest(0.3, 4, 1, 7000, "Pixelated Mystery Box", 6, 600, 200, "Battle Arena", "Special", "Secret Dungeon Score", 2800, "Clear the Secret Dungeon with a score of", "or higher.");
    addRandomQuest(0.2, 4, 1, 8000, "Pixelated Mystery Box", 9, 900, 300, "Battle Arena", "Special", "Secret Dungeon Score", 3500, "Clear the Secret Dungeon with a score of", "or higher.");
    addRandomQuest(0.2, 4, 1, 9000, "Pixelated Mystery Box", 15, 1500, 500, "Battle Arena", "Special", "Secret Dungeon Score", 4200, "Clear the Secret Dungeon with a score of", "or higher.");
    addRandomQuest(0.2, 3, 1, 5000, "Pixelated Mystery Box", 6, 600, 150, "Battle Arena", "Special", "Triangle Hideout Score", 50, "Reach a kill streak of", "in Triangle Hideout.");
    addRandomQuest(0.2, 4, 1, 6000, "Pixelated Mystery Box", 8, 800, 200, "Battle Arena", "Special", "Triangle Hideout Score", 100, "Reach a kill streak of", "in Triangle Hideout.");
    addRandomQuest(0.2, 4, 1, 7000, "Pixelated Mystery Box", 12, 1200, 300, "Battle Arena", "Special", "Triangle Hideout Score", 250, "Reach a kill streak of", "in Triangle Hideout.");
    addRandomQuest(0.2, 4, 1, 8000, "Pixelated Mystery Box", 20, 2000, 500, "Battle Arena", "Special", "Triangle Hideout Score", 500, "Reach a kill streak of", "in Triangle Hideout.");
    addRandomQuest(0.04, 3, 1, 5000, "Pixelated Mystery Box", 4, 400, 100, "Battle Arena", "Special", "MB\'s Revenge Score", 50, "Reach a kill streak of", "in THE MEGABOSS\'s Revenge.");
    addRandomQuest(0.04, 3, 1, 6000, "Pixelated Mystery Box", 6, 600, 150, "Battle Arena", "Special", "MB\'s Revenge Score", 100, "Reach a kill streak of", "in THE MEGABOSS\'s Revenge.");
    addRandomQuest(0.04, 4, 1, 7000, "Pixelated Mystery Box", 8, 800, 200, "Battle Arena", "Special", "MB\'s Revenge Score", 250, "Reach a kill streak of", "in THE MEGABOSS\'s Revenge.");
    addRandomQuest(0.5, 1, 2, 25, "Superior Crafting Material", 10, 25, 25, "Battle Arena", "Use Skill", "Basic Attack", 250, "Use [Basic Attack] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 1, 2, 50, "Superior Crafting Material", 15, 30, 30, "Battle Arena", "Use Skill", "Heal", 250, "Use [Heal] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 1, 2, 50, "Superior Crafting Material", 15, 30, 30, "Battle Arena", "Use Skill", "Quick Attack", 500, "Use [Quick Attack] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 1, 2, 250, "Superior Crafting Material", 20, 40, 40, "Battle Arena", "Use Skill", "Power Attack", 250, "Use [Power Attack] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 2, 2, 750, "Superior Crafting Material", 25, 50, 50, "Battle Arena", "Use Skill", "Super Knockback", 100, "Use [Specialized Skill] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 2, 2, 1500, "Superior Crafting Material", 35, 75, 75, "Battle Arena", "Use Skill", "Combo Strike", 10, "Use [Combo Strike] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 2, 2, 50, "Unobtainium", 5, 75, 75, "Battle Arena", "Use Skill", "Limit Break", 10, "Use [Limit Break] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 3, 2, 2000, "Unobtainium", 10, 100, 100, "Battle Arena", "Use Skill", "OM NOM NOM", 5, "Use [Unleash] skill", "times in Battle Arena.");
    addRandomQuest(0.5, 4, 2, 5000, "Unobtainium", 20, 200, 200, "Battle Arena", "Use Skill", "Roundhouse Kick", 2, "Use [Roundhouse Kick] skill", "times in Battle Arena.");
    addRandomQuest(0.4, 2, 2, 250, "Superior Crafting Material", 25, 50, 50, "Battle Arena", "Use Skill", "Double Attack", 10, "Equip a Spirit weapon and use [Double Attack] skill", "times in Battle Arena.");
    addRandomQuest(0.4, 2, 2, 250, "Superior Crafting Material", 30, 60, 60, "Battle Arena", "Use Skill", "Critical Strike", 10, "Equip a Spirit weapon and use [Critical Strike] skill", "times in Battle Arena.");
    addRandomQuest(0.4, 2, 2, 750, "Superior Crafting Material", 40, 80, 80, "Battle Arena", "Use Skill", "Chaos", 10, "Equip a Spirit weapon and use [Chaos] skill", "times in Battle Arena.");
    addRandomQuest(0.4, 3, 2, 1500, "Superior Crafting Material", 50, 100, 100, "Battle Arena", "Use Skill", "Instant Kill", 10, "Equip a Spirit weapon and use [Overkill] skill", "times in Battle Arena.");
    addRandomQuest(0.4, 3, 2, 500, "Unobtainium", 10, 120, 120, "Battle Arena", "Use Skill", "Enrage", 2, "Equip a Spirit weapon and use [Enrage] skill", "times in Battle Arena.");
    addRandomQuest(0.4, 3, 2, 1000, "Unobtainium", 15, 150, 150, "Battle Arena", "Use Skill", "Elemental Boost", 2, "Equip a Spirit weapon and use [Elemental Boost] skill", "times in Battle Arena.");
    addRandomQuest(0.4, 4, 2, 2500, "Unobtainium", 20, 200, 200, "Battle Arena", "Use Skill", "Invincibility", 2, "Equip a Spirit weapon and use [Invincibility] skill", "times in Battle Arena.");
    addRandomQuest(1, 1, 2, 35, "Explosion Crate", 2, 50, 25, "Button Machine", "Press", "Any", 250, "Click the Button Machine", "times.");
    addRandomQuest(0.9, 2, 3, 35, "Explosion Crate", 4, 100, 50, "Button Machine", "Press", "Any", 1000, "Click the Button Machine", "times.");
    addRandomQuest(0.9, 2, 3, 35, "Awesome Crate", 2, 100, 50, "Button Machine", "Press", "Great", 100, "Get", "GREAT or better clicks in Button Machine.");
    addRandomQuest(0.8, 3, 4, 35, "Awesome Crate", 4, 200, 100, "Button Machine", "Press", "Great", 500, "Get", "GREAT or better clicks in Button Machine.");
    addRandomQuest(0.8, 3, 4, 35, "Chaos Crate", 2, 200, 100, "Button Machine", "Press", "Excellent", 100, "Get", "EXCELLENT or better clicks in Button Machine.");
    addRandomQuest(0.7, 4, 5, 35, "Chaos Crate", 4, 400, 200, "Button Machine", "Press", "Excellent", 500, "Get", "EXCELLENT or better clicks in Button Machine.");
    addRandomQuest(0.7, 4, 5, 35, "Legendary Box", 1, 600, 300, "Button Machine", "Press", "Perfect", 200, "Get", "PERFECT clicks in Button Machine.");
    addRandomQuest(1, 1, 2, 45, "Awesome Crate", 2, 25, 25, "Money Printer", "Print", "Any", 50, "Print money", "times.");
    addRandomQuest(0.9, 2, 3, 45, "Chaos Crate", 2, 50, 50, "Money Printer", "Print", "Any", 250, "Print money", "times.");
    addRandomQuest(0.8, 3, 4, 45, "Gambler\'s Box", 5, 100, 100, "Money Printer", "Print", "Critical", 10, "Get", "CRITICAL prints in Money Printer.");
    addRandomQuest(0.6, 1, 1, 80, "Explosion Crate", 2, 100, 25, "Arcade", "Pong", "High Score", 50000, "Achieve a high score of", "in Pong.");
    addRandomQuest(0.5, 2, 1, 80, "Awesome Crate", 2, 200, 50, "Arcade", "Pong", "High Score", 250000, "Achieve a high score of", "in Pong.");
    addRandomQuest(0.4, 3, 1, 80, "Chaos Crate", 2, 400, 100, "Arcade", "Pong", "High Score", 1500000, "Achieve a high score of", "in Pong.");
    addRandomQuest(0.3, 4, 1, 80, "Legendary Box", 1, 800, 200, "Arcade", "Pong", "High Score", 3000000, "Achieve a high score of", "in Pong.");
    addRandomQuest(0.6, 1, 1, 80, "Explosion Crate", 2, 100, 25, "Arcade", "Ultimate Avoidance", "High Score", 50000, "Achieve a high score of", "in Ultimate Avoidance.");
    addRandomQuest(0.5, 2, 1, 80, "Awesome Crate", 2, 200, 50, "Arcade", "Ultimate Avoidance", "High Score", 200000, "Achieve a high score of", "in Ultimate Avoidance.");
    addRandomQuest(0.4, 3, 1, 80, "Chaos Crate", 2, 400, 100, "Arcade", "Ultimate Avoidance", "High Score", 500000, "Achieve a high score of", "in Ultimate Avoidance.");
    addRandomQuest(0.3, 4, 1, 80, "Legendary Box", 1, 800, 200, "Arcade", "Ultimate Avoidance", "High Score", 1000000, "Achieve a high score of", "in Ultimate Avoidance.");
    addRandomQuest(0.6, 1, 1, 80, "Explosion Crate", 2, 100, 25, "Arcade", "Math Master", "High Score", 50000, "Achieve a high score of", "in Math Master.");
    addRandomQuest(0.5, 2, 1, 80, "Awesome Crate", 2, 200, 50, "Arcade", "Math Master", "High Score", 250000, "Achieve a high score of", "in Math Master.");
    addRandomQuest(0.4, 3, 1, 80, "Chaos Crate", 2, 400, 100, "Arcade", "Math Master", "High Score", 750000, "Achieve a high score of", "in Math Master.");
    addRandomQuest(0.3, 4, 1, 80, "Legendary Box", 1, 800, 200, "Arcade", "Math Master", "High Score", 1500000, "Achieve a high score of", "in Math Master.");
    addRandomQuest(0.6, 1, 1, 80, "Explosion Crate", 2, 100, 25, "Arcade", "Whack-a-greg", "High Score", 1200000, "Achieve a high score of", "in Whack-a-greg.");
    addRandomQuest(0.5, 2, 1, 80, "Awesome Crate", 2, 200, 50, "Arcade", "Whack-a-greg", "High Score", 1600000, "Achieve a high score of", "in Whack-a-greg.");
    addRandomQuest(0.4, 3, 1, 80, "Chaos Crate", 2, 400, 100, "Arcade", "Whack-a-greg", "High Score", 2000000, "Achieve a high score of", "in Whack-a-greg.");
    addRandomQuest(0.3, 4, 1, 80, "Legendary Box", 1, 800, 200, "Arcade", "Whack-a-greg", "High Score", 2400000, "Achieve a high score of", "in Whack-a-greg.");
    addRandomQuest(0.6, 1, 1, 300, "Explosion Crate", 2, 100, 25, "Arcade", "MindSweeper", "High Score", 500000, "Achieve a high score of", "in MindSweeper.");
    addRandomQuest(0.5, 2, 1, 300, "Awesome Crate", 2, 200, 50, "Arcade", "MindSweeper", "High Score", 2500000, "Achieve a high score of", "in MindSweeper.");
    addRandomQuest(0.4, 3, 1, 300, "Chaos Crate", 2, 400, 100, "Arcade", "MindSweeper", "High Score", 5000000, "Achieve a high score of", "in MindSweeper.");
    addRandomQuest(0.3, 4, 1, 300, "Legendary Box", 1, 800, 200, "Arcade", "MindSweeper", "High Score", 7500000, "Achieve a high score of", "in MindSweeper.");
    addRandomQuest(0.6, 1, 1, 300, "Explosion Crate", 2, 100, 25, "Arcade", "Balance 3", "High Score", 300000, "Achieve a high score of", "in Balance 3.");
    addRandomQuest(0.5, 2, 1, 300, "Awesome Crate", 2, 200, 50, "Arcade", "Balance 3", "High Score", 1000000, "Achieve a high score of", "in Balance 3.");
    addRandomQuest(0.4, 3, 1, 300, "Chaos Crate", 2, 400, 100, "Arcade", "Balance 3", "High Score", 2500000, "Achieve a high score of", "in Balance 3.");
    addRandomQuest(0.3, 4, 1, 300, "Legendary Box", 1, 800, 200, "Arcade", "Balance 3", "High Score", 4500000, "Achieve a high score of", "in Balance 3.");
    addRandomQuest(0.6, 1, 1, 300, "Explosion Crate", 2, 100, 25, "Arcade", "Triangle Count", "High Score", 1000000, "Achieve a high score of", "in Triangle Count.");
    addRandomQuest(0.5, 2, 1, 300, "Awesome Crate", 2, 200, 50, "Arcade", "Triangle Count", "High Score", 2000000, "Achieve a high score of", "in Triangle Count.");
    addRandomQuest(0.4, 3, 1, 300, "Chaos Crate", 2, 400, 100, "Arcade", "Triangle Count", "High Score", 4000000, "Achieve a high score of", "in Triangle Count.");
    addRandomQuest(0.3, 4, 1, 300, "Legendary Box", 1, 800, 200, "Arcade", "Triangle Count", "High Score", 7500000, "Achieve a high score of", "in Triangle Count.");
    addRandomQuest(0.6, 1, 1, 300, "Explosion Crate", 2, 100, 25, "Arcade", "MMR X", "High Score", 300000, "Achieve a high score of", "in MMR X.");
    addRandomQuest(0.5, 2, 1, 300, "Awesome Crate", 2, 200, 50, "Arcade", "MMR X", "High Score", 1000000, "Achieve a high score of", "in MMR X.");
    addRandomQuest(0.4, 3, 1, 300, "Chaos Crate", 2, 400, 100, "Arcade", "MMR X", "High Score", 2500000, "Achieve a high score of", "in MMR X.");
    addRandomQuest(0.3, 4, 1, 300, "Legendary Box", 1, 800, 200, "Arcade", "MMR X", "High Score", 4500000, "Achieve a high score of", "in MMR X.");
    addRandomQuest(0.7, 2, 2, 80, "Explosion Crate", 4, 100, 50, "Arcade", "Pong", "Total Score", 3000000, "Achieve a total score of", "in Pong.");
    addRandomQuest(0.7, 2, 2, 80, "Explosion Crate", 4, 100, 50, "Arcade", "Ultimate Avoidance", "Total Score", 1000000, "Achieve a total score of", "in Ultimate Avoidance.");
    addRandomQuest(0.7, 2, 2, 80, "Explosion Crate", 4, 100, 50, "Arcade", "Math Master", "Total Score", 1000000, "Achieve a total score of", "in Math Master.");
    addRandomQuest(0.7, 2, 2, 80, "Explosion Crate", 4, 100, 50, "Arcade", "Whack-a-greg", "Total Score", 4000000, "Achieve a total score of", "in Whack-a-greg.");
    addRandomQuest(0.7, 2, 2, 300, "Explosion Crate", 4, 100, 50, "Arcade", "MindSweeper", "Total Score", 8000000, "Achieve a total score of", "in MindSweeper.");
    addRandomQuest(0.7, 2, 2, 300, "Explosion Crate", 4, 100, 50, "Arcade", "Balance 3", "Total Score", 5000000, "Achieve a total score of", "in Balance 3.");
    addRandomQuest(0.7, 2, 2, 300, "Explosion Crate", 4, 100, 50, "Arcade", "Triangle Count", "Total Score", 8000000, "Achieve a total score of", "in Triangle Count.");
    addRandomQuest(0.7, 2, 2, 300, "Explosion Crate", 4, 100, 50, "Arcade", "MMR X", "Total Score", 5000000, "Achieve a total score of", "in MMR X.");
    addRandomQuest(1, 1, 2, 180, "Explosion Crate", 2, 100, 25, "Stadium", "Simple Race", "Easy", 2, "Win Simple Race", "times on any difficulty.");
    addRandomQuest(0.9, 2, 3, 300, "Awesome Crate", 2, 200, 50, "Stadium", "Simple Race", "Medium", 3, "Win Simple Race", "times on Medium difficulty or higher.");
    addRandomQuest(0.8, 3, 4, 600, "Chaos Crate", 2, 400, 100, "Stadium", "Simple Race", "Hard", 4, "Win Simple Race", "times on Hard difficulty or higher.");
    addRandomQuest(0.7, 4, 5, 1000, "Legendary Box", 1, 800, 200, "Stadium", "Simple Race", "Impossible", 5, "Win Simple Race", "times on Impossible difficulty.");
    addRandomQuest(1, 1, 2, 180, "Explosion Crate", 2, 150, 35, "Stadium", "Item Fight", "Easy", 2, "Win Item Fight", "times on any difficulty.");
    addRandomQuest(0.9, 2, 3, 300, "Awesome Crate", 2, 300, 75, "Stadium", "Item Fight", "Medium", 3, "Win Item Fight", "times on Medium difficulty or higher.");
    addRandomQuest(0.8, 3, 4, 600, "Chaos Crate", 2, 600, 150, "Stadium", "Item Fight", "Hard", 4, "Win Item Fight", "times on Hard difficulty or higher.");
    addRandomQuest(0.7, 4, 5, 1000, "Legendary Box", 1, 1200, 300, "Stadium", "Item Fight", "Impossible", 5, "Win Item Fight", "times on Impossible difficulty.");
    addRandomQuest(0.5, 1, 2, 180, "Explosion Crate", 1, 50, 25, "Stadium", "Use Item", "Any", 25, "Use", "items in Stadium.");
    addRandomQuest(0.1, 3, 1, 180, "Legendary Box", 1, 500, 100, "Stadium", "Death Match", "Win", 1, "Win Death Match", "time.");
    addRandomQuest(0.05, 4, 1, 180, "Legendary Box", 2, 1000, 200, "Stadium", "Death Match", "Win", 2, "Win Death Match", "times.");
    addRandomQuest(0.1, 3, 1, 180, "Legendary Box", 1, 500, 100, "Stadium", "Death Match", "KO", 2, "Score a total of", "KOs in Death Match.");
    addRandomQuest(0.05, 4, 1, 180, "Legendary Box", 2, 1000, 200, "Stadium", "Death Match", "KO", 5, "Score a total of", "KOs in Death Match.");
    addRandomQuest(0.03, 2, 1, 180, "Awesome Crate", 4, 250, 50, "Stadium", "Death Match", "PWNt", 300, "Score", "PWNts in a single game of Death Match.");
    addRandomQuest(0.03, 2, 1, 180, "Awesome Crate", 6, 375, 75, "Stadium", "Death Match", "PWNt", 450, "Score", "PWNts in a single game of Death Match.");
    addRandomQuest(0.03, 3, 1, 180, "Chaos Crate", 6, 500, 100, "Stadium", "Death Match", "PWNt", 600, "Score", "PWNts in a single game of Death Match.");
    addRandomQuest(0.03, 3, 1, 180, "Chaos Crate", 8, 750, 150, "Stadium", "Death Match", "PWNt", 750, "Score", "PWNts in a single game of Death Match.");
    addRandomQuest(0.03, 4, 1, 180, "Legendary Box", 2, 1000, 200, "Stadium", "Death Match", "PWNt", 900, "Score", "PWNts in a single game of Death Match.");
    addRandomQuest(0.5, 1, 2, 180, "Gambler\'s Box", 2, 50, 25, "Stadium", "Bet", "Win", 2, "Win", "Bets in Stadium.");
    addRandomQuest(1, 1, 2, 300, "Explosion Crate", 2, 100, 25, "TukkunFCG", "Win", "Any", 5, "Win", "battles in TukkunFCG.");
    addRandomQuest(1, 1, 2, 300, "Explosion Crate", 3, 150, 35, "TukkunFCG", "Win", "Level 2", 5, "Win", "battles against Level 2 or higher opponents in TukkunFCG.");
    addRandomQuest(0.9, 2, 3, 300, "Awesome Crate", 3, 200, 50, "TukkunFCG", "Win", "Level 3", 5, "Win", "battles against Level 3 or higher opponents in TukkunFCG.");
    addRandomQuest(0.9, 2, 3, 300, "Awesome Crate", 4, 300, 75, "TukkunFCG", "Win", "Level 4", 5, "Win", "battles against Level 4 or higher opponents in TukkunFCG.");
    addRandomQuest(0.8, 3, 4, 500, "Chaos Crate", 4, 400, 100, "TukkunFCG", "Win", "Level 6", 5, "Win", "battles against Level 6 or higher opponents in TukkunFCG.");
    addRandomQuest(0.8, 3, 4, 700, "Chaos Crate", 5, 600, 150, "TukkunFCG", "Win", "Level 7", 5, "Win", "battles against Level 7 or higher opponents in TukkunFCG.");
    addRandomQuest(0.7, 4, 5, 1000, "Legendary Box", 1, 800, 200, "TukkunFCG", "Win", "Level 8", 5, "Win", "battles against Level 8 or higher opponents in TukkunFCG.");
    addRandomQuest(0.7, 4, 5, 1000, "Legendary Box", 2, 2000, 500, "TukkunFCG", "Win", "Level 10", 5, "Win", "battles against Level 10 opponents in TukkunFCG.");
    addRandomQuest(0.8, 1, 2, 400, "Explosion Crate", 4, 50, 25, "LolMarket", "Sell", "0.5k Profit", 50, "Sell", "gems with 500 Profit per gem or higher in LolMarket.");
    addRandomQuest(0.7, 2, 3, 600, "Awesome Crate", 4, 100, 50, "LolMarket", "Sell", "1.0k Profit", 100, "Sell", "gems with 1,000 Profit per gem or higher in LolMarket.");
    addRandomQuest(0.6, 2, 3, 800, "Awesome Crate", 6, 150, 75, "LolMarket", "Sell", "1.5k Profit", 100, "Sell", "gems with 1,500 Profit per gem or higher in LolMarket.");
    addRandomQuest(0.5, 3, 4, 1000, "Chaos Crate", 6, 200, 100, "LolMarket", "Sell", "2.0k Profit", 250, "Sell", "gems with 2,000 Profit per gem or higher in LolMarket.");
    addRandomQuest(0.4, 3, 4, 1200, "Chaos Crate", 8, 300, 150, "LolMarket", "Sell", "2.5k Profit", 250, "Sell", "gems with 2,500 Profit per gem or higher in LolMarket.");
    addRandomQuest(0.3, 4, 5, 1400, "Legendary Box", 2, 400, 200, "LolMarket", "Sell", "3.0k Profit", 500, "Sell", "gems with 3,000 Profit per gem or higher in LolMarket.");
    addRandomQuest(0.2, 4, 5, 1600, "Legendary Box", 3, 500, 250, "LolMarket", "Sell", "3.5k Profit", 500, "Sell", "gems with 3,500 Profit per gem or higher in LolMarket.");
    addRandomQuest(0.1, 4, 5, 1800, "Legendary Box", 4, 600, 300, "LolMarket", "Sell", "4.0k Profit", 500, "Sell", "gems with 4,000 Profit per gem or higher in LolMarket.");
    addRandomQuest(1, 1, 2, 500, "Energy Refill", 2, 50, 25, "Awesome Adventures", "Adventure", "Any", 25, "Adventure", "times.");
    addRandomQuest(1, 2, 3, 500, "Energy Refill", 3, 100, 50, "Awesome Adventures", "Adventure", "Any", 100, "Adventure", "times.");
    addRandomQuest(0.8, 2, 3, 500, "Energy Refill", 3, 100, 50, "Awesome Adventures", "Adventure", "Town", 50, "Adventure in Town", "times.");
    addRandomQuest(0.8, 2, 3, 500, "Energy Refill", 3, 100, 50, "Awesome Adventures", "Adventure", "Untitled Zone", 50, "Adventure in Untitled Zone", "times.");
    addRandomQuest(0.8, 2, 3, 500, "Energy Refill", 3, 100, 50, "Awesome Adventures", "Adventure", "Titled Zone", 50, "Adventure in Titled Zone", "times.");
    addRandomQuest(1, 3, 2, 500, "Energy Refill", 5, 200, 100, "Awesome Adventures", "Adventure Item", "Grammar Pill", 5, "impr00v ur grammer by takeing", "grammer pillz!!!1!1");
    addRandomQuest(1, 1, 2, 750, "Regular Energy Drink", 2, 50, 25, "Fishing", "Result", "Success", 10, "Get", "catches in Fishing.");
    addRandomQuest(0.9, 2, 3, 750, "Regular Energy Drink", 4, 100, 50, "Fishing", "Result", "Success", 50, "Get", "catches in Fishing.");
    addRandomQuest(1, 1, 2, 750, "Regular Pet Food", 2, 100, 25, "Fishing", "Result", "Perfect", 5, "Get", "PERFECT catches in Fishing.");
    addRandomQuest(0.9, 2, 3, 750, "Regular Pet Food", 4, 200, 50, "Fishing", "Result", "Perfect", 25, "Get", "PERFECT catches in Fishing.");
    addRandomQuest(1, 1, 1, 750, "Regular Pet Food", 2, 100, 25, "Fishing", "Result", "Perfect Streak", 3, "Get a PERFECT streak of", "in Fishing.");
    addRandomQuest(0.5, 2, 1, 750, "Regular Pet Food", 3, 200, 50, "Fishing", "Result", "Perfect Streak", 6, "Get a PERFECT streak of", "in Fishing.");
    addRandomQuest(0.3, 2, 1, 750, "Regular Pet Food", 4, 300, 75, "Fishing", "Result", "Perfect Streak", 10, "Get a PERFECT streak of", "in Fishing.");
    addRandomQuest(0.3, 3, 1, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Result", "Perfect Streak", 15, "Get a PERFECT streak of", "in Fishing.");
    addRandomQuest(0.2, 3, 1, 750, "Elite Pet Food", 4, 600, 150, "Fishing", "Result", "Perfect Streak", 20, "Get a PERFECT streak of", "in Fishing.");
    addRandomQuest(0.2, 4, 1, 750, "Elite Pet Food", 5, 800, 200, "Fishing", "Result", "Perfect Streak", 25, "Get a PERFECT streak of", "in Fishing.");
    addRandomQuest(0.1, 4, 1, 750, "Legendary Box", 4, 1200, 300, "Fishing", "Result", "Perfect Streak", 30, "Get a PERFECT streak of", "in Fishing.");
    addRandomQuest(0.5, 2, 3, 750, "Elite Energy Drink", 1, 100, 50, "Fishing", "Junk", "Any", 25, "Catch", "junk items in Fishing.");
    addRandomQuest(0.4, 2, 3, 1000, "Elite Energy Drink", 2, 150, 75, "Fishing", "Junk", "Lv. 5+", 25, "Catch", "Lv. 5+ junk items in Fishing.");
    addRandomQuest(0.4, 3, 4, 2500, "Elite Energy Drink", 3, 200, 100, "Fishing", "Junk", "Lv. 10+", 25, "Catch", "Lv. 10+ junk items in Fishing.");
    addRandomQuest(0.3, 3, 4, 5000, "Elite Energy Drink", 4, 300, 150, "Fishing", "Junk", "Lv. 20+", 25, "Catch", "Lv. 20+ junk items in Fishing.");
    addRandomQuest(0.3, 4, 5, 8000, "Elite Energy Drink", 5, 400, 200, "Fishing", "Junk", "Lv. 30", 25, "Catch", "Lv. 30 junk items in Fishing.");
    addRandomQuest(0.5, 2, 3, 750, "Elite Energy Drink", 1, 100, 50, "Fishing", "Fish", "Any", 10, "Catch", "fish in Fishing. Junk and special items don\'t count.");
    addRandomQuest(0.4, 2, 3, 1000, "Elite Energy Drink", 2, 150, 75, "Fishing", "Fish", "Lv. 5+", 10, "Catch", "Lv. 5+ fish in Fishing. Junk items don\'t count.");
    addRandomQuest(0.4, 3, 4, 2500, "Elite Energy Drink", 3, 200, 100, "Fishing", "Fish", "Lv. 10+", 10, "Catch", "Lv. 10+ fish in Fishing. Junk items don\'t count.");
    addRandomQuest(0.3, 3, 4, 5000, "Elite Energy Drink", 4, 300, 150, "Fishing", "Fish", "Lv. 20+", 10, "Catch", "Lv. 20+ fish in Fishing. Junk items don\'t count.");
    addRandomQuest(0.3, 4, 5, 8000, "Elite Energy Drink", 5, 400, 200, "Fishing", "Fish", "Lv. 30", 10, "Catch", "Lv. 30+ fish in Fishing. Junk items don\'t count.");
    addRandomQuest(0.3, 2, 2, 750, "Elite Pet Food", 2, 200, 50, "Fishing", "Special Item", "Any", 5, "Catch", "special items in Fishing. Junk items don\'t count.");
    addRandomQuest(0.2, 3, 2, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Special Item", "Treasure Box", 2, "Catch", "Treasure Boxes in Fishing.");
    addRandomQuest(0.2, 3, 2, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Special Item", "Key", 2, "Catch", "Keys in Fishing.");
    addRandomQuest(0.2, 3, 2, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Special Item", "Energy Drink", 3, "Catch", "Energy Drink items in Fishing.");
    addRandomQuest(0.2, 3, 2, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Special Item", "Pet Food", 3, "Catch", "Pet Food items in Fishing.");
    addRandomQuest(0.1, 3, 1, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Special Item", "Energy Refill", 2, "Catch", "Energy Refills in Fishing.");
    addRandomQuest(0.1, 3, 1, 2000, "Elite Pet Food", 4, 600, 150, "Fishing", "Special Item", "Fertilizer", 2, "Catch", "Fertilizers in Fishing.\n(Fishing Skill 10+ is required)");
    addRandomQuest(0.1, 4, 1, 4000, "Elite Pet Food", 5, 800, 200, "Fishing", "Special Item", "Mega Fertilizer", 2, "Catch", "Mega Fertilizers in Fishing.\n(Fishing Skill 20+ is required)");
    addRandomQuest(0.1, 3, 1, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Special Item", "Mystery Box", 2, "Catch", "Mystery Boxes in Fishing.");
    addRandomQuest(0.05, 3, 1, 750, "Elite Pet Food", 3, 400, 100, "Fishing", "Special Item", "Explosion Crate", 2, "Catch", "Explosion Crates in Fishing.");
    addRandomQuest(0.05, 3, 1, 2000, "Elite Pet Food", 4, 600, 150, "Fishing", "Special Item", "Awesome Crate", 2, "Catch", "Awesome Crates in Fishing.\n(Fishing Skill 10+ is required)");
    addRandomQuest(0.05, 4, 1, 4000, "Elite Pet Food", 5, 800, 200, "Fishing", "Special Item", "Chaos Crate", 2, "Catch", "Chaos Crates in Fishing.\n(Fishing Skill 20+ is required)");
    addRandomQuest(0.05, 4, 1, 7000, "Elite Pet Food", 6, 1200, 300, "Fishing", "Special Item", "Legendary Box", 2, "Catch", "Legendary Boxes in Fishing.\n(Fishing Skill 30+ is required)");
    addRandomQuest(1, 1, 2, 700, "Random Career Potion", 1, 50, 25, "Career", "Career EXP", "Any", 2500, "Gain a total of", "Career EXP.");
    addRandomQuest(1, 2, 3, 700, "Random Career Potion", 2, 100, 50, "Career", "Career EXP", "Any", 10000, "Gain a total of", "Career EXP.");
    addRandomQuest(1, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Any", 50000, "Gain a total of", "Career EXP.");
    addRandomQuest(1, 4, 5, 900, "Mega Career Potion", 1, 400, 200, "Career", "Career EXP", "Any", 250000, "Gain a total of", "Career EXP.");
    addRandomQuest(0.7, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 1", 10000, "Gain", "\'Idler\' Career EXP.");
    addRandomQuest(0.7, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 2", 10000, "Gain", "\'Gardener\' Career EXP.");
    addRandomQuest(0.7, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 3", 10000, "Gain", "\'Fighter\' Career EXP.");
    addRandomQuest(0.7, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 4", 10000, "Gain", "\'Item Maker\' Career EXP.");
    addRandomQuest(0.5, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 5", 10000, "Gain", "\'Button Basher\' Career EXP.");
    addRandomQuest(0.5, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 6", 10000, "Gain", "\'Arcade Player\' Career EXP.");
    addRandomQuest(0.5, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 7", 10000, "Gain", "\'Racer\' Career EXP.");
    addRandomQuest(0.5, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 8", 10000, "Gain", "\'Card Player\' Career EXP.");
    addRandomQuest(0.3, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 9", 10000, "Gain", "\'Gem Trader\' Career EXP.");
    addRandomQuest(0.3, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 10", 10000, "Gain", "\'Adventurer\' Career EXP.");
    addRandomQuest(0.3, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 11", 10000, "Gain", "\'Pet Trainer\' Career EXP.");
    addRandomQuest(0.3, 3, 4, 900, "Random Career Potion", 4, 200, 100, "Career", "Career EXP", "Career 12", 10000, "Gain", "\'Fisher\' Career EXP.");
    addRandomQuest(1, 3, 4, 2000, "Legendary Box", 1, 200, 100, "Pet", "Mad Skillz", "Mystery Effect", 2, "Use your Pet\'s Mystery Effect", "times.");
    addRandomQuest(1, 4, 5, 2000, "Legendary Box", 2, 400, 200, "Pet", "Mad Skillz", "Mystery Effect", 10, "Use your Pet\'s Mystery Effect", "times.");
    var achListR = [];
    var questListR = [];
    addAchievementR(101, false, "Time Waster", "Play Anti-Idle for a total of ", " seconds", "totalPlayTime", "save", [600, 3600, 18000, 86400, 604800, 2592000, 7776000]);
    addAchievementR(102, false, "Anti-Idle Addict", "Play Anti-Idle for ", " days in a row", "maxConsecutiveDays", "save", [2, 3, 5, 10, 25, 50, 100]);
    addAchievementR(103, false, "Level Up!", "Reach level ", "", "bestLevel", "save", [50, 250, 1000, 2500, 5000, 9000, 9001]);
    addAchievementR(104, false, "EXPert", "Reach ", " EXP", "bestExp", "save", [1000000000, 10000000000, 100000000000, 1000000000000, 5000000000000, 25000000000000, 100000000000000]);
    addAchievementR(105, false, "Coin Gates", "Have ", " unspent Coins", "coinMax", "save", [1000000, 25000000, 500000000, 10000000000, 100000000000, 1000000000000, 10000000000000]);
    addAchievementR(106, false, "Green Coin Collector", "Have ", " unspent Green Coins", "greenCoinMax", "save", [10000, 100000, 1000000, 10000000, 100000000, 1000000000, 5000000000]);
    addAchievementR(107, false, "Blue Coin Collector", "Have ", " unspent Blue Coins", "blueCoinMax", "save", [50, 250, 1000, 10000, 100000, 1000000, 2500000]);
    addAchievementR(108, false, "White Coin Collector", "Have ", " unspent White Coins", "whiteCoinMax", "save", [5, 25, 100, 1000, 10000, 100000, 999999]);
    addAchievementR(109, false, "Reward Psychopath", "Claim ", " rewards from the Progress Bar", "rewardClaim", "save", [250, 2500, 25000, 250000, 2500000, 25000000, 250000000]);
    addAchievementR(110, false, "Idle Mode Master", "Upgrade the Progress Bar\'s Idle Mode ON speed to ", "%", "progSpeedAuto", "save", [40, 60, 80, 100, 125, 150, 200]);
    addAchievementR(111, false, "Anti-Idle Mode Master", "Upgrade the Progress Bar\'s Idle Mode OFF speed to ", "%", "progSpeedManual", "save", [125, 150, 200, 250, 300, 400, 500]);
    addAchievementR(112, false, "Active Player", "Claim ", " rewards without Idle Mode", "rewardClaimManual", "save", [100, 1000, 10000, 100000, 1000000, 10000000, 100000000]);
    addAchievementR(113, false, "Power Leveler", "Gain a total of ", "% Boost", "boostPurchased", "save", [500, 2500, 10000, 50000, 500000, 5000000, 50000000]);
    addAchievementR(114, false, "Boost Upgrader", "Raise your Max Boost to ", "%", "boostMax", "root", [550, 700, 1000, 1300, 1600, 1900, 2400]);
    addAchievementR(115, false, "Progress Extender", "Upgrade your Progress Bar Capacity to ", "% using Awesome Adventures", "progStore", "save", [200, 400, 700, 1000, 2000, 3000, 5000]);
    addAchievementR(116, false, "Achievement Addict", "Reach an Achievement Rating of ", "", "newAchScore", "save", [50, 250, 500, 750, 1000, 1250, 1330]);
    addAchievementR(117, false, "Sigma Achiever", "Earn ", " Rank SIGMA Achievements", "newAchRank1", "save", [2, 5, 20, 50, 100, 150, 190]);
    addAchievementR(118, false, "Tau Achiever", "Earn ", " Rank TAU Achievements", "newAchRank2", "save", [2, 5, 20, 50, 100, 150, 190]);
    addAchievementR(119, false, "Upsilon Achiever", "Earn ", " Rank UPSILON Achievements", "newAchRank3", "save", [2, 5, 20, 50, 100, 150, 190]);
    addAchievementR(120, false, "Phi Achiever", "Earn ", " Rank PHI Achievements", "newAchRank4", "save", [2, 5, 20, 50, 100, 150, 190]);
    addAchievementR(121, false, "Chi Achiever", "Earn ", " Rank CHI Achievements", "newAchRank5", "save", [2, 5, 20, 50, 100, 150, 190]);
    addAchievementR(122, false, "Psi Achiever", "Earn ", " Rank PSI Achievements", "newAchRank6", "save", [2, 5, 20, 50, 100, 150, 190]);
    addAchievementR(123, false, "Omega Achiever", "Earn ", " Rank OMEGA Achievements", "newAchRank7", "save", [2, 5, 20, 50, 100, 150, 190]);
    addAchievementR(124, false, "Break Free", "Complete Chapter ", " of Main Quests", "newMainQuest", "save", [1, 2, 3, 4, 5, 6, 7]);
    addAchievementR(125, false, "Quest Maniac", "Complete ", " Random Quests", "questTotal", "save", [2, 5, 10, 50, 250, 1000, 5000]);
    addAchievementR(126, false, "i-Idle: The Game", "Spray a total of ", " Ants", "antsSprayed", "save", [50, 500, 5000, 50000, 500000, 5000000, 50000000]);
    addAchievementR(127, false, "Ultimate Gardener", "Reach ", " Garden EXP", "gardenEXP", "save", [100, 1000, 10000, 100000, 1000000, 10000000, 100000000]);
    addAchievementR(128, false, "Green Thumb", "Harvest from trees ", " times", "harvestCount", "save", [5, 25, 250, 2500, 25000, 250000, 2500000]);
    addAchievementR(129, false, "Coiny Trees", "Gain ", ",000,000 Coins from trees", "harvestMillion", "save", [1, 25, 500, 10000, 250000, 5000000, 100000000]);
    addAchievementR(130, false, "Gigantic Garden", "Unlock ", " Garden plots", "gardenCapacity", "save", [2, 5, 10, 15, 25, 50, 75]);
    addAchievementR(131, false, "Crystal Garden", "Have ", " Grade 11 or higher Garden plot(s)", "gardenGrade11", "save", [1, 5, 10, 15, 25, 50, 75]);
    addAchievementR(132, false, "Purple Garden", "Have ", " Grade 12 Garden plot(s)", "gardenGrade12", "save", [1, 5, 10, 15, 25, 50, 75]);
    addAchievementR(133, false, "Garden Point Hoarder", "Have ", " unspent Garden Points", "gardenPointMax", "save", [50, 250, 1000, 10000, 100000, 1000000, 9999999]);
    addAchievementR(134, false, "Breeder", "Gain ", " seeds from breeding in Another Garden", "gardenBreedTotal", "save", [20, 250, 500, 1000, 2500, 5000, 10000]);
    addAchievementR(135, false, "Another Harvester", "Harvest from ", " different types of trees in Another Garden", "gardenAnotherHarvest", "save", [3, 6, 12, 25, 37, 50, 75]);
    addAchievementR(136, false, "Another Master", "Reach 100% Mastery on ", " different types of trees in Another Garden", "gardenAnotherHarvest", "save", [3, 6, 12, 25, 37, 50, 75]);
    addAchievementR(137, false, "Battler", "Reach Rank ", " in the Battle Arena", "arenaLevel", "save", [10, 30, 70, 120, 180, 250, 500]);
    addAchievementR(138, false, "Arena Champion", "Have ", " Battle Points in the Battle Arena", "battlePoint", "save", [100, 2500, 5000, 25000, 100000, 500000, 1000000]);
    addAchievementR(139, false, "Ouch!", "Kill ", " monsters in the Battle Arena", "arenaKill", "save", [25, 250, 2500, 25000, 250000, 2500000, 25000000]);
    addAchievementR(140, false, "Owie!!", "Kill ", " monsters in the Battle Arena. Yellow-named monsters don\'t count", "arenaKillWhite", "save", [25, 250, 2500, 25000, 250000, 2500000, 25000000]);
    addAchievementR(141, false, "Risktaker", "Kill ", " monsters in the Battle Arena. Only red-named monsters and bosses count", "arenaKillRed", "save", [25, 250, 2500, 25000, 250000, 2500000, 25000000]);
    addAchievementR(142, false, "Purple Power", "Kill ", " boss monsters in the Battle Arena", "arenaKillPurple", "save", [5, 50, 500, 5000, 50000, 500000, 5000000]);
    addAchievementR(143, false, "Yellow Madness", "Kill ", " rare monsters in the Battle Arena", "arenaKillRare", "save", [10, 100, 1000, 10000, 100000, 1000000, 10000000]);
    addAchievementR(144, false, "Epic Hunter", "Kill ", " epic monsters in the Battle Arena", "arenaKillEpic", "save", [2, 10, 100, 1000, 10000, 100000, 1000000]);
    addAchievementR(145, false, "Looter", "Collect a total of ", " loot drops in the Battle Arena", "arenaLoot", "save", [100, 1000, 10000, 100000, 1000000, 10000000, 100000000]);
    addAchievementR(146, false, "Skillful", "Collect a total of ", " Skill Books in the Battle Arena", "arenaSkillBook", "save", [5, 25, 100, 300, 600, 1000, 1240]);
    addAchievementR(147, false, "Max Power", "Collect extra SP ", " times in the Battle Arena", "arenaUltimateSP", "save", [2, 10, 50, 100, 150, 200, 250]);
    addAchievementR(148, false, "Rebirth", "Rebirth ", " time(s) in the Battle Arena", "bannedB", "save", [1, 2, 5, 10, 25, 50, 100]);
    addAchievementR(149, false, "Robacon Master", "Raise Robacon/Robroccoli to Rank ", "", "robaconLevel", "save", [10, 30, 70, 120, 180, 250, 500]);
    addAchievementR(150, false, "Pixel King", "Have ", " unspent Pixels in the Battle Arena", "arenaPixelMax", "save", [10000, 250000, 5000000, 100000000, 2500000000, 50000000000, 999999999999]);
    addAchievementR(151, false, "Blacksmith", "Use ", " Crafting Material to craft items in the Battle Arena", "arenaCraftUsed", "save", [10000, 250000, 5000000, 100000000, 2500000000, 50000000000, 1000000000000]);
    addAchievementR(152, false, "Variety Killer", "Defeat ", " different monsters in the Battle Arena", "uniqueKill", "root", [50, 150, 250, 350, 400, 450, 500]);
    addAchievementR(153, false, "Monster Master", "Reach a Total Bestiary Level of ", " in the Battle Arena", "bestiaryLevel", "root", [100, 500, 1000, 1500, 2000, 2500, 3000]);
    addAchievementR(154, false, "Monster Tamer", "Tame ", " Invisible Allies in the Battle Arena", "totalAllyTamed", "root", [5, 25, 75, 150, 300, 450, 500]);
    addAchievementR(155, false, "Monster Trainer", "Master ", " Invisible Allies in the Battle Arena", "totalAllyMastered", "root", [5, 25, 75, 150, 300, 450, 500]);
    addAchievementR(156, false, "Monster Upgrader", "Upgrade ", " Invisible Allies to +10 using Monster Chips in the Battle Arena", "totalAllyMaxed", "root", [5, 25, 75, 150, 300, 450, 500]);
    addAchievementR(157, false, "ULTRA ACHIEVEMENT", "Have ", " ULTRA ALLIES in the Battle Arena", "totalUltra", "root", [5, 25, 75, 150, 300, 450, 500]);
    addAchievementR(158, false, "ULTRA-1 SLAYER", "Defeat ", " different ULTRA-1 monster(s) in the Battle Arena", "uniqueUlt1", "root", [1, 10, 50, 100, 200, 300, 419]);
    addAchievementR(159, false, "ULTRA-2 SLAYER", "Defeat ", " different ULTRA-2 monster(s) in the Battle Arena", "uniqueUlt2", "root", [1, 10, 50, 100, 200, 300, 419]);
    addAchievementR(160, false, "ULTRA-3 SLAYER", "Defeat ", " different ULTRA-3 monster(s) in the Battle Arena", "uniqueUlt3", "root", [1, 10, 50, 100, 200, 300, 419]);
    addAchievementR(161, false, "Completionist", "Earn ", " Collection Points by contributing items to the Museum in the Battle Arena", "collectionPointMax", "save", [100, 1000, 2000, 3000, 4000, 5000, 9000]);
    addAchievementR(162, false, "Overpowered", "Deal ", " damage in one hit", "arenaMaxDamage", "save", [9001, 1000000, 1000000000, 25000000000, 1000000000000, 25000000000000, 999999999999999]);
    addAchievementR(163, false, "Combo Maniac", "Reach a Combo of ", " in the Battle Arena", "arenaMaxCombo", "save", [50, 100, 200, 500, 1000, 10000, 99999]);
    addAchievementR(164, false, "Mission Kommander\'s Successor", "Complete Mission Kommander\'s Mission ", " times", "arenaKommanderComplete", "save", [2, 5, 25, 100, 250, 500, 1000]);
    addAchievementR(165, false, "The Future\'s Protector", "Complete Defend Mission ", " times", "arenaDefendComplete", "save", [2, 5, 10, 25, 50, 100, 250]);
    addAchievementR(166, false, "Master Defender", "Reach a high score of ", " in Defend Mission\n(Score = seconds remaining x 1,000)", "raidDefend", "save", [60000, 240000, 360000, 480000, 660000, 960000, 1440000]);
    addAchievementR(167, false, "The Past\'s Protector", "Complete Prehistoric Mission ", " times", "arenaPrehistoricComplete", "save", [2, 5, 10, 25, 50, 100, 250]);
    addAchievementR(168, false, "Alien Destroyer", "Reach a high score of ", " in Prehistoric Mission\n(Score = seconds remaining x 1,000)", "raidPrehistoric", "save", [120000, 360000, 480000, 600000, 660000, 800000, 900000]);
    addAchievementR(169, false, "Epic Pyramid Battler", "Reach a high score of ", " in Dark Pyramid", "raidPyramid", "save", [100000, 2500000, 50000000, 1000000000, 25000000000, 500000000000, 10000000000000]);
    addAchievementR(170, false, "The New Boss", "Reach a high score of ", " in The Special Arena\n(Score = seconds remaining x 1,000)", "raidMegaboss", "save", [180000, 270000, 315000, 360000, 410000, 460000, 475000]);
    addAchievementR(171, false, "Avenger", "Reach round ", " in THE MEGABOSS\'s Revenge", "arenaRevengeScore", "save", [10, 25, 50, 100, 250, 500, 1000]);
    addAchievementR(172, false, "Corruption Cleanser", "Clear The Corruption on difficulty ", "", "arenaCorruptBestDifficulty", "save", [1, 5, 10, 20, 50, 100, 150]);
    addAchievementR(173, false, "Achievement of DOOOOOOM", "Reach a high score of ", " in Tower of DOOOOOOM", "raidTower", "save", [4000000000, 16000000000, 24000000000, 28000000000, 32000000000, 36000000000, 40000000000]);
    addAchievementR(174, false, "Undead Slayer", "Reach a kill streak of ", " in Spooky Crypt", "arenaSpookyScore", "save", [500, 1000, 2000, 5000, 10000, 20000, 30000]);
    addAchievementR(175, false, "Triangle Slayer", "Reach a kill streak of ", " in Triangle Hideout", "arenaTriangleScore", "save", [50, 100, 200, 500, 1000, 2000, 3000]);
    addAchievementR(176, false, "Secret Dungeon Conqueror", "Reach a high score of ", " in Secret Dungeon", "raidDungeon", "save", [1000, 2100, 2800, 3500, 4200, 6900, 8000]);
    addAchievementR(177, false, "Endless Dungeon Conqueror", "Reach floor ", " in Endless Dungeon", "raidEndless", "save", [5, 15, 30, 50, 100, 200, 250]);
    addAchievementR(178, false, "Optimizer", "Reach ", " x 1,000,000 DPS in Special Training Zone", "raidSpecial", "save", [100000, 500000, 2500000, 10000000, 50000000, 250000000, 1000000000]);
    addAchievementR(179, false, "Miner", "Defeat ", " Secret Crystals", "crystalKill", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(180, false, "Pokayman Stop", "Collect items from Pokaystops ", " times", "pokaystopCount", "save", [2, 5, 10, 50, 250, 1000, 5000]);
    addAchievementR(181, false, "Health Rune Master", "Upgrade Rune of Health to level ", "", "runeLevel1", "root", [2, 5, 10, 20, 30, 50, 100]);
    addAchievementR(182, false, "Mana Rune Master", "Upgrade Rune of Mana to level ", "", "runeLevel2", "root", [2, 5, 10, 20, 30, 50, 100]);
    addAchievementR(183, false, "Rage Rune Master", "Upgrade Rune of Rage to level ", "", "runeLevel3", "root", [2, 5, 10, 20, 30, 50, 100]);
    addAchievementR(184, false, "Encounter Rune Master", "Upgrade Rune of Encounter to level ", "", "runeLevel4", "root", [2, 5, 10, 20, 30, 50, 100]);
    addAchievementR(185, false, "Experience Rune Master", "Upgrade Rune of Experience to level ", "", "runeLevel5", "root", [2, 5, 10, 20, 30, 50, 100]);
    addAchievementR(186, false, "Greed Rune Master", "Upgrade Rune of Greed to level ", "", "runeLevel6", "root", [2, 5, 10, 20, 30, 50, 100]);
    addAchievementR(187, false, "Lullaby Lake?", "Defeat ", " monsters in Lullaby Lake?", "zoneKill86", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(188, false, "Billygoat Bridge?", "Defeat ", " monsters in Billygoat Bridge?", "zoneKill87", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(189, false, "Fabled Forest?", "Defeat ", " monsters in Fabled Forest?", "zoneKill88", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(190, false, "Fortress Foothills?", "Defeat ", " monsters in Fortress Foothills?", "zoneKill89", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(191, false, "Castle Grimm?", "Defeat ", " monsters in Castle Grimm?", "zoneKill90", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(192, false, "Throne Room?", "Defeat ", " monsters in Throne Room?", "zoneKill91", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(193, false, "Triangle Land!!!", "Defeat ", " monsters in Triangle Land!!!", "zoneKill85", "root", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(194, false, "Circle Clicker", "Click the Button Machine ", " times", "buttonPress", "save", [250, 1000, 5000, 25000, 100000, 1000000, 10000000]);
    addAchievementR(195, false, "Pixel Perfect", "Get ", " PERFECT clicks in the Button Machine", "buttonPerfect", "save", [2, 25, 250, 2500, 25000, 250000, 2500000]);
    addAchievementR(196, false, "Finger Breaker", "Reach ", " Hit Combo in the Button Machine", "buttonMaxCombo", "save", [100, 250, 500, 1000, 2500, 5000, 10000]);
    addAchievementR(197, false, "Button Breaker", "Break the Button Machine ", " times", "buttonBreak", "save", [2, 5, 10, 25, 50, 250, 1000]);
    addAchievementR(198, false, "Button Upgraded!", "Purchase ", "% additional multiplier in the Button Machine shop", "buttonMultiplier", "save", [2, 6, 20, 50, 100, 300, 1200]);
    addAchievementR(199, false, "Grandpa Abuser", "Buy ", " Grandpas to click the Button Machine for you", "buttonGrandpa", "save", [2, 4, 6, 9, 12, 15, 20]);
    addAchievementR(200, false, "Speedy Grandpas", "Upgrade Grandpas\' Speed to Lv. ", "", "buttonGrandpaSpeed", "save", [2, 4, 6, 8, 9, 10, 11]);
    addAchievementR(201, false, "Accurate Grandpas", "Upgrade Grandpas\' Accuracy to Lv. ", "", "buttonGrandpaAccuracy", "save", [2, 4, 6, 8, 9, 10, 11]);
    addAchievementR(202, false, "Disciplined Grandpas", "Upgrade Grandpas\' Discipline to Lv. ", "", "buttonGrandpaDiscipline", "save", [2, 4, 6, 8, 9, 10, 11]);
    addAchievementR(203, false, "Printer Upgraded!", "Upgrade the Money Printer to level ", "", "printerLevel", "save", [2, 10, 25, 50, 100, 200, 400]);
    addAchievementR(204, false, "\'This is Illegal, You Know\'", "Print ", ",000,000 illegal Coins", "totalPrinterMillion", "save", [1, 25, 500, 10000, 250000, 5000000, 100000000]);
    addAchievementR(205, false, "Chargin\' Mah Battery", "Charge a total of ", " Battery Power", "totalPrinterCharge", "save", [100, 1000, 10000, 100000, 1000000, 10000000, 100000000]);
    addAchievementR(206, false, "Ultimate Gamer", "Achieve a Rating of ", ".00 in Arcade", "arcadeRating", "save", [5, 10, 15, 17, 18, 19, 69]);
    addAchievementR(207, false, "Pwng", "Reach a high score of ", " in Pong: Survival Battle", "highPong", "save", [10000, 50000, 250000, 1000000, 2000000, 3000000, 4000000]);
    addAchievementR(208, false, "Amazing Avoider", "Reach a high score of ", " in Ultimate Avoidance", "highAvoid", "save", [10000, 50000, 200000, 400000, 600000, 900000, 1350000]);
    addAchievementR(209, false, "Alternative Calculator", "Reach a high score of ", " in Math Master", "highMath", "save", [10000, 50000, 200000, 500000, 1000000, 1500000, 2250000]);
    addAchievementR(210, false, "Greg Whacker", "Reach a high score of ", " in Whack-a-greg", "highWhack", "save", [10000, 1000000, 1500000, 2000000, 2500000, 3000000, 3250000]);
    addAchievementR(211, false, "Master of Counting", "Reach a high score of ", " in Triangle Count", "highCount", "save", [10000, 1000000, 2000000, 3000000, 5000000, 8000000, 13000000]);
    addAchievementR(212, false, "Mind = Blown", "Reach a high score of ", " in MindSweeper", "highMind", "save", [10000, 250000, 1000000, 3000000, 5000000, 7000000, 9500000]);
    addAchievementR(213, false, "Perfect Harmony", "Reach a high score of ", " in Balance 3", "highBalance", "save", [10000, 300000, 1000000, 2000000, 3000000, 5000000, 7000000]);
    addAchievementR(214, false, "Rhythm Prodigy", "Reach a high score of ", " in MMR X", "highMMRX", "save", [10000, 250000, 750000, 1500000, 3000000, 5000000, 7000000]);
    addAchievementR(215, false, "Pong Player", "Accumulate a total score of ", " in Pong: Survival Battle", "totalPong", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(216, false, "Avoidance Player", "Accumulate a total score of ", " in Ultimate Avoidance", "totalAvoid", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(217, false, "Math Master Player", "Accumulate a total score of ", " in Math Master", "totalMath", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(218, false, "Whack-a-greg Player", "Accumulate a total score of ", " in Whack-a-greg", "totalWhack", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(219, false, "Triangle Count Player", "Accumulate a total score of ", " in Triangle Count", "totalCount", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(220, false, "MindSweeper Player", "Accumulate a total score of ", " in MindSweeper", "totalMind", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(221, false, "Balance 3 Player", "Accumulate a total score of ", " in Balance 3", "totalBalance", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(222, false, "MMR X Player", "Accumulate a total score of ", " in MMR X", "totalMMRX", "save", [50000, 250000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(223, false, "Unranked Master", "Unlock ", " Unranked Mode upgrades", "totalUnrankedPower", "root", [2, 10, 30, 50, 70, 100, 135]);
    addAchievementR(224, false, "Diligent Racer", "Win Simple Race ", " times in Stadium", "stadiumRace", "save", [2, 5, 10, 50, 250, 1000, 5000]);
    addAchievementR(225, false, "Item Fighter", "Win Item Fight ", " times in Stadium", "stadiumItem", "save", [2, 5, 10, 50, 250, 1000, 5000]);
    addAchievementR(226, false, "Stadium Hero", "Win Simple Race on Impossible difficulty ", " times", "stadiumImpossibleRace", "save", [2, 5, 10, 50, 250, 1000, 5000]);
    addAchievementR(227, false, "Stadium Superstar", "Win Item Fight on Impossible difficulty ", " times", "stadiumImpossibleItem", "save", [2, 5, 10, 50, 250, 1000, 5000]);
    addAchievementR(228, false, "Death Match Expert", "Win Death Match ", " times", "stadiumDeathMatch", "save", [2, 5, 10, 25, 50, 100, 250]);
    addAchievementR(229, false, "PWNage!", "Score ", " PWNts in a single game of Death Match", "stadiumBestDeathMatch", "save", [500, 600, 700, 800, 900, 1000, 1100]);
    addAchievementR(230, false, "Beginner\'s Luck", "Win ", " bet(s) in Stadium", "stadiumBetCorrect", "save", [1, 2, 5, 10, 25, 50, 100]);
    addAchievementR(231, false, "Mad Hatter", "Unlock ", " hats in Stadium", "stadiumHatUnlocked", "root", [2, 4, 6, 7, 8, 9, 10]);
    addAchievementR(232, false, "Upgraded Racer", "Upgrade your stats in the Stadium ", " times\n(Downgrading will cause your achievement progress to drop)", "stadiumAbilityCost", "save", [20, 50, 100, 150, 200, 300, 400]);
    addAchievementR(233, false, "Stadium Token Hoarder", "Have ", " unspent Stadium Tokens", "stadiumTokenMax", "save", [1000, 5000, 25000, 100000, 1000000, 10000000, 100000000]);
    addAchievementR(234, false, "Cardmaster", "Reach level ", " in TukkunFCG", "fcgLevel", "save", [5, 10, 20, 40, 60, 100, 200]);
    addAchievementR(235, false, "A Winner is You", "Win ", " times in TukkunFCG", "fcgWin", "save", [2, 10, 50, 250, 1000, 5000, 25000]);
    addAchievementR(236, false, "Level 0 Master", "Win ", " time(s) against level 0 opponents in TukkunFCG", "fcgLevel0", "save", [1, 2, 3, 5, 10, 15, 25]);
    addAchievementR(237, false, "Level 1 Master", "Win ", " times against level 1 opponents in TukkunFCG", "fcgLevel1", "save", [2, 4, 7, 15, 30, 50, 100]);
    addAchievementR(238, false, "Level 2 Master", "Win ", " times against level 2 opponents in TukkunFCG", "fcgLevel2", "save", [2, 4, 7, 15, 30, 50, 100]);
    addAchievementR(239, false, "Level 3 Master", "Get a win streak of ", " against level 3 opponents in TukkunFCG", "fcgMaxStreak3", "save", [2, 3, 5, 10, 15, 20, 30]);
    addAchievementR(240, false, "Level 4 Master", "Get a win streak of ", " against level 4 opponents in TukkunFCG", "fcgMaxStreak4", "save", [2, 3, 5, 10, 15, 20, 30]);
    addAchievementR(241, false, "Level 6 Master", "Get a win streak of ", " against level 6 opponents in TukkunFCG", "fcgMaxStreak6", "save", [2, 3, 5, 10, 15, 20, 30]);
    addAchievementR(242, false, "Level 7 Master", "Win ", " times against level 7 opponents in TukkunFCG", "fcgLevel7", "save", [2, 10, 25, 50, 100, 250, 500]);
    addAchievementR(243, false, "Level 8 Master", "Get a win streak of ", " against level 8 opponents in TukkunFCG", "fcgMaxStreak8", "save", [2, 3, 5, 10, 15, 20, 30]);
    addAchievementR(244, false, "Legendary Hunter", "Defeat ", " Legendary Monsters in TukkunFCG", "fcgLegendCount", "save", [2, 4, 7, 15, 30, 50, 100]);
    addAchievementR(245, false, "Master of TukkunFCG", "Win ", " times against level 10 opponents in TukkunFCG", "fcgLevel10", "save", [2, 10, 25, 50, 100, 250, 500]);
    addAchievementR(246, false, "FCG Cash Hoarder", "Have ", " unspent FCG Cash", "fcgMaxCash", "save", [2500, 10000, 50000, 250000, 1000000, 10000000, 100000000]);
    addAchievementR(247, false, "Card Collector", "Have at least 7 copies of ", " different cards in TukkunFCG", "fcgCollection", "save", [25, 50, 75, 100, 150, 200, 248]);
    addAchievementR(248, false, "???", "Gain a total of ", " Profit in LolMarket", "lolMaxProfit", "save", [10000, 100000, 1000000, 10000000, 250000000, 5000000000, 100000000000]);
    addAchievementR(249, false, "Famous Adventurer", "Reach ", " Reputation (positive or negative) in Awesome Adventures", "awesomeMaxReputation", "save", [50, 250, 1000, 5000, 25000, 100000, 999999]);
    addAchievementR(250, false, "An Adventurer is You", "Adventure ", " times", "awesomeTotalAdv", "save", [10, 50, 250, 1000, 10000, 100000, 1000000]);
    addAchievementR(251, false, "Town Master", "Adventure in Town ", " times", "awesomeTotalAdv1", "save", [2, 10, 50, 250, 2500, 25000, 250000]);
    addAchievementR(252, false, "Untitled Zone Master", "Adventure in Untitled Zone ", " times", "awesomeTotalAdv2", "save", [2, 10, 50, 250, 2500, 25000, 250000]);
    addAchievementR(253, false, "Titled Zone Master", "Adventure in Titled Zone ", " times", "awesomeTotalAdv3", "save", [5, 25, 100, 500, 5000, 50000, 500000]);
    addAchievementR(254, false, "Red Coin Enthusiast", "Collect ", " Red Coins from Awesome Adventures", "awesomeRedCoin", "save", [2, 5, 10, 50, 250, 1000, 5000]);
    addAchievementR(255, false, "Legendary Fisher", "Reach Skill ", " in Fishing", "fishBestLevel", "save", [2, 5, 10, 20, 30, 50, 60]);
    addAchievementR(256, false, "Fish Catcher", "Catch ", " items in Fishing", "fishTotal", "save", [50, 250, 1000, 5000, 25000, 100000, 500000]);
    addAchievementR(257, false, "Perfect Catcher", "Get ", " PERFECT catches in Fishing", "fishPerfect", "save", [5, 25, 100, 500, 2500, 10000, 50000]);
    addAchievementR(258, false, "Lucky Streak", "Get a PERFECT streak of ", " in Fishing", "fishBestStreak", "save", [3, 6, 10, 15, 25, 50, 100]);
    addAchievementR(259, false, "Milestone!", "Reach a total score of ", " in Fishing", "fishScore", "save", [100000, 500000, 2500000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(260, false, "Rod Collector", "Unlock ", " rods in Fishing", "fishRodCount", "root", [2, 4, 5, 6, 8, 9, 10]);
    addAchievementR(261, false, "Bottomless Bucket", "Upgrade your Bucket Capacity in Fishing to ", "", "fishCapacity", "save", [5000, 7500, 10000, 12500, 17500, 25000, 100000]);
    addAchievementR(262, false, "Epic", "Reach a total Epic Skill level of ", "", "totalEpicSkill", "root", [10, 30, 60, 120, 130, 140, 155]);
    addAchievementR(263, false, "Pet Lover", "Raise your Pet to level ", "", "petBestLevel", "save", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(264, false, "Career Master", "Reach a total Career level of ", "", "totalCareerLevel", "root", [10, 100, 300, 600, 1200, 1800, 2400]);
    addAchievementR(265, false, "Idler", "Reach Lv. ", " Idler Career", "careerLevel1", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(266, false, "Gardener", "Reach Lv. ", " Gardener Career", "careerLevel2", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(267, false, "Fighter", "Reach Lv. ", " Fighter Career", "careerLevel3", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(268, false, "Item Maker", "Reach Lv. ", " Item Maker Career", "careerLevel4", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(269, false, "Button Basher", "Reach Lv. ", " Button Basher Career", "careerLevel5", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(270, false, "Arcade Player", "Reach Lv. ", " Arcade Player Career", "careerLevel6", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(271, false, "Racer", "Reach Lv. ", " Racer Career", "careerLevel7", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(272, false, "Card Player", "Reach Lv. ", " Card Player Career", "careerLevel8", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(273, false, "Gem Trader", "Reach Lv. ", " Gem Trader Career", "careerLevel9", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(274, false, "Adventurer", "Reach Lv. ", " Adventurer Career", "careerLevel10", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(275, false, "Pet Trainer", "Reach Lv. ", " Pet Trainer Career", "careerLevel11", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(276, false, "Fisher", "Reach Lv. ", " Fisher Career", "careerLevel12", "root", [1, 10, 30, 60, 100, 150, 200]);
    addAchievementR(277, false, "Business Master", "Gain ", " Career EXP from Business at once", "businessHigh", "save", [100, 1000, 10000, 100000, 1000000, 10000000, 100000000]);
    addAchievementR(278, false, "Businessman", "Gain a total of ", " Career EXP from Business", "businessTotal", "save", [10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000]);
    addAchievementR(279, false, "Robot Uprising", "Have a level ", " Simulation Cyborg", "botLevel", "save", [2, 10, 30, 60, 100, 150, 200]);
    addAchievementR(280, false, "Super Cyborg", "Maximize performance of ", " Simulation Cyborg tasks", "botMaxTask", "save", [2, 4, 6, 8, 10, 12, 14]);
    addAchievementR(281, false, "Knowledge is Power", "Feed the Dragon of Wisdom ", " times", "feedTotal", "save", [10, 50, 250, 1000, 5000, 25000, 100000]);
    addAchievementR(282, false, "Module Keeper", "Unlock slot #", " of Module Inventory", "progModuleSlot", "save", [31, 35, 40, 50, 60, 80, 100]);
    addAchievementR(283, false, "Well-RESTed", "Unlock a total of ", " REST upgrades", "totalRestUpgrade", "root", [2, 5, 10, 20, 30, 50, 100]);
    addAchievementR(284, false, "Coin Waster", "Throw a total of ", ",000,000,000 Coins into the Black Hole", "blackHoleCoin", "save", [10, 100, 1000, 10000, 100000, 1000000, 10000000]);
    addAchievementR(285, false, "Green Coin Waster", "Throw a total of ", ",000,000 Green Coins into the Black Hole", "blackHoleGreenCoin", "save", [10, 100, 1000, 10000, 100000, 1000000, 10000000]);
    addAchievementR(286, false, "Blue Coin Waster", "Throw a total of ", ",000 Blue Coins into the Black Hole", "blackHoleBlueCoin", "save", [10, 100, 1000, 10000, 100000, 1000000, 10000000]);
    addAchievementR(287, false, "White Coin Waster", "Throw a total of ", " White Coins into the Black Hole", "blackHoleWhiteCoin", "save", [10, 100, 1000, 10000, 100000, 1000000, 10000000]);
    addAchievementR(288, false, "Ascended", "Ascend ", " time(s)", "banned", "save", [1, 2, 5, 10, 50, 200, 1000]);
    addAchievementR(289, false, "Hard", "Ascend ", " time(s) on Hard or Impossible difficulty", "bannedHard", "save", [1, 2, 5, 10, 25, 100, 500]);
    addAchievementR(290, false, "Impossible", "Ascend ", " time(s) on Impossible difficulty", "bannedImpossible", "save", [1, 2, 3, 5, 10, 50, 200]);
    addAchievementR(291, false, "Disciple of Phantom", "Gain ", " Ascension Points", "totalStupidity", "save", [10, 50, 150, 300, 1000, 3000, 9001]);
    addAchievementR(292, true, "Lost Again", "Lose The Game ", " times", "theGame", "save", [2]);
    addAchievementR(293, true, "\'I Ain\'t Afraid of No Ghosts!\'", "Click the ghost in the World Map ", " time", "randomGhost", "save", [1]);
    addAchievementR(294, true, "Perfectionist", "Get ", " PERFECT clicks in a row in the Button Machine", "perfectionist", "save", [3]);
    addAchievementR(295, true, "Survivor", "Survive Pong: Survival Battle ", " time", "survivor", "save", [1]);
    addAchievementR(296, true, "Chuck Norris", "Divide by zero ", " time", "chuckNorris", "save", [1]);
    addAchievementR(297, true, "Wrong Game?", "Achieve ACE FINISH in Practice Mode of Stadium ", " time", "aceFinish", "save", [1]);
    addAchievementR(298, true, "No Death", "Complete Death Match without dying ", " time", "noDeath", "save", [1]);
    addAchievementR(299, true, "Serious Business", "Press the \'Get Advice\' button in LolMarket ", " times", "seriousBusiness", "save", [50]);
    addAchievementR(300, true, "IT\'S OVER 9001!!!!!", "Reach level ", "", "bestLevel", "save", [9002]);
}

export function step9Fishing() {
    function addFish(fishCate, fishLevel, fishSpeed, fishSpec, fishFatigue, fishExp, fishAExp, fullness, fatigueRestore, coin, material) {
        var _loc1_ = new Object();
        _loc1_.fishCate = fishCate;
        _loc1_.fishLevel = fishLevel;
        _loc1_.fishSpeed = fishSpeed;
        _loc1_.fishSpec = fishSpec;
        _loc1_.fishFatigue = fishFatigue;
        _loc1_.fishExp = fishExp;
        _loc1_.fishAExp = fishAExp;
        _loc1_.fullness = fullness;
        _loc1_.fatigue = fatigueRestore;
        _loc1_.coin = coin;
        _loc1_.material = material;
        _root.fishArray.push(_loc1_);
    }
    _root.fishArray = [];
    addFish("Treasure", "Bronze", 10, "Manual+", 600, 600, 60000, 0, 0, 100000, 100000);
    addFish("Treasure", "Silver", 10, "Manual+", 600, 900, 90000, 0, 0, 500000, 500000);
    addFish("Treasure", "Golden", 10, "Manual+", 600, 1200, 120000, 0, 0, 2000000, 2000000);
    addFish("Key", "Bronze", 10, "Manual", 300, 300, 30000, 0, 0, 50000, 50000);
    addFish("Key", "Silver", 10, "Manual", 300, 450, 45000, 0, 0, 250000, 250000);
    addFish("Key", "Golden", 10, "Manual", 300, 600, 60000, 0, 0, 1000000, 1000000);
    addFish("Energy Drink", "Regular", 20, "Manual", 200, 200, 20000, 0, 500, 125000, 0);
    addFish("Energy Drink", "Elite", 20, "Manual+", 200, 300, 30000, 0, 750, 500000, 0);
    addFish("Pet Food", "Regular", 20, "Manual", 200, 200, 20000, 20, 0, 125000, 0);
    addFish("Pet Food", "Elite", 20, "Manual+", 200, 300, 30000, 30, 0, 500000, 0);
    addFish("Junk", 1, 30, "", 40, 22, 2000, 0, 0, 0, 5000);
    addFish("Junk", 2, 30, "", 40, 24, 2100, 0, 0, 0, 10000);
    addFish("Junk", 3, 30, "", 40, 26, 2200, 0, 0, 0, 15000);
    addFish("Junk", 4, 30, "", 40, 28, 2300, 0, 0, 0, 20000);
    addFish("Junk", 5, 30, "", 40, 30, 2400, 0, 0, 0, 25000);
    addFish("Junk", 6, 30, "", 40, 32, 2500, 0, 0, 0, 30000);
    addFish("Junk", 7, 30, "", 40, 34, 2600, 0, 0, 0, 35000);
    addFish("Junk", 8, 30, "", 40, 36, 2700, 0, 0, 5000, 40000);
    addFish("Junk", 9, 30, "", 48, 42, 3360, 0, 0, 15000, 45000);
    addFish("Junk", 10, 30, "", 48, 44, 3480, 0, 0, 25000, 50000);
    addFish("Junk", 12, 30, "", 48, 46, 3600, 0, 0, 35000, 70000);
    addFish("Junk", 14, 30, "", 56, 54, 4340, 0, 0, 45000, 90000);
    addFish("Junk", 16, 30, "", 56, 56, 4480, 0, 0, 55000, 110000);
    addFish("Junk", 18, 30, "", 56, 58, 4620, 0, 0, 65000, 130000);
    addFish("Junk", 20, 30, "", 64, 68, 5440, 0, 0, 75000, 150000);
    addFish("Junk", 22, 30, "", 64, 70, 5600, 0, 0, 100000, 200000);
    addFish("Junk", 24, 30, "", 64, 72, 5760, 0, 0, 125000, 250000);
    addFish("Junk", 26, 30, "", 72, 84, 6660, 0, 0, 150000, 300000);
    addFish("Junk", 28, 30, "", 72, 86, 6840, 0, 0, 175000, 350000);
    addFish("Junk", 30, 30, "", 80, 100, 7800, 0, 0, 200000, 400000);
    addFish("Fish", 1, 40, "", 60, 44, 4000, 0, 2, 5000, 0);
    addFish("Fish", 2, 40, "", 60, 48, 4200, 0, 3, 10000, 0);
    addFish("Fish", 3, 40, "", 60, 52, 4400, 0, 4, 15000, 0);
    addFish("Fish", 4, 40, "", 60, 56, 4600, 0, 5, 20000, 0);
    addFish("Fish", 5, 40, "", 60, 60, 4800, 0, 6, 25000, 0);
    addFish("Fish", 6, 40, "", 60, 64, 5000, 0, 7, 30000, 0);
    addFish("Fish", 7, 40, "", 60, 68, 5200, 0, 8, 35000, 0);
    addFish("Fish", 8, 40, "", 60, 72, 5400, 1, 9, 40000, 0);
    addFish("Fish", 9, 40, "", 72, 84, 6720, 1, 10, 45000, 0);
    addFish("Fish", 10, 40, "", 72, 88, 6960, 1, 11, 50000, 0);
    addFish("Fish", 12, 40, "", 72, 92, 7200, 1, 12, 70000, 0);
    addFish("Fish", 14, 40, "", 84, 108, 8680, 1, 13, 90000, 0);
    addFish("Fish", 16, 40, "", 84, 112, 8960, 1, 14, 110000, 0);
    addFish("Fish", 18, 40, "", 84, 116, 9240, 1, 15, 130000, 0);
    addFish("Fish", 20, 40, "", 96, 136, 10880, 1, 16, 150000, 0);
    addFish("Fish", 22, 40, "", 96, 140, 11200, 1, 17, 200000, 0);
    addFish("Fish", 24, 40, "", 96, 144, 11520, 1, 18, 250000, 0);
    addFish("Fish", 26, 40, "", 108, 168, 13320, 1, 19, 300000, 0);
    addFish("Fish", 28, 40, "", 108, 172, 13680, 1, 20, 350000, 0);
    addFish("Fish", 30, 40, "", 120, 200, 15600, 2, 40, 400000, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("Energy Refill", "", 20, "Manual", 120, 240, 24000, 0, 0, 0, 0);
    addFish("Fertilizer", "", 20, "Manual", 150, 300, 30000, 0, 0, 0, 0);
    addFish("Mega Fertilizer", "", 20, "Manual+", 180, 360, 36000, 0, 0, 0, 0);
    addFish("Explosion Crate", "", 20, "Manual", 200, 400, 40000, 0, 0, 0, 0);
    addFish("Awesome Crate", "", 20, "Manual", 250, 500, 50000, 0, 0, 0, 0);
    addFish("Chaos Crate", "", 20, "Manual", 300, 600, 60000, 0, 0, 0, 0);
    addFish("Legendary Box", "", 20, "Manual+", 350, 700, 70000, 0, 0, 0, 0);
    addFish("White Coin", "", 20, "Manual", 100, 200, 20000, 0, 0, 0, 0);
    addFish("Boost Potion", "", 20, "Manual", 150, 300, 30000, 0, 0, 0, 0);
    addFish("Mega Boost Potion", "", 20, "Manual+", 200, 400, 40000, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("", "", 20, "", 0, 0, 0, 0, 0, 0, 0);
    addFish("Fish", 33, 40, "", 132, 232, 18000, 3, 60, 500000, 0);
    addFish("Fish", 36, 40, "", 144, 268, 20000, 4, 80, 600000, 0);
    addFish("Fish", 39, 40, "", 156, 308, 22500, 5, 100, 700000, 0);
    addFish("Fish", 42, 40, "", 168, 352, 25000, 6, 120, 800000, 0);
    addFish("Fish", 45, 40, "", 180, 400, 27500, 7, 140, 900000, 0);
    addFish("Fish", 48, 40, "", 192, 452, 30000, 8, 160, 1000000, 0);
    addFish("Fish", 51, 40, "", 216, 568, 35000, 10, 200, 1250000, 0);
    addFish("Fish", 54, 40, "", 240, 700, 40000, 12, 240, 1500000, 0);
    addFish("Fish", 57, 40, "", 360, 1100, 60000, 15, 300, 2250000, 0);
    addFish("Fish", 60, 40, "", 480, 1500, 80000, 20, 400, 3000000, 0);
}